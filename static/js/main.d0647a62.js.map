{"version":3,"file":"static/js/main.d0647a62.js","mappings":"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","sources":["../node_modules/react/index.js","../node_modules/classnames/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/prop-types/index.js","../node_modules/prop-types-extra/lib/all.js","../node_modules/react/cjs/react.production.min.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/react-dom/client.js","../node_modules/warning/warning.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types-extra/lib/utils/createChainableTypeChecker.js","../node_modules/react/jsx-runtime.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/invariant/browser.js","../node_modules/scheduler/index.js","../node_modules/react-dom/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/getComputedStyle.js","../node_modules/dom-helpers/esm/ownerWindow.js","../node_modules/dom-helpers/esm/hyphenate.js","../node_modules/dom-helpers/esm/hyphenateStyle.js","../node_modules/dom-helpers/esm/isTransform.js","../node_modules/dom-helpers/esm/css.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/transitionEnd.js","../node_modules/dom-helpers/esm/triggerEvent.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@restart/ui/esm/useRTGTransitionProps.js","../node_modules/@restart/ui/esm/RTGTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/react-bootstrap/esm/transitionEndListener.js","../node_modules/react-bootstrap/esm/triggerBrowserReflow.js","../node_modules/react-bootstrap/esm/TransitionWrapper.js","../node_modules/react-bootstrap/esm/safeFindDOMNode.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/uncontrollable/lib/esm/utils.js","../node_modules/uncontrollable/lib/esm/hook.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/@restart/hooks/esm/useMediaQuery.js","../node_modules/@restart/hooks/esm/useBreakpoint.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/react-bootstrap/esm/Offcanvas.js","../node_modules/react-bootstrap/esm/NavbarOffcanvas.js","../node_modules/react-bootstrap/esm/NavbarText.js","../node_modules/react-bootstrap/esm/Navbar.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/TabContext.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/esm/NavItem.js","../node_modules/@restart/ui/esm/Nav.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/NavItem.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/NavLink.js","../node_modules/react-bootstrap/esm/Nav.js","../node_modules/@restart/ui/node_modules/uncontrollable/lib/esm/index.js","../node_modules/@restart/ui/esm/DropdownContext.js","../node_modules/dequal/dist/index.mjs","../node_modules/@restart/hooks/esm/useSafeState.js","../node_modules/@popperjs/core/lib/utils/getBasePlacement.js","../node_modules/@popperjs/core/lib/dom-utils/getWindow.js","../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js","../node_modules/@popperjs/core/lib/utils/math.js","../node_modules/@popperjs/core/lib/utils/userAgent.js","../node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js","../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js","../node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js","../node_modules/@popperjs/core/lib/dom-utils/contains.js","../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js","../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js","../node_modules/@popperjs/core/lib/dom-utils/isTableElement.js","../node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js","../node_modules/@popperjs/core/lib/dom-utils/getParentNode.js","../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js","../node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js","../node_modules/@popperjs/core/lib/utils/within.js","../node_modules/@popperjs/core/lib/utils/mergePaddingObject.js","../node_modules/@popperjs/core/lib/utils/getFreshSideObject.js","../node_modules/@popperjs/core/lib/utils/expandToHashMap.js","../node_modules/@popperjs/core/lib/enums.js","../node_modules/@popperjs/core/lib/modifiers/arrow.js","../node_modules/@popperjs/core/lib/utils/getVariation.js","../node_modules/@popperjs/core/lib/modifiers/computeStyles.js","../node_modules/@popperjs/core/lib/modifiers/eventListeners.js","../node_modules/@popperjs/core/lib/utils/getOppositePlacement.js","../node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js","../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js","../node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js","../node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js","../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js","../node_modules/@popperjs/core/lib/utils/rectToClientRect.js","../node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js","../node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","../node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js","../node_modules/@popperjs/core/lib/utils/computeOffsets.js","../node_modules/@popperjs/core/lib/utils/detectOverflow.js","../node_modules/@popperjs/core/lib/modifiers/flip.js","../node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","../node_modules/@popperjs/core/lib/modifiers/hide.js","../node_modules/@popperjs/core/lib/modifiers/offset.js","../node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","../node_modules/@popperjs/core/lib/utils/getAltAxis.js","../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js","../node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js","../node_modules/@popperjs/core/lib/utils/orderModifiers.js","../node_modules/@popperjs/core/lib/utils/debounce.js","../node_modules/@popperjs/core/lib/createPopper.js","../node_modules/@popperjs/core/lib/utils/mergeByName.js","../node_modules/@restart/ui/esm/popper.js","../node_modules/@popperjs/core/lib/modifiers/popperOffsets.js","../node_modules/@restart/ui/esm/usePopper.js","../node_modules/@restart/ui/esm/useClickOutside.js","../node_modules/@restart/ui/esm/mergeOptionsWithPopperConfig.js","../node_modules/@restart/ui/esm/DropdownMenu.js","../packages/@react-aria/ssr/src/SSRProvider.tsx","../node_modules/@restart/ui/esm/DropdownToggle.js","../node_modules/@restart/ui/esm/DropdownItem.js","../node_modules/@restart/ui/esm/Dropdown.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/react-bootstrap/esm/DropdownContext.js","../node_modules/react-bootstrap/esm/DropdownDivider.js","../node_modules/react-bootstrap/esm/DropdownHeader.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/DropdownItemText.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/react-bootstrap/esm/NavDropdown.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/AlertHeading.js","../node_modules/react-bootstrap/esm/AlertLink.js","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/platform/common/utils.js","../node_modules/axios/lib/platform/index.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/helpers/throttle.js","../node_modules/axios/lib/helpers/progressEventReducer.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/helpers/resolveConfig.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/composeSignals.js","../node_modules/axios/lib/helpers/trackStream.js","../node_modules/axios/lib/adapters/fetch.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","util/ApiClient.ts","util/contexts.ts","MainNav.tsx","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","Chat.tsx","../node_modules/react-bootstrap/esm/Table.js","Query.tsx","../node_modules/react-bootstrap/esm/Spinner.js","PlayerData.tsx","memory/DummyProvider.ts","../node_modules/groq-sdk/src/version.ts","../node_modules/groq-sdk/src/_shims/registry.ts","../node_modules/groq-sdk/src/_shims/MultipartBody.ts","../node_modules/groq-sdk/_shims/index.mjs","../node_modules/groq-sdk/src/_shims/web-runtime.ts","../node_modules/groq-sdk/src/error.ts","../node_modules/groq-sdk/src/lib/streaming.ts","../node_modules/groq-sdk/src/uploads.ts","../node_modules/groq-sdk/src/core.ts","../node_modules/groq-sdk/src/resource.ts","../node_modules/groq-sdk/src/resources/completions.ts","../node_modules/groq-sdk/src/resources/chat/completions.ts","../node_modules/groq-sdk/src/resources/chat/chat.ts","../node_modules/groq-sdk/src/resources/embeddings.ts","../node_modules/groq-sdk/src/resources/audio/transcriptions.ts","../node_modules/groq-sdk/src/resources/audio/translations.ts","../node_modules/groq-sdk/src/resources/audio/audio.ts","../node_modules/groq-sdk/src/resources/models.ts","../node_modules/groq-sdk/src/resources/batches.ts","../node_modules/groq-sdk/src/resources/files.ts","../node_modules/groq-sdk/src/index.ts","util/parseIntUtil.ts","memory/GroqProvider.ts","../node_modules/zod/dist/esm/v3/helpers/util.js","../node_modules/zod/dist/esm/v3/ZodError.js","../node_modules/zod/dist/esm/v3/locales/en.js","../node_modules/zod/dist/esm/v3/errors.js","../node_modules/zod/dist/esm/v3/helpers/parseUtil.js","../node_modules/zod/dist/esm/v3/helpers/errorUtil.js","../node_modules/zod/dist/esm/v3/types.js","../node_modules/@google/genai/src/_base_url.ts","../node_modules/@google/genai/src/_common.ts","../node_modules/@google/genai/src/types.ts","../node_modules/@google/genai/src/_transformers.ts","../node_modules/@google/genai/src/converters/_caches_converters.ts","../node_modules/@google/genai/src/pagers.ts","../node_modules/@google/genai/src/caches.ts","../node_modules/@google/genai/src/chats.ts","../node_modules/@google/genai/src/converters/_files_converters.ts","../node_modules/@google/genai/src/files.ts","../node_modules/@google/genai/src/converters/_live_converters.ts","../node_modules/@google/genai/src/converters/_models_converters.ts","../node_modules/@google/genai/src/_api_client.ts","../node_modules/@google/genai/src/mcp/_mcp.ts","../node_modules/@google/genai/src/music.ts","../node_modules/@google/genai/src/live.ts","../node_modules/@google/genai/src/_afc.ts","../node_modules/@google/genai/src/models.ts","../node_modules/@google/genai/src/converters/_operations_converters.ts","../node_modules/@google/genai/src/operations.ts","../node_modules/@google/genai/src/converters/_tokens_converters.ts","../node_modules/@google/genai/src/tokens.ts","../node_modules/@google/genai/src/converters/_tunings_converters.ts","../node_modules/@google/genai/src/tunings.ts","../node_modules/@google/genai/src/web/_browser_downloader.ts","../node_modules/@google/genai/src/cross/_cross_uploader.ts","../node_modules/@google/genai/src/web/_browser_uploader.ts","../node_modules/@google/genai/src/web/_browser_websocket.ts","../node_modules/@google/genai/src/web/_web_auth.ts","../node_modules/@google/genai/src/web/web_client.ts","memory/GeminiProvider.ts","../node_modules/openai/internal/tslib.mjs","../node_modules/openai/src/internal/utils/uuid.ts","../node_modules/openai/src/internal/errors.ts","../node_modules/openai/src/core/error.ts","../node_modules/openai/src/internal/utils/values.ts","../node_modules/openai/src/internal/utils/sleep.ts","../node_modules/openai/src/version.ts","../node_modules/openai/src/internal/detect-platform.ts","../node_modules/openai/src/internal/shims.ts","../node_modules/openai/src/internal/request-options.ts","../node_modules/openai/src/internal/qs/formats.ts","../node_modules/openai/src/internal/qs/utils.ts","../node_modules/openai/src/internal/qs/stringify.ts","../node_modules/openai/src/internal/utils/bytes.ts","../node_modules/openai/src/internal/decoders/line.ts","../node_modules/openai/src/core/streaming.ts","../node_modules/openai/src/internal/utils/log.ts","../node_modules/openai/src/internal/parse.ts","../node_modules/openai/src/core/api-promise.ts","../node_modules/openai/src/core/pagination.ts","../node_modules/openai/src/internal/uploads.ts","../node_modules/openai/src/internal/to-file.ts","../node_modules/openai/src/core/resource.ts","../node_modules/openai/src/internal/utils/path.ts","../node_modules/openai/src/resources/chat/completions/messages.ts","../node_modules/openai/src/lib/RunnableFunction.ts","../node_modules/openai/src/lib/chatCompletionUtils.ts","../node_modules/openai/src/lib/EventStream.ts","../node_modules/openai/src/lib/parser.ts","../node_modules/openai/src/lib/AbstractChatCompletionRunner.ts","../node_modules/openai/src/lib/ChatCompletionRunner.ts","../node_modules/openai/src/_vendor/partial-json-parser/parser.ts","../node_modules/openai/src/lib/ChatCompletionStream.ts","../node_modules/openai/src/lib/ChatCompletionStreamingRunner.ts","../node_modules/openai/src/resources/chat/completions/completions.ts","../node_modules/openai/src/resources/chat/chat.ts","../node_modules/openai/src/internal/headers.ts","../node_modules/openai/src/resources/audio/speech.ts","../node_modules/openai/src/resources/audio/transcriptions.ts","../node_modules/openai/src/resources/audio/translations.ts","../node_modules/openai/src/resources/audio/audio.ts","../node_modules/openai/src/resources/batches.ts","../node_modules/openai/src/resources/beta/assistants.ts","../node_modules/openai/src/resources/beta/realtime/sessions.ts","../node_modules/openai/src/resources/beta/realtime/transcription-sessions.ts","../node_modules/openai/src/resources/beta/realtime/realtime.ts","../node_modules/openai/src/resources/beta/threads/messages.ts","../node_modules/openai/src/resources/beta/threads/runs/steps.ts","../node_modules/openai/src/internal/utils/base64.ts","../node_modules/openai/src/internal/utils/env.ts","../node_modules/openai/src/lib/AssistantStream.ts","../node_modules/openai/src/resources/beta/threads/runs/runs.ts","../node_modules/openai/src/resources/beta/threads/threads.ts","../node_modules/openai/src/resources/beta/beta.ts","../node_modules/openai/src/resources/completions.ts","../node_modules/openai/src/resources/containers/files/content.ts","../node_modules/openai/src/resources/containers/files/files.ts","../node_modules/openai/src/resources/containers/containers.ts","../node_modules/openai/src/resources/embeddings.ts","../node_modules/openai/src/resources/evals/runs/output-items.ts","../node_modules/openai/src/resources/evals/runs/runs.ts","../node_modules/openai/src/resources/evals/evals.ts","../node_modules/openai/src/resources/files.ts","../node_modules/openai/src/resources/fine-tuning/methods.ts","../node_modules/openai/src/resources/fine-tuning/alpha/graders.ts","../node_modules/openai/src/resources/fine-tuning/alpha/alpha.ts","../node_modules/openai/src/resources/fine-tuning/checkpoints/permissions.ts","../node_modules/openai/src/resources/fine-tuning/checkpoints/checkpoints.ts","../node_modules/openai/src/resources/fine-tuning/jobs/checkpoints.ts","../node_modules/openai/src/resources/fine-tuning/jobs/jobs.ts","../node_modules/openai/src/resources/fine-tuning/fine-tuning.ts","../node_modules/openai/src/resources/graders/grader-models.ts","../node_modules/openai/src/resources/graders/graders.ts","../node_modules/openai/src/resources/images.ts","../node_modules/openai/src/resources/models.ts","../node_modules/openai/src/resources/moderations.ts","../node_modules/openai/src/lib/ResponsesParser.ts","../node_modules/openai/src/lib/responses/ResponseStream.ts","../node_modules/openai/src/resources/responses/input-items.ts","../node_modules/openai/src/resources/responses/responses.ts","../node_modules/openai/src/resources/uploads/parts.ts","../node_modules/openai/src/resources/uploads/uploads.ts","../node_modules/openai/src/resources/vector-stores/file-batches.ts","../node_modules/openai/src/lib/Util.ts","../node_modules/openai/src/resources/vector-stores/files.ts","../node_modules/openai/src/resources/vector-stores/vector-stores.ts","../node_modules/openai/src/client.ts","../node_modules/openai/src/azure.ts","memory/DeepseekProvider.ts","memory/LocalOllamaProvider.ts","memory/MemoryProviders.ts","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","util/fileIo.tsx","Trainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n      if (result != null) {\n        error = result;\n      }\n    });\n\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\nmodule.exports = exports['default'];","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createChainableTypeChecker;\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Mostly taken from ReactPropTypes.\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\nmodule.exports = exports['default'];","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"fc107698\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"mw-express-client:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/mw-express-client-build/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmw_express_client\"] = self[\"webpackChunkmw_express_client\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","import { useMemo } from 'react';\nconst toFnRef = ref => !ref || typeof ref === 'function' ? ref : value => {\n  ref.current = value;\n};\nexport function mergeRefs(refA, refB) {\n  const a = toFnRef(refA);\n  const b = toFnRef(refB);\n  return value => {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\nfunction useMergedRefs(refA, refB) {\n  return useMemo(() => mergeRefs(refA, refB), [refA, refB]);\n}\nexport default useMergedRefs;","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerWindow from './ownerWindow';\n/**\n * Returns one or all computed style properties of an element.\n * \n * @param node the element\n * @param psuedoElement the style property\n */\n\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the owner window of a given element.\n * \n * @param node the element\n */\n\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import css from './css';\nimport listen from './listen';\nimport triggerEvent from './triggerEvent';\n\nfunction parseDuration(node) {\n  var str = css(node, 'transitionDuration') || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nfunction emulateTransitionEnd(element, duration, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var called = false;\n  var handle = setTimeout(function () {\n    if (!called) triggerEvent(element, 'transitionend', true);\n  }, duration + padding);\n  var remove = listen(element, 'transitionend', function () {\n    called = true;\n  }, {\n    once: true\n  });\n  return function () {\n    clearTimeout(handle);\n    remove();\n  };\n}\n\nexport default function transitionEnd(element, handler, duration, padding) {\n  if (duration == null) duration = parseDuration(element) || 0;\n  var removeEmulate = emulateTransitionEnd(element, duration, padding);\n  var remove = listen(element, 'transitionend', handler);\n  return function () {\n    removeEmulate();\n    remove();\n  };\n}","/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import * as React from 'react';\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}\nexport function getReactVersion() {\n  const parts = React.version.split('.');\n  return {\n    major: +parts[0],\n    minor: +parts[1],\n    patch: +parts[2]\n  };\n}","const _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"addEndListener\", \"children\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { getReactVersion } from './utils';\n/**\n * Normalizes RTG transition callbacks with nodeRef to better support\n * strict mode.\n *\n * @param props Transition props.\n * @returns Normalized transition props.\n */\nexport default function useRTGTransitionProps(_ref) {\n  let {\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      addEndListener,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    major\n  } = getReactVersion();\n  const childRef = major >= 19 ? children.props.ref : children.ref;\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, typeof children === 'function' ? null : childRef);\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return Object.assign({}, props, {\n    nodeRef\n  }, onEnter && {\n    onEnter: handleEnter\n  }, onEntering && {\n    onEntering: handleEntering\n  }, onEntered && {\n    onEntered: handleEntered\n  }, onExit && {\n    onExit: handleExit\n  }, onExiting && {\n    onExiting: handleExiting\n  }, onExited && {\n    onExited: handleExited\n  }, addEndListener && {\n    addEndListener: handleAddEndListener\n  }, {\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, Object.assign({}, innerProps, {\n      ref: mergedRef\n    })) : /*#__PURE__*/cloneElement(children, {\n      ref: mergedRef\n    })\n  });\n}","const _excluded = [\"component\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport useRTGTransitionProps from './useRTGTransitionProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst RTGTransition = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      component: Component\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const transitionProps = useRTGTransitionProps(props);\n  return /*#__PURE__*/_jsx(Component, Object.assign({\n    ref: ref\n  }, transitionProps));\n});\nexport default RTGTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport RTGTransition from './RTGTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(component, runTransition, props) {\n  if (component) {\n    return /*#__PURE__*/_jsx(RTGTransition, Object.assign({}, props, {\n      component: component\n    }));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\n/*\n  Modal props are split into a version with and without index signature so that you can fully use them in another projects\n  This is due to Typescript not playing well with index signatures e.g. when using Omit\n*/\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nfunction parseDuration(node, property) {\n  const str = css(node, property) || '';\n  const mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\nexport default function transitionEndListener(element, handler) {\n  const duration = parseDuration(element, 'transitionDuration');\n  const delay = parseDuration(element, 'transitionDelay');\n  const remove = transitionEnd(element, e => {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  node.offsetHeight;\n}","\"use client\";\n\nimport React, { useCallback, useRef } from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst TransitionWrapper = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  addEndListener,\n  children,\n  childRef,\n  ...props\n}, ref) => {\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, childRef);\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/_jsx(Transition, {\n    ref: ref,\n    ...props,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, {\n      ...innerProps,\n      ref: attachRef\n    }) : /*#__PURE__*/React.cloneElement(children, {\n      ref: attachRef\n    })\n  });\n});\nexport default TransitionWrapper;","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n  return componentOrElement != null ? componentOrElement : null;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport { getReactVersion } from '@restart/ui/utils';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null || onEnter(node, isAppearing);\n  }, [onEnter]);\n  const {\n    major\n  } = getReactVersion();\n  const childRef = major >= 19 ? children.props.ref : children.ref;\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: childRef,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null || context.onHide();\n    onHide == null || onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null || onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null || onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null || onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n    onExit == null || onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null || onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null || onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","import invariant from 'invariant';\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nexport function uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\nexport function isProp(props, prop) {\n  return props[prop] !== undefined;\n}\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexport function canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { useCallback, useRef, useState } from 'react';\nimport * as Utils from './utils';\n\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  var wasPropRef = useRef(propValue !== undefined);\n\n  var _useState = useState(defaultValue),\n      stateValue = _useState[0],\n      setState = _useState[1];\n\n  var isProp = propValue !== undefined;\n  var wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n\n  return [isProp ? propValue : stateValue, useCallback(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (handler) handler.apply(void 0, [value].concat(args));\n    setState(value);\n  }, [handler])];\n}\n\nexport { useUncontrolledProp };\nexport default function useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var _ref = result,\n        defaultValue = _ref[Utils.defaultKey(fieldName)],\n        propsValue = _ref[fieldName],\n        rest = _objectWithoutPropertiesLoose(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n\n    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),\n        value = _useUncontrolledProp[0],\n        handler = _useUncontrolledProp[1];\n\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarBrand = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  const Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  });\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args);\n      // @ts-ignore\n      f.apply(this, args);\n    };\n  }, null);\n}\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value +\n  // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) +\n  // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  in: inProp = false,\n  timeout = 300,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n\n  /* -- Expanding -- */\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n\n  /* -- Collapsing -- */\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? inProp : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    in: inProp,\n    timeout: timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n});\n\n// @ts-ignore\n\nexport default Collapse;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarCollapse = /*#__PURE__*/React.forwardRef(({\n  children,\n  bsPrefix,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Collapse, {\n    in: !!(context && context.expanded),\n    ...props,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: ref,\n      className: bsPrefix,\n      children: children\n    })\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  label = 'Toggle navigation',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nexport default NavbarToggle;","import useEffect from './useIsomorphicEffect';\nimport { useState } from 'react';\nconst matchersByWindow = new WeakMap();\nconst getMatcher = (query, targetWindow) => {\n  if (!query || !targetWindow) return undefined;\n  const matchers = matchersByWindow.get(targetWindow) || new Map();\n  matchersByWindow.set(targetWindow, matchers);\n  let mql = matchers.get(query);\n  if (!mql) {\n    mql = targetWindow.matchMedia(query);\n    mql.refCount = 0;\n    matchers.set(mql.media, mql);\n  }\n  return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */\nexport default function useMediaQuery(query, targetWindow = typeof window === 'undefined' ? undefined : window) {\n  const mql = getMatcher(query, targetWindow);\n  const [matches, setMatches] = useState(() => mql ? mql.matches : false);\n  useEffect(() => {\n    let mql = getMatcher(query, targetWindow);\n    if (!mql) {\n      return setMatches(false);\n    }\n    let matchers = matchersByWindow.get(targetWindow);\n    const handleChange = () => {\n      setMatches(mql.matches);\n    };\n    mql.refCount++;\n    mql.addListener(handleChange);\n    handleChange();\n    return () => {\n      mql.removeListener(handleChange);\n      mql.refCount--;\n      if (mql.refCount <= 0) {\n        matchers == null ? void 0 : matchers.delete(mql.media);\n      }\n      mql = undefined;\n    };\n  }, [query]);\n  return matches;\n}","import useMediaQuery from './useMediaQuery';\nimport { useMemo } from 'react';\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */\nexport function createBreakpointHook(breakpointValues) {\n  const names = Object.keys(breakpointValues);\n  function and(query, next) {\n    if (query === next) {\n      return next;\n    }\n    return query ? `${query} and ${next}` : next;\n  }\n  function getNext(breakpoint) {\n    return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n  }\n  function getMaxQuery(breakpoint) {\n    const next = getNext(breakpoint);\n    let value = breakpointValues[next];\n    if (typeof value === 'number') value = `${value - 0.2}px`;else value = `calc(${value} - 0.2px)`;\n    return `(max-width: ${value})`;\n  }\n  function getMinQuery(breakpoint) {\n    let value = breakpointValues[breakpoint];\n    if (typeof value === 'number') {\n      value = `${value}px`;\n    }\n    return `(min-width: ${value})`;\n  }\n\n  /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  /**\n   * Match a single breakpoint exactly, up, or down.\n   *\n   * ```tsx\n   * const PhoneOnly = () => {\n   *   const isSmall = useBreakpoint('sm', 'down');\n   *\n   *   if (isSmall) return <div>On a Small Screen!</div>\n   *   return null;\n   * }\n   * ```\n   *\n   * @param breakpoint The breakpoint key\n   * @param direction A direction 'up' for a max, 'down' for min, true to match only the breakpoint\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  function useBreakpoint(breakpointOrMap, direction, window) {\n    let breakpointMap;\n    if (typeof breakpointOrMap === 'object') {\n      breakpointMap = breakpointOrMap;\n      window = direction;\n      direction = true;\n    } else {\n      direction = direction || true;\n      breakpointMap = {\n        [breakpointOrMap]: direction\n      };\n    }\n    let query = useMemo(() => Object.entries(breakpointMap).reduce((query, [key, direction]) => {\n      if (direction === 'up' || direction === true) {\n        query = and(query, getMinQuery(key));\n      }\n      if (direction === 'down' || direction === true) {\n        query = and(query, getMaxQuery(key));\n      }\n      return query;\n    }, ''), [JSON.stringify(breakpointMap)]);\n    return useMediaQuery(query, window);\n  }\n  return useBreakpoint;\n}\nconst useBreakpoint = createBreakpointHook({\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n});\nexport default useBreakpoint;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasBody.displayName = 'OffcanvasBody';\nexport default OffcanvasBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  in: inProp = false,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nexport default OffcanvasHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst OffcanvasTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasTitle.displayName = 'OffcanvasTitle';\nexport default OffcanvasTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, {\n    ...props\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props\n  });\n}\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement = 'start',\n  responsive,\n  /* BaseModal props */\n\n  show = false,\n  backdrop = true,\n  keyboard = true,\n  scroll = false,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode = false,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const handleHide = useEventCallback(onHide);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n    return getSharedManager();\n  }\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null || onEnter(node, ...args);\n  };\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null || onExited(...args);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarOffcanvas = /*#__PURE__*/React.forwardRef(({\n  onHide,\n  ...props\n}, ref) => {\n  const context = useContext(NavbarContext);\n  const handleHide = useEventCallback(() => {\n    context == null || context.onToggle == null || context.onToggle();\n    onHide == null || onHide();\n  });\n  return /*#__PURE__*/_jsx(Offcanvas, {\n    ref: ref,\n    show: !!(context != null && context.expanded),\n    ...props,\n    renderStaticNode: true,\n    onHide: handleHide\n  });\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nNavbarText.displayName = 'NavbarText';\nexport default NavbarText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport NavbarText from './NavbarText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix: initialBsPrefix,\n    expand = true,\n    variant = 'light',\n    bg,\n    fixed,\n    sticky,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'nav',\n    expanded,\n    onToggle,\n    onSelect,\n    collapseOnSelect = false,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    expanded: 'onToggle'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback((...args) => {\n    onSelect == null || onSelect(...args);\n    if (collapseOnSelect && expanded) {\n      onToggle == null || onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]);\n\n  // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n  let expandClass = `${bsPrefix}-expand`;\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, {\n        ref: ref,\n        ...controlledProps,\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\n      })\n    })\n  });\n});\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});","import { useReducer } from 'react';\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are strictly equal to the last state value\n  const [, dispatch] = useReducer(state => !state, false);\n  return dispatch;\n}","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react';\nconst TabContext = /*#__PURE__*/React.createContext(null);\nexport default TabContext;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","const _excluded = [\"as\", \"active\", \"eventKey\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useNavItem({\n  key,\n  onClick,\n  active,\n  id,\n  role,\n  disabled\n}) {\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const tabContext = useContext(TabContext);\n  let isActive = active;\n  const props = {\n    role\n  };\n  if (navContext) {\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\n    const contextControlledId = navContext.getControlledId(key != null ? key : null);\n\n    // @ts-ignore\n    props[dataAttr('event-key')] = key;\n    props.id = contextControllerId || id;\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\n\n    /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\n  }\n  if (props.role === 'tab') {\n    props['aria-selected'] = isActive;\n    if (!isActive) {\n      props.tabIndex = -1;\n    }\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n  }\n  props.onClick = useEventCallback(e => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(e);\n    if (key == null) {\n      return;\n    }\n    if (parentOnSelect && !e.isPropagationStopped()) {\n      parentOnSelect(key, e);\n    }\n  });\n  return [props, {\n    isActive\n  }];\n}\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: Component = Button,\n      active,\n      eventKey\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [props, meta] = useNavItem(Object.assign({\n    key: makeEventKey(eventKey, options.href),\n    active\n  }, options));\n\n  // @ts-ignore\n  props[dataAttr('active')] = meta.isActive;\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\n    ref: ref\n  }));\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'div',\n      onSelect,\n      activeKey,\n      role,\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    // TODO: do we need to duplicate these?\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n  const listNode = useRef(null);\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (!tabContext) {\n      return;\n    }\n    let nextActiveChild;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n      default:\n        return;\n    }\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavItem = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavLink = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as: Component = Anchor,\n  active,\n  eventKey,\n  disabled = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-link');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    disabled,\n    ...props\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...navItemProps,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, bsPrefix, disabled && 'disabled', meta.isActive && 'active')\n  });\n});\nNavLink.displayName = 'NavLink';\nexport default NavLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport CardHeaderContext from './CardHeaderContext';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Nav = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    as = 'div',\n    bsPrefix: initialBsPrefix,\n    variant,\n    fill = false,\n    justify = false,\n    navbar,\n    navbarScroll,\n    className,\n    activeKey,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'nav');\n  let navbarBsPrefix;\n  let cardHeaderBsPrefix;\n  let isNavbar = false;\n  const navbarContext = useContext(NavbarContext);\n  const cardHeaderContext = useContext(CardHeaderContext);\n  if (navbarContext) {\n    navbarBsPrefix = navbarContext.bsPrefix;\n    isNavbar = navbar == null ? true : navbar;\n  } else if (cardHeaderContext) {\n    ({\n      cardHeaderBsPrefix\n    } = cardHeaderContext);\n  }\n  return /*#__PURE__*/_jsx(BaseNav, {\n    as: as,\n    ref: ref,\n    activeKey: activeKey,\n    className: classNames(className, {\n      [bsPrefix]: !isNavbar,\n      [`${navbarBsPrefix}-nav`]: isNavbar,\n      [`${navbarBsPrefix}-nav-scroll`]: isNavbar && navbarScroll,\n      [`${cardHeaderBsPrefix}-${variant}`]: !!cardHeaderBsPrefix,\n      [`${bsPrefix}-${variant}`]: !!variant,\n      [`${bsPrefix}-fill`]: fill,\n      [`${bsPrefix}-justified`]: justify\n    }),\n    ...props\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem,\n  Link: NavLink\n});","function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { useCallback, useRef, useState } from 'react';\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  const wasPropRef = useRef(propValue !== undefined);\n  const [stateValue, setState] = useState(defaultValue);\n  const isProp = propValue !== undefined;\n  const wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n  return [isProp ? propValue : stateValue, useCallback((...args) => {\n    const [value, ...rest] = args;\n    let returnValue = handler == null ? void 0 : handler(value, ...rest);\n    setState(value);\n    return returnValue;\n  }, [handler])];\n}\nexport { useUncontrolledProp };\nexport function useUncontrolled(props, config) {\n  return Object.keys(config).reduce((result, fieldName) => {\n    const _ref = result,\n      _defaultKey = defaultKey(fieldName),\n      {\n        [_defaultKey]: defaultValue,\n        [fieldName]: propsValue\n      } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [_defaultKey, fieldName].map(_toPropertyKey));\n    const handlerName = config[fieldName];\n    const [value, handler] = useUncontrolledProp(propsValue, defaultValue, props[handlerName]);\n    return Object.assign({}, rest, {\n      [fieldName]: value,\n      [handlerName]: handler\n    });\n  }, props);\n}","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","import { useCallback } from 'react';\nimport useMounted from './useMounted';\n\n/**\n * `useSafeState` takes the return value of a `useState` hook and wraps the\n * setter to prevent updates onces the component has unmounted. Can used\n * with `useMergeState` and `useStateAsync` as well\n *\n * @param state The return value of a useStateHook\n *\n * ```ts\n * const [show, setShow] = useSafeState(useState(true));\n * ```\n */\n\nfunction useSafeState(state) {\n  const isMounted = useMounted();\n  return [state[0], useCallback(nextState => {\n    if (!isMounted()) return;\n    return state[1](nextState);\n  }, [isMounted, state[1]])];\n}\nexport default useSafeState;","import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}","export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}","import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };","export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;","export default function getUAString() {\n  var uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(function (item) {\n      return item.brand + \"/\" + item.version;\n    }).join(' ');\n  }\n\n  return navigator.userAgent;\n}","import getUAString from \"../utils/userAgent.js\";\nexport default function isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}","import { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport { round } from \"../utils/math.js\";\nimport getWindow from \"./getWindow.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  var clientRect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  var _ref = isElement(element) ? getWindow(element) : window,\n      visualViewport = _ref.visualViewport;\n\n  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n  var width = clientRect.width / scaleX;\n  var height = clientRect.height / scaleY;\n  return {\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x: x,\n    y: y\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}","import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}","export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}","import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}","import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}","import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}","import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}","import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getUAString from \"../utils/userAgent.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = /firefox/i.test(getUAString());\n  var isIE = /Trident/i.test(getUAString());\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}","export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}","import { max as mathMax, min as mathMin } from \"./math.js\";\nexport function within(min, value, max) {\n  return mathMax(min, mathMin(value, max));\n}\nexport function withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}","import getFreshSideObject from \"./getFreshSideObject.js\";\nexport default function mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}","export default function getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}","export default function expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}","export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport { within } from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","export default function getVariation(placement) {\n  return placement.split('-')[1];\n}","import { top, left, right, bottom, end } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref, win) {\n  var x = _ref.x,\n      y = _ref.y;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }, getWindow(popper)) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};","import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};","var hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nexport default function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}","var hash = {\n  start: 'end',\n  end: 'start'\n};\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}","import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}","import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}","import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}","import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}","export default function rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}","import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  var rect = getBoundingClientRect(element, false, strategy === 'fixed');\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary, strategy) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}","import getWindow from \"./getWindow.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getViewportRect(element, strategy) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}","import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}","import getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$strategy = _options.strategy,\n      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}","import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};","import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}","import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport { within, withinMaxClamp } from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { min as mathMin, max as mathMax } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};","export default function getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}","export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}","import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}","export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}","import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        });\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref) {\n        var name = _ref.name,\n            _ref$options = _ref.options,\n            options = _ref$options === void 0 ? {} : _ref$options,\n            effect = _ref.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };","export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}","import arrow from '@popperjs/core/lib/modifiers/arrow';\nimport computeStyles from '@popperjs/core/lib/modifiers/computeStyles';\nimport eventListeners from '@popperjs/core/lib/modifiers/eventListeners';\nimport flip from '@popperjs/core/lib/modifiers/flip';\nimport hide from '@popperjs/core/lib/modifiers/hide';\nimport offset from '@popperjs/core/lib/modifiers/offset';\nimport popperOffsets from '@popperjs/core/lib/modifiers/popperOffsets';\nimport preventOverflow from '@popperjs/core/lib/modifiers/preventOverflow';\nimport { placements } from '@popperjs/core/lib/enums';\nimport { popperGenerator } from '@popperjs/core/lib/popper-base';\n\n// For the common JS build we will turn this file into a bundle with no imports.\n// This is b/c the Popper lib is all esm files, and would break in a common js only environment\nexport const createPopper = popperGenerator({\n  defaultModifiers: [hide, popperOffsets, computeStyles, eventListeners, offset, flip, preventOverflow, arrow]\n});\nexport { placements };","import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};","const _excluded = [\"enabled\", \"placement\", \"strategy\", \"modifiers\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { dequal } from 'dequal';\nimport useSafeState from '@restart/hooks/useSafeState';\nimport { createPopper } from './popper';\nconst disabledApplyStylesModifier = {\n  name: 'applyStyles',\n  enabled: false,\n  phase: 'afterWrite',\n  fn: () => undefined\n};\n\n// until docjs supports type exports...\n\nconst ariaDescribedByModifier = {\n  name: 'ariaDescribedBy',\n  enabled: true,\n  phase: 'afterWrite',\n  effect: ({\n    state\n  }) => () => {\n    const {\n      reference,\n      popper\n    } = state.elements;\n    if ('removeAttribute' in reference) {\n      const ids = (reference.getAttribute('aria-describedby') || '').split(',').filter(id => id.trim() !== popper.id);\n      if (!ids.length) reference.removeAttribute('aria-describedby');else reference.setAttribute('aria-describedby', ids.join(','));\n    }\n  },\n  fn: ({\n    state\n  }) => {\n    var _popper$getAttribute;\n    const {\n      popper,\n      reference\n    } = state.elements;\n    const role = (_popper$getAttribute = popper.getAttribute('role')) == null ? void 0 : _popper$getAttribute.toLowerCase();\n    if (popper.id && role === 'tooltip' && 'setAttribute' in reference) {\n      const ids = reference.getAttribute('aria-describedby');\n      if (ids && ids.split(',').indexOf(popper.id) !== -1) {\n        return;\n      }\n      reference.setAttribute('aria-describedby', ids ? `${ids},${popper.id}` : popper.id);\n    }\n  }\n};\nconst EMPTY_MODIFIERS = [];\n/**\n * Position an element relative some reference element using Popper.js\n *\n * @param referenceElement\n * @param popperElement\n * @param {object}      options\n * @param {object=}     options.modifiers Popper.js modifiers\n * @param {boolean=}    options.enabled toggle the popper functionality on/off\n * @param {string=}     options.placement The popper element placement relative to the reference element\n * @param {string=}     options.strategy the positioning strategy\n * @param {function=}   options.onCreate called when the popper is created\n * @param {function=}   options.onUpdate called when the popper is updated\n *\n * @returns {UsePopperState} The popper state\n */\nfunction usePopper(referenceElement, popperElement, _ref = {}) {\n  let {\n      enabled = true,\n      placement = 'bottom',\n      strategy = 'absolute',\n      modifiers = EMPTY_MODIFIERS\n    } = _ref,\n    config = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const prevModifiers = useRef(modifiers);\n  const popperInstanceRef = useRef();\n  const update = useCallback(() => {\n    var _popperInstanceRef$cu;\n    (_popperInstanceRef$cu = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu.update();\n  }, []);\n  const forceUpdate = useCallback(() => {\n    var _popperInstanceRef$cu2;\n    (_popperInstanceRef$cu2 = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu2.forceUpdate();\n  }, []);\n  const [popperState, setState] = useSafeState(useState({\n    placement,\n    update,\n    forceUpdate,\n    attributes: {},\n    styles: {\n      popper: {},\n      arrow: {}\n    }\n  }));\n  const updateModifier = useMemo(() => ({\n    name: 'updateStateModifier',\n    enabled: true,\n    phase: 'write',\n    requires: ['computeStyles'],\n    fn: ({\n      state\n    }) => {\n      const styles = {};\n      const attributes = {};\n      Object.keys(state.elements).forEach(element => {\n        styles[element] = state.styles[element];\n        attributes[element] = state.attributes[element];\n      });\n      setState({\n        state,\n        styles,\n        attributes,\n        update,\n        forceUpdate,\n        placement: state.placement\n      });\n    }\n  }), [update, forceUpdate, setState]);\n  const nextModifiers = useMemo(() => {\n    if (!dequal(prevModifiers.current, modifiers)) {\n      prevModifiers.current = modifiers;\n    }\n    return prevModifiers.current;\n  }, [modifiers]);\n  useEffect(() => {\n    if (!popperInstanceRef.current || !enabled) return;\n    popperInstanceRef.current.setOptions({\n      placement,\n      strategy,\n      modifiers: [...nextModifiers, updateModifier, disabledApplyStylesModifier]\n    });\n  }, [strategy, placement, updateModifier, enabled, nextModifiers]);\n  useEffect(() => {\n    if (!enabled || referenceElement == null || popperElement == null) {\n      return undefined;\n    }\n    popperInstanceRef.current = createPopper(referenceElement, popperElement, Object.assign({}, config, {\n      placement,\n      strategy,\n      modifiers: [...nextModifiers, ariaDescribedByModifier, updateModifier]\n    }));\n    return () => {\n      if (popperInstanceRef.current != null) {\n        popperInstanceRef.current.destroy();\n        popperInstanceRef.current = undefined;\n        setState(s => Object.assign({}, s, {\n          attributes: {},\n          styles: {\n            popper: {}\n          }\n        }));\n      }\n    };\n    // This is only run once to _create_ the popper\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [enabled, referenceElement, popperElement]);\n  return popperState;\n}\nexport default usePopper;","import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nconst noop = () => {};\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nexport const getRefTarget = ref => ref && ('current' in ref ? ref.current : ref);\nconst InitialTriggerEvents = {\n  click: 'mousedown',\n  mouseup: 'mousedown',\n  pointerup: 'pointerdown'\n};\n\n/**\n * The `useClickOutside` hook registers your callback on the document that fires\n * when a pointer event is registered outside of the provided ref or element.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onClickOutside\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useClickOutside(ref, onClickOutside = noop, {\n  disabled,\n  clickTrigger = 'click'\n} = {}) {\n  const preventMouseClickOutsideRef = useRef(false);\n  const waitingForTrigger = useRef(false);\n  const handleMouseCapture = useCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'ClickOutside captured a close event but does not have a ref to compare it to. ' + 'useClickOutside(), should be passed a ref that resolves to a DOM node');\n    preventMouseClickOutsideRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target) || waitingForTrigger.current;\n    waitingForTrigger.current = false;\n  }, [ref]);\n  const handleInitialMouse = useEventCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    if (currentTarget && contains(currentTarget, e.target)) {\n      waitingForTrigger.current = true;\n    }\n  });\n  const handleMouse = useEventCallback(e => {\n    if (!preventMouseClickOutsideRef.current) {\n      onClickOutside(e);\n    }\n  });\n  useEffect(() => {\n    var _ownerWindow$event, _ownerWindow$parent;\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref));\n    const ownerWindow = doc.defaultView || window;\n\n    // Store the current event to avoid triggering handlers immediately\n    // For things rendered in an iframe, the event might originate on the parent window\n    // so we should fall back to that global event if the local one doesn't exist\n    // https://github.com/facebook/react/issues/20074\n    let currentEvent = (_ownerWindow$event = ownerWindow.event) != null ? _ownerWindow$event : (_ownerWindow$parent = ownerWindow.parent) == null ? void 0 : _ownerWindow$parent.event;\n    let removeInitialTriggerListener = null;\n    if (InitialTriggerEvents[clickTrigger]) {\n      removeInitialTriggerListener = listen(doc, InitialTriggerEvents[clickTrigger], handleInitialMouse, true);\n    }\n\n    // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n    const removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    const removeMouseListener = listen(doc, clickTrigger, e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      handleMouse(e);\n    });\n    let mobileSafariHackListeners = [];\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(el => listen(el, 'mousemove', noop));\n    }\n    return () => {\n      removeInitialTriggerListener == null ? void 0 : removeInitialTriggerListener();\n      removeMouseCaptureListener();\n      removeMouseListener();\n      mobileSafariHackListeners.forEach(remove => remove());\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleInitialMouse, handleMouse]);\n}\nexport default useClickOutside;","export function toModifierMap(modifiers) {\n  const result = {};\n  if (!Array.isArray(modifiers)) {\n    return modifiers || result;\n  }\n\n  // eslint-disable-next-line no-unused-expressions\n  modifiers == null ? void 0 : modifiers.forEach(m => {\n    result[m.name] = m;\n  });\n  return result;\n}\nexport function toModifierArray(map = {}) {\n  if (Array.isArray(map)) return map;\n  return Object.keys(map).map(k => {\n    map[k].name = k;\n    return map[k];\n  });\n}\nexport default function mergeOptionsWithPopperConfig({\n  enabled,\n  enableEvents,\n  placement,\n  flip,\n  offset,\n  fixed,\n  containerPadding,\n  arrowElement,\n  popperConfig = {}\n}) {\n  var _modifiers$eventListe, _modifiers$preventOve, _modifiers$preventOve2, _modifiers$offset, _modifiers$arrow;\n  const modifiers = toModifierMap(popperConfig.modifiers);\n  return Object.assign({}, popperConfig, {\n    placement,\n    enabled,\n    strategy: fixed ? 'fixed' : popperConfig.strategy,\n    modifiers: toModifierArray(Object.assign({}, modifiers, {\n      eventListeners: {\n        enabled: enableEvents,\n        options: (_modifiers$eventListe = modifiers.eventListeners) == null ? void 0 : _modifiers$eventListe.options\n      },\n      preventOverflow: Object.assign({}, modifiers.preventOverflow, {\n        options: containerPadding ? Object.assign({\n          padding: containerPadding\n        }, (_modifiers$preventOve = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve.options) : (_modifiers$preventOve2 = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve2.options\n      }),\n      offset: {\n        options: Object.assign({\n          offset\n        }, (_modifiers$offset = modifiers.offset) == null ? void 0 : _modifiers$offset.options)\n      },\n      arrow: Object.assign({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: Object.assign({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: Object.assign({\n        enabled: !!flip\n      }, modifiers.flip)\n    }))\n  });\n}","const _excluded = [\"children\", \"usePopper\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport { useContext, useRef } from 'react';\nimport * as React from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useClickOutside from './useClickOutside';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\nconst noop = () => {};\n\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\nexport function useDropdownMenu(options = {}) {\n  const context = useContext(DropdownContext);\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const hasShownRef = useRef(false);\n  const {\n    flip,\n    offset,\n    rootCloseEvent,\n    fixed = false,\n    placement: placementOverride,\n    popperConfig = {},\n    enableEventListeners = true,\n    usePopper: shouldUsePopper = !!context\n  } = options;\n  const show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n  const handleClose = e => {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n  const {\n    placement,\n    setMenu,\n    menuElement,\n    toggleElement\n  } = context || {};\n  const popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placementOverride || placement || 'bottom-start',\n    enabled: shouldUsePopper,\n    enableEvents: enableEventListeners == null ? show : enableEventListeners,\n    offset,\n    flip,\n    fixed,\n    arrowElement,\n    popperConfig\n  }));\n  const menuProps = Object.assign({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n  const metadata = {\n    show,\n    placement,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? Object.assign({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useClickOutside(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref) {\n  let {\n      children,\n      usePopper: usePopperProp = true\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [props, meta] = useDropdownMenu(Object.assign({}, options, {\n    usePopper: usePopperProp\n  }));\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\nDropdownMenu.displayName = 'DropdownMenu';\n\n/** @component */\nexport default DropdownMenu;","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {JSX, ReactNode, useContext, useLayoutEffect, useMemo, useRef, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\nconst IsSSRContext = React.createContext(false);\n\nexport interface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n// This is only used in React < 18.\nfunction LegacySSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let counter = useCounter(cur === defaultContext);\n  let [isSSR, setIsSSR] = useState(true);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${counter}`,\n    current: 0\n  }), [cur, counter]);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof document !== 'undefined') {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return (\n    <SSRContext.Provider value={value}>\n      <IsSSRContext.Provider value={isSSR}>\n        {props.children}\n      </IsSSRContext.Provider>\n    </SSRContext.Provider>\n  );\n}\n\nlet warnedAboutSSRProvider = false;\n\n/**\n * When using SSR with React Aria in React 16 or 17, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  if (typeof React['useId'] === 'function') {\n    if (process.env.NODE_ENV !== 'test' && !warnedAboutSSRProvider) {\n      console.warn('In React 18, SSRProvider is not necessary and is a noop. You can remove it from your app.');\n      warnedAboutSSRProvider = true;\n    }\n    return <>{props.children}</>;\n  }\n  return <LegacySSRProvider {...props} />;\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet componentIds = new WeakMap();\n\nfunction useCounter(isDisabled = false) {\n  let ctx = useContext(SSRContext);\n  let ref = useRef<number | null>(null);\n  // eslint-disable-next-line rulesdir/pure-render\n  if (ref.current === null && !isDisabled) {\n    // In strict mode, React renders components twice, and the ref will be reset to null on the second render.\n    // This means our id counter will be incremented twice instead of once. This is a problem because on the\n    // server, components are only rendered once and so ids generated on the server won't match the client.\n    // In React 18, useId was introduced to solve this, but it is not available in older versions. So to solve this\n    // we need to use some React internals to access the underlying Fiber instance, which is stable between renders.\n    // This is exposed as ReactCurrentOwner in development, which is all we need since StrictMode only runs in development.\n    // To ensure that we only increment the global counter once, we store the starting id for this component in\n    // a weak map associated with the Fiber. On the second render, we reset the global counter to this value.\n    // Since React runs the second render immediately after the first, this is safe.\n    // @ts-ignore\n    let currentOwner = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?.ReactCurrentOwner?.current;\n    if (currentOwner) {\n      let prevComponentValue = componentIds.get(currentOwner);\n      if (prevComponentValue == null) {\n        // On the first render, and first call to useId, store the id and state in our weak map.\n        componentIds.set(currentOwner, {\n          id: ctx.current,\n          state: currentOwner.memoizedState\n        });\n      } else if (currentOwner.memoizedState !== prevComponentValue.state) {\n        // On the second render, the memoizedState gets reset by React.\n        // Reset the counter, and remove from the weak map so we don't\n        // do this for subsequent useId calls.\n        ctx.current = prevComponentValue.id;\n        componentIds.delete(currentOwner);\n      }\n    }\n\n    // eslint-disable-next-line rulesdir/pure-render\n    ref.current = ++ctx.current;\n  }\n\n  // eslint-disable-next-line rulesdir/pure-render\n  return ref.current;\n}\n\nfunction useLegacySSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  let counter = useCounter(!!defaultId);\n  let prefix = ctx === defaultContext && process.env.NODE_ENV === 'test' ? 'react-aria' : `react-aria${ctx.prefix}`;\n  return defaultId || `${prefix}-${counter}`;\n}\n\nfunction useModernSSRSafeId(defaultId?: string): string {\n  // @ts-ignore\n  let id = React.useId();\n  let [didSSR] = useState(useIsSSR());\n  let prefix = didSSR || process.env.NODE_ENV === 'test' ? 'react-aria' : `react-aria${defaultContext.prefix}`;\n  return defaultId || `${prefix}-${id}`;\n}\n\n// Use React.useId in React 18 if available, otherwise fall back to our old implementation.\n/** @private */\nexport const useSSRSafeId = typeof React['useId'] === 'function' ? useModernSSRSafeId : useLegacySSRSafeId;\n\nfunction getSnapshot() {\n  return false;\n}\n\nfunction getServerSnapshot() {\n  return true;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction subscribe(onStoreChange: () => void): () => void {\n  // noop\n  return () => {};\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  // In React 18, we can use useSyncExternalStore to detect if we're server rendering or hydrating.\n  if (typeof React['useSyncExternalStore'] === 'function') {\n    return React['useSyncExternalStore'](subscribe, getSnapshot, getServerSnapshot);\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useContext(IsSSRContext);\n}\n","import { useContext, useCallback } from 'react';\nimport * as React from 'react';\nimport { useSSRSafeId } from './ssr';\nimport DropdownContext from './DropdownContext';\nimport { Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\nexport const isRoleMenu = el => {\n  var _el$getAttribute;\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\nconst noop = () => {};\n\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\nexport function useDropdownToggle() {\n  const id = useSSRSafeId();\n  const {\n    show = false,\n    toggle = noop,\n    setToggle,\n    menuElement\n  } = useContext(DropdownContext) || {};\n  const handleClick = useCallback(e => {\n    toggle(!show, e);\n  }, [show, toggle]);\n  const props = {\n    id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  };\n\n  // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n  return [props, {\n    show,\n    toggle\n  }];\n}\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle({\n  children\n}) {\n  const [props, meta] = useDropdownToggle();\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\nDropdownToggle.displayName = 'DropdownToggle';\n\n/** @component */\nexport default DropdownToggle;","const _excluded = [\"eventKey\", \"disabled\", \"onClick\", \"active\", \"as\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NavContext from './NavContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Create a dropdown item. Returns a set of props for the dropdown item component\n * including an `onClick` handler that prevents selection when the item is disabled\n */\nexport function useDropdownItem({\n  key,\n  href,\n  active,\n  disabled,\n  onClick\n}) {\n  const onSelectCtx = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const {\n    activeKey\n  } = navContext || {};\n  const eventKey = makeEventKey(key, href);\n  const isActive = active == null && key != null ? makeEventKey(activeKey) === eventKey : active;\n  const handleClick = useEventCallback(event => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n    if (onSelectCtx && !event.isPropagationStopped()) {\n      onSelectCtx(eventKey, event);\n    }\n  });\n  return [{\n    onClick: handleClick,\n    'aria-disabled': disabled || undefined,\n    'aria-selected': isActive,\n    [dataAttr('dropdown-item')]: ''\n  }, {\n    isActive\n  }];\n}\nconst DropdownItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      eventKey,\n      disabled,\n      onClick,\n      active,\n      as: Component = Button\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [dropdownItemProps] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n    ref: ref\n  }, dropdownItemProps));\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport { useCallback, useRef, useEffect, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventListener from '@restart/hooks/useEventListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle, { isRoleMenu } from './DropdownToggle';\nimport DropdownItem from './DropdownItem';\nimport SelectableContext from './SelectableContext';\nimport { dataAttr } from './DataKey';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useRefWithUpdate() {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef(null);\n  const attachRef = useCallback(element => {\n    ref.current = element;\n    // ensure that a menu set triggers an update for consumers\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n\n/**\n * @displayName Dropdown\n * @public\n */\nfunction Dropdown({\n  defaultShow,\n  show: rawShow,\n  onSelect,\n  onToggle: rawOnToggle,\n  itemSelector = `* [${dataAttr('dropdown-item')}]`,\n  focusFirstItemOnShow,\n  placement = 'bottom-start',\n  children\n}) {\n  const window = useWindow();\n  const [show, onToggle] = useUncontrolledProp(rawShow, defaultShow, rawOnToggle);\n\n  // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n  const [menuRef, setMenu] = useRefWithUpdate();\n  const menuElement = menuRef.current;\n  const [toggleRef, setToggle] = useRefWithUpdate();\n  const toggleElement = toggleRef.current;\n  const lastShow = usePrevious(show);\n  const lastSourceEvent = useRef(null);\n  const focusInDropdown = useRef(false);\n  const onSelectCtx = useContext(SelectableContext);\n  const toggle = useCallback((nextShow, event, source = event == null ? void 0 : event.type) => {\n    onToggle(nextShow, {\n      originalEvent: event,\n      source\n    });\n  }, [onToggle]);\n  const handleSelect = useEventCallback((key, event) => {\n    onSelect == null ? void 0 : onSelect(key, event);\n    toggle(false, event, 'select');\n    if (!event.isPropagationStopped()) {\n      onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    }\n  });\n  const context = useMemo(() => ({\n    toggle,\n    placement,\n    show,\n    menuElement,\n    toggleElement,\n    setMenu,\n    setToggle\n  }), [toggle, placement, show, menuElement, toggleElement, setMenu, setToggle]);\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(menuElement.ownerDocument.activeElement);\n  }\n  const focusToggle = useEventCallback(() => {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  const maybeFocusFirst = useEventCallback(() => {\n    const type = lastSourceEvent.current;\n    let focusType = focusFirstItemOnShow;\n    if (focusType == null) {\n      focusType = menuRef.current && isRoleMenu(menuRef.current) ? 'keyboard' : false;\n    }\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n    const first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(() => {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    }\n    // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(() => {\n    lastSourceEvent.current = null;\n  });\n  const getNextFocusedChild = (current, offset) => {\n    if (!menuRef.current) return null;\n    const items = qsa(menuRef.current, itemSelector);\n    let index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n  useEventListener(useCallback(() => window.document, [window]), 'keydown', event => {\n    var _menuRef$current, _toggleRef$current;\n    const {\n      key\n    } = event;\n    const target = event.target;\n    const fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    const fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target);\n\n    // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n    const isInput = /input|textarea/i.test(target.tagName);\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu || key === 'Escape' && target.type === 'search')) {\n      return;\n    }\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n    if (key === 'Tab' && (!menuRef.current || !show)) {\n      return;\n    }\n    lastSourceEvent.current = event.type;\n    const meta = {\n      originalEvent: event,\n      source: event.type\n    };\n    switch (key) {\n      case 'ArrowUp':\n        {\n          const next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n      case 'ArrowDown':\n        event.preventDefault();\n        if (!show) {\n          onToggle(true, meta);\n        } else {\n          const next = getNextFocusedChild(target, 1);\n          if (next && next.focus) next.focus();\n        }\n        return;\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(target.ownerDocument, 'keyup', e => {\n          var _menuRef$current2;\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, meta);\n          }\n        }, {\n          once: true\n        });\n        break;\n      case 'Escape':\n        if (key === 'Escape') {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        onToggle(false, meta);\n        break;\n      default:\n    }\n  });\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: context,\n      children: children\n    })\n  });\n}\nDropdown.displayName = 'Dropdown';\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Item = DropdownItem;\nexport default Dropdown;","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture = false) {\n  const handler = useEventCallback(listener);\n  useEffect(() => {\n    const target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return () => target.removeEventListener(event, handler, capture);\n  }, [eventTarget]);\n}","\"use client\";\n\nimport * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext({});\nDropdownContext.displayName = 'DropdownContext';\nexport default DropdownContext;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownDivider = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'hr',\n  role = 'separator',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'dropdown-divider');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    role: role,\n    ...props\n  });\n});\nDropdownDivider.displayName = 'DropdownDivider';\nexport default DropdownDivider;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  role = 'heading',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'dropdown-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    role: role,\n    ...props\n  });\n});\nDropdownHeader.displayName = 'DropdownHeader';\nexport default DropdownHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useDropdownItem } from '@restart/ui/DropdownItem';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  eventKey,\n  disabled = false,\n  onClick,\n  active,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  const [dropdownItemProps, meta] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...dropdownItemProps,\n    ref: ref,\n    className: classNames(className, prefix, meta.isActive && 'active', disabled && 'disabled')\n  });\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItemText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'dropdown-item-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nDropdownItemText.displayName = 'DropdownItemText';\nexport default DropdownItemText;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref;\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const warningRef = useCallback(refValue => {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${componentName} injected a ref to a provided \\`as\\` component that resolved to a component instance instead of a DOM element. ` + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useMergedRefs(warningRef, ref);\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from '@restart/ui/DropdownMenu';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\n  const topStart = isRTL ? 'top-end' : 'top-start';\n  const topEnd = isRTL ? 'top-start' : 'top-end';\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\n  const leftStart = isRTL ? 'right-start' : 'left-start';\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\n  const rightStart = isRTL ? 'left-start' : 'right-start';\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\n  let placement = alignEnd ? bottomEnd : bottomStart;\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;else if (dropDirection === 'down-centered') placement = 'bottom';else if (dropDirection === 'up-centered') placement = 'top';\n  return placement;\n}\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip = true,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignEnd = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign,\n    drop,\n    isRTL\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint];\n\n        // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n        alignEnd = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignEnd = true;\n    }\n  }\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig,\n    placement\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  useIsomorphicEffect(() => {\n    // Popper's initial position for the menu is incorrect when\n    // renderOnMount=true. Need to call update() to correct it.\n    if (show) popper == null || popper.update();\n  }, [show]);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null;\n\n  // For custom components provide additional, non-DOM, props;\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n    menuProps.align = align;\n  }\n  let style = props.style;\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = {\n      ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...menuProps,\n    style: style\n    // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nexport default DropdownMenu;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\n\n  // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownDivider from './DropdownDivider';\nimport DropdownHeader from './DropdownHeader';\nimport DropdownItem from './DropdownItem';\nimport DropdownItemText from './DropdownItemText';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop = 'down',\n    show,\n    className,\n    align = 'start',\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose = true,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click';\n\n    // autoClose=inside doesn't permit close on rootClose\n    if (autoClose === 'inside') return source !== 'rootClose';\n\n    // autoClose=outside doesn't permit close on select\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    var _meta$originalEvent;\n    /** Checking if target of event is ToggleButton,\n     * if it is then nullify mousedown event\n     */\n    const isToggleButton = (_meta$originalEvent = meta.originalEvent) == null || (_meta$originalEvent = _meta$originalEvent.target) == null ? void 0 : _meta$originalEvent.classList.contains('dropdown-toggle');\n    if (isToggleButton && meta.source === 'mousedown') {\n      return;\n    }\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null || onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  const directionClasses = {\n    down: prefix,\n    'down-centered': `${prefix}-center`,\n    up: 'dropup',\n    'up-centered': 'dropup-center dropup',\n    end: 'dropend',\n    start: 'dropstart'\n  };\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, {\n        ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', directionClasses[drop])\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Dropdown from './Dropdown';\nimport NavLink from './NavLink';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst NavDropdown = /*#__PURE__*/React.forwardRef(({\n  id,\n  title,\n  children,\n  bsPrefix,\n  className,\n  rootCloseEvent,\n  menuRole,\n  disabled,\n  active,\n  renderMenuOnMount,\n  menuVariant,\n  ...props\n}, ref) => {\n  /* NavItem has no additional logic, it's purely presentational. Can set nav item class here to support \"as\" */\n  const navItemPrefix = useBootstrapPrefix(undefined, 'nav-item');\n  return /*#__PURE__*/_jsxs(Dropdown, {\n    ref: ref,\n    ...props,\n    className: classNames(className, navItemPrefix),\n    children: [/*#__PURE__*/_jsx(Dropdown.Toggle, {\n      id: id,\n      eventKey: null,\n      active: active,\n      disabled: disabled,\n      childBsPrefix: bsPrefix,\n      as: NavLink,\n      children: title\n    }), /*#__PURE__*/_jsx(Dropdown.Menu, {\n      role: menuRole,\n      renderOnMount: renderMenuOnMount,\n      rootCloseEvent: rootCloseEvent,\n      variant: menuVariant,\n      children: children\n    })]\n  });\n});\nNavDropdown.displayName = 'NavDropdown';\nexport default Object.assign(NavDropdown, {\n  Item: Dropdown.Item,\n  ItemText: Dropdown.ItemText,\n  Divider: Dropdown.Divider,\n  Header: Dropdown.Header\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-heading');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertHeading.displayName = 'AlertHeading';\nexport default AlertHeading;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AlertLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertLink.displayName = 'AlertLink';\nexport default AlertLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AlertHeading from './AlertHeading';\nimport AlertLink from './AlertLink';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show = true,\n    closeLabel = 'Close alert',\n    closeVariant,\n    className,\n    children,\n    variant = 'primary',\n    onClose,\n    dismissible,\n    transition = Fade,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.7.7\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios, { CreateAxiosDefaults, AxiosInstance } from 'axios'\r\nimport config from './apiConfig.json'\r\n\r\nif (config.disableTLSCheck) {\r\n\tprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = \"0\"\r\n}\r\n\r\nexport type Session = { \r\n\ttoken: string, \r\n\texpireAt: number, \r\n\ttype: number, \r\n\tusername: string \r\n}\r\n\r\nexport type ChatLine = {\r\n\tThread: number,\r\n\tResult: {\r\n\t\tLines: string[],\r\n\t\tPlayerOptions: string[],\r\n\t\tResult?: number,\r\n\t}\r\n}\r\n\r\nexport type QueryResult = {\r\n\tJson: any,\r\n\tTable: any[]\r\n\tField: any\r\n}\r\n\r\nexport type Assistant = {\r\n\tid?: string,\r\n\tcreated_at: number,\r\n\tname: string,\r\n\tdescription: string,\r\n\tmodel: string,\r\n\tinstructions: string,\r\n\ttemperature: number,\r\n\ttop_p: number,\r\n\tresponse_format?: object\r\n\tresponse_format_str?: string\r\n}\r\n\r\nexport type PlayerData = {\r\n    magin: number,\r\n    currentSceneIdx: number,\r\n    sceneUnlockDate: number,\r\n    variables: {\r\n        bools: Record<string, boolean>,\r\n        strings: Record<string, string>,\r\n        floats: Record<string, number>\r\n    }\r\n}\r\n\r\nexport class ApiClient {\r\n\tprivate api: AxiosInstance\r\n\tpublic session: Session | undefined\r\n\tpublic assumedAs: string | undefined\r\n\r\n\tprivate updateTrigger: () => void\r\n\r\n\tconstructor(updateTrigger: () => void) {\r\n\t\tconst axiosConfig: CreateAxiosDefaults = {\r\n\t\t\tbaseURL: config.endpoint\r\n\t\t}\r\n\r\n\t\tthis.updateTrigger = updateTrigger\r\n\r\n\t\tthis.api = axios.create(axiosConfig)\r\n\r\n\t\tconst localSessionStr = localStorage.getItem('session')\r\n\t\tif (localSessionStr) {\r\n\t\t\tconst localSession: Session = JSON.parse(localSessionStr)\r\n\t\t\t// if (localSession.ExpireAt <= Date.now()) {\r\n\t\t\t\tthis.api.defaults.headers['Authorization'] = localSession.token as string\r\n\t\t\t// }\r\n\t\t\tthis.session = localSession\r\n\t\t}\r\n\t}\r\n\r\n\tassumeUser(target: string) {\r\n\t\tthis.assumedAs = target\r\n\t\tthis.api.defaults.headers['as_user'] = target\r\n\t\tthis.updateTrigger()\r\n\t}\r\n\r\n\tunassumeUser() {\r\n\t\tthis.assumedAs = undefined\r\n\t\tdelete this.api.defaults.headers['as_user']\r\n\t\tthis.updateTrigger()\r\n\t}\r\n\r\n\tasync registerAndLogin(username: string, password: string) {\r\n\t\tawait this.api.post(`/auth/register`, {\r\n\t\t\tusername,\r\n\t\t\tpassword\r\n\t\t})\r\n\t\tawait this.login(username, password)\r\n\t}\r\n\r\n\tasync login(username: string, password: string) {\r\n\t\tconst sessionObject = (await this.api.post(`/auth/login`, {\r\n\t\t\tusername,\r\n\t\t\tpassword\r\n\t\t})).data\r\n\r\n\t\tsessionObject.UserName = username\r\n\t\tthis.session = {\r\n\t\t\t...sessionObject,\r\n\t\t\texpireAt: (new Date(sessionObject.expireAt)).getTime(),\r\n\t\t\tusername\r\n\t\t}\r\n\t\tlocalStorage.setItem('session', JSON.stringify(sessionObject))\r\n\t\tthis.api.defaults.headers['Authorization'] = sessionObject.Token as string\r\n\t\tthis.updateTrigger()\r\n\t}\r\n\r\n\tsignOut() {\r\n\t\tthis.session = undefined\r\n\t\tdelete this.api.defaults.headers['Authorization']\r\n\t\tlocalStorage.removeItem('session')\r\n\t\tthis.unassumeUser()\r\n\t\tthis.updateTrigger()\r\n\t}\r\n\r\n\tcheckToken() {\r\n\t\tif (!this.session) {\r\n\t\t\tthrow new Error('Not Logged in')\r\n\t\t}\r\n\r\n\t\tif (this.session.expireAt <= Date.now()) {\r\n\t\t\tthis.signOut()\r\n\t\t\tthrow new Error('Expired Session. Please log in again')\r\n\t\t}\r\n\t}\r\n\r\n\tasync getData() {\r\n\t\tconst data =  (await this.api.get('/player/login_package')).data\r\n\t\treturn {\r\n\t\t\t...data,\r\n\t\t\tsceneUnlockDate: (new Date(data.sceneUnlockDate)).getTime(),\r\n\t\t} as PlayerData\r\n\t}\r\n\r\n\tasync startChat(assistantId: string, initialMessage: string): Promise<ChatLine> {\r\n\t\tthis.checkToken()\r\n\r\n\t\treturn (await this.api.post('/chat/start_chat', {\r\n\t\t\tPromptKey: assistantId,\r\n\t\t\tInitialMessage: initialMessage,\r\n\t\t\tSceneId: 'web-client'\r\n\t\t})).data\r\n\t}\r\n\r\n\tasync continueChat (threadId: number, message: string): Promise<ChatLine> {\r\n\t\tthis.checkToken()\r\n\r\n\t\treturn (await this.api.post('/chat/chat', {\r\n\t\t\tThread: threadId,\r\n\t\t\tMessage: message\r\n\t\t})).data\r\n\t}\r\n\r\n\tasync query(query: string) {\r\n\t\treturn (await this.api.post('/admin/query', {\r\n\t\t\tQuery: query\r\n\t\t})).data\r\n\t}\r\n\r\n\tasync listModels () {\r\n\t\treturn (await this.api.get('chat/models')).data.sort()\r\n\t}\r\n\r\n\tasync listAsst (before?: string, after?: string) {\r\n\t\tconst result = (await this.api.get('/chat/assts', {\r\n\t\t\theaders: {\r\n\t\t\t\tbefore,\r\n\t\t\t\tafter\r\n\t\t\t}\r\n\t\t})).data as { data: Assistant[], first_id: string, last_id: string, has_more: boolean }\r\n\r\n\t\tfor (const entry of result.data) {\r\n\t\t\tentry.response_format_str = JSON.stringify(entry.response_format, null, 4)\r\n\t\t}\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tasync getAsst(asstId: string) {\r\n\t\tconst result = (await this.api.get(`/chat/assts/${asstId}`)).data as Assistant\r\n\t\tresult.response_format_str = JSON.stringify(result.response_format, null, 4)\r\n\t\treturn result\r\n\t}\r\n\r\n\tasync delAsst(asstId: string) {\r\n\t\treturn (await this.api.delete(`/chat/assts/${asstId}`)).data\r\n\t}\r\n\r\n\tasync createAsst(asst: Assistant) {\r\n\t\tasst.response_format = asst.response_format_str ? JSON.parse(asst.response_format_str) : undefined\r\n\t\treturn (await this.api.post(`/chat/assts/`, asst)).data as Assistant\r\n\t}\r\n\r\n\tasync updateAsst(asstId: string, asst: Assistant) {\r\n\t\tasst.response_format = asst.response_format_str ? JSON.parse(asst.response_format_str) : undefined\r\n\t\treturn (await this.api.put(`/chat/assts/${asstId}`, asst)).data as Assistant\r\n\t}\r\n}","import { createContext } from 'react';\r\nimport { ApiClient } from './ApiClient';\r\n\r\nexport const ThemeContext = createContext('light');\r\nexport const ApiContext = createContext<ApiClient>(new ApiClient(() => {}));","import { useCallback, useContext, useState } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { Session } from './util/ApiClient'\r\nimport { ApiContext } from './util/contexts'\r\nimport { AxiosError } from 'axios'\r\n\r\nfunction MainNav({ session, assumeAs: assumedAs, tab, setTab }: { trigger: number, session?: Session, assumeAs?: string, tab: string, setTab: (tab: string) => void }) {\r\n\tconst [loginModalOepn, setLoginModalOpen] = useState(false)\r\n\tconst [isRegistering, setIsRegistering] = useState(false)\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [loginErrorMsg, setLoginErrorMsg] = useState('')\r\n\r\n\tconst [assumeModalOpen, setAssumeModal] = useState(false)\r\n\tconst [assumeText, setAssumeText] = useState('')\r\n\r\n\tconst apiClient = useContext(ApiContext)\r\n\r\n\tconst openModal = useCallback((isRegister: boolean) => {\r\n\t\tsetLoginModalOpen(true)\r\n\t\tsetIsRegistering(isRegister)\r\n\t\tsetUsername('')\r\n\t\tsetPassword('')\r\n\t\tsetLoginErrorMsg('')\r\n\t}, [])\r\n\r\n\tconst handleAssumeClick = useCallback(() => {\r\n\t\tif (assumedAs) {\r\n\t\t\tconsole.log('unassume')\r\n\t\t\tapiClient.unassumeUser()\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetAssumeModal(true)\r\n\t\t\tsetAssumeText('')\r\n\t\t}\r\n\t}, [apiClient, assumedAs])\r\n\t\r\n\r\n\tconst handleSend = async () => {\r\n\t\ttry {\r\n\t\t\tif (isRegistering) {\r\n\t\t\t\tawait apiClient.registerAndLogin(username, password)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tawait apiClient.login(username, password)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tconst error = e as AxiosError\r\n\t\t\tconsole.error(error)\r\n\t\t\tsetLoginErrorMsg((error.response?.data ?? error.message) as string)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tsetUsername('')\r\n\t\tsetPassword('')\r\n\t\tsetLoginModalOpen(false)\r\n\t}\r\n\r\n\tconst userDisplay = session ? `${session.username}(${assumedAs ? `Assumed as ${assumedAs}` : ['User', 'Admin', 'Admin'][session.type]})` : \"Not Signed in\"\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Navbar className=\"bg-body-tertiary dark\">\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Navbar.Brand onClick={() => setTab('home')}>MW Express Client</Navbar.Brand>\r\n\t\t\t\t\t<Navbar.Toggle />\r\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t\t<Nav className=\"me-auto\">\r\n\t\t\t\t\t\t\t<Nav.Link active={tab === 'data'} onClick={() => setTab('data')}>Data</Nav.Link>\r\n\t\t\t\t\t\t\t{/* <Nav.Link active={tab === 'chat'} onClick={() => setTab('chat')}>Chat</Nav.Link> */}\r\n\t\t\t\t\t\t\t<Nav.Link active={tab === 'trainer'} onClick={() => setTab('trainer')}>Memory</Nav.Link>\r\n\t\t\t\t\t\t\t<Nav.Link active={tab === 'query'} disabled={session?.type !== 2} onClick={() => setTab('query')}>Query</Nav.Link>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t\t<Navbar.Collapse className=\"justify-content-end\">\r\n\t\t\t\t\t\t<NavDropdown title={userDisplay} id=\"basic-nav-dropdown\" className=\"justify-content-end\" align=\"end\">\r\n\t\t\t\t\t\t\t{session ? [\r\n\t\t\t\t\t\t\t\tsession.type === 2 \r\n\t\t\t\t\t\t\t\t\t? <NavDropdown.Item onClick={handleAssumeClick} key='assume'>{assumedAs ?  \"Unassume\" : \"Assume As\"}</NavDropdown.Item> \r\n\t\t\t\t\t\t\t\t\t: null,\r\n\t\t\t\t\t\t\t\t<NavDropdown.Item onClick={() => apiClient.signOut()} key='signout'>Sign out</NavDropdown.Item>\r\n\t\t\t\t\t\t\t] : [\r\n\t\t\t\t\t\t\t\t<NavDropdown.Item onClick={() => openModal(true)} key='register'>Register</NavDropdown.Item>,\r\n\t\t\t\t\t\t\t\t<NavDropdown.Item onClick={() => openModal(false)} key='signin'>Sign in</NavDropdown.Item>\r\n\t\t\t\t\t\t\t] }\r\n\t\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t</Container>\r\n\t\t\t</Navbar>\r\n\t\t\t<Modal show={loginModalOepn} onHide={() => setLoginModalOpen(false)}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>{isRegistering ? \"Register\" : \"Sign in\"}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t{loginErrorMsg ? <Alert variant=\"danger\">{loginErrorMsg}</Alert> : null}\r\n\t\t\t\t\t<Form onSubmit={e => { handleSend(); e.preventDefault()}}>\r\n\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tplaceholder=\"username\"\r\n\t\t\t\t\t\t\t\taria-label=\"username\"\r\n\t\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\t\tonChange={e => setUsername(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\taria-label=\"Password\"\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t<Form.Control type=\"submit\" style={{display: 'none'}}/>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={handleSend} disabled={!username || !password}>{isRegistering ? \"Register and Sign in\" : \"Sign in\"}</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal show={assumeModalOpen} onHide={() => setAssumeModal(false)}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Assume as User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Form onSubmit={e => { handleSend(); e.preventDefault()}}>\r\n\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tplaceholder=\"Assume Target\"\r\n\t\t\t\t\t\t\t\taria-label=\"Assume Target\"\r\n\t\t\t\t\t\t\t\tvalue={assumeText}\r\n\t\t\t\t\t\t\t\tonChange={e => setAssumeText(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => {apiClient.assumeUser(assumeText); setAssumeModal(false);}} disabled={!assumeText}>Confirm</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MainNav;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    navItemProps.onClick(event);\n  });\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  // eslint-disable-next-line no-nested-ternary\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  process.env.NODE_ENV !== \"production\" ? warning(as || !(!action && props.href), '`action=false` and `href` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import { useContext, useState } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport './Chat.css'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { ChatLine } from './util/ApiClient'\r\nimport { ApiContext } from './util/contexts'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\ntype DisplayLine = {\r\n\tspeaker: 'remote' | 'user', \r\n\tcontent: string,\r\n\tisError?: boolean\r\n}\r\n\r\nfunction Chat () {\r\n\tconst [userInput, setUserInput] = useState('')\r\n\tconst [msgList, setMsgList] = useState<DisplayLine[]>( [])\r\n\tconst [targetAssistant, setTargetAssistant] = useState('')\r\n\tconst [activeOptions, setActiveOptions] = useState<string[] | null>(null)\r\n\tconst [activeThreadId, setActiveThreadId] = useState<number | null>(null)\r\n\tconst [statusMessage, setStatusMessage] = useState('Ready')\r\n\tconst [lockInput, setLockInput] = useState(false)\r\n\r\n\tconst apiClient = useContext(ApiContext)\r\n\r\n\tconst reset = () => {\r\n\t\tsetUserInput('')\r\n\t\tsetMsgList([])\r\n\t\tsetActiveOptions(null)\r\n\t\tsetActiveThreadId(null)\r\n\t\tsetStatusMessage('Ready')\r\n\t\tsetLockInput(false)\r\n\t}\r\n\r\n\tconst handleSend = async (input: string) => {\r\n\t\tlet line: ChatLine\r\n\r\n\t\tsetMsgList(msgList => msgList.concat({ speaker: 'user', content: input }))\r\n\t\tsetUserInput('')\r\n\t\tsetStatusMessage('Requesting')\r\n\t\tsetActiveOptions(null)\r\n\t\tsetLockInput(true)\r\n\r\n\t\tconst startTime = Date.now()\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif (activeThreadId) {\r\n\t\t\t\tline = await apiClient.continueChat(activeThreadId, input)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tline = await apiClient.startChat(targetAssistant, input)\r\n\t\t\t}\r\n\r\n\t\t\tif (!line.Result) {\r\n\t\t\t\tthrow new Error('ChatGPT Encountered an Error. See Server Details')\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e: any) {\r\n\t\t\tsetStatusMessage(`Error Encountered after ${Date.now() - startTime} ms`)\r\n\t\t\tsetMsgList(list => [...list, { speaker: 'remote', content: e.response?.data ?? e.message, isError: true } as DisplayLine])\r\n\t\t\tsetLockInput(false)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tsetStatusMessage(`Response received after ${Date.now() - startTime} ms`)\r\n\t\tsetActiveThreadId(line.Thread)\r\n\t\tsetMsgList(msgList => msgList.concat(line.Result.Lines.map(l => ({ speaker: 'remote', content: l }))))\r\n\t\t\r\n\t\tif (line.Result.Result !== null) {\r\n\t\t\tsetMsgList(msgList => [...msgList, {speaker: 'remote', content: `Chat ended with result ${line.Result.Result}`}])\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetActiveOptions(line.Result.PlayerOptions)\r\n\t\t\tsetLockInput(false)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className='chatPage'>\r\n\t\t\t<div className='asstInput'>\r\n\t\t\t\t<InputGroup>\r\n\t\t\t\t\t<InputGroup.Text id=\"asst-addon\">Assistant</InputGroup.Text>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tplaceholder=\"Enter Assistant ID\"\r\n\t\t\t\t\t\taria-label=\"Assistant ID\"\r\n\t\t\t\t\t\tvalue={targetAssistant}\r\n\t\t\t\t\t\tdisabled={!!activeThreadId}\r\n\t\t\t\t\t\tonChange={e => setTargetAssistant(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t</div>\r\n\t\t\t<Row className=\"threadBlock\">\r\n\t\t\t\t<Col className='col-10'>\r\n\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t<InputGroup.Text id=\"asst-addon\">Thread</InputGroup.Text>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tplaceholder=\"Send a message to create a thread\"\r\n\t\t\t\t\t\t\taria-label=\"Thread ID\"\r\n\t\t\t\t\t\t\tvalue={activeThreadId ?? ''}\r\n\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Button className='col-2' variant='outline-danger' onClick={reset}>Reset</Button>\r\n\t\t\t</Row>\r\n\t\t\t<div className='msgDisplay'>\r\n\t\t\t\t{msgList.map((msg, i) => <p key={i} className={msg.isError ? 'line error' : 'line'}>{`${msg.speaker}: ${msg.content}`}</p>)}\r\n\t\t\t</div>\r\n\t\t\t{activeOptions ? <ListGroup className='optionsContainer'>\r\n\t\t\t\t{activeOptions.map((o, i) => <ListGroup.Item action key={i} onClick={() => handleSend(o)}>{o}</ListGroup.Item>)}\r\n\t\t\t</ListGroup> : null}\r\n\t\t\t<div className='chatStatus'>\r\n\t\t\t\t{statusMessage}\r\n\t\t\t</div>\r\n\t\t\t<Form className='inputForm'>\r\n\t\t\t\t<Row className='inputRow'>\r\n\t\t\t\t\t<Col className='col-9'>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tplaceholder=\"Send Messages here...\"\r\n\t\t\t\t\t\t\taria-label=\"Input\"\r\n\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\tvalue={userInput}\r\n\t\t\t\t\t\t\tdisabled={lockInput || !targetAssistant}\r\n\t\t\t\t\t\t\tonChange={e => setUserInput(e.target.value)}\r\n\t\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\t\tif(e.key === 'Enter' && !e.shiftKey) {\r\n\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\thandleSend(userInput)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className='col-3'>\r\n\t\t\t\t\t\t<Form.Control type=\"submit\" onClick={() => handleSend(userInput)} disabled={lockInput || !targetAssistant}/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chat","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import { ReactElement, useContext, useState } from \"react\"\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { ApiContext } from \"./util/contexts\"\r\nimport \"./Query.css\"\r\n\r\n\r\nfunction Cell ({ data, onInspect }: { data: any, onInspect: (str: string) => void }) {\r\n\tif (data == null) {\r\n\t\treturn <td/>\r\n\t} \r\n\r\n\tconst str = data.toString()\r\n\treturn <td className='inspectableCell' onClick={() => onInspect(data)}>\r\n\t\t<div>{str}</div>\r\n\t</td>\r\n}\r\n\r\nfunction QueryPage () {\r\n\tconst [query, setQuery] = useState('')\r\n\tconst [error, setError] = useState('')\r\n\tconst [data, setData] = useState<any>(null)\r\n\tconst [modalContent, setModalContent] = useState(null)\r\n\tconst api = useContext(ApiContext)\r\n\r\n\tconst handleSend = async (input: string) => {\r\n\t\ttry {\r\n\t\t\tsetData(await api.query(input))\r\n\t\t\tsetError('')\r\n\t\t}\r\n\t\tcatch (e: any) {\r\n\t\t\tsetError(e.response?.data ?? e.message)\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst handleCellInspect = (data: any) => {\r\n\t\tsetModalContent(data)\r\n\t}\r\n\r\n\tlet output: ReactElement | null = null\r\n\r\n\tif (data) {\r\n\t\tif (data.Fields) {\r\n\t\t\tlet rows = data.Result.map((row: any, i: number) => <tr key={i}>\r\n\t\t\t\t{data.Fields.map((f: string) => <Cell key={f} data={row[f]} onInspect={handleCellInspect}/>)}\r\n\t\t\t</tr>)\r\n\r\n\t\t\t// Generate table\r\n\t\t\toutput = <Table striped bordered hover>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t{data.Fields.map((f: string) => <th key={f}>{f}</th>)}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{rows}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t}\r\n\t\telse {\t\r\n\t\t\toutput = <Table striped bordered className=\"dataTable\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Key</th>\r\n\t\t\t\t\t\t<th>Value</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{Object.entries(data.Result as Record<string, string>).map(([key, value]) => <tr key={key}><td>{key}</td><td>{value}</td></tr>)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t}\r\n\t} \r\n\r\n\treturn (\r\n\t\t<div className='queryPage'>\r\n\t\t\t<Form className='inputForm'  onSubmit={e => { handleSend(query); e.preventDefault()}}>\r\n\t\t\t\t<Row className='inputRow'>\r\n\t\t\t\t\t<Col className='col-9'>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tplaceholder=\"Send Messages here...\"\r\n\t\t\t\t\t\t\taria-label=\"Input\"\r\n\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\tvalue={query}\r\n\t\t\t\t\t\t\tonChange={e => setQuery(e.target.value)}\r\n\t\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\t\tif(e.key === 'Enter' && !e.shiftKey) {\r\n\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\thandleSend(query)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className='col-3'>\r\n\t\t\t\t\t\t<Form.Control type=\"submit\"/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t\t{error ? <Alert variant=\"danger\">{error}</Alert> : null}\r\n\t\t\t{output}\r\n\t\t\t<Modal show={!!modalContent} onHide={() => setModalContent(null)}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Inspect Cell</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<p className=\"inspectData\">{modalContent}</p>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default QueryPage","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { ApiContext } from './util/contexts'\r\nimport { PlayerData } from './util/ApiClient'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport \"./PlayerData.css\"\r\n\r\nfunction PlayerPage () {\r\n\tconst [playerData, setPlayerData] = useState<PlayerData>({ magin: 0, currentSceneIdx: 0, sceneUnlockDate: 0, variables: { bools: {}, strings: {}, floats: {}}})\r\n\tconst [error, setError] = useState('')\r\n\r\n\tconst apiClient = useContext(ApiContext)\r\n\r\n\tconst mutate = useCallback((field: string, value: any) => {\r\n\t\tsetPlayerData(p => ({...p, [field]: value}))\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (apiClient.session) apiClient.getData().then(data => setPlayerData(data)).catch(e => setError(e.response?.data ?? e.essage))\r\n\t}, [apiClient, apiClient.assumedAs, apiClient.session])\r\n\r\n\tif (!apiClient.session) {\r\n\t\treturn <div className='playerPage'>Log in to continue</div>\r\n\t}\r\n\r\n\tif (!playerData) {\r\n\t\treturn <div className='playerPage'>\r\n\t\t\t<Spinner/>\r\n\t\t</div>\r\n\t}\r\n\treturn (\r\n\t\t<div className='playerPage'>\r\n\t\t\t{error ? <Alert variant=\"danger\">{error}</Alert> : null}\r\n\t\t\t<Form>\r\n\t\t\t\t<h4>Core Data</h4>\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<Form.Group as={Row} className=\"mb-3\">\r\n\t\t\t\t\t<Form.Label column sm={3}>Magin</Form.Label>\r\n\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t<Form.Control type=\"number\" value={playerData.magin} onChange={e => mutate('magin', parseInt(e.target.value))}/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group as={Row} className=\"mb-3\">\r\n\t\t\t\t\t<Form.Label column sm={3}>Scene Index</Form.Label>\r\n\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t<Form.Control type=\"number\" value={playerData.currentSceneIdx} onChange={e => mutate('currentSceneIdx', parseInt(e.target.value))}/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group as={Row} className=\"mb-3\">\r\n\t\t\t\t\t<Form.Label column sm={3}>Scene Date</Form.Label>\r\n\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t<Form.Control type=\"input\" onChange={e => mutate('sceneDate', new Date(e.target.value).getTime())} value={new Date(playerData.sceneUnlockDate).toLocaleString() }/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<h4>Variables Data</h4>\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<h5>Strings</h5>\r\n\t\t\t\t{\r\n\t\t\t\t\tObject.entries(playerData.variables.strings).map(([k, v]) => <Form.Group as={Row} className=\"mb-3\" key={k}>\r\n\t\t\t\t\t\t<Form.Label column sm={3}>{k}</Form.Label>\r\n\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t<Form.Control type=\"input\" value={v} disabled/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Form.Group>)\r\n\t\t\t\t}\r\n\t\t\t\t<h5>Floats</h5>\r\n\t\t\t\t{\r\n\t\t\t\t\tObject.entries(playerData.variables.floats).map(([k, v]) => <Form.Group as={Row} className=\"mb-3\" key={k}>\r\n\t\t\t\t\t\t<Form.Label column sm={3}>{k}</Form.Label>\r\n\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t<Form.Control type=\"number\" value={v} disabled/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Form.Group>)\r\n\t\t\t\t}\r\n\t\t\t\t<h5>Bools</h5>\r\n\t\t\t\t{\r\n\t\t\t\t\tObject.entries(playerData.variables.bools).map(([k, v]) => <Form.Group as={Row} className=\"mb-3\" key={k}>\r\n\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\tchecked={v}\r\n\t\t\t\t\t\t\ttype=\"switch\"\r\n\t\t\t\t\t\t\tlabel={k}\r\n\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>)\r\n\t\t\t\t}\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PlayerPage","import { ConversationBlock, IMemoryProvider, ProviderConfiguration } from './MemoryProviders'\r\n\r\nexport default class DummyProvider implements IMemoryProvider {\r\n\r\n\tasync init() {\r\n\t\t\r\n\t}\r\n\r\n\tasync send(setting: Record<string, any>, history: ConversationBlock[], onUpdate: (conversation: ConversationBlock) => void, playerName: string): Promise<void> {\r\n\t}\r\n\r\n\trenderControls(): Record<string, ProviderConfiguration> {\r\n\t\treturn {}\r\n\t}\r\n}","export const VERSION = '0.15.0'; // x-release-please-version\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport { type RequestOptions } from '../core';\n\nexport interface Shims {\n  kind: string;\n  fetch: any;\n  Request: any;\n  Response: any;\n  Headers: any;\n  FormData: any;\n  Blob: any;\n  File: any;\n  ReadableStream: any;\n  getMultipartRequestOptions: <T = Record<string, unknown>>(\n    form: Shims['FormData'],\n    opts: RequestOptions<T>,\n  ) => Promise<RequestOptions<T>>;\n  getDefaultAgent: (url: string) => any;\n  fileFromPath:\n    | ((path: string, filename?: string, options?: {}) => Promise<Shims['File']>)\n    | ((path: string, options?: {}) => Promise<Shims['File']>);\n  isFsReadStream: (value: any) => boolean;\n}\n\nexport let auto = false;\nexport let kind: Shims['kind'] | undefined = undefined;\nexport let fetch: Shims['fetch'] | undefined = undefined;\nexport let Request: Shims['Request'] | undefined = undefined;\nexport let Response: Shims['Response'] | undefined = undefined;\nexport let Headers: Shims['Headers'] | undefined = undefined;\nexport let FormData: Shims['FormData'] | undefined = undefined;\nexport let Blob: Shims['Blob'] | undefined = undefined;\nexport let File: Shims['File'] | undefined = undefined;\nexport let ReadableStream: Shims['ReadableStream'] | undefined = undefined;\nexport let getMultipartRequestOptions: Shims['getMultipartRequestOptions'] | undefined = undefined;\nexport let getDefaultAgent: Shims['getDefaultAgent'] | undefined = undefined;\nexport let fileFromPath: Shims['fileFromPath'] | undefined = undefined;\nexport let isFsReadStream: Shims['isFsReadStream'] | undefined = undefined;\n\nexport function setShims(shims: Shims, options: { auto: boolean } = { auto: false }) {\n  if (auto) {\n    throw new Error(\n      `you must \\`import 'groq-sdk/shims/${shims.kind}'\\` before importing anything else from groq-sdk`,\n    );\n  }\n  if (kind) {\n    throw new Error(\n      `can't \\`import 'groq-sdk/shims/${shims.kind}'\\` after \\`import 'groq-sdk/shims/${kind}'\\``,\n    );\n  }\n  auto = options.auto;\n  kind = shims.kind;\n  fetch = shims.fetch;\n  Request = shims.Request;\n  Response = shims.Response;\n  Headers = shims.Headers;\n  FormData = shims.FormData;\n  Blob = shims.Blob;\n  File = shims.File;\n  ReadableStream = shims.ReadableStream;\n  getMultipartRequestOptions = shims.getMultipartRequestOptions;\n  getDefaultAgent = shims.getDefaultAgent;\n  fileFromPath = shims.fileFromPath;\n  isFsReadStream = shims.isFsReadStream;\n}\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n  constructor(public body: any) {}\n  get [Symbol.toStringTag](): string {\n    return 'MultipartBody';\n  }\n}\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'groq-sdk/_shims/auto/runtime';\nif (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\nexport * from './registry.mjs';\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport { MultipartBody } from './MultipartBody';\nimport { type RequestOptions } from '../core';\nimport { type Shims } from './registry';\n\nexport function getRuntime({ manuallyImported }: { manuallyImported?: boolean } = {}): Shims {\n  const recommendation =\n    manuallyImported ?\n      `You may need to use polyfills`\n    : `Add one of these imports before your first \\`import … from 'groq-sdk'\\`:\n- \\`import 'groq-sdk/shims/node'\\` (if you're running on Node)\n- \\`import 'groq-sdk/shims/web'\\` (otherwise)\n`;\n\n  let _fetch, _Request, _Response, _Headers;\n  try {\n    // @ts-ignore\n    _fetch = fetch;\n    // @ts-ignore\n    _Request = Request;\n    // @ts-ignore\n    _Response = Response;\n    // @ts-ignore\n    _Headers = Headers;\n  } catch (error) {\n    throw new Error(\n      `this environment is missing the following Web Fetch API type: ${\n        (error as any).message\n      }. ${recommendation}`,\n    );\n  }\n\n  return {\n    kind: 'web',\n    fetch: _fetch,\n    Request: _Request,\n    Response: _Response,\n    Headers: _Headers,\n    FormData:\n      // @ts-ignore\n      typeof FormData !== 'undefined' ? FormData : (\n        class FormData {\n          // @ts-ignore\n          constructor() {\n            throw new Error(\n              `file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    Blob:\n      typeof Blob !== 'undefined' ? Blob : (\n        class Blob {\n          constructor() {\n            throw new Error(\n              `file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    File:\n      // @ts-ignore\n      typeof File !== 'undefined' ? File : (\n        class File {\n          // @ts-ignore\n          constructor() {\n            throw new Error(\n              `file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    ReadableStream:\n      // @ts-ignore\n      typeof ReadableStream !== 'undefined' ? ReadableStream : (\n        class ReadableStream {\n          // @ts-ignore\n          constructor() {\n            throw new Error(\n              `streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    getMultipartRequestOptions: async <T = Record<string, unknown>>(\n      // @ts-ignore\n      form: FormData,\n      opts: RequestOptions<T>,\n    ): Promise<RequestOptions<T>> => ({\n      ...opts,\n      body: new MultipartBody(form) as any,\n    }),\n    getDefaultAgent: (url: string) => undefined,\n    fileFromPath: () => {\n      throw new Error(\n        'The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/groq/groq-typescript#file-uploads',\n      );\n    },\n    isFsReadStream: (value: any) => false,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { castToError, Headers } from './core';\n\nexport class GroqError extends Error {}\n\nexport class APIError<\n  TStatus extends number | undefined = number | undefined,\n  THeaders extends Headers | undefined = Headers | undefined,\n  TError extends Object | undefined = Object | undefined,\n> extends GroqError {\n  /** HTTP status for the response that caused the error */\n  readonly status: TStatus;\n  /** HTTP headers for the response that caused the error */\n  readonly headers: THeaders;\n  /** JSON body of the response that caused the error */\n  readonly error: TError;\n\n  constructor(status: TStatus, error: TError, message: string | undefined, headers: THeaders) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.error = error;\n  }\n\n  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {\n    const msg =\n      error?.message ?\n        typeof error.message === 'string' ?\n          error.message\n        : JSON.stringify(error.message)\n      : error ? JSON.stringify(error)\n      : message;\n\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    if (!status || !headers) {\n      return new APIConnectionError({ message, cause: castToError(errorResponse) });\n    }\n\n    const error = errorResponse as Record<string, any>;\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIUserAbortError extends APIError<undefined, undefined, undefined> {\n  constructor({ message }: { message?: string } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\n\nexport class APIConnectionError extends APIError<undefined, undefined, undefined> {\n  constructor({ message, cause }: { message?: string | undefined; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({ message }: { message?: string } = {}) {\n    super({ message: message ?? 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError<400, Headers> {}\n\nexport class AuthenticationError extends APIError<401, Headers> {}\n\nexport class PermissionDeniedError extends APIError<403, Headers> {}\n\nexport class NotFoundError extends APIError<404, Headers> {}\n\nexport class ConflictError extends APIError<409, Headers> {}\n\nexport class UnprocessableEntityError extends APIError<422, Headers> {}\n\nexport class RateLimitError extends APIError<429, Headers> {}\n\nexport class InternalServerError extends APIError<number, Headers> {}\n","import { ReadableStream, type Response } from '../_shims/index';\nimport { GroqError } from '../error';\n\nimport { APIError } from '../error';\n\ntype Bytes = string | ArrayBuffer | Uint8Array | Buffer | null | undefined;\n\nexport type ServerSentEvent = {\n  event: string | null;\n  data: string;\n  raw: string[];\n};\n\nexport class Stream<Item> implements AsyncIterable<Item> {\n  controller: AbortController;\n\n  constructor(\n    private iterator: () => AsyncIterator<Item>,\n    controller: AbortController,\n  ) {\n    this.controller = controller;\n  }\n\n  static fromSSEResponse<Item>(response: Response, controller: AbortController) {\n    let consumed = false;\n    const decoder = new SSEDecoder();\n\n    async function* iterMessages(): AsyncGenerator<ServerSentEvent, void, unknown> {\n      if (!response.body) {\n        controller.abort();\n        throw new GroqError(`Attempted to iterate over a response with no body`);\n      }\n\n      const lineDecoder = new LineDecoder();\n\n      const iter = readableStreamAsyncIterable<Bytes>(response.body);\n      for await (const chunk of iter) {\n        for (const line of lineDecoder.decode(chunk)) {\n          const sse = decoder.decode(line);\n          if (sse) yield sse;\n        }\n      }\n\n      for (const line of lineDecoder.flush()) {\n        const sse = decoder.decode(line);\n        if (sse) yield sse;\n      }\n    }\n\n    async function* iterator(): AsyncIterator<Item, any, undefined> {\n      if (consumed) {\n        throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n      }\n      consumed = true;\n      let done = false;\n      try {\n        for await (const sse of iterMessages()) {\n          if (done) continue;\n\n          if (sse.data.startsWith('[DONE]')) {\n            done = true;\n            continue;\n          }\n\n          if (sse.event === null || sse.event === 'error') {\n            let data;\n\n            try {\n              data = JSON.parse(sse.data);\n            } catch (e) {\n              console.error(`Could not parse message into JSON:`, sse.data);\n              console.error(`From chunk:`, sse.raw);\n              throw e;\n            }\n\n            if (data && data.error) {\n              throw new APIError(data.error.status_code, data.error, data.error.message, undefined);\n            }\n\n            yield data;\n          }\n        }\n        done = true;\n      } catch (e) {\n        // If the user calls `stream.controller.abort()`, we should exit without throwing.\n        if (e instanceof Error && e.name === 'AbortError') return;\n        throw e;\n      } finally {\n        // If the user `break`s, abort the ongoing request.\n        if (!done) controller.abort();\n      }\n    }\n\n    return new Stream(iterator, controller);\n  }\n\n  /**\n   * Generates a Stream from a newline-separated ReadableStream\n   * where each item is a JSON value.\n   */\n  static fromReadableStream<Item>(readableStream: ReadableStream, controller: AbortController) {\n    let consumed = false;\n\n    async function* iterLines(): AsyncGenerator<string, void, unknown> {\n      const lineDecoder = new LineDecoder();\n\n      const iter = readableStreamAsyncIterable<Bytes>(readableStream);\n      for await (const chunk of iter) {\n        for (const line of lineDecoder.decode(chunk)) {\n          yield line;\n        }\n      }\n\n      for (const line of lineDecoder.flush()) {\n        yield line;\n      }\n    }\n\n    async function* iterator(): AsyncIterator<Item, any, undefined> {\n      if (consumed) {\n        throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n      }\n      consumed = true;\n      let done = false;\n      try {\n        for await (const line of iterLines()) {\n          if (done) continue;\n          if (line) yield JSON.parse(line);\n        }\n        done = true;\n      } catch (e) {\n        // If the user calls `stream.controller.abort()`, we should exit without throwing.\n        if (e instanceof Error && e.name === 'AbortError') return;\n        throw e;\n      } finally {\n        // If the user `break`s, abort the ongoing request.\n        if (!done) controller.abort();\n      }\n    }\n\n    return new Stream(iterator, controller);\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<Item> {\n    return this.iterator();\n  }\n\n  /**\n   * Splits the stream into two streams which can be\n   * independently read from at different speeds.\n   */\n  tee(): [Stream<Item>, Stream<Item>] {\n    const left: Array<Promise<IteratorResult<Item>>> = [];\n    const right: Array<Promise<IteratorResult<Item>>> = [];\n    const iterator = this.iterator();\n\n    const teeIterator = (queue: Array<Promise<IteratorResult<Item>>>): AsyncIterator<Item> => {\n      return {\n        next: () => {\n          if (queue.length === 0) {\n            const result = iterator.next();\n            left.push(result);\n            right.push(result);\n          }\n          return queue.shift()!;\n        },\n      };\n    };\n\n    return [\n      new Stream(() => teeIterator(left), this.controller),\n      new Stream(() => teeIterator(right), this.controller),\n    ];\n  }\n\n  /**\n   * Converts this stream to a newline-separated ReadableStream of\n   * JSON stringified values in the stream\n   * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n   */\n  toReadableStream(): ReadableStream {\n    const self = this;\n    let iter: AsyncIterator<Item>;\n    const encoder = new TextEncoder();\n\n    return new ReadableStream({\n      async start() {\n        iter = self[Symbol.asyncIterator]();\n      },\n      async pull(ctrl) {\n        try {\n          const { value, done } = await iter.next();\n          if (done) return ctrl.close();\n\n          const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n\n          ctrl.enqueue(bytes);\n        } catch (err) {\n          ctrl.error(err);\n        }\n      },\n      async cancel() {\n        await iter.return?.();\n      },\n    });\n  }\n}\n\nclass SSEDecoder {\n  private data: string[];\n  private event: string | null;\n  private chunks: string[];\n\n  constructor() {\n    this.event = null;\n    this.data = [];\n    this.chunks = [];\n  }\n\n  decode(line: string) {\n    if (line.endsWith('\\r')) {\n      line = line.substring(0, line.length - 1);\n    }\n\n    if (!line) {\n      // empty line and we didn't previously encounter any messages\n      if (!this.event && !this.data.length) return null;\n\n      const sse: ServerSentEvent = {\n        event: this.event,\n        data: this.data.join('\\n'),\n        raw: this.chunks,\n      };\n\n      this.event = null;\n      this.data = [];\n      this.chunks = [];\n\n      return sse;\n    }\n\n    this.chunks.push(line);\n\n    if (line.startsWith(':')) {\n      return null;\n    }\n\n    let [fieldname, _, value] = partition(line, ':');\n\n    if (value.startsWith(' ')) {\n      value = value.substring(1);\n    }\n\n    if (fieldname === 'event') {\n      this.event = value;\n    } else if (fieldname === 'data') {\n      this.data.push(value);\n    }\n\n    return null;\n  }\n}\n\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nclass LineDecoder {\n  // prettier-ignore\n  static NEWLINE_CHARS = new Set(['\\n', '\\r', '\\x0b', '\\x0c', '\\x1c', '\\x1d', '\\x1e', '\\x85', '\\u2028', '\\u2029']);\n  static NEWLINE_REGEXP = /\\r\\n|[\\n\\r\\x0b\\x0c\\x1c\\x1d\\x1e\\x85\\u2028\\u2029]/g;\n\n  buffer: string[];\n  trailingCR: boolean;\n  textDecoder: any; // TextDecoder found in browsers; not typed to avoid pulling in either \"dom\" or \"node\" types.\n\n  constructor() {\n    this.buffer = [];\n    this.trailingCR = false;\n  }\n\n  decode(chunk: Bytes): string[] {\n    let text = this.decodeText(chunk);\n\n    if (this.trailingCR) {\n      text = '\\r' + text;\n      this.trailingCR = false;\n    }\n    if (text.endsWith('\\r')) {\n      this.trailingCR = true;\n      text = text.slice(0, -1);\n    }\n\n    if (!text) {\n      return [];\n    }\n\n    const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\n    let lines = text.split(LineDecoder.NEWLINE_REGEXP);\n\n    if (lines.length === 1 && !trailingNewline) {\n      this.buffer.push(lines[0]!);\n      return [];\n    }\n\n    if (this.buffer.length > 0) {\n      lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\n      this.buffer = [];\n    }\n\n    if (!trailingNewline) {\n      this.buffer = [lines.pop() || ''];\n    }\n\n    return lines;\n  }\n\n  decodeText(bytes: Bytes): string {\n    if (bytes == null) return '';\n    if (typeof bytes === 'string') return bytes;\n\n    // Node:\n    if (typeof Buffer !== 'undefined') {\n      if (bytes instanceof Buffer) {\n        return bytes.toString();\n      }\n      if (bytes instanceof Uint8Array) {\n        return Buffer.from(bytes).toString();\n      }\n\n      throw new GroqError(\n        `Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`,\n      );\n    }\n\n    // Browser\n    if (typeof TextDecoder !== 'undefined') {\n      if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n        this.textDecoder ??= new TextDecoder('utf8');\n        return this.textDecoder.decode(bytes);\n      }\n\n      throw new GroqError(\n        `Unexpected: received non-Uint8Array/ArrayBuffer (${\n          (bytes as any).constructor.name\n        }) in a web platform. Please report this error.`,\n      );\n    }\n\n    throw new GroqError(\n      `Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`,\n    );\n  }\n\n  flush(): string[] {\n    if (!this.buffer.length && !this.trailingCR) {\n      return [];\n    }\n\n    const lines = [this.buffer.join('')];\n    this.buffer = [];\n    this.trailingCR = false;\n    return lines;\n  }\n}\n\nfunction partition(str: string, delimiter: string): [string, string, string] {\n  const index = str.indexOf(delimiter);\n  if (index !== -1) {\n    return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n  }\n\n  return [str, '', ''];\n}\n\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function readableStreamAsyncIterable<T>(stream: any): AsyncIterableIterator<T> {\n  if (stream[Symbol.asyncIterator]) return stream;\n\n  const reader = stream.getReader();\n  return {\n    async next() {\n      try {\n        const result = await reader.read();\n        if (result?.done) reader.releaseLock(); // release lock when stream becomes closed\n        return result;\n      } catch (e) {\n        reader.releaseLock(); // release lock when stream becomes errored\n        throw e;\n      }\n    },\n    async return() {\n      const cancelPromise = reader.cancel();\n      reader.releaseLock();\n      await cancelPromise;\n      return { done: true, value: undefined };\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n","import { type RequestOptions } from './core';\nimport {\n  FormData,\n  File,\n  type Blob,\n  type FilePropertyBag,\n  getMultipartRequestOptions,\n  type FsReadStream,\n  isFsReadStream,\n} from './_shims/index';\nimport { MultipartBody } from './_shims/MultipartBody';\nexport { fileFromPath } from './_shims/index';\n\ntype BlobLikePart = string | ArrayBuffer | ArrayBufferView | BlobLike | Uint8Array | DataView;\nexport type BlobPart = string | ArrayBuffer | ArrayBufferView | Blob | Uint8Array | DataView;\n\n/**\n * Typically, this is a native \"File\" class.\n *\n * We provide the {@link toFile} utility to convert a variety of objects\n * into the File class.\n *\n * For convenience, you can also pass a fetch Response, or in Node,\n * the result of fs.createReadStream().\n */\nexport type Uploadable = FileLike | ResponseLike | FsReadStream;\n\n/**\n * Intended to match web.Blob, node.Blob, node-fetch.Blob, etc.\n */\nexport interface BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size) */\n  readonly size: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type) */\n  readonly type: string;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/text) */\n  text(): Promise<string>;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/slice) */\n  slice(start?: number, end?: number): BlobLike;\n  // unfortunately @types/node-fetch@^2.6.4 doesn't type the arrayBuffer method\n}\n\n/**\n * Intended to match web.File, node.File, node-fetch.File, etc.\n */\nexport interface FileLike extends BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/lastModified) */\n  readonly lastModified: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/name) */\n  readonly name: string;\n}\n\n/**\n * Intended to match web.Response, node.Response, node-fetch.Response, etc.\n */\nexport interface ResponseLike {\n  url: string;\n  blob(): Promise<BlobLike>;\n}\n\nexport const isResponseLike = (value: any): value is ResponseLike =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.url === 'string' &&\n  typeof value.blob === 'function';\n\nexport const isFileLike = (value: any): value is FileLike =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.name === 'string' &&\n  typeof value.lastModified === 'number' &&\n  isBlobLike(value);\n\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value: any): value is BlobLike & { arrayBuffer(): Promise<ArrayBuffer> } =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.size === 'number' &&\n  typeof value.type === 'string' &&\n  typeof value.text === 'function' &&\n  typeof value.slice === 'function' &&\n  typeof value.arrayBuffer === 'function';\n\nexport const isUploadable = (value: any): value is Uploadable => {\n  return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n\nexport type ToFileInput = Uploadable | Exclude<BlobLikePart, string> | AsyncIterable<BlobLikePart>;\n\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(\n  value: ToFileInput | PromiseLike<ToFileInput>,\n  name?: string | null | undefined,\n  options?: FilePropertyBag | undefined,\n): Promise<FileLike> {\n  // If it's a promise, resolve it.\n  value = await value;\n\n  // If we've been given a `File` we don't need to do anything\n  if (isFileLike(value)) {\n    return value;\n  }\n\n  if (isResponseLike(value)) {\n    const blob = await value.blob();\n    name ||= new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file';\n\n    // we need to convert the `Blob` into an array buffer because the `Blob` class\n    // that `node-fetch` defines is incompatible with the web standard which results\n    // in `new File` interpreting it as a string instead of binary data.\n    const data = isBlobLike(blob) ? [(await blob.arrayBuffer()) as any] : [blob];\n\n    return new File(data, name, options);\n  }\n\n  const bits = await getBytes(value);\n\n  name ||= getName(value) ?? 'unknown_file';\n\n  if (!options?.type) {\n    const type = (bits[0] as any)?.type;\n    if (typeof type === 'string') {\n      options = { ...options, type };\n    }\n  }\n\n  return new File(bits, name, options);\n}\n\nasync function getBytes(value: ToFileInput): Promise<Array<BlobPart>> {\n  let parts: Array<BlobPart> = [];\n  if (\n    typeof value === 'string' ||\n    ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n    value instanceof ArrayBuffer\n  ) {\n    parts.push(value);\n  } else if (isBlobLike(value)) {\n    parts.push(await value.arrayBuffer());\n  } else if (\n    isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n  ) {\n    for await (const chunk of value) {\n      parts.push(chunk as BlobPart); // TODO, consider validating?\n    }\n  } else {\n    throw new Error(\n      `Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n        ?.name}; props: ${propsForError(value)}`,\n    );\n  }\n\n  return parts;\n}\n\nfunction propsForError(value: any): string {\n  const props = Object.getOwnPropertyNames(value);\n  return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\n\nfunction getName(value: any): string | undefined {\n  return (\n    getStringFromMaybeBuffer(value.name) ||\n    getStringFromMaybeBuffer(value.filename) ||\n    // For fs.ReadStream\n    getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop()\n  );\n}\n\nconst getStringFromMaybeBuffer = (x: string | Buffer | unknown): string | undefined => {\n  if (typeof x === 'string') return x;\n  if (typeof Buffer !== 'undefined' && x instanceof Buffer) return String(x);\n  return undefined;\n};\n\nconst isAsyncIterableIterator = (value: any): value is AsyncIterableIterator<unknown> =>\n  value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\n\nexport const isMultipartBody = (body: any): body is MultipartBody =>\n  body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async <T = Record<string, unknown>>(\n  opts: RequestOptions<T>,\n): Promise<RequestOptions<T | MultipartBody>> => {\n  if (!hasUploadableValue(opts.body)) return opts;\n\n  const form = await createForm(opts.body);\n  return getMultipartRequestOptions(form, opts);\n};\n\nexport const multipartFormRequestOptions = async <T = Record<string, unknown>>(\n  opts: RequestOptions<T>,\n): Promise<RequestOptions<T | MultipartBody>> => {\n  const form = await createForm(opts.body);\n  return getMultipartRequestOptions(form, opts);\n};\n\nexport const createForm = async <T = Record<string, unknown>>(body: T | undefined): Promise<FormData> => {\n  const form = new FormData();\n  await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n  return form;\n};\n\nconst hasUploadableValue = (value: unknown): boolean => {\n  if (isUploadable(value)) return true;\n  if (Array.isArray(value)) return value.some(hasUploadableValue);\n  if (value && typeof value === 'object') {\n    for (const k in value) {\n      if (hasUploadableValue((value as any)[k])) return true;\n    }\n  }\n  return false;\n};\n\nconst addFormValue = async (form: FormData, key: string, value: unknown): Promise<void> => {\n  if (value === undefined) return;\n  if (value == null) {\n    throw new TypeError(\n      `Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`,\n    );\n  }\n\n  // TODO: make nested formats configurable\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n    form.append(key, String(value));\n  } else if (isUploadable(value)) {\n    const file = await toFile(value);\n    form.append(key, file as File);\n  } else if (Array.isArray(value)) {\n    await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n  } else if (typeof value === 'object') {\n    await Promise.all(\n      Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)),\n    );\n  } else {\n    throw new TypeError(\n      `Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`,\n    );\n  }\n};\n","import { VERSION } from './version';\nimport { Stream } from './lib/streaming';\nimport {\n  GroqError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n} from './error';\nimport {\n  kind as shimsKind,\n  type Readable,\n  getDefaultAgent,\n  type Agent,\n  fetch,\n  type RequestInfo,\n  type RequestInit,\n  type Response,\n  type HeadersInit,\n} from './_shims/index';\nexport { type Response };\nimport { BlobLike, isBlobLike, isMultipartBody } from './uploads';\nexport {\n  maybeMultipartFormRequestOptions,\n  multipartFormRequestOptions,\n  createForm,\n  type Uploadable,\n} from './uploads';\n\nexport type Fetch = (url: RequestInfo, init?: RequestInit) => Promise<Response>;\n\ntype PromiseOrValue<T> = T | Promise<T>;\n\ntype APIResponseProps = {\n  response: Response;\n  options: FinalRequestOptions;\n  controller: AbortController;\n};\n\nasync function defaultParseResponse<T>(props: APIResponseProps): Promise<T> {\n  const { response } = props;\n  if (props.options.stream) {\n    debug('response', response.status, response.url, response.headers, response.body);\n\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n\n    if (props.options.__streamClass) {\n      return props.options.__streamClass.fromSSEResponse(response, props.controller) as any;\n    }\n\n    return Stream.fromSSEResponse(response, props.controller) as any;\n  }\n\n  // fetch refuses to read the body when the status code is 204.\n  if (response.status === 204) {\n    return null as T;\n  }\n\n  if (props.options.__binaryResponse) {\n    return response as unknown as T;\n  }\n\n  const contentType = response.headers.get('content-type');\n  const isJSON =\n    contentType?.includes('application/json') || contentType?.includes('application/vnd.api+json');\n  if (isJSON) {\n    const json = await response.json();\n\n    debug('response', response.status, response.url, response.headers, json);\n\n    return json as T;\n  }\n\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n\n  // TODO handle blob, arraybuffer, other content types, etc.\n  return text as unknown as T;\n}\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise<T> extends Promise<T> {\n  private parsedPromise: Promise<T> | undefined;\n\n  constructor(\n    private responsePromise: Promise<APIResponseProps>,\n    private parseResponse: (props: APIResponseProps) => PromiseOrValue<T> = defaultParseResponse,\n  ) {\n    super((resolve) => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null as any);\n    });\n  }\n\n  _thenUnwrap<U>(transform: (data: T, props: APIResponseProps) => U): APIPromise<U> {\n    return new APIPromise(this.responsePromise, async (props) =>\n      transform(await this.parseResponse(props), props),\n    );\n  }\n\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * 👋 Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import … from 'groq-sdk'`:\n   * - `import 'groq-sdk/shims/node'` (if you're running on Node)\n   * - `import 'groq-sdk/shims/web'` (otherwise)\n   */\n  asResponse(): Promise<Response> {\n    return this.responsePromise.then((p) => p.response);\n  }\n  /**\n   * Gets the parsed response data and the raw `Response` instance.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   *\n   * 👋 Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import … from 'groq-sdk'`:\n   * - `import 'groq-sdk/shims/node'` (if you're running on Node)\n   * - `import 'groq-sdk/shims/web'` (otherwise)\n   */\n  async withResponse(): Promise<{ data: T; response: Response }> {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return { data, response };\n  }\n\n  private parse(): Promise<T> {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\n    }\n    return this.parsedPromise;\n  }\n\n  override then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n\n  override catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<T | TResult> {\n    return this.parse().catch(onrejected);\n  }\n\n  override finally(onfinally?: (() => void) | undefined | null): Promise<T> {\n    return this.parse().finally(onfinally);\n  }\n}\n\nexport abstract class APIClient {\n  baseURL: string;\n  maxRetries: number;\n  timeout: number;\n  httpAgent: Agent | undefined;\n\n  private fetch: Fetch;\n  protected idempotencyHeader?: string;\n\n  constructor({\n    baseURL,\n    maxRetries = 2,\n    timeout = 60000, // 1 minute\n    httpAgent,\n    fetch: overriddenFetch,\n  }: {\n    baseURL: string;\n    maxRetries?: number | undefined;\n    timeout: number | undefined;\n    httpAgent: Agent | undefined;\n    fetch: Fetch | undefined;\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n\n    this.fetch = overriddenFetch ?? fetch;\n  }\n\n  protected authHeaders(opts: FinalRequestOptions): Headers {\n    return {};\n  }\n\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  protected defaultHeaders(opts: FinalRequestOptions): Headers {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts),\n    };\n  }\n\n  protected abstract defaultQuery(): DefaultQuery | undefined;\n\n  /**\n   * Override this to add your own headers validation:\n   */\n  protected validateHeaders(headers: Headers, customHeaders: Headers) {}\n\n  protected defaultIdempotencyKey(): string {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n\n  get<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('get', path, opts);\n  }\n\n  post<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('post', path, opts);\n  }\n\n  patch<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('patch', path, opts);\n  }\n\n  put<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('put', path, opts);\n  }\n\n  delete<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('delete', path, opts);\n  }\n\n  private methodRequest<Req, Rsp>(\n    method: HTTPMethod,\n    path: string,\n    opts?: PromiseOrValue<RequestOptions<Req>>,\n  ): APIPromise<Rsp> {\n    return this.request(\n      Promise.resolve(opts).then(async (opts) => {\n        const body =\n          opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n          : opts?.body instanceof DataView ? opts.body\n          : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n          : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n          : opts?.body;\n        return { method, path, ...opts, body };\n      }),\n    );\n  }\n\n  getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    path: string,\n    Page: new (...args: any[]) => PageClass,\n    opts?: RequestOptions<any>,\n  ): PagePromise<PageClass, Item> {\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\n  }\n\n  private calculateContentLength(body: unknown): string | null {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    } else if (ArrayBuffer.isView(body)) {\n      return body.byteLength.toString();\n    }\n\n    return null;\n  }\n\n  buildRequest<Req>(\n    options: FinalRequestOptions<Req>,\n    { retryCount = 0 }: { retryCount?: number } = {},\n  ): { req: RequestInit; url: string; timeout: number } {\n    const { method, path, query, headers: headers = {} } = options;\n\n    const body =\n      ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n        options.body\n      : isMultipartBody(options.body) ? options.body.body\n      : options.body ? JSON.stringify(options.body, null, 2)\n      : null;\n    const contentLength = this.calculateContentLength(body);\n\n    const url = this.buildURL(path!, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    const timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = timeout + 1000;\n    if (\n      typeof (httpAgent as any)?.options?.timeout === 'number' &&\n      minAgentTimeout > ((httpAgent as any).options.timeout ?? 0)\n    ) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      (httpAgent as any).options.timeout = minAgentTimeout;\n    }\n\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n\n    const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n\n    const req: RequestInit = {\n      method,\n      ...(body && { body: body as any }),\n      headers: reqHeaders,\n      ...(httpAgent && { agent: httpAgent }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: options.signal ?? null,\n    };\n\n    return { req, url, timeout };\n  }\n\n  private buildHeaders({\n    options,\n    headers,\n    contentLength,\n    retryCount,\n  }: {\n    options: FinalRequestOptions;\n    headers: Record<string, string | null | undefined>;\n    contentLength: string | null | undefined;\n    retryCount: number;\n  }): Record<string, string> {\n    const reqHeaders: Record<string, string> = {};\n    if (contentLength) {\n      reqHeaders['content-length'] = contentLength;\n    }\n\n    const defaultHeaders = this.defaultHeaders(options);\n    applyHeadersMut(reqHeaders, defaultHeaders);\n    applyHeadersMut(reqHeaders, headers);\n\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && shimsKind !== 'node') {\n      delete reqHeaders['content-type'];\n    }\n\n    // Don't set the retry count header if it was already set or removed through default headers or by the\n    // caller. We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to\n    // account for the removal case.\n    if (\n      getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n      getHeader(headers, 'x-stainless-retry-count') === undefined\n    ) {\n      reqHeaders['x-stainless-retry-count'] = String(retryCount);\n    }\n\n    this.validateHeaders(reqHeaders, headers);\n\n    return reqHeaders;\n  }\n\n  /**\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\n   */\n  protected async prepareOptions(options: FinalRequestOptions): Promise<void> {}\n\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  protected async prepareRequest(\n    request: RequestInit,\n    { url, options }: { url: string; options: FinalRequestOptions },\n  ): Promise<void> {}\n\n  protected parseHeaders(headers: HeadersInit | null | undefined): Record<string, string> {\n    return (\n      !headers ? {}\n      : Symbol.iterator in headers ?\n        Object.fromEntries(Array.from(headers as Iterable<string[]>).map((header) => [...header]))\n      : { ...headers }\n    );\n  }\n\n  protected makeStatusError(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    return APIError.generate(status, error, message, headers);\n  }\n\n  request<Req, Rsp>(\n    options: PromiseOrValue<FinalRequestOptions<Req>>,\n    remainingRetries: number | null = null,\n  ): APIPromise<Rsp> {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n\n  private async makeRequest<Req>(\n    optionsInput: PromiseOrValue<FinalRequestOptions<Req>>,\n    retriesRemaining: number | null,\n  ): Promise<APIResponseProps> {\n    const options = await optionsInput;\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n\n    await this.prepareOptions(options);\n\n    const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n\n    await this.prepareRequest(req, { url, options });\n\n    debug('request', url, options, req.headers);\n\n    if (options.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n\n    if (response instanceof Error) {\n      if (options.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({ cause: response });\n    }\n\n    const responseHeaders = createResponseHeaders(response.headers);\n\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n        debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n\n      const errText = await response.text().catch((e) => castToError(e).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n      const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n\n      debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n\n    return { response, options, controller };\n  }\n\n  requestAPIList<Item = unknown, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n    options: FinalRequestOptions,\n  ): PagePromise<PageClass, Item> {\n    const request = this.makeRequest(options, null);\n    return new PagePromise<PageClass, Item>(this, request, Page);\n  }\n\n  buildURL<Req>(path: string, query: Req | null | undefined): string {\n    const url =\n      isAbsoluteURL(path) ?\n        new URL(path)\n      : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = { ...defaultQuery, ...query } as Req;\n    }\n\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query as Record<string, unknown>);\n    }\n\n    return url.toString();\n  }\n\n  protected stringifyQuery(query: Record<string, unknown>): string {\n    return Object.entries(query)\n      .filter(([_, value]) => typeof value !== 'undefined')\n      .map(([key, value]) => {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n        }\n        if (value === null) {\n          return `${encodeURIComponent(key)}=`;\n        }\n        throw new GroqError(\n          `Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`,\n        );\n      })\n      .join('&');\n  }\n\n  async fetchWithTimeout(\n    url: RequestInfo,\n    init: RequestInit | undefined,\n    ms: number,\n    controller: AbortController,\n  ): Promise<Response> {\n    const { signal, ...options } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n\n    const timeout = setTimeout(() => controller.abort(), ms);\n\n    const fetchOptions = {\n      signal: controller.signal as any,\n      ...options,\n    };\n    if (fetchOptions.method) {\n      // Custom methods like 'patch' need to be uppercased\n      // See https://github.com/nodejs/undici/issues/2294\n      fetchOptions.method = fetchOptions.method.toUpperCase();\n    }\n\n    return (\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n      this.fetch.call(undefined, url, fetchOptions).finally(() => {\n        clearTimeout(timeout);\n      })\n    );\n  }\n\n  private shouldRetry(response: Response): boolean {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n\n    return false;\n  }\n\n  private async retryRequest(\n    options: FinalRequestOptions,\n    retriesRemaining: number,\n    responseHeaders?: Headers | undefined,\n  ): Promise<APIResponseProps> {\n    let timeoutMillis: number | undefined;\n\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders?.['retry-after'];\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      const maxRetries = options.maxRetries ?? this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n\n    return this.makeRequest(options, retriesRemaining - 1);\n  }\n\n  private calculateDefaultRetryTimeoutMillis(retriesRemaining: number, maxRetries: number): number {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n\n    const numRetries = maxRetries - retriesRemaining;\n\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n\n    return sleepSeconds * jitter * 1000;\n  }\n\n  private getUserAgent(): string {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\n\nexport type PageInfo = { url: URL } | { params: Record<string, unknown> | null };\n\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\n  #client: APIClient;\n  protected options: FinalRequestOptions;\n\n  protected response: Response;\n  protected body: unknown;\n\n  constructor(client: APIClient, response: Response, body: unknown, options: FinalRequestOptions) {\n    this.#client = client;\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n\n  /**\n   * @deprecated Use nextPageInfo instead\n   */\n  abstract nextPageParams(): Partial<Record<string, unknown>> | null;\n  abstract nextPageInfo(): PageInfo | null;\n\n  abstract getPaginatedItems(): Item[];\n\n  hasNextPage(): boolean {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n\n  async getNextPage(): Promise<this> {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new GroqError(\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\n      );\n    }\n    const nextOptions = { ...this.options };\n    if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n      nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value as any);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\n  }\n\n  async *iterPages(): AsyncGenerator<this> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page: this = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise<\n    PageClass extends AbstractPage<Item>,\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\n  >\n  extends APIPromise<PageClass>\n  implements AsyncIterable<Item>\n{\n  constructor(\n    client: APIClient,\n    request: Promise<APIResponseProps>,\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n  ) {\n    super(\n      request,\n      async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options),\n    );\n  }\n\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\n\nexport const createResponseHeaders = (\n  headers: Awaited<ReturnType<Fetch>>['headers'],\n): Record<string, string> => {\n  return new Proxy(\n    Object.fromEntries(\n      // @ts-ignore\n      headers.entries(),\n    ),\n    {\n      get(target, name) {\n        const key = name.toString();\n        return target[key.toLowerCase()] || target[key];\n      },\n    },\n  );\n};\n\ntype HTTPMethod = 'get' | 'post' | 'put' | 'patch' | 'delete';\n\nexport type RequestClient = { fetch: Fetch };\nexport type Headers = Record<string, string | null | undefined>;\nexport type DefaultQuery = Record<string, string | undefined>;\nexport type KeysEnum<T> = { [P in keyof Required<T>]: true };\n\nexport type RequestOptions<\n  Req = unknown | Record<string, unknown> | Readable | BlobLike | ArrayBufferView | ArrayBuffer,\n> = {\n  method?: HTTPMethod;\n  path?: string;\n  query?: Req | undefined;\n  body?: Req | null | undefined;\n  headers?: Headers | undefined;\n\n  maxRetries?: number;\n  stream?: boolean | undefined;\n  timeout?: number;\n  httpAgent?: Agent;\n  signal?: AbortSignal | undefined | null;\n  idempotencyKey?: string;\n\n  __binaryRequest?: boolean | undefined;\n  __binaryResponse?: boolean | undefined;\n  __streamClass?: typeof Stream;\n};\n\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys: KeysEnum<RequestOptions> = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n\n  __binaryRequest: true,\n  __binaryResponse: true,\n  __streamClass: true,\n};\n\nexport const isRequestOptions = (obj: unknown): obj is RequestOptions => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    !isEmptyObj(obj) &&\n    Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k))\n  );\n};\n\nexport type FinalRequestOptions<Req = unknown | Record<string, unknown> | Readable | DataView> =\n  RequestOptions<Req> & {\n    method: HTTPMethod;\n    path: string;\n  };\n\ndeclare const Deno: any;\ndeclare const EdgeRuntime: any;\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\ntype PlatformName =\n  | 'MacOS'\n  | 'Linux'\n  | 'Windows'\n  | 'FreeBSD'\n  | 'OpenBSD'\n  | 'iOS'\n  | 'Android'\n  | `Other:${string}`\n  | 'Unknown';\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\ntype PlatformProperties = {\n  'X-Stainless-Lang': 'js';\n  'X-Stainless-Package-Version': string;\n  'X-Stainless-OS': PlatformName;\n  'X-Stainless-Arch': Arch;\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\n  'X-Stainless-Runtime-Version': string;\n};\nconst getPlatformProperties = (): PlatformProperties => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version':\n        typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version,\n    };\n  }\n\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown',\n  };\n};\n\ntype BrowserInfo = {\n  browser: Browser;\n  version: string;\n};\n\ndeclare const navigator: { userAgent: string } | undefined;\n\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo(): BrowserInfo | null {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n\n  // NOTE: The order matters here!\n  const browserPatterns = [\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n  ];\n\n  // Find the FIRST matching browser\n  for (const { key, pattern } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n\n      return { browser: key, version: `${major}.${minor}.${patch}` };\n    }\n  }\n\n  return null;\n}\n\nconst normalizeArch = (arch: string): Arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\n\nconst normalizePlatform = (platform: string): PlatformName => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n\n  platform = platform.toLowerCase();\n\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\n\nlet _platformHeaders: PlatformProperties;\nconst getPlatformHeaders = () => {\n  return (_platformHeaders ??= getPlatformProperties());\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst validatePositiveInteger = (name: string, n: unknown): number => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new GroqError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new GroqError(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(err);\n};\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) throw new GroqError(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env: string): string | undefined => {\n  if (typeof process !== 'undefined') {\n    return process.env?.[env]?.trim() ?? undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return Deno.env?.get?.(env)?.trim();\n  }\n  return undefined;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new GroqError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new GroqError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\n\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\n\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj: Object, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders: Headers, newHeaders: Headers): void {\n  for (const k in newHeaders) {\n    if (!hasOwn(newHeaders, k)) continue;\n    const lowerKey = k.toLowerCase();\n    if (!lowerKey) continue;\n\n    const val = newHeaders[k];\n\n    if (val === null) {\n      delete targetHeaders[lowerKey];\n    } else if (val !== undefined) {\n      targetHeaders[lowerKey] = val;\n    }\n  }\n}\n\nexport function debug(action: string, ...args: any[]) {\n  if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n    console.log(`Groq:DEBUG:${action}`, ...args);\n  }\n}\n\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\n\nexport interface HeadersProtocol {\n  get: (header: string) => string | null | undefined;\n}\nexport type HeadersLike = Record<string, string | string[] | undefined> | HeadersProtocol;\n\nexport const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {\n  return typeof headers?.get === 'function';\n};\n\nexport const getRequiredHeader = (headers: HeadersLike | Headers, header: string): string => {\n  const foundHeader = getHeader(headers, header);\n  if (foundHeader === undefined) {\n    throw new Error(`Could not find ${header} header`);\n  }\n  return foundHeader;\n};\n\nexport const getHeader = (headers: HeadersLike | Headers, header: string): string | undefined => {\n  const lowerCasedHeader = header.toLowerCase();\n  if (isHeadersProtocol(headers)) {\n    // to deal with the case where the header looks like Stainless-Event-Id\n    const intercapsHeader =\n      header[0]?.toUpperCase() +\n      header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n    for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n      const value = headers.get(key);\n      if (value) {\n        return value;\n      }\n    }\n  }\n\n  for (const [key, value] of Object.entries(headers)) {\n    if (key.toLowerCase() === lowerCasedHeader) {\n      if (Array.isArray(value)) {\n        if (value.length <= 1) return value[0];\n        console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n        return value[0];\n      }\n      return value;\n    }\n  }\n\n  return undefined;\n};\n\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str: string | null | undefined): string => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n\n  throw new GroqError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport type { Groq } from './index';\n\nexport class APIResource {\n  protected _client: Groq;\n\n  constructor(client: Groq) {\n    this._client = client;\n  }\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\n\nexport class Completions extends APIResource {}\n\n/**\n * Usage statistics for the completion request.\n */\nexport interface CompletionUsage {\n  /**\n   * Number of tokens in the generated completion.\n   */\n  completion_tokens: number;\n\n  /**\n   * Number of tokens in the prompt.\n   */\n  prompt_tokens: number;\n\n  /**\n   * Total number of tokens used in the request (prompt + completion).\n   */\n  total_tokens: number;\n\n  /**\n   * Time spent generating tokens\n   */\n  completion_time?: number;\n\n  /**\n   * Time spent processing input tokens\n   */\n  prompt_time?: number;\n\n  /**\n   * Time the requests was spent queued\n   */\n  queue_time?: number;\n\n  /**\n   * completion time and prompt time combined\n   */\n  total_time?: number;\n}\n\nexport declare namespace Completions {\n  export { type CompletionUsage as CompletionUsage };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as Core from '../../core';\nimport * as ChatCompletionsAPI from './completions';\nimport * as CompletionsAPI from '../completions';\nimport * as Shared from '../shared';\nimport { Stream } from '../../lib/streaming';\n\nexport class Completions extends APIResource {\n  /**\n   * Creates a model response for the given chat conversation.\n   */\n  create(\n    body: ChatCompletionCreateParamsNonStreaming,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ChatCompletion>;\n  create(\n    body: ChatCompletionCreateParamsStreaming,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Stream<ChatCompletionChunk>>;\n  create(\n    body: ChatCompletionCreateParamsBase,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Stream<ChatCompletionChunk> | ChatCompletion>;\n  create(\n    body: ChatCompletionCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ChatCompletion> | Core.APIPromise<Stream<ChatCompletionChunk>> {\n    return this._client.post('/openai/v1/chat/completions', {\n      body,\n      ...options,\n      stream: body.stream ?? false,\n    }) as Core.APIPromise<ChatCompletion> | Core.APIPromise<Stream<ChatCompletionChunk>>;\n  }\n}\n\n/**\n * Represents a chat completion response returned by model, based on the provided\n * input.\n */\nexport interface ChatCompletion {\n  /**\n   * A unique identifier for the chat completion.\n   */\n  id: string;\n\n  /**\n   * A list of chat completion choices. Can be more than one if `n` is greater\n   * than 1.\n   */\n  choices: Array<ChatCompletion.Choice>;\n\n  /**\n   * The Unix timestamp (in seconds) of when the chat completion was created.\n   */\n  created: number;\n\n  /**\n   * The model used for the chat completion.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always `chat.completion`.\n   */\n  object: 'chat.completion';\n\n  /**\n   * This fingerprint represents the backend configuration that the model runs with.\n   *\n   * Can be used in conjunction with the `seed` request parameter to understand when\n   * backend changes have been made that might impact determinism.\n   */\n  system_fingerprint?: string;\n\n  /**\n   * Usage statistics for the completion request.\n   */\n  usage?: CompletionsAPI.CompletionUsage;\n}\n\nexport namespace ChatCompletion {\n  export interface Choice {\n    /**\n     * The reason the model stopped generating tokens. This will be `stop` if the model\n     * hit a natural stop point or a provided stop sequence, `length` if the maximum\n     * number of tokens specified in the request was reached, `tool_calls` if the model\n     * called a tool, or `function_call` (deprecated) if the model called a function.\n     */\n    finish_reason: 'stop' | 'length' | 'tool_calls' | 'function_call';\n\n    /**\n     * The index of the choice in the list of choices.\n     */\n    index: number;\n\n    /**\n     * Log probability information for the choice.\n     */\n    logprobs: Choice.Logprobs | null;\n\n    /**\n     * A chat completion message generated by the model.\n     */\n    message: ChatCompletionsAPI.ChatCompletionMessage;\n  }\n\n  export namespace Choice {\n    /**\n     * Log probability information for the choice.\n     */\n    export interface Logprobs {\n      /**\n       * A list of message content tokens with log probability information.\n       */\n      content: Array<ChatCompletionsAPI.ChatCompletionTokenLogprob> | null;\n    }\n  }\n}\n\nexport interface ChatCompletionAssistantMessageParam {\n  /**\n   * The role of the messages author, in this case `assistant`.\n   */\n  role: 'assistant';\n\n  /**\n   * The contents of the assistant message. Required unless `tool_calls` or\n   * `function_call` is specified.\n   */\n  content?: string | null;\n\n  /**\n   * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n   * function that should be called, as generated by the model.\n   */\n  function_call?: ChatCompletionAssistantMessageParam.FunctionCall;\n\n  /**\n   * An optional name for the participant. Provides the model information to\n   * differentiate between participants of the same role.\n   */\n  name?: string;\n\n  /**\n   * The tool calls generated by the model, such as function calls.\n   */\n  tool_calls?: Array<ChatCompletionMessageToolCall>;\n}\n\nexport namespace ChatCompletionAssistantMessageParam {\n  /**\n   * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n   * function that should be called, as generated by the model.\n   */\n  export interface FunctionCall {\n    /**\n     * The arguments to call the function with, as generated by the model in JSON\n     * format. Note that the model does not always generate valid JSON, and may\n     * hallucinate parameters not defined by your function schema. Validate the\n     * arguments in your code before calling your function.\n     */\n    arguments?: string;\n\n    /**\n     * The name of the function to call.\n     */\n    name?: string;\n  }\n}\n\n/**\n * Represents a streamed chunk of a chat completion response returned by model,\n * based on the provided input.\n */\nexport interface ChatCompletionChunk {\n  /**\n   * A unique identifier for the chat completion. Each chunk has the same ID.\n   */\n  id: string;\n\n  /**\n   * A list of chat completion choices. Can contain more than one elements if `n` is\n   * greater than 1.\n   */\n  choices: Array<ChatCompletionChunk.Choice>;\n\n  /**\n   * The Unix timestamp (in seconds) of when the chat completion was created. Each\n   * chunk has the same timestamp.\n   */\n  created: number;\n\n  /**\n   * The model to generate the completion.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always `chat.completion.chunk`.\n   */\n  object: 'chat.completion.chunk';\n\n  /**\n   * This fingerprint represents the backend configuration that the model runs with.\n   * Can be used in conjunction with the `seed` request parameter to understand when\n   * backend changes have been made that might impact determinism.\n   */\n  system_fingerprint?: string;\n\n  x_groq?: ChatCompletionChunk.XGroq;\n}\n\nexport namespace ChatCompletionChunk {\n  export interface Choice {\n    /**\n     * A chat completion delta generated by streamed model responses.\n     */\n    delta: Choice.Delta;\n\n    /**\n     * The reason the model stopped generating tokens. This will be `stop` if the model\n     * hit a natural stop point or a provided stop sequence, `length` if the maximum\n     * number of tokens specified in the request was reached, `tool_calls` if the model\n     * called a tool, or `function_call` (deprecated) if the model called a function.\n     */\n    finish_reason: 'stop' | 'length' | 'tool_calls' | 'function_call' | null;\n\n    /**\n     * The index of the choice in the list of choices.\n     */\n    index: number;\n\n    /**\n     * Log probability information for the choice.\n     */\n    logprobs?: Choice.Logprobs | null;\n  }\n\n  export namespace Choice {\n    /**\n     * A chat completion delta generated by streamed model responses.\n     */\n    export interface Delta {\n      /**\n       * The contents of the chunk message.\n       */\n      content?: string | null;\n\n      /**\n       * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n       * function that should be called, as generated by the model.\n       */\n      function_call?: Delta.FunctionCall;\n\n      /**\n       * The model's reasoning for a response. Only available for reasoning models when\n       * requests parameter reasoning_format has value `parsed.\n       */\n      reasoning?: string | null;\n\n      /**\n       * The role of the author of this message.\n       */\n      role?: 'system' | 'user' | 'assistant' | 'tool';\n\n      tool_calls?: Array<Delta.ToolCall>;\n    }\n\n    export namespace Delta {\n      /**\n       * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n       * function that should be called, as generated by the model.\n       */\n      export interface FunctionCall {\n        /**\n         * The arguments to call the function with, as generated by the model in JSON\n         * format. Note that the model does not always generate valid JSON, and may\n         * hallucinate parameters not defined by your function schema. Validate the\n         * arguments in your code before calling your function.\n         */\n        arguments?: string;\n\n        /**\n         * The name of the function to call.\n         */\n        name?: string;\n      }\n\n      export interface ToolCall {\n        index: number;\n\n        /**\n         * The ID of the tool call.\n         */\n        id?: string;\n\n        function?: ToolCall.Function;\n\n        /**\n         * The type of the tool. Currently, only `function` is supported.\n         */\n        type?: 'function';\n      }\n\n      export namespace ToolCall {\n        export interface Function {\n          /**\n           * The arguments to call the function with, as generated by the model in JSON\n           * format. Note that the model does not always generate valid JSON, and may\n           * hallucinate parameters not defined by your function schema. Validate the\n           * arguments in your code before calling your function.\n           */\n          arguments?: string;\n\n          /**\n           * The name of the function to call.\n           */\n          name?: string;\n        }\n      }\n    }\n\n    /**\n     * Log probability information for the choice.\n     */\n    export interface Logprobs {\n      /**\n       * A list of message content tokens with log probability information.\n       */\n      content: Array<ChatCompletionsAPI.ChatCompletionTokenLogprob> | null;\n    }\n  }\n\n  export interface XGroq {\n    /**\n     * A groq request ID which can be used by to refer to a specific request to groq\n     * support Only sent with the first chunk\n     */\n    id?: string;\n\n    /**\n     * An error string indicating why a stream was stopped early\n     */\n    error?: string;\n\n    /**\n     * Usage information for the stream. Only sent in the final chunk\n     */\n    usage?: CompletionsAPI.CompletionUsage;\n  }\n}\n\nexport type ChatCompletionContentPart = ChatCompletionContentPartText | ChatCompletionContentPartImage;\n\nexport interface ChatCompletionContentPartImage {\n  image_url: ChatCompletionContentPartImage.ImageURL;\n\n  /**\n   * The type of the content part.\n   */\n  type: 'image_url';\n}\n\nexport namespace ChatCompletionContentPartImage {\n  export interface ImageURL {\n    /**\n     * Either a URL of the image or the base64 encoded image data.\n     */\n    url: string;\n\n    /**\n     * Specifies the detail level of the image.\n     */\n    detail?: 'auto' | 'low' | 'high';\n  }\n}\n\nexport interface ChatCompletionContentPartText {\n  /**\n   * The text content.\n   */\n  text: string;\n\n  /**\n   * The type of the content part.\n   */\n  type: 'text';\n}\n\n/**\n * Specifying a particular function via `{\"name\": \"my_function\"}` forces the model\n * to call that function.\n */\nexport interface ChatCompletionFunctionCallOption {\n  /**\n   * The name of the function to call.\n   */\n  name: string;\n}\n\n/**\n * @deprecated\n */\nexport interface ChatCompletionFunctionMessageParam {\n  /**\n   * The contents of the function message.\n   */\n  content: string | null;\n\n  /**\n   * The name of the function to call.\n   */\n  name: string;\n\n  /**\n   * The role of the messages author, in this case `function`.\n   */\n  role: 'function';\n}\n\n/**\n * A chat completion message generated by the model.\n */\nexport interface ChatCompletionMessage {\n  /**\n   * The contents of the message.\n   */\n  content: string | null;\n\n  /**\n   * The role of the author of this message.\n   */\n  role: 'assistant';\n\n  /**\n   * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n   * function that should be called, as generated by the model.\n   */\n  function_call?: ChatCompletionMessage.FunctionCall;\n\n  /**\n   * The model's reasoning for a response. Only available for reasoning models when\n   * requests parameter reasoning_format has value `parsed.\n   */\n  reasoning?: string | null;\n\n  /**\n   * The tool calls generated by the model, such as function calls.\n   */\n  tool_calls?: Array<ChatCompletionMessageToolCall>;\n}\n\nexport namespace ChatCompletionMessage {\n  /**\n   * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n   * function that should be called, as generated by the model.\n   */\n  export interface FunctionCall {\n    /**\n     * The arguments to call the function with, as generated by the model in JSON\n     * format. Note that the model does not always generate valid JSON, and may\n     * hallucinate parameters not defined by your function schema. Validate the\n     * arguments in your code before calling your function.\n     */\n    arguments: string;\n\n    /**\n     * The name of the function to call.\n     */\n    name: string;\n  }\n}\n\nexport type ChatCompletionMessageParam =\n  | ChatCompletionSystemMessageParam\n  | ChatCompletionUserMessageParam\n  | ChatCompletionAssistantMessageParam\n  | ChatCompletionToolMessageParam\n  | ChatCompletionFunctionMessageParam;\n\nexport interface ChatCompletionMessageToolCall {\n  /**\n   * The ID of the tool call.\n   */\n  id: string;\n\n  /**\n   * The function that the model called.\n   */\n  function: ChatCompletionMessageToolCall.Function;\n\n  /**\n   * The type of the tool. Currently, only `function` is supported.\n   */\n  type: 'function';\n}\n\nexport namespace ChatCompletionMessageToolCall {\n  /**\n   * The function that the model called.\n   */\n  export interface Function {\n    /**\n     * The arguments to call the function with, as generated by the model in JSON\n     * format. Note that the model does not always generate valid JSON, and may\n     * hallucinate parameters not defined by your function schema. Validate the\n     * arguments in your code before calling your function.\n     */\n    arguments: string;\n\n    /**\n     * The name of the function to call.\n     */\n    name: string;\n  }\n}\n\n/**\n * Specifies a tool the model should use. Use to force the model to call a specific\n * function.\n */\nexport interface ChatCompletionNamedToolChoice {\n  function: ChatCompletionNamedToolChoice.Function;\n\n  /**\n   * The type of the tool. Currently, only `function` is supported.\n   */\n  type: 'function';\n}\n\nexport namespace ChatCompletionNamedToolChoice {\n  export interface Function {\n    /**\n     * The name of the function to call.\n     */\n    name: string;\n  }\n}\n\n/**\n * The role of the author of a message\n */\nexport type ChatCompletionRole = 'system' | 'user' | 'assistant' | 'tool' | 'function';\n\nexport interface ChatCompletionSystemMessageParam {\n  /**\n   * The contents of the system message.\n   */\n  content: string;\n\n  /**\n   * The role of the messages author, in this case `system`.\n   */\n  role: 'system';\n\n  /**\n   * An optional name for the participant. Provides the model information to\n   * differentiate between participants of the same role.\n   */\n  name?: string;\n}\n\nexport interface ChatCompletionTokenLogprob {\n  /**\n   * The token.\n   */\n  token: string;\n\n  /**\n   * A list of integers representing the UTF-8 bytes representation of the token.\n   * Useful in instances where characters are represented by multiple tokens and\n   * their byte representations must be combined to generate the correct text\n   * representation. Can be `null` if there is no bytes representation for the token.\n   */\n  bytes: Array<number> | null;\n\n  /**\n   * The log probability of this token, if it is within the top 20 most likely\n   * tokens. Otherwise, the value `-9999.0` is used to signify that the token is very\n   * unlikely.\n   */\n  logprob: number;\n\n  /**\n   * List of the most likely tokens and their log probability, at this token\n   * position. In rare cases, there may be fewer than the number of requested\n   * `top_logprobs` returned.\n   */\n  top_logprobs: Array<ChatCompletionTokenLogprob.TopLogprob>;\n}\n\nexport namespace ChatCompletionTokenLogprob {\n  export interface TopLogprob {\n    /**\n     * The token.\n     */\n    token: string;\n\n    /**\n     * A list of integers representing the UTF-8 bytes representation of the token.\n     * Useful in instances where characters are represented by multiple tokens and\n     * their byte representations must be combined to generate the correct text\n     * representation. Can be `null` if there is no bytes representation for the token.\n     */\n    bytes: Array<number> | null;\n\n    /**\n     * The log probability of this token, if it is within the top 20 most likely\n     * tokens. Otherwise, the value `-9999.0` is used to signify that the token is very\n     * unlikely.\n     */\n    logprob: number;\n  }\n}\n\nexport interface ChatCompletionTool {\n  function: Shared.FunctionDefinition;\n\n  /**\n   * The type of the tool. Currently, only `function` is supported.\n   */\n  type: 'function';\n}\n\n/**\n * Controls which (if any) tool is called by the model. `none` means the model will\n * not call any tool and instead generates a message. `auto` means the model can\n * pick between generating a message or calling one or more tools. `required` means\n * the model must call one or more tools. Specifying a particular tool via\n * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n * call that tool.\n *\n * `none` is the default when no tools are present. `auto` is the default if tools\n * are present.\n */\nexport type ChatCompletionToolChoiceOption = 'none' | 'auto' | 'required' | ChatCompletionNamedToolChoice;\n\nexport interface ChatCompletionToolMessageParam {\n  /**\n   * The contents of the tool message.\n   */\n  content: string;\n\n  /**\n   * The role of the messages author, in this case `tool`.\n   */\n  role: 'tool';\n\n  /**\n   * Tool call that this message is responding to.\n   */\n  tool_call_id: string;\n}\n\nexport interface ChatCompletionUserMessageParam {\n  /**\n   * The contents of the user message.\n   */\n  content: string | Array<ChatCompletionContentPart>;\n\n  /**\n   * The role of the messages author, in this case `user`.\n   */\n  role: 'user';\n\n  /**\n   * An optional name for the participant. Provides the model information to\n   * differentiate between participants of the same role.\n   */\n  name?: string;\n}\n\nexport type ChatCompletionCreateParams =\n  | ChatCompletionCreateParamsNonStreaming\n  | ChatCompletionCreateParamsStreaming;\n\nexport interface ChatCompletionCreateParamsBase {\n  /**\n   * A list of messages comprising the conversation so far.\n   */\n  messages: Array<ChatCompletionMessageParam>;\n\n  /**\n   * ID of the model to use. For details on which models are compatible with the Chat\n   * API, see available [models](/docs/models)\n   */\n  model: (string & {}) | 'gemma-7b-it' | 'llama3-70b-8192' | 'llama3-8b-8192' | 'mixtral-8x7b-32768';\n\n  /**\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on their\n   * existing frequency in the text so far, decreasing the model's likelihood to\n   * repeat the same line verbatim.\n   */\n  frequency_penalty?: number | null;\n\n  /**\n   * Deprecated in favor of `tool_choice`.\n   *\n   * Controls which (if any) function is called by the model. `none` means the model\n   * will not call a function and instead generates a message. `auto` means the model\n   * can pick between generating a message or calling a function. Specifying a\n   * particular function via `{\"name\": \"my_function\"}` forces the model to call that\n   * function.\n   *\n   * `none` is the default when no functions are present. `auto` is the default if\n   * functions are present.\n   */\n  function_call?: 'none' | 'auto' | 'required' | ChatCompletionFunctionCallOption | null;\n\n  /**\n   * Deprecated in favor of `tools`.\n   *\n   * A list of functions the model may generate JSON inputs for.\n   */\n  functions?: Array<CompletionCreateParams.Function> | null;\n\n  /**\n   * This is not yet supported by any of our models. Modify the likelihood of\n   * specified tokens appearing in the completion.\n   */\n  logit_bias?: Record<string, number> | null;\n\n  /**\n   * This is not yet supported by any of our models. Whether to return log\n   * probabilities of the output tokens or not. If true, returns the log\n   * probabilities of each output token returned in the `content` of `message`.\n   */\n  logprobs?: boolean | null;\n\n  /**\n   * The maximum number of tokens that can be generated in the chat completion. The\n   * total length of input tokens and generated tokens is limited by the model's\n   * context length.\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * Deprecated in favor of `max_completion_tokens`. The maximum number of tokens\n   * that can be generated in the chat completion. The total length of input tokens\n   * and generated tokens is limited by the model's context length.\n   */\n  max_tokens?: number | null;\n\n  /**\n   * How many chat completion choices to generate for each input message. Note that\n   * the current moment, only n=1 is supported. Other values will result in a 400\n   * response.\n   */\n  n?: number | null;\n\n  /**\n   * Whether to enable parallel function calling during tool use.\n   */\n  parallel_tool_calls?: boolean | null;\n\n  /**\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on\n   * whether they appear in the text so far, increasing the model's likelihood to\n   * talk about new topics.\n   */\n  presence_penalty?: number | null;\n\n  /**\n   * Specifies how to output reasoning tokens\n   */\n  reasoning_format?: 'hidden' | 'raw' | 'parsed' | null;\n\n  /**\n   * An object specifying the format that the model must output.\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which guarantees the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message.\n   */\n  response_format?: CompletionCreateParams.ResponseFormat | null;\n\n  /**\n   * If specified, our system will make a best effort to sample deterministically,\n   * such that repeated requests with the same `seed` and parameters should return\n   * the same result. Determinism is not guaranteed, and you should refer to the\n   * `system_fingerprint` response parameter to monitor changes in the backend.\n   */\n  seed?: number | null;\n\n  /**\n   * The service tier to use for the request. Defaults to `on_demand`.\n   *\n   * - `auto` will automatically select the highest tier available within the rate\n   *   limits of your organization.\n   * - `flex` uses the flex tier, which will succeed or fail quickly.\n   */\n  service_tier?: 'auto' | 'on_demand' | 'flex' | null;\n\n  /**\n   * Up to 4 sequences where the API will stop generating further tokens. The\n   * returned text will not contain the stop sequence.\n   */\n  stop?: string | null | Array<string>;\n\n  /**\n   * If set, partial message deltas will be sent. Tokens will be sent as data-only\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\n   * as they become available, with the stream terminated by a `data: [DONE]`\n   * message. [Example code](/docs/text-chat#streaming-a-chat-completion).\n   */\n  stream?: boolean | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic. We generally recommend altering this or top_p but not\n   * both\n   */\n  temperature?: number | null;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tool and instead generates a message. `auto` means the model can\n   * pick between generating a message or calling one or more tools. `required` means\n   * the model must call one or more tools. Specifying a particular tool via\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   *\n   * `none` is the default when no tools are present. `auto` is the default if tools\n   * are present.\n   */\n  tool_choice?: ChatCompletionToolChoiceOption | null;\n\n  /**\n   * A list of tools the model may call. Currently, only functions are supported as a\n   * tool. Use this to provide a list of functions the model may generate JSON inputs\n   * for. A max of 128 functions are supported.\n   */\n  tools?: Array<ChatCompletionTool> | null;\n\n  /**\n   * This is not yet supported by any of our models. An integer between 0 and 20\n   * specifying the number of most likely tokens to return at each token position,\n   * each with an associated log probability. `logprobs` must be set to `true` if\n   * this parameter is used.\n   */\n  top_logprobs?: number | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered. We\n   * generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help us monitor and\n   * detect abuse.\n   */\n  user?: string | null;\n}\n\nexport namespace CompletionCreateParams {\n  /**\n   * @deprecated\n   */\n  export interface Function {\n    /**\n     * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain\n     * underscores and dashes, with a maximum length of 64.\n     */\n    name: string;\n\n    /**\n     * A description of what the function does, used by the model to choose when and\n     * how to call the function.\n     */\n    description?: string;\n\n    /**\n     * The parameters the functions accepts, described as a JSON Schema object. See the\n     * docs on [tool use](/docs/tool-use) for examples, and the\n     * [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for\n     * documentation about the format.\n     *\n     * Omitting `parameters` defines a function with an empty parameter list.\n     */\n    parameters?: Shared.FunctionParameters;\n  }\n\n  /**\n   * An object specifying the format that the model must output.\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which guarantees the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message.\n   */\n  export interface ResponseFormat {\n    /**\n     * Must be one of `text` or `json_object`.\n     */\n    type?: 'text' | 'json_object';\n  }\n}\n\nexport interface ChatCompletionCreateParamsNonStreaming extends ChatCompletionCreateParamsBase {\n  /**\n   * If set, partial message deltas will be sent. Tokens will be sent as data-only\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\n   * as they become available, with the stream terminated by a `data: [DONE]`\n   * message. [Example code](/docs/text-chat#streaming-a-chat-completion).\n   */\n  stream?: false | null;\n}\n\nexport interface ChatCompletionCreateParamsStreaming extends ChatCompletionCreateParamsBase {\n  /**\n   * If set, partial message deltas will be sent. Tokens will be sent as data-only\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\n   * as they become available, with the stream terminated by a `data: [DONE]`\n   * message. [Example code](/docs/text-chat#streaming-a-chat-completion).\n   */\n  stream: true;\n}\n\nexport declare namespace Completions {\n  export {\n    type ChatCompletion as ChatCompletion,\n    type ChatCompletionAssistantMessageParam as ChatCompletionAssistantMessageParam,\n    type ChatCompletionChunk as ChatCompletionChunk,\n    type ChatCompletionContentPart as ChatCompletionContentPart,\n    type ChatCompletionContentPartImage as ChatCompletionContentPartImage,\n    type ChatCompletionContentPartText as ChatCompletionContentPartText,\n    type ChatCompletionFunctionCallOption as ChatCompletionFunctionCallOption,\n    type ChatCompletionFunctionMessageParam as ChatCompletionFunctionMessageParam,\n    type ChatCompletionMessage as ChatCompletionMessage,\n    type ChatCompletionMessageParam as ChatCompletionMessageParam,\n    type ChatCompletionMessageToolCall as ChatCompletionMessageToolCall,\n    type ChatCompletionNamedToolChoice as ChatCompletionNamedToolChoice,\n    type ChatCompletionRole as ChatCompletionRole,\n    type ChatCompletionSystemMessageParam as ChatCompletionSystemMessageParam,\n    type ChatCompletionTokenLogprob as ChatCompletionTokenLogprob,\n    type ChatCompletionTool as ChatCompletionTool,\n    type ChatCompletionToolChoiceOption as ChatCompletionToolChoiceOption,\n    type ChatCompletionToolMessageParam as ChatCompletionToolMessageParam,\n    type ChatCompletionUserMessageParam as ChatCompletionUserMessageParam,\n    type CompletionCreateParams as CompletionCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as CompletionsAPI from './completions';\nimport {\n  ChatCompletion,\n  ChatCompletionAssistantMessageParam,\n  ChatCompletionChunk,\n  ChatCompletionContentPart,\n  ChatCompletionContentPartImage,\n  ChatCompletionContentPartText,\n  ChatCompletionFunctionCallOption,\n  ChatCompletionFunctionMessageParam,\n  ChatCompletionMessage,\n  ChatCompletionMessageParam,\n  ChatCompletionMessageToolCall,\n  ChatCompletionNamedToolChoice,\n  ChatCompletionRole,\n  ChatCompletionSystemMessageParam,\n  ChatCompletionTokenLogprob,\n  ChatCompletionTool,\n  ChatCompletionToolChoiceOption,\n  ChatCompletionToolMessageParam,\n  ChatCompletionUserMessageParam,\n  CompletionCreateParams,\n  Completions,\n} from './completions';\n\nexport class Chat extends APIResource {\n  completions: CompletionsAPI.Completions = new CompletionsAPI.Completions(this._client);\n}\n\nChat.Completions = Completions;\n\nexport declare namespace Chat {\n  export {\n    Completions as Completions,\n    type ChatCompletion as ChatCompletion,\n    type ChatCompletionAssistantMessageParam as ChatCompletionAssistantMessageParam,\n    type ChatCompletionChunk as ChatCompletionChunk,\n    type ChatCompletionContentPart as ChatCompletionContentPart,\n    type ChatCompletionContentPartImage as ChatCompletionContentPartImage,\n    type ChatCompletionContentPartText as ChatCompletionContentPartText,\n    type ChatCompletionFunctionCallOption as ChatCompletionFunctionCallOption,\n    type ChatCompletionFunctionMessageParam as ChatCompletionFunctionMessageParam,\n    type ChatCompletionMessage as ChatCompletionMessage,\n    type ChatCompletionMessageParam as ChatCompletionMessageParam,\n    type ChatCompletionMessageToolCall as ChatCompletionMessageToolCall,\n    type ChatCompletionNamedToolChoice as ChatCompletionNamedToolChoice,\n    type ChatCompletionRole as ChatCompletionRole,\n    type ChatCompletionSystemMessageParam as ChatCompletionSystemMessageParam,\n    type ChatCompletionTokenLogprob as ChatCompletionTokenLogprob,\n    type ChatCompletionTool as ChatCompletionTool,\n    type ChatCompletionToolChoiceOption as ChatCompletionToolChoiceOption,\n    type ChatCompletionToolMessageParam as ChatCompletionToolMessageParam,\n    type ChatCompletionUserMessageParam as ChatCompletionUserMessageParam,\n    type CompletionCreateParams as CompletionCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class Embeddings extends APIResource {\n  /**\n   * Creates an embedding vector representing the input text.\n   */\n  create(\n    body: EmbeddingCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<CreateEmbeddingResponse> {\n    return this._client.post('/openai/v1/embeddings', { body, ...options });\n  }\n}\n\nexport interface CreateEmbeddingResponse {\n  /**\n   * The list of embeddings generated by the model.\n   */\n  data: Array<Embedding>;\n\n  /**\n   * The name of the model used to generate the embedding.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always \"list\".\n   */\n  object: 'list';\n\n  /**\n   * The usage information for the request.\n   */\n  usage: CreateEmbeddingResponse.Usage;\n}\n\nexport namespace CreateEmbeddingResponse {\n  /**\n   * The usage information for the request.\n   */\n  export interface Usage {\n    /**\n     * The number of tokens used by the prompt.\n     */\n    prompt_tokens: number;\n\n    /**\n     * The total number of tokens used by the request.\n     */\n    total_tokens: number;\n  }\n}\n\n/**\n * Represents an embedding vector returned by embedding endpoint.\n */\nexport interface Embedding {\n  /**\n   * The embedding vector, which is a list of floats. The length of vector depends on\n   * the model as listed in the [embedding guide](/docs/guides/embeddings).\n   */\n  embedding: Array<number> | string;\n\n  /**\n   * The index of the embedding in the list of embeddings.\n   */\n  index: number;\n\n  /**\n   * The object type, which is always \"embedding\".\n   */\n  object: 'embedding';\n}\n\nexport interface EmbeddingCreateParams {\n  /**\n   * Input text to embed, encoded as a string or array of tokens. To embed multiple\n   * inputs in a single request, pass an array of strings or array of token arrays.\n   * The input must not exceed the max input tokens for the model, cannot be an empty\n   * string, and any array must be 2048 dimensions or less.\n   */\n  input: string | Array<string>;\n\n  /**\n   * ID of the model to use.\n   */\n  model: (string & {}) | 'nomic-embed-text-v1_5';\n\n  /**\n   * The format to return the embeddings in. Can only be `float` or `base64`.\n   */\n  encoding_format?: 'float' | 'base64';\n\n  /**\n   * A unique identifier representing your end-user, which can help us monitor and\n   * detect abuse.\n   */\n  user?: string | null;\n}\n\nexport declare namespace Embeddings {\n  export {\n    type CreateEmbeddingResponse as CreateEmbeddingResponse,\n    type Embedding as Embedding,\n    type EmbeddingCreateParams as EmbeddingCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as Core from '../../core';\n\nexport class Transcriptions extends APIResource {\n  /**\n   * Transcribes audio into the input language.\n   */\n  create(body: TranscriptionCreateParams, options?: Core.RequestOptions): Core.APIPromise<Transcription> {\n    return this._client.post(\n      '/openai/v1/audio/transcriptions',\n      Core.multipartFormRequestOptions({ body, ...options }),\n    );\n  }\n}\n\n/**\n * Represents a transcription response returned by model, based on the provided\n * input.\n */\nexport interface Transcription {\n  /**\n   * The transcribed text.\n   */\n  text: string;\n}\n\nexport interface TranscriptionCreateParams {\n  /**\n   * The audio file object (not file name) to transcribe, in one of these formats:\n   * flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.\n   */\n  file: Core.Uploadable;\n\n  /**\n   * ID of the model to use. Only `whisper-large-v3` is currently available.\n   */\n  model: (string & {}) | 'whisper-large-v3';\n\n  /**\n   * The language of the input audio. Supplying the input language in\n   * [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will\n   * improve accuracy and latency.\n   */\n  language?:\n    | (string & {})\n    | 'en'\n    | 'zh'\n    | 'de'\n    | 'es'\n    | 'ru'\n    | 'ko'\n    | 'fr'\n    | 'ja'\n    | 'pt'\n    | 'tr'\n    | 'pl'\n    | 'ca'\n    | 'nl'\n    | 'ar'\n    | 'sv'\n    | 'it'\n    | 'id'\n    | 'hi'\n    | 'fi'\n    | 'vi'\n    | 'he'\n    | 'uk'\n    | 'el'\n    | 'ms'\n    | 'cs'\n    | 'ro'\n    | 'da'\n    | 'hu'\n    | 'ta'\n    | 'no'\n    | 'th'\n    | 'ur'\n    | 'hr'\n    | 'bg'\n    | 'lt'\n    | 'la'\n    | 'mi'\n    | 'ml'\n    | 'cy'\n    | 'sk'\n    | 'te'\n    | 'fa'\n    | 'lv'\n    | 'bn'\n    | 'sr'\n    | 'az'\n    | 'sl'\n    | 'kn'\n    | 'et'\n    | 'mk'\n    | 'br'\n    | 'eu'\n    | 'is'\n    | 'hy'\n    | 'ne'\n    | 'mn'\n    | 'bs'\n    | 'kk'\n    | 'sq'\n    | 'sw'\n    | 'gl'\n    | 'mr'\n    | 'pa'\n    | 'si'\n    | 'km'\n    | 'sn'\n    | 'yo'\n    | 'so'\n    | 'af'\n    | 'oc'\n    | 'ka'\n    | 'be'\n    | 'tg'\n    | 'sd'\n    | 'gu'\n    | 'am'\n    | 'yi'\n    | 'lo'\n    | 'uz'\n    | 'fo'\n    | 'ht'\n    | 'ps'\n    | 'tk'\n    | 'nn'\n    | 'mt'\n    | 'sa'\n    | 'lb'\n    | 'my'\n    | 'bo'\n    | 'tl'\n    | 'mg'\n    | 'as'\n    | 'tt'\n    | 'haw'\n    | 'ln'\n    | 'ha'\n    | 'ba'\n    | 'jv'\n    | 'su'\n    | 'yue';\n\n  /**\n   * An optional text to guide the model's style or continue a previous audio\n   * segment. The [prompt](/docs/speech-text) should match the audio language.\n   */\n  prompt?: string;\n\n  /**\n   * The format of the transcript output, in one of these options: `json`, `text`, or\n   * `verbose_json`.\n   */\n  response_format?: 'json' | 'text' | 'verbose_json';\n\n  /**\n   * The sampling temperature, between 0 and 1. Higher values like 0.8 will make the\n   * output more random, while lower values like 0.2 will make it more focused and\n   * deterministic. If set to 0, the model will use\n   * [log probability](https://en.wikipedia.org/wiki/Log_probability) to\n   * automatically increase the temperature until certain thresholds are hit.\n   */\n  temperature?: number;\n\n  /**\n   * The timestamp granularities to populate for this transcription.\n   * `response_format` must be set `verbose_json` to use timestamp granularities.\n   * Either or both of these options are supported: `word`, or `segment`. Note: There\n   * is no additional latency for segment timestamps, but generating word timestamps\n   * incurs additional latency.\n   */\n  timestamp_granularities?: Array<'word' | 'segment'>;\n}\n\nexport declare namespace Transcriptions {\n  export { type Transcription as Transcription, type TranscriptionCreateParams as TranscriptionCreateParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as Core from '../../core';\n\nexport class Translations extends APIResource {\n  /**\n   * Translates audio into English.\n   */\n  create(body: TranslationCreateParams, options?: Core.RequestOptions): Core.APIPromise<Translation> {\n    return this._client.post(\n      '/openai/v1/audio/translations',\n      Core.multipartFormRequestOptions({ body, ...options }),\n    );\n  }\n}\n\nexport interface Translation {\n  text: string;\n}\n\nexport interface TranslationCreateParams {\n  /**\n   * The audio file object (not file name) translate, in one of these formats: flac,\n   * mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.\n   */\n  file: Core.Uploadable;\n\n  /**\n   * ID of the model to use. Only `whisper-large-v3` is currently available.\n   */\n  model: (string & {}) | 'whisper-large-v3';\n\n  /**\n   * An optional text to guide the model's style or continue a previous audio\n   * segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in\n   * English.\n   */\n  prompt?: string;\n\n  /**\n   * The format of the transcript output, in one of these options: `json`, `text`, or\n   * `verbose_json`.\n   */\n  response_format?: 'json' | 'text' | 'verbose_json';\n\n  /**\n   * The sampling temperature, between 0 and 1. Higher values like 0.8 will make the\n   * output more random, while lower values like 0.2 will make it more focused and\n   * deterministic. If set to 0, the model will use\n   * [log probability](https://en.wikipedia.org/wiki/Log_probability) to\n   * automatically increase the temperature until certain thresholds are hit.\n   */\n  temperature?: number;\n}\n\nexport declare namespace Translations {\n  export { type Translation as Translation, type TranslationCreateParams as TranslationCreateParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as TranscriptionsAPI from './transcriptions';\nimport { Transcription, TranscriptionCreateParams, Transcriptions } from './transcriptions';\nimport * as TranslationsAPI from './translations';\nimport { Translation, TranslationCreateParams, Translations } from './translations';\n\nexport class Audio extends APIResource {\n  transcriptions: TranscriptionsAPI.Transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n  translations: TranslationsAPI.Translations = new TranslationsAPI.Translations(this._client);\n}\n\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\n\nexport declare namespace Audio {\n  export {\n    Transcriptions as Transcriptions,\n    type Transcription as Transcription,\n    type TranscriptionCreateParams as TranscriptionCreateParams,\n  };\n\n  export {\n    Translations as Translations,\n    type Translation as Translation,\n    type TranslationCreateParams as TranslationCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class Models extends APIResource {\n  /**\n   * Get a specific model\n   */\n  retrieve(model: string, options?: Core.RequestOptions): Core.APIPromise<Model> {\n    return this._client.get(`/openai/v1/models/${model}`, options);\n  }\n\n  /**\n   * get all available models\n   */\n  list(options?: Core.RequestOptions): Core.APIPromise<ModelListResponse> {\n    return this._client.get('/openai/v1/models', options);\n  }\n\n  /**\n   * Delete a model\n   */\n  delete(model: string, options?: Core.RequestOptions): Core.APIPromise<ModelDeleted> {\n    return this._client.delete(`/openai/v1/models/${model}`, options);\n  }\n}\n\n/**\n * Describes an OpenAI model offering that can be used with the API.\n */\nexport interface Model {\n  /**\n   * The model identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) when the model was created.\n   */\n  created: number;\n\n  /**\n   * The object type, which is always \"model\".\n   */\n  object: 'model';\n\n  /**\n   * The organization that owns the model.\n   */\n  owned_by: string;\n}\n\nexport interface ModelDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: string;\n}\n\nexport interface ModelListResponse {\n  data: Array<Model>;\n\n  object: 'list';\n}\n\nexport declare namespace Models {\n  export {\n    type Model as Model,\n    type ModelDeleted as ModelDeleted,\n    type ModelListResponse as ModelListResponse,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class Batches extends APIResource {\n  /**\n   * Creates and executes a batch from an uploaded file of requests\n   */\n  create(body: BatchCreateParams, options?: Core.RequestOptions): Core.APIPromise<BatchCreateResponse> {\n    return this._client.post('/openai/v1/batches', { body, ...options });\n  }\n\n  /**\n   * Retrieves a batch.\n   */\n  retrieve(batchId: string, options?: Core.RequestOptions): Core.APIPromise<BatchRetrieveResponse> {\n    return this._client.get(`/openai/v1/batches/${batchId}`, options);\n  }\n\n  /**\n   * List your organization's batches.\n   */\n  list(options?: Core.RequestOptions): Core.APIPromise<BatchListResponse> {\n    return this._client.get('/openai/v1/batches', options);\n  }\n}\n\nexport interface BatchCreateResponse {\n  id: string;\n\n  /**\n   * The time frame within which the batch should be processed.\n   */\n  completion_window: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch was created.\n   */\n  created_at: number;\n\n  /**\n   * The API endpoint used by the batch.\n   */\n  endpoint: string;\n\n  /**\n   * The ID of the input file for the batch.\n   */\n  input_file_id: string;\n\n  /**\n   * The object type, which is always `batch`.\n   */\n  object: 'batch';\n\n  /**\n   * The current status of the batch.\n   */\n  status:\n    | 'validating'\n    | 'failed'\n    | 'in_progress'\n    | 'finalizing'\n    | 'completed'\n    | 'expired'\n    | 'cancelling'\n    | 'cancelled';\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch was cancelled.\n   */\n  cancelled_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch started cancelling.\n   */\n  cancelling_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch was completed.\n   */\n  completed_at?: number;\n\n  /**\n   * The ID of the file containing the outputs of requests with errors.\n   */\n  error_file_id?: string;\n\n  errors?: BatchCreateResponse.Errors;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch expired.\n   */\n  expired_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch will expire.\n   */\n  expires_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch failed.\n   */\n  failed_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch started finalizing.\n   */\n  finalizing_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch started processing.\n   */\n  in_progress_at?: number;\n\n  /**\n   * Set of key-value pairs that can be attached to an object. This can be useful for\n   * storing additional information about the object in a structured format.\n   */\n  metadata?: unknown | null;\n\n  /**\n   * The ID of the file containing the outputs of successfully executed requests.\n   */\n  output_file_id?: string;\n\n  /**\n   * The request counts for different statuses within the batch.\n   */\n  request_counts?: BatchCreateResponse.RequestCounts;\n}\n\nexport namespace BatchCreateResponse {\n  export interface Errors {\n    data?: Array<Errors.Data>;\n\n    /**\n     * The object type, which is always `list`.\n     */\n    object?: string;\n  }\n\n  export namespace Errors {\n    export interface Data {\n      /**\n       * An error code identifying the error type.\n       */\n      code?: string;\n\n      /**\n       * The line number of the input file where the error occurred, if applicable.\n       */\n      line?: number | null;\n\n      /**\n       * A human-readable message providing more details about the error.\n       */\n      message?: string;\n\n      /**\n       * The name of the parameter that caused the error, if applicable.\n       */\n      param?: string | null;\n    }\n  }\n\n  /**\n   * The request counts for different statuses within the batch.\n   */\n  export interface RequestCounts {\n    /**\n     * Number of requests that have been completed successfully.\n     */\n    completed: number;\n\n    /**\n     * Number of requests that have failed.\n     */\n    failed: number;\n\n    /**\n     * Total number of requests in the batch.\n     */\n    total: number;\n  }\n}\n\nexport interface BatchRetrieveResponse {\n  id: string;\n\n  /**\n   * The time frame within which the batch should be processed.\n   */\n  completion_window: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch was created.\n   */\n  created_at: number;\n\n  /**\n   * The API endpoint used by the batch.\n   */\n  endpoint: string;\n\n  /**\n   * The ID of the input file for the batch.\n   */\n  input_file_id: string;\n\n  /**\n   * The object type, which is always `batch`.\n   */\n  object: 'batch';\n\n  /**\n   * The current status of the batch.\n   */\n  status:\n    | 'validating'\n    | 'failed'\n    | 'in_progress'\n    | 'finalizing'\n    | 'completed'\n    | 'expired'\n    | 'cancelling'\n    | 'cancelled';\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch was cancelled.\n   */\n  cancelled_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch started cancelling.\n   */\n  cancelling_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch was completed.\n   */\n  completed_at?: number;\n\n  /**\n   * The ID of the file containing the outputs of requests with errors.\n   */\n  error_file_id?: string;\n\n  errors?: BatchRetrieveResponse.Errors;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch expired.\n   */\n  expired_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch will expire.\n   */\n  expires_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch failed.\n   */\n  failed_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch started finalizing.\n   */\n  finalizing_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch started processing.\n   */\n  in_progress_at?: number;\n\n  /**\n   * Set of key-value pairs that can be attached to an object. This can be useful for\n   * storing additional information about the object in a structured format.\n   */\n  metadata?: unknown | null;\n\n  /**\n   * The ID of the file containing the outputs of successfully executed requests.\n   */\n  output_file_id?: string;\n\n  /**\n   * The request counts for different statuses within the batch.\n   */\n  request_counts?: BatchRetrieveResponse.RequestCounts;\n}\n\nexport namespace BatchRetrieveResponse {\n  export interface Errors {\n    data?: Array<Errors.Data>;\n\n    /**\n     * The object type, which is always `list`.\n     */\n    object?: string;\n  }\n\n  export namespace Errors {\n    export interface Data {\n      /**\n       * An error code identifying the error type.\n       */\n      code?: string;\n\n      /**\n       * The line number of the input file where the error occurred, if applicable.\n       */\n      line?: number | null;\n\n      /**\n       * A human-readable message providing more details about the error.\n       */\n      message?: string;\n\n      /**\n       * The name of the parameter that caused the error, if applicable.\n       */\n      param?: string | null;\n    }\n  }\n\n  /**\n   * The request counts for different statuses within the batch.\n   */\n  export interface RequestCounts {\n    /**\n     * Number of requests that have been completed successfully.\n     */\n    completed: number;\n\n    /**\n     * Number of requests that have failed.\n     */\n    failed: number;\n\n    /**\n     * Total number of requests in the batch.\n     */\n    total: number;\n  }\n}\n\nexport interface BatchListResponse {\n  data: Array<BatchListResponse.Data>;\n\n  object: 'list';\n}\n\nexport namespace BatchListResponse {\n  export interface Data {\n    id: string;\n\n    /**\n     * The time frame within which the batch should be processed.\n     */\n    completion_window: string;\n\n    /**\n     * The Unix timestamp (in seconds) for when the batch was created.\n     */\n    created_at: number;\n\n    /**\n     * The API endpoint used by the batch.\n     */\n    endpoint: string;\n\n    /**\n     * The ID of the input file for the batch.\n     */\n    input_file_id: string;\n\n    /**\n     * The object type, which is always `batch`.\n     */\n    object: 'batch';\n\n    /**\n     * The current status of the batch.\n     */\n    status:\n      | 'validating'\n      | 'failed'\n      | 'in_progress'\n      | 'finalizing'\n      | 'completed'\n      | 'expired'\n      | 'cancelling'\n      | 'cancelled';\n\n    /**\n     * The Unix timestamp (in seconds) for when the batch was cancelled.\n     */\n    cancelled_at?: number;\n\n    /**\n     * The Unix timestamp (in seconds) for when the batch started cancelling.\n     */\n    cancelling_at?: number;\n\n    /**\n     * The Unix timestamp (in seconds) for when the batch was completed.\n     */\n    completed_at?: number;\n\n    /**\n     * The ID of the file containing the outputs of requests with errors.\n     */\n    error_file_id?: string;\n\n    errors?: Data.Errors;\n\n    /**\n     * The Unix timestamp (in seconds) for when the batch expired.\n     */\n    expired_at?: number;\n\n    /**\n     * The Unix timestamp (in seconds) for when the batch will expire.\n     */\n    expires_at?: number;\n\n    /**\n     * The Unix timestamp (in seconds) for when the batch failed.\n     */\n    failed_at?: number;\n\n    /**\n     * The Unix timestamp (in seconds) for when the batch started finalizing.\n     */\n    finalizing_at?: number;\n\n    /**\n     * The Unix timestamp (in seconds) for when the batch started processing.\n     */\n    in_progress_at?: number;\n\n    /**\n     * Set of key-value pairs that can be attached to an object. This can be useful for\n     * storing additional information about the object in a structured format.\n     */\n    metadata?: unknown | null;\n\n    /**\n     * The ID of the file containing the outputs of successfully executed requests.\n     */\n    output_file_id?: string;\n\n    /**\n     * The request counts for different statuses within the batch.\n     */\n    request_counts?: Data.RequestCounts;\n  }\n\n  export namespace Data {\n    export interface Errors {\n      data?: Array<Errors.Data>;\n\n      /**\n       * The object type, which is always `list`.\n       */\n      object?: string;\n    }\n\n    export namespace Errors {\n      export interface Data {\n        /**\n         * An error code identifying the error type.\n         */\n        code?: string;\n\n        /**\n         * The line number of the input file where the error occurred, if applicable.\n         */\n        line?: number | null;\n\n        /**\n         * A human-readable message providing more details about the error.\n         */\n        message?: string;\n\n        /**\n         * The name of the parameter that caused the error, if applicable.\n         */\n        param?: string | null;\n      }\n    }\n\n    /**\n     * The request counts for different statuses within the batch.\n     */\n    export interface RequestCounts {\n      /**\n       * Number of requests that have been completed successfully.\n       */\n      completed: number;\n\n      /**\n       * Number of requests that have failed.\n       */\n      failed: number;\n\n      /**\n       * Total number of requests in the batch.\n       */\n      total: number;\n    }\n  }\n}\n\nexport interface BatchCreateParams {\n  /**\n   * The time frame within which the batch should be processed. Currently only `24h`\n   * is supported.\n   */\n  completion_window: '24h';\n\n  /**\n   * The endpoint to be used for all requests in the batch. Currently\n   * `/v1/chat/completions` is supported.\n   */\n  endpoint: '/v1/chat/completions';\n\n  /**\n   * The ID of an uploaded file that contains requests for the new batch.\n   *\n   * See [upload file](/docs/api-reference#files-upload) for how to upload a file.\n   *\n   * Your input file must be formatted as a [JSONL file](/docs/batch), and must be\n   * uploaded with the purpose `batch`. The file can be up to 100 MB in size.\n   */\n  input_file_id: string;\n\n  /**\n   * Optional custom metadata for the batch.\n   */\n  metadata?: Record<string, string> | null;\n}\n\nexport declare namespace Batches {\n  export {\n    type BatchCreateResponse as BatchCreateResponse,\n    type BatchRetrieveResponse as BatchRetrieveResponse,\n    type BatchListResponse as BatchListResponse,\n    type BatchCreateParams as BatchCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class Files extends APIResource {\n  /**\n   * Upload a file that can be used across various endpoints.\n   *\n   * The Batch API only supports `.jsonl` files up to 100 MB in size. The input also\n   * has a specific required [format](/docs/batch).\n   *\n   * Please contact us if you need to increase these storage limits.\n   */\n  create(body: FileCreateParams, options?: Core.RequestOptions): Core.APIPromise<FileCreateResponse> {\n    return this._client.post('/openai/v1/files', Core.multipartFormRequestOptions({ body, ...options }));\n  }\n\n  /**\n   * Returns a list of files.\n   */\n  list(options?: Core.RequestOptions): Core.APIPromise<FileListResponse> {\n    return this._client.get('/openai/v1/files', options);\n  }\n\n  /**\n   * Delete a file.\n   */\n  delete(fileId: string, options?: Core.RequestOptions): Core.APIPromise<FileDeleteResponse> {\n    return this._client.delete(`/openai/v1/files/${fileId}`, options);\n  }\n\n  /**\n   * Returns the contents of the specified file.\n   */\n  content(fileId: string, options?: Core.RequestOptions): Core.APIPromise<string> {\n    return this._client.get(`/openai/v1/files/${fileId}/content`, options);\n  }\n\n  /**\n   * Returns information about a file.\n   */\n  info(fileId: string, options?: Core.RequestOptions): Core.APIPromise<FileInfoResponse> {\n    return this._client.get(`/openai/v1/files/${fileId}`, options);\n  }\n}\n\n/**\n * The `File` object represents a document that has been uploaded.\n */\nexport interface FileCreateResponse {\n  /**\n   * The file identifier, which can be referenced in the API endpoints.\n   */\n  id?: string;\n\n  /**\n   * The size of the file, in bytes.\n   */\n  bytes?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the file was created.\n   */\n  created_at?: number;\n\n  /**\n   * The name of the file.\n   */\n  filename?: string;\n\n  /**\n   * The object type, which is always `file`.\n   */\n  object?: 'file';\n\n  /**\n   * The intended purpose of the file. Supported values are `batch`, and\n   * `batch_output`.\n   */\n  purpose?: 'batch' | 'batch_output';\n}\n\nexport interface FileListResponse {\n  data: Array<FileListResponse.Data>;\n\n  object: 'list';\n}\n\nexport namespace FileListResponse {\n  /**\n   * The `File` object represents a document that has been uploaded.\n   */\n  export interface Data {\n    /**\n     * The file identifier, which can be referenced in the API endpoints.\n     */\n    id?: string;\n\n    /**\n     * The size of the file, in bytes.\n     */\n    bytes?: number;\n\n    /**\n     * The Unix timestamp (in seconds) for when the file was created.\n     */\n    created_at?: number;\n\n    /**\n     * The name of the file.\n     */\n    filename?: string;\n\n    /**\n     * The object type, which is always `file`.\n     */\n    object?: 'file';\n\n    /**\n     * The intended purpose of the file. Supported values are `batch`, and\n     * `batch_output`.\n     */\n    purpose?: 'batch' | 'batch_output';\n  }\n}\n\nexport interface FileDeleteResponse {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'file';\n}\n\nexport type FileContentResponse = string;\n\n/**\n * The `File` object represents a document that has been uploaded.\n */\nexport interface FileInfoResponse {\n  /**\n   * The file identifier, which can be referenced in the API endpoints.\n   */\n  id?: string;\n\n  /**\n   * The size of the file, in bytes.\n   */\n  bytes?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the file was created.\n   */\n  created_at?: number;\n\n  /**\n   * The name of the file.\n   */\n  filename?: string;\n\n  /**\n   * The object type, which is always `file`.\n   */\n  object?: 'file';\n\n  /**\n   * The intended purpose of the file. Supported values are `batch`, and\n   * `batch_output`.\n   */\n  purpose?: 'batch' | 'batch_output';\n}\n\nexport interface FileCreateParams {\n  /**\n   * The File object (not file name) to be uploaded.\n   */\n  file: Core.Uploadable;\n\n  /**\n   * The intended purpose of the uploaded file. Use \"batch\" for\n   * [Batch API](/docs/api-reference#batches).\n   */\n  purpose: 'batch';\n}\n\nexport declare namespace Files {\n  export {\n    type FileCreateResponse as FileCreateResponse,\n    type FileListResponse as FileListResponse,\n    type FileDeleteResponse as FileDeleteResponse,\n    type FileContentResponse as FileContentResponse,\n    type FileInfoResponse as FileInfoResponse,\n    type FileCreateParams as FileCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { type Agent } from './_shims/index';\nimport * as Core from './core';\nimport * as Errors from './error';\nimport * as Uploads from './uploads';\nimport * as API from './resources/index';\nimport {\n  BatchCreateParams,\n  BatchCreateResponse,\n  BatchListResponse,\n  BatchRetrieveResponse,\n  Batches,\n} from './resources/batches';\nimport { CompletionUsage, Completions } from './resources/completions';\nimport {\n  CreateEmbeddingResponse,\n  Embedding,\n  EmbeddingCreateParams,\n  Embeddings,\n} from './resources/embeddings';\nimport {\n  FileContentResponse,\n  FileCreateParams,\n  FileCreateResponse,\n  FileDeleteResponse,\n  FileInfoResponse,\n  FileListResponse,\n  Files,\n} from './resources/files';\nimport { Model, ModelDeleted, ModelListResponse, Models } from './resources/models';\nimport { Audio } from './resources/audio/audio';\nimport { Chat } from './resources/chat/chat';\n\nexport interface ClientOptions {\n  /**\n   * Defaults to process.env['GROQ_API_KEY'].\n   */\n  apiKey?: string | undefined;\n\n  /**\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\n   *\n   * Defaults to process.env['GROQ_BASE_URL'].\n   */\n  baseURL?: string | null | undefined;\n\n  /**\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\n   * from the server before timing out a single request.\n   *\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\n   * much longer than this timeout before the promise succeeds or fails.\n   */\n  timeout?: number | undefined;\n\n  /**\n   * An HTTP agent used to manage HTTP(S) connections.\n   *\n   * If not provided, an agent will be constructed by default in the Node.js environment,\n   * otherwise no agent is used.\n   */\n  httpAgent?: Agent | undefined;\n\n  /**\n   * Specify a custom `fetch` function implementation.\n   *\n   * If not provided, we use `node-fetch` on Node.js and otherwise expect that `fetch` is\n   * defined globally.\n   */\n  fetch?: Core.Fetch | undefined;\n\n  /**\n   * The maximum number of times that the client will retry a request in case of a\n   * temporary failure, like a network error or a 5XX error from the server.\n   *\n   * @default 2\n   */\n  maxRetries?: number | undefined;\n\n  /**\n   * Default headers to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * header to `undefined` or `null` in request options.\n   */\n  defaultHeaders?: Core.Headers | undefined;\n\n  /**\n   * Default query parameters to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * param to `undefined` in request options.\n   */\n  defaultQuery?: Core.DefaultQuery | undefined;\n\n  /**\n   * By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   * Only set this option to `true` if you understand the risks and have appropriate mitigations in place.\n   */\n  dangerouslyAllowBrowser?: boolean | undefined;\n}\n\n/**\n * API Client for interfacing with the Groq API.\n */\nexport class Groq extends Core.APIClient {\n  apiKey: string;\n\n  private _options: ClientOptions;\n\n  /**\n   * API Client for interfacing with the Groq API.\n   *\n   * @param {string | undefined} [opts.apiKey=process.env['GROQ_API_KEY'] ?? undefined]\n   * @param {string} [opts.baseURL=process.env['GROQ_BASE_URL'] ?? https://api.groq.com] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=1 minute] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor({\n    baseURL = Core.readEnv('GROQ_BASE_URL'),\n    apiKey = Core.readEnv('GROQ_API_KEY'),\n    ...opts\n  }: ClientOptions = {}) {\n    if (apiKey === undefined) {\n      throw new Errors.GroqError(\n        \"The GROQ_API_KEY environment variable is missing or empty; either provide it, or instantiate the Groq client with an apiKey option, like new Groq({ apiKey: 'My API Key' }).\",\n      );\n    }\n\n    const options: ClientOptions = {\n      apiKey,\n      ...opts,\n      baseURL: baseURL || `https://api.groq.com`,\n    };\n\n    if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n      throw new Errors.GroqError(\n        \"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew Groq({ apiKey, dangerouslyAllowBrowser: true })\",\n      );\n    }\n\n    super({\n      baseURL: options.baseURL!,\n      timeout: options.timeout ?? 60000 /* 1 minute */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch,\n    });\n\n    this._options = options;\n\n    this.apiKey = apiKey;\n  }\n\n  completions: API.Completions = new API.Completions(this);\n  chat: API.Chat = new API.Chat(this);\n  embeddings: API.Embeddings = new API.Embeddings(this);\n  audio: API.Audio = new API.Audio(this);\n  models: API.Models = new API.Models(this);\n  batches: API.Batches = new API.Batches(this);\n  files: API.Files = new API.Files(this);\n\n  protected override defaultQuery(): Core.DefaultQuery | undefined {\n    return this._options.defaultQuery;\n  }\n\n  protected override defaultHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return {\n      ...super.defaultHeaders(opts),\n      ...this._options.defaultHeaders,\n    };\n  }\n\n  protected override authHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return { Authorization: `Bearer ${this.apiKey}` };\n  }\n\n  static Groq = this;\n  static DEFAULT_TIMEOUT = 60000; // 1 minute\n\n  static GroqError = Errors.GroqError;\n  static APIError = Errors.APIError;\n  static APIConnectionError = Errors.APIConnectionError;\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\n  static APIUserAbortError = Errors.APIUserAbortError;\n  static NotFoundError = Errors.NotFoundError;\n  static ConflictError = Errors.ConflictError;\n  static RateLimitError = Errors.RateLimitError;\n  static BadRequestError = Errors.BadRequestError;\n  static AuthenticationError = Errors.AuthenticationError;\n  static InternalServerError = Errors.InternalServerError;\n  static PermissionDeniedError = Errors.PermissionDeniedError;\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\n\n  static toFile = Uploads.toFile;\n  static fileFromPath = Uploads.fileFromPath;\n}\n\nGroq.Completions = Completions;\nGroq.Chat = Chat;\nGroq.Embeddings = Embeddings;\nGroq.Audio = Audio;\nGroq.Models = Models;\nGroq.Batches = Batches;\nGroq.Files = Files;\nexport declare namespace Groq {\n  export type RequestOptions = Core.RequestOptions;\n\n  export { Completions as Completions, type CompletionUsage as CompletionUsage };\n\n  export { Chat as Chat };\n\n  export {\n    Embeddings as Embeddings,\n    type CreateEmbeddingResponse as CreateEmbeddingResponse,\n    type Embedding as Embedding,\n    type EmbeddingCreateParams as EmbeddingCreateParams,\n  };\n\n  export { Audio as Audio };\n\n  export {\n    Models as Models,\n    type Model as Model,\n    type ModelDeleted as ModelDeleted,\n    type ModelListResponse as ModelListResponse,\n  };\n\n  export {\n    Batches as Batches,\n    type BatchCreateResponse as BatchCreateResponse,\n    type BatchRetrieveResponse as BatchRetrieveResponse,\n    type BatchListResponse as BatchListResponse,\n    type BatchCreateParams as BatchCreateParams,\n  };\n\n  export {\n    Files as Files,\n    type FileCreateResponse as FileCreateResponse,\n    type FileListResponse as FileListResponse,\n    type FileDeleteResponse as FileDeleteResponse,\n    type FileContentResponse as FileContentResponse,\n    type FileInfoResponse as FileInfoResponse,\n    type FileCreateParams as FileCreateParams,\n  };\n\n  export type ErrorObject = API.ErrorObject;\n  export type FunctionDefinition = API.FunctionDefinition;\n  export type FunctionParameters = API.FunctionParameters;\n}\n\nexport { toFile, fileFromPath } from './uploads';\nexport {\n  GroqError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError,\n} from './error';\n\nexport default Groq;\n","export function parseIntWithdefault(input: string | undefined, defaultNum: number) {\r\n\tif (!input) {\r\n\t\treturn defaultNum\r\n\t}\r\n\tconst raw = parseInt(input)\r\n\treturn isNaN(raw) ? defaultNum : raw\r\n}","import Groq from 'groq-sdk'\r\nimport { ConversationBlock, IMemoryProvider, ProviderConfiguration } from './MemoryProviders'\r\nimport { parseIntWithdefault as parseIntWithDefault } from '../util/parseIntUtil'\r\n\r\nexport default class GroqProvider implements IMemoryProvider {\r\n\tprivate api: Groq\r\n\tprivate lastToken: string = ''\r\n\r\n\tconstructor() {\r\n\t\tthis.api = new Groq({\r\n\t\t\tapiKey: '',\r\n\t\t\tdangerouslyAllowBrowser: true\r\n\t\t})\r\n\t}\r\n\r\n\tasync init() {\r\n\r\n\t}\r\n\r\n\tasync send(setting: Record<string, any>, history: ConversationBlock[], onUpdate: (conversation: ConversationBlock) => void, playerName: string): Promise<void> {\r\n\t\ttry {\r\n\t\t\tif (this.lastToken !== setting.Token) {\r\n\t\t\t\tthis.lastToken = setting.Token\r\n\t\t\t\tthis.api = new Groq({\r\n\t\t\t\t\tapiKey: setting.Token,\r\n\t\t\t\t\tdangerouslyAllowBrowser: true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\thistory = [...history]\r\n\r\n\t\t\tfor (const index in history) {\r\n\t\t\t\tif (history[index].meta) {\r\n\t\t\t\t\tdelete history[index].meta\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst start = Date.now()\r\n\t\t\tconst chatCompletion = await this.api.chat.completions.create({\r\n\t\t\t\t'messages': history,\r\n\t\t\t\t'model': setting.Model,\r\n\t\t\t\t'temperature': setting.Temperature || 1,\r\n\t\t\t\t'max_completion_tokens': parseIntWithDefault(setting['Max Tokens'], 512),\r\n\t\t\t\t'top_p': 1,\r\n\t\t\t\t'stream': true,\r\n\t\t\t\t'stop': `${playerName}: `\r\n\t\t\t})\r\n\r\n\t\t\tlet target = ''\r\n\t\t\t\r\n\t\t\tfor await (const chunk of chatCompletion) {\r\n\t\t\t\ttarget += chunk.choices[0]?.delta?.content || ''\r\n\t\t\t\tconst usage = chunk.x_groq?.usage\r\n\t\t\t\tonUpdate({\r\n\t\t\t\t\trole: 'assistant',\r\n\t\t\t\t\tcontent: target,\r\n\t\t\t\t\tmeta: usage ? {\r\n\t\t\t\t\t\tcompletionTokens: usage.total_tokens - usage.prompt_tokens,\r\n\t\t\t\t\t\tcontextTokens: usage.prompt_tokens,\r\n\t\t\t\t\t\tdelay: (Date.now() - start) / 1000\r\n\t\t\t\t\t} : undefined\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tconsole.log('error', e)\r\n\t\t\tconsole.log(e instanceof Groq.APIError)\r\n\t\t\tif (e instanceof Groq.APIError) {\r\n\t\t\t\tthrow new Error(`${e.error.error.code}: ${e.error.error.message}`)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow e\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trenderControls(): Record<string, ProviderConfiguration> {\r\n\t\treturn {\r\n\t\t\tToken: {\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\t// description: 'This is never saved for security reasons.'\r\n\t\t\t},\r\n\t\t\tModel: {\r\n\t\t\t\ttype: 'select',\r\n\t\t\t\tdefault: 'mistral-saba-24b',\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t'mistral-saba-24b', \r\n\t\t\t\t\t'gemma2-9b-it',\r\n\t\t\t\t\t'llama-3.1-8b-instant', \r\n\t\t\t\t\t'llama-3.3-70b-versatile'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t'Max Tokens': {\r\n\t\t\t\ttype: 'number',\r\n\t\t\t\tdefault: 512,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 4096\r\n\t\t\t},\r\n\t\t\tTemperature: {\r\n\t\t\t\ttype: 'range',\r\n\t\t\t\tdefault: 1,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 2,\r\n\t\t\t\tstep: 0.1\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n","import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n","import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n","import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n","import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n","export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n","import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {GoogleGenAIOptions} from './client.js';\n\nlet _defaultBaseGeminiUrl: string | undefined = undefined;\nlet _defaultBaseVertexUrl: string | undefined = undefined;\n\n/**\n * Parameters for setting the base URLs for the Gemini API and Vertex AI API.\n */\nexport interface BaseUrlParameters {\n  geminiUrl?: string;\n  vertexUrl?: string;\n}\n\n/**\n * Overrides the base URLs for the Gemini API and Vertex AI API.\n *\n * @remarks This function should be called before initializing the SDK. If the\n * base URLs are set after initializing the SDK, the base URLs will not be\n * updated. Base URLs provided in the HttpOptions will also take precedence over\n * URLs set here.\n *\n * @example\n * ```ts\n * import {GoogleGenAI, setDefaultBaseUrls} from '@google/genai';\n * // Override the base URL for the Gemini API.\n * setDefaultBaseUrls({geminiUrl:'https://gemini.google.com'});\n *\n * // Override the base URL for the Vertex AI API.\n * setDefaultBaseUrls({vertexUrl: 'https://vertexai.googleapis.com'});\n *\n * const ai = new GoogleGenAI({apiKey: 'GEMINI_API_KEY'});\n * ```\n */\nexport function setDefaultBaseUrls(baseUrlParams: BaseUrlParameters) {\n  _defaultBaseGeminiUrl = baseUrlParams.geminiUrl;\n  _defaultBaseVertexUrl = baseUrlParams.vertexUrl;\n}\n\n/**\n * Returns the default base URLs for the Gemini API and Vertex AI API.\n */\nexport function getDefaultBaseUrls(): BaseUrlParameters {\n  return {\n    geminiUrl: _defaultBaseGeminiUrl,\n    vertexUrl: _defaultBaseVertexUrl,\n  };\n}\n\n/**\n * Returns the default base URL based on the following priority:\n *   1. Base URLs set via HttpOptions.\n *   2. Base URLs set via the latest call to setDefaultBaseUrls.\n *   3. Base URLs set via environment variables.\n */\nexport function getBaseUrl(\n  options: GoogleGenAIOptions,\n  vertexBaseUrlFromEnv: string | undefined,\n  geminiBaseUrlFromEnv: string | undefined,\n): string | undefined {\n  if (!options.httpOptions?.baseUrl) {\n    const defaultBaseUrls = getDefaultBaseUrls();\n    if (options.vertexai) {\n      return defaultBaseUrls.vertexUrl ?? vertexBaseUrlFromEnv;\n    } else {\n      return defaultBaseUrls.geminiUrl ?? geminiBaseUrlFromEnv;\n    }\n  }\n\n  return options.httpOptions.baseUrl;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class BaseModule {}\n\nexport function formatMap(\n  templateString: string,\n  valueMap: Record<string, unknown>,\n): string {\n  // Use a regular expression to find all placeholders in the template string\n  const regex = /\\{([^}]+)\\}/g;\n\n  // Replace each placeholder with its corresponding value from the valueMap\n  return templateString.replace(regex, (match, key) => {\n    if (Object.prototype.hasOwnProperty.call(valueMap, key)) {\n      const value = valueMap[key];\n      // Convert the value to a string if it's not a string already\n      return value !== undefined && value !== null ? String(value) : '';\n    } else {\n      // Handle missing keys\n      throw new Error(`Key '${key}' not found in valueMap.`);\n    }\n  });\n}\n\nexport function setValueByPath(\n  data: Record<string, unknown>,\n  keys: string[],\n  value: unknown,\n): void {\n  for (let i = 0; i < keys.length - 1; i++) {\n    const key = keys[i];\n\n    if (key.endsWith('[]')) {\n      const keyName = key.slice(0, -2);\n      if (!(keyName in data)) {\n        if (Array.isArray(value)) {\n          data[keyName] = Array.from({length: value.length}, () => ({}));\n        } else {\n          throw new Error(`Value must be a list given an array path ${key}`);\n        }\n      }\n\n      if (Array.isArray(data[keyName])) {\n        const arrayData = data[keyName] as Array<unknown>;\n\n        if (Array.isArray(value)) {\n          for (let j = 0; j < arrayData.length; j++) {\n            const entry = arrayData[j] as Record<string, unknown>;\n            setValueByPath(entry, keys.slice(i + 1), value[j]);\n          }\n        } else {\n          for (const d of arrayData) {\n            setValueByPath(\n              d as Record<string, unknown>,\n              keys.slice(i + 1),\n              value,\n            );\n          }\n        }\n      }\n      return;\n    } else if (key.endsWith('[0]')) {\n      const keyName = key.slice(0, -3);\n      if (!(keyName in data)) {\n        data[keyName] = [{}];\n      }\n      const arrayData = (data as Record<string, unknown>)[keyName];\n      setValueByPath(\n        (arrayData as Array<Record<string, unknown>>)[0],\n        keys.slice(i + 1),\n        value,\n      );\n      return;\n    }\n\n    if (!data[key] || typeof data[key] !== 'object') {\n      data[key] = {};\n    }\n\n    data = data[key] as Record<string, unknown>;\n  }\n\n  const keyToSet = keys[keys.length - 1];\n  const existingData = data[keyToSet];\n\n  if (existingData !== undefined) {\n    if (\n      !value ||\n      (typeof value === 'object' && Object.keys(value).length === 0)\n    ) {\n      return;\n    }\n\n    if (value === existingData) {\n      return;\n    }\n\n    if (\n      typeof existingData === 'object' &&\n      typeof value === 'object' &&\n      existingData !== null &&\n      value !== null\n    ) {\n      Object.assign(existingData, value);\n    } else {\n      throw new Error(`Cannot set value for an existing key. Key: ${keyToSet}`);\n    }\n  } else {\n    data[keyToSet] = value;\n  }\n}\n\nexport function getValueByPath(data: unknown, keys: string[]): unknown {\n  try {\n    if (keys.length === 1 && keys[0] === '_self') {\n      return data;\n    }\n\n    for (let i = 0; i < keys.length; i++) {\n      if (typeof data !== 'object' || data === null) {\n        return undefined;\n      }\n\n      const key = keys[i];\n      if (key.endsWith('[]')) {\n        const keyName = key.slice(0, -2);\n        if (keyName in data) {\n          const arrayData = (data as Record<string, unknown>)[keyName];\n          if (!Array.isArray(arrayData)) {\n            return undefined;\n          }\n          return arrayData.map((d) => getValueByPath(d, keys.slice(i + 1)));\n        } else {\n          return undefined;\n        }\n      } else {\n        data = (data as Record<string, unknown>)[key];\n      }\n    }\n\n    return data;\n  } catch (error) {\n    if (error instanceof TypeError) {\n      return undefined;\n    }\n    throw error;\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport type {ReferenceImageAPIInternal} from './_internal_types.js';\n\n/** Required. Outcome of the code execution. */\nexport enum Outcome {\n  /**\n   * Unspecified status. This value should not be used.\n   */\n  OUTCOME_UNSPECIFIED = 'OUTCOME_UNSPECIFIED',\n  /**\n   * Code execution completed successfully.\n   */\n  OUTCOME_OK = 'OUTCOME_OK',\n  /**\n   * Code execution finished but with a failure. `stderr` should contain the reason.\n   */\n  OUTCOME_FAILED = 'OUTCOME_FAILED',\n  /**\n   * Code execution ran for too long, and was cancelled. There may or may not be a partial output present.\n   */\n  OUTCOME_DEADLINE_EXCEEDED = 'OUTCOME_DEADLINE_EXCEEDED',\n}\n\n/** Required. Programming language of the `code`. */\nexport enum Language {\n  /**\n   * Unspecified language. This value should not be used.\n   */\n  LANGUAGE_UNSPECIFIED = 'LANGUAGE_UNSPECIFIED',\n  /**\n   * Python >= 3.10, with numpy and simpy available.\n   */\n  PYTHON = 'PYTHON',\n}\n\n/** Optional. The type of the data. */\nexport enum Type {\n  /**\n   * Not specified, should not be used.\n   */\n  TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED',\n  /**\n   * OpenAPI string type\n   */\n  STRING = 'STRING',\n  /**\n   * OpenAPI number type\n   */\n  NUMBER = 'NUMBER',\n  /**\n   * OpenAPI integer type\n   */\n  INTEGER = 'INTEGER',\n  /**\n   * OpenAPI boolean type\n   */\n  BOOLEAN = 'BOOLEAN',\n  /**\n   * OpenAPI array type\n   */\n  ARRAY = 'ARRAY',\n  /**\n   * OpenAPI object type\n   */\n  OBJECT = 'OBJECT',\n  /**\n   * Null type\n   */\n  NULL = 'NULL',\n}\n\n/** Required. Harm category. */\nexport enum HarmCategory {\n  /**\n   * The harm category is unspecified.\n   */\n  HARM_CATEGORY_UNSPECIFIED = 'HARM_CATEGORY_UNSPECIFIED',\n  /**\n   * The harm category is hate speech.\n   */\n  HARM_CATEGORY_HATE_SPEECH = 'HARM_CATEGORY_HATE_SPEECH',\n  /**\n   * The harm category is dangerous content.\n   */\n  HARM_CATEGORY_DANGEROUS_CONTENT = 'HARM_CATEGORY_DANGEROUS_CONTENT',\n  /**\n   * The harm category is harassment.\n   */\n  HARM_CATEGORY_HARASSMENT = 'HARM_CATEGORY_HARASSMENT',\n  /**\n   * The harm category is sexually explicit content.\n   */\n  HARM_CATEGORY_SEXUALLY_EXPLICIT = 'HARM_CATEGORY_SEXUALLY_EXPLICIT',\n  /**\n   * Deprecated: Election filter is not longer supported. The harm category is civic integrity.\n   */\n  HARM_CATEGORY_CIVIC_INTEGRITY = 'HARM_CATEGORY_CIVIC_INTEGRITY',\n}\n\n/** Optional. Specify if the threshold is used for probability or severity score. If not specified, the threshold is used for probability score. */\nexport enum HarmBlockMethod {\n  /**\n   * The harm block method is unspecified.\n   */\n  HARM_BLOCK_METHOD_UNSPECIFIED = 'HARM_BLOCK_METHOD_UNSPECIFIED',\n  /**\n   * The harm block method uses both probability and severity scores.\n   */\n  SEVERITY = 'SEVERITY',\n  /**\n   * The harm block method uses the probability score.\n   */\n  PROBABILITY = 'PROBABILITY',\n}\n\n/** Required. The harm block threshold. */\nexport enum HarmBlockThreshold {\n  /**\n   * Unspecified harm block threshold.\n   */\n  HARM_BLOCK_THRESHOLD_UNSPECIFIED = 'HARM_BLOCK_THRESHOLD_UNSPECIFIED',\n  /**\n   * Block low threshold and above (i.e. block more).\n   */\n  BLOCK_LOW_AND_ABOVE = 'BLOCK_LOW_AND_ABOVE',\n  /**\n   * Block medium threshold and above.\n   */\n  BLOCK_MEDIUM_AND_ABOVE = 'BLOCK_MEDIUM_AND_ABOVE',\n  /**\n   * Block only high threshold (i.e. block less).\n   */\n  BLOCK_ONLY_HIGH = 'BLOCK_ONLY_HIGH',\n  /**\n   * Block none.\n   */\n  BLOCK_NONE = 'BLOCK_NONE',\n  /**\n   * Turn off the safety filter.\n   */\n  OFF = 'OFF',\n}\n\n/** The mode of the predictor to be used in dynamic retrieval. */\nexport enum Mode {\n  /**\n   * Always trigger retrieval.\n   */\n  MODE_UNSPECIFIED = 'MODE_UNSPECIFIED',\n  /**\n   * Run retrieval only when system decides it is necessary.\n   */\n  MODE_DYNAMIC = 'MODE_DYNAMIC',\n}\n\n/** Type of auth scheme. */\nexport enum AuthType {\n  AUTH_TYPE_UNSPECIFIED = 'AUTH_TYPE_UNSPECIFIED',\n  /**\n   * No Auth.\n   */\n  NO_AUTH = 'NO_AUTH',\n  /**\n   * API Key Auth.\n   */\n  API_KEY_AUTH = 'API_KEY_AUTH',\n  /**\n   * HTTP Basic Auth.\n   */\n  HTTP_BASIC_AUTH = 'HTTP_BASIC_AUTH',\n  /**\n   * Google Service Account Auth.\n   */\n  GOOGLE_SERVICE_ACCOUNT_AUTH = 'GOOGLE_SERVICE_ACCOUNT_AUTH',\n  /**\n   * OAuth auth.\n   */\n  OAUTH = 'OAUTH',\n  /**\n   * OpenID Connect (OIDC) Auth.\n   */\n  OIDC_AUTH = 'OIDC_AUTH',\n}\n\n/** Output only. The reason why the model stopped generating tokens.\n\n  If empty, the model has not stopped generating the tokens.\n   */\nexport enum FinishReason {\n  /**\n   * The finish reason is unspecified.\n   */\n  FINISH_REASON_UNSPECIFIED = 'FINISH_REASON_UNSPECIFIED',\n  /**\n   * Token generation reached a natural stopping point or a configured stop sequence.\n   */\n  STOP = 'STOP',\n  /**\n   * Token generation reached the configured maximum output tokens.\n   */\n  MAX_TOKENS = 'MAX_TOKENS',\n  /**\n   * Token generation stopped because the content potentially contains safety violations. NOTE: When streaming, [content][] is empty if content filters blocks the output.\n   */\n  SAFETY = 'SAFETY',\n  /**\n   * The token generation stopped because of potential recitation.\n   */\n  RECITATION = 'RECITATION',\n  /**\n   * The token generation stopped because of using an unsupported language.\n   */\n  LANGUAGE = 'LANGUAGE',\n  /**\n   * All other reasons that stopped the token generation.\n   */\n  OTHER = 'OTHER',\n  /**\n   * Token generation stopped because the content contains forbidden terms.\n   */\n  BLOCKLIST = 'BLOCKLIST',\n  /**\n   * Token generation stopped for potentially containing prohibited content.\n   */\n  PROHIBITED_CONTENT = 'PROHIBITED_CONTENT',\n  /**\n   * Token generation stopped because the content potentially contains Sensitive Personally Identifiable Information (SPII).\n   */\n  SPII = 'SPII',\n  /**\n   * The function call generated by the model is invalid.\n   */\n  MALFORMED_FUNCTION_CALL = 'MALFORMED_FUNCTION_CALL',\n  /**\n   * Token generation stopped because generated images have safety violations.\n   */\n  IMAGE_SAFETY = 'IMAGE_SAFETY',\n  /**\n   * The tool call generated by the model is invalid.\n   */\n  UNEXPECTED_TOOL_CALL = 'UNEXPECTED_TOOL_CALL',\n}\n\n/** Output only. Harm probability levels in the content. */\nexport enum HarmProbability {\n  /**\n   * Harm probability unspecified.\n   */\n  HARM_PROBABILITY_UNSPECIFIED = 'HARM_PROBABILITY_UNSPECIFIED',\n  /**\n   * Negligible level of harm.\n   */\n  NEGLIGIBLE = 'NEGLIGIBLE',\n  /**\n   * Low level of harm.\n   */\n  LOW = 'LOW',\n  /**\n   * Medium level of harm.\n   */\n  MEDIUM = 'MEDIUM',\n  /**\n   * High level of harm.\n   */\n  HIGH = 'HIGH',\n}\n\n/** Output only. Harm severity levels in the content. */\nexport enum HarmSeverity {\n  /**\n   * Harm severity unspecified.\n   */\n  HARM_SEVERITY_UNSPECIFIED = 'HARM_SEVERITY_UNSPECIFIED',\n  /**\n   * Negligible level of harm severity.\n   */\n  HARM_SEVERITY_NEGLIGIBLE = 'HARM_SEVERITY_NEGLIGIBLE',\n  /**\n   * Low level of harm severity.\n   */\n  HARM_SEVERITY_LOW = 'HARM_SEVERITY_LOW',\n  /**\n   * Medium level of harm severity.\n   */\n  HARM_SEVERITY_MEDIUM = 'HARM_SEVERITY_MEDIUM',\n  /**\n   * High level of harm severity.\n   */\n  HARM_SEVERITY_HIGH = 'HARM_SEVERITY_HIGH',\n}\n\n/** Output only. Blocked reason. */\nexport enum BlockedReason {\n  /**\n   * Unspecified blocked reason.\n   */\n  BLOCKED_REASON_UNSPECIFIED = 'BLOCKED_REASON_UNSPECIFIED',\n  /**\n   * Candidates blocked due to safety.\n   */\n  SAFETY = 'SAFETY',\n  /**\n   * Candidates blocked due to other reason.\n   */\n  OTHER = 'OTHER',\n  /**\n   * Candidates blocked due to the terms which are included from the terminology blocklist.\n   */\n  BLOCKLIST = 'BLOCKLIST',\n  /**\n   * Candidates blocked due to prohibited content.\n   */\n  PROHIBITED_CONTENT = 'PROHIBITED_CONTENT',\n}\n\n/** Output only. Traffic type. This shows whether a request consumes Pay-As-You-Go or Provisioned Throughput quota. */\nexport enum TrafficType {\n  /**\n   * Unspecified request traffic type.\n   */\n  TRAFFIC_TYPE_UNSPECIFIED = 'TRAFFIC_TYPE_UNSPECIFIED',\n  /**\n   * Type for Pay-As-You-Go traffic.\n   */\n  ON_DEMAND = 'ON_DEMAND',\n  /**\n   * Type for Provisioned Throughput traffic.\n   */\n  PROVISIONED_THROUGHPUT = 'PROVISIONED_THROUGHPUT',\n}\n\n/** Server content modalities. */\nexport enum Modality {\n  /**\n   * The modality is unspecified.\n   */\n  MODALITY_UNSPECIFIED = 'MODALITY_UNSPECIFIED',\n  /**\n   * Indicates the model should return text\n   */\n  TEXT = 'TEXT',\n  /**\n   * Indicates the model should return images.\n   */\n  IMAGE = 'IMAGE',\n  /**\n   * Indicates the model should return audio.\n   */\n  AUDIO = 'AUDIO',\n}\n\n/** The media resolution to use. */\nexport enum MediaResolution {\n  /**\n   * Media resolution has not been set\n   */\n  MEDIA_RESOLUTION_UNSPECIFIED = 'MEDIA_RESOLUTION_UNSPECIFIED',\n  /**\n   * Media resolution set to low (64 tokens).\n   */\n  MEDIA_RESOLUTION_LOW = 'MEDIA_RESOLUTION_LOW',\n  /**\n   * Media resolution set to medium (256 tokens).\n   */\n  MEDIA_RESOLUTION_MEDIUM = 'MEDIA_RESOLUTION_MEDIUM',\n  /**\n   * Media resolution set to high (zoomed reframing with 256 tokens).\n   */\n  MEDIA_RESOLUTION_HIGH = 'MEDIA_RESOLUTION_HIGH',\n}\n\n/** Output only. The detailed state of the job. */\nexport enum JobState {\n  /**\n   * The job state is unspecified.\n   */\n  JOB_STATE_UNSPECIFIED = 'JOB_STATE_UNSPECIFIED',\n  /**\n   * The job has been just created or resumed and processing has not yet begun.\n   */\n  JOB_STATE_QUEUED = 'JOB_STATE_QUEUED',\n  /**\n   * The service is preparing to run the job.\n   */\n  JOB_STATE_PENDING = 'JOB_STATE_PENDING',\n  /**\n   * The job is in progress.\n   */\n  JOB_STATE_RUNNING = 'JOB_STATE_RUNNING',\n  /**\n   * The job completed successfully.\n   */\n  JOB_STATE_SUCCEEDED = 'JOB_STATE_SUCCEEDED',\n  /**\n   * The job failed.\n   */\n  JOB_STATE_FAILED = 'JOB_STATE_FAILED',\n  /**\n   * The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.\n   */\n  JOB_STATE_CANCELLING = 'JOB_STATE_CANCELLING',\n  /**\n   * The job has been cancelled.\n   */\n  JOB_STATE_CANCELLED = 'JOB_STATE_CANCELLED',\n  /**\n   * The job has been stopped, and can be resumed.\n   */\n  JOB_STATE_PAUSED = 'JOB_STATE_PAUSED',\n  /**\n   * The job has expired.\n   */\n  JOB_STATE_EXPIRED = 'JOB_STATE_EXPIRED',\n  /**\n   * The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.\n   */\n  JOB_STATE_UPDATING = 'JOB_STATE_UPDATING',\n  /**\n   * The job is partially succeeded, some results may be missing due to errors.\n   */\n  JOB_STATE_PARTIALLY_SUCCEEDED = 'JOB_STATE_PARTIALLY_SUCCEEDED',\n}\n\n/** Optional. Adapter size for tuning. */\nexport enum AdapterSize {\n  /**\n   * Adapter size is unspecified.\n   */\n  ADAPTER_SIZE_UNSPECIFIED = 'ADAPTER_SIZE_UNSPECIFIED',\n  /**\n   * Adapter size 1.\n   */\n  ADAPTER_SIZE_ONE = 'ADAPTER_SIZE_ONE',\n  /**\n   * Adapter size 2.\n   */\n  ADAPTER_SIZE_TWO = 'ADAPTER_SIZE_TWO',\n  /**\n   * Adapter size 4.\n   */\n  ADAPTER_SIZE_FOUR = 'ADAPTER_SIZE_FOUR',\n  /**\n   * Adapter size 8.\n   */\n  ADAPTER_SIZE_EIGHT = 'ADAPTER_SIZE_EIGHT',\n  /**\n   * Adapter size 16.\n   */\n  ADAPTER_SIZE_SIXTEEN = 'ADAPTER_SIZE_SIXTEEN',\n  /**\n   * Adapter size 32.\n   */\n  ADAPTER_SIZE_THIRTY_TWO = 'ADAPTER_SIZE_THIRTY_TWO',\n}\n\n/** Options for feature selection preference. */\nexport enum FeatureSelectionPreference {\n  FEATURE_SELECTION_PREFERENCE_UNSPECIFIED = 'FEATURE_SELECTION_PREFERENCE_UNSPECIFIED',\n  PRIORITIZE_QUALITY = 'PRIORITIZE_QUALITY',\n  BALANCED = 'BALANCED',\n  PRIORITIZE_COST = 'PRIORITIZE_COST',\n}\n\n/** Defines the function behavior. Defaults to `BLOCKING`. */\nexport enum Behavior {\n  /**\n   * This value is unused.\n   */\n  UNSPECIFIED = 'UNSPECIFIED',\n  /**\n   * If set, the system will wait to receive the function response before continuing the conversation.\n   */\n  BLOCKING = 'BLOCKING',\n  /**\n   * If set, the system will not wait to receive the function response. Instead, it will attempt to handle function responses as they become available while maintaining the conversation between the user and the model.\n   */\n  NON_BLOCKING = 'NON_BLOCKING',\n}\n\n/** Config for the dynamic retrieval config mode. */\nexport enum DynamicRetrievalConfigMode {\n  /**\n   * Always trigger retrieval.\n   */\n  MODE_UNSPECIFIED = 'MODE_UNSPECIFIED',\n  /**\n   * Run retrieval only when system decides it is necessary.\n   */\n  MODE_DYNAMIC = 'MODE_DYNAMIC',\n}\n\n/** Config for the function calling config mode. */\nexport enum FunctionCallingConfigMode {\n  /**\n   * The function calling config mode is unspecified. Should not be used.\n   */\n  MODE_UNSPECIFIED = 'MODE_UNSPECIFIED',\n  /**\n   * Default model behavior, model decides to predict either function calls or natural language response.\n   */\n  AUTO = 'AUTO',\n  /**\n   * Model is constrained to always predicting function calls only. If \"allowed_function_names\" are set, the predicted function calls will be limited to any one of \"allowed_function_names\", else the predicted function calls will be any one of the provided \"function_declarations\".\n   */\n  ANY = 'ANY',\n  /**\n   * Model will not predict any function calls. Model behavior is same as when not passing any function declarations.\n   */\n  NONE = 'NONE',\n}\n\n/** Status of the url retrieval. */\nexport enum UrlRetrievalStatus {\n  /**\n   * Default value. This value is unused\n   */\n  URL_RETRIEVAL_STATUS_UNSPECIFIED = 'URL_RETRIEVAL_STATUS_UNSPECIFIED',\n  /**\n   * Url retrieval is successful.\n   */\n  URL_RETRIEVAL_STATUS_SUCCESS = 'URL_RETRIEVAL_STATUS_SUCCESS',\n  /**\n   * Url retrieval is failed due to error.\n   */\n  URL_RETRIEVAL_STATUS_ERROR = 'URL_RETRIEVAL_STATUS_ERROR',\n}\n\n/** Enum that controls the safety filter level for objectionable content. */\nexport enum SafetyFilterLevel {\n  BLOCK_LOW_AND_ABOVE = 'BLOCK_LOW_AND_ABOVE',\n  BLOCK_MEDIUM_AND_ABOVE = 'BLOCK_MEDIUM_AND_ABOVE',\n  BLOCK_ONLY_HIGH = 'BLOCK_ONLY_HIGH',\n  BLOCK_NONE = 'BLOCK_NONE',\n}\n\n/** Enum that controls the generation of people. */\nexport enum PersonGeneration {\n  DONT_ALLOW = 'DONT_ALLOW',\n  ALLOW_ADULT = 'ALLOW_ADULT',\n  ALLOW_ALL = 'ALLOW_ALL',\n}\n\n/** Enum that specifies the language of the text in the prompt. */\nexport enum ImagePromptLanguage {\n  auto = 'auto',\n  en = 'en',\n  ja = 'ja',\n  ko = 'ko',\n  hi = 'hi',\n}\n\n/** Enum representing the mask mode of a mask reference image. */\nexport enum MaskReferenceMode {\n  MASK_MODE_DEFAULT = 'MASK_MODE_DEFAULT',\n  MASK_MODE_USER_PROVIDED = 'MASK_MODE_USER_PROVIDED',\n  MASK_MODE_BACKGROUND = 'MASK_MODE_BACKGROUND',\n  MASK_MODE_FOREGROUND = 'MASK_MODE_FOREGROUND',\n  MASK_MODE_SEMANTIC = 'MASK_MODE_SEMANTIC',\n}\n\n/** Enum representing the control type of a control reference image. */\nexport enum ControlReferenceType {\n  CONTROL_TYPE_DEFAULT = 'CONTROL_TYPE_DEFAULT',\n  CONTROL_TYPE_CANNY = 'CONTROL_TYPE_CANNY',\n  CONTROL_TYPE_SCRIBBLE = 'CONTROL_TYPE_SCRIBBLE',\n  CONTROL_TYPE_FACE_MESH = 'CONTROL_TYPE_FACE_MESH',\n}\n\n/** Enum representing the subject type of a subject reference image. */\nexport enum SubjectReferenceType {\n  SUBJECT_TYPE_DEFAULT = 'SUBJECT_TYPE_DEFAULT',\n  SUBJECT_TYPE_PERSON = 'SUBJECT_TYPE_PERSON',\n  SUBJECT_TYPE_ANIMAL = 'SUBJECT_TYPE_ANIMAL',\n  SUBJECT_TYPE_PRODUCT = 'SUBJECT_TYPE_PRODUCT',\n}\n\n/** Enum representing the Imagen 3 Edit mode. */\nexport enum EditMode {\n  EDIT_MODE_DEFAULT = 'EDIT_MODE_DEFAULT',\n  EDIT_MODE_INPAINT_REMOVAL = 'EDIT_MODE_INPAINT_REMOVAL',\n  EDIT_MODE_INPAINT_INSERTION = 'EDIT_MODE_INPAINT_INSERTION',\n  EDIT_MODE_OUTPAINT = 'EDIT_MODE_OUTPAINT',\n  EDIT_MODE_CONTROLLED_EDITING = 'EDIT_MODE_CONTROLLED_EDITING',\n  EDIT_MODE_STYLE = 'EDIT_MODE_STYLE',\n  EDIT_MODE_BGSWAP = 'EDIT_MODE_BGSWAP',\n  EDIT_MODE_PRODUCT_IMAGE = 'EDIT_MODE_PRODUCT_IMAGE',\n}\n\n/** State for the lifecycle of a File. */\nexport enum FileState {\n  STATE_UNSPECIFIED = 'STATE_UNSPECIFIED',\n  PROCESSING = 'PROCESSING',\n  ACTIVE = 'ACTIVE',\n  FAILED = 'FAILED',\n}\n\n/** Source of the File. */\nexport enum FileSource {\n  SOURCE_UNSPECIFIED = 'SOURCE_UNSPECIFIED',\n  UPLOADED = 'UPLOADED',\n  GENERATED = 'GENERATED',\n}\n\n/** Server content modalities. */\nexport enum MediaModality {\n  /**\n   * The modality is unspecified.\n   */\n  MODALITY_UNSPECIFIED = 'MODALITY_UNSPECIFIED',\n  /**\n   * Plain text.\n   */\n  TEXT = 'TEXT',\n  /**\n   * Images.\n   */\n  IMAGE = 'IMAGE',\n  /**\n   * Video.\n   */\n  VIDEO = 'VIDEO',\n  /**\n   * Audio.\n   */\n  AUDIO = 'AUDIO',\n  /**\n   * Document, e.g. PDF.\n   */\n  DOCUMENT = 'DOCUMENT',\n}\n\n/** Start of speech sensitivity. */\nexport enum StartSensitivity {\n  /**\n   * The default is START_SENSITIVITY_LOW.\n   */\n  START_SENSITIVITY_UNSPECIFIED = 'START_SENSITIVITY_UNSPECIFIED',\n  /**\n   * Automatic detection will detect the start of speech more often.\n   */\n  START_SENSITIVITY_HIGH = 'START_SENSITIVITY_HIGH',\n  /**\n   * Automatic detection will detect the start of speech less often.\n   */\n  START_SENSITIVITY_LOW = 'START_SENSITIVITY_LOW',\n}\n\n/** End of speech sensitivity. */\nexport enum EndSensitivity {\n  /**\n   * The default is END_SENSITIVITY_LOW.\n   */\n  END_SENSITIVITY_UNSPECIFIED = 'END_SENSITIVITY_UNSPECIFIED',\n  /**\n   * Automatic detection ends speech more often.\n   */\n  END_SENSITIVITY_HIGH = 'END_SENSITIVITY_HIGH',\n  /**\n   * Automatic detection ends speech less often.\n   */\n  END_SENSITIVITY_LOW = 'END_SENSITIVITY_LOW',\n}\n\n/** The different ways of handling user activity. */\nexport enum ActivityHandling {\n  /**\n   * If unspecified, the default behavior is `START_OF_ACTIVITY_INTERRUPTS`.\n   */\n  ACTIVITY_HANDLING_UNSPECIFIED = 'ACTIVITY_HANDLING_UNSPECIFIED',\n  /**\n   * If true, start of activity will interrupt the model's response (also called \"barge in\"). The model's current response will be cut-off in the moment of the interruption. This is the default behavior.\n   */\n  START_OF_ACTIVITY_INTERRUPTS = 'START_OF_ACTIVITY_INTERRUPTS',\n  /**\n   * The model's response will not be interrupted.\n   */\n  NO_INTERRUPTION = 'NO_INTERRUPTION',\n}\n\n/** Options about which input is included in the user's turn. */\nexport enum TurnCoverage {\n  /**\n   * If unspecified, the default behavior is `TURN_INCLUDES_ONLY_ACTIVITY`.\n   */\n  TURN_COVERAGE_UNSPECIFIED = 'TURN_COVERAGE_UNSPECIFIED',\n  /**\n   * The users turn only includes activity since the last turn, excluding inactivity (e.g. silence on the audio stream). This is the default behavior.\n   */\n  TURN_INCLUDES_ONLY_ACTIVITY = 'TURN_INCLUDES_ONLY_ACTIVITY',\n  /**\n   * The users turn includes all realtime input since the last turn, including inactivity (e.g. silence on the audio stream).\n   */\n  TURN_INCLUDES_ALL_INPUT = 'TURN_INCLUDES_ALL_INPUT',\n}\n\n/** Specifies how the response should be scheduled in the conversation. */\nexport enum FunctionResponseScheduling {\n  /**\n   * This value is unused.\n   */\n  SCHEDULING_UNSPECIFIED = 'SCHEDULING_UNSPECIFIED',\n  /**\n   * Only add the result to the conversation context, do not interrupt or trigger generation.\n   */\n  SILENT = 'SILENT',\n  /**\n   * Add the result to the conversation context, and prompt to generate output without interrupting ongoing generation.\n   */\n  WHEN_IDLE = 'WHEN_IDLE',\n  /**\n   * Add the result to the conversation context, interrupt ongoing generation and prompt to generate output.\n   */\n  INTERRUPT = 'INTERRUPT',\n}\n\n/** Scale of the generated music. */\nexport enum Scale {\n  /**\n   * Default value. This value is unused.\n   */\n  SCALE_UNSPECIFIED = 'SCALE_UNSPECIFIED',\n  /**\n   * C major or A minor.\n   */\n  C_MAJOR_A_MINOR = 'C_MAJOR_A_MINOR',\n  /**\n   * Db major or Bb minor.\n   */\n  D_FLAT_MAJOR_B_FLAT_MINOR = 'D_FLAT_MAJOR_B_FLAT_MINOR',\n  /**\n   * D major or B minor.\n   */\n  D_MAJOR_B_MINOR = 'D_MAJOR_B_MINOR',\n  /**\n   * Eb major or C minor\n   */\n  E_FLAT_MAJOR_C_MINOR = 'E_FLAT_MAJOR_C_MINOR',\n  /**\n   * E major or Db minor.\n   */\n  E_MAJOR_D_FLAT_MINOR = 'E_MAJOR_D_FLAT_MINOR',\n  /**\n   * F major or D minor.\n   */\n  F_MAJOR_D_MINOR = 'F_MAJOR_D_MINOR',\n  /**\n   * Gb major or Eb minor.\n   */\n  G_FLAT_MAJOR_E_FLAT_MINOR = 'G_FLAT_MAJOR_E_FLAT_MINOR',\n  /**\n   * G major or E minor.\n   */\n  G_MAJOR_E_MINOR = 'G_MAJOR_E_MINOR',\n  /**\n   * Ab major or F minor.\n   */\n  A_FLAT_MAJOR_F_MINOR = 'A_FLAT_MAJOR_F_MINOR',\n  /**\n   * A major or Gb minor.\n   */\n  A_MAJOR_G_FLAT_MINOR = 'A_MAJOR_G_FLAT_MINOR',\n  /**\n   * Bb major or G minor.\n   */\n  B_FLAT_MAJOR_G_MINOR = 'B_FLAT_MAJOR_G_MINOR',\n  /**\n   * B major or Ab minor.\n   */\n  B_MAJOR_A_FLAT_MINOR = 'B_MAJOR_A_FLAT_MINOR',\n}\n\n/** The playback control signal to apply to the music generation. */\nexport enum LiveMusicPlaybackControl {\n  /**\n   * This value is unused.\n   */\n  PLAYBACK_CONTROL_UNSPECIFIED = 'PLAYBACK_CONTROL_UNSPECIFIED',\n  /**\n   * Start generating the music.\n   */\n  PLAY = 'PLAY',\n  /**\n   * Hold the music generation. Use PLAY to resume from the current position.\n   */\n  PAUSE = 'PAUSE',\n  /**\n   * Stop the music generation and reset the context (prompts retained).\n      Use PLAY to restart the music generation.\n   */\n  STOP = 'STOP',\n  /**\n   * Reset the context of the music generation without stopping it.\n      Retains the current prompts and config.\n   */\n  RESET_CONTEXT = 'RESET_CONTEXT',\n}\n\n/** Describes how the video in the Part should be used by the model. */\nexport declare interface VideoMetadata {\n  /** The frame rate of the video sent to the model. If not specified, the\n        default value will be 1.0. The fps range is (0.0, 24.0]. */\n  fps?: number;\n  /** Optional. The end offset of the video. */\n  endOffset?: string;\n  /** Optional. The start offset of the video. */\n  startOffset?: string;\n}\n\n/** Content blob. */\nexport declare interface Blob {\n  /** Optional. Display name of the blob. Used to provide a label or filename to distinguish blobs. This field is not currently used in the Gemini GenerateContent calls. */\n  displayName?: string;\n  /** Required. Raw bytes. */\n  data?: string;\n  /** Required. The IANA standard MIME type of the source data. */\n  mimeType?: string;\n}\n\n/** URI based data. */\nexport declare interface FileData {\n  /** Optional. Display name of the file data. Used to provide a label or filename to distinguish file datas. It is not currently used in the Gemini GenerateContent calls. */\n  displayName?: string;\n  /** Required. URI. */\n  fileUri?: string;\n  /** Required. The IANA standard MIME type of the source data. */\n  mimeType?: string;\n}\n\n/** Result of executing the [ExecutableCode]. Always follows a `part` containing the [ExecutableCode]. */\nexport declare interface CodeExecutionResult {\n  /** Required. Outcome of the code execution. */\n  outcome?: Outcome;\n  /** Optional. Contains stdout when code execution is successful, stderr or other description otherwise. */\n  output?: string;\n}\n\n/** Code generated by the model that is meant to be executed, and the result returned to the model. Generated when using the [FunctionDeclaration] tool and [FunctionCallingConfig] mode is set to [Mode.CODE]. */\nexport declare interface ExecutableCode {\n  /** Required. The code to be executed. */\n  code?: string;\n  /** Required. Programming language of the `code`. */\n  language?: Language;\n}\n\n/** A function call. */\nexport declare interface FunctionCall {\n  /** The unique id of the function call. If populated, the client to execute the\n   `function_call` and return the response with the matching `id`. */\n  id?: string;\n  /** Optional. The function parameters and values in JSON object format. See [FunctionDeclaration.parameters] for parameter details. */\n  args?: Record<string, unknown>;\n  /** Required. The name of the function to call. Matches [FunctionDeclaration.name]. */\n  name?: string;\n}\n\n/** A function response. */\nexport class FunctionResponse {\n  /** Signals that function call continues, and more responses will be returned, turning the function call into a generator. Is only applicable to NON_BLOCKING function calls (see FunctionDeclaration.behavior for details), ignored otherwise. If false, the default, future responses will not be considered. Is only applicable to NON_BLOCKING function calls, is ignored otherwise. If set to false, future responses will not be considered. It is allowed to return empty `response` with `will_continue=False` to signal that the function call is finished. */\n  willContinue?: boolean;\n  /** Specifies how the response should be scheduled in the conversation. Only applicable to NON_BLOCKING function calls, is ignored otherwise. Defaults to WHEN_IDLE. */\n  scheduling?: FunctionResponseScheduling;\n  /** Optional. The id of the function call this response is for. Populated by the client to match the corresponding function call `id`. */\n  id?: string;\n  /** Required. The name of the function to call. Matches [FunctionDeclaration.name] and [FunctionCall.name]. */\n  name?: string;\n  /** Required. The function response in JSON object format. Use \"output\" key to specify function output and \"error\" key to specify error details (if any). If \"output\" and \"error\" keys are not specified, then whole \"response\" is treated as function output. */\n  response?: Record<string, unknown>;\n}\n\n/** A datatype containing media content.\n\n  Exactly one field within a Part should be set, representing the specific type\n  of content being conveyed. Using multiple fields within the same `Part`\n  instance is considered invalid.\n   */\nexport declare interface Part {\n  /** Metadata for a given video. */\n  videoMetadata?: VideoMetadata;\n  /** Indicates if the part is thought from the model. */\n  thought?: boolean;\n  /** Optional. Inlined bytes data. */\n  inlineData?: Blob;\n  /** Optional. URI based data. */\n  fileData?: FileData;\n  /** An opaque signature for the thought so it can be reused in subsequent requests. */\n  thoughtSignature?: string;\n  /** Optional. Result of executing the [ExecutableCode]. */\n  codeExecutionResult?: CodeExecutionResult;\n  /** Optional. Code generated by the model that is meant to be executed. */\n  executableCode?: ExecutableCode;\n  /** Optional. A predicted [FunctionCall] returned from the model that contains a string representing the [FunctionDeclaration.name] with the parameters and their values. */\n  functionCall?: FunctionCall;\n  /** Optional. The result output of a [FunctionCall] that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing any output from the function call. It is used as context to the model. */\n  functionResponse?: FunctionResponse;\n  /** Optional. Text part (can be code). */\n  text?: string;\n}\n/**\n * Creates a `Part` object from a `URI` string.\n */\nexport function createPartFromUri(uri: string, mimeType: string): Part {\n  return {\n    fileData: {\n      fileUri: uri,\n      mimeType: mimeType,\n    },\n  };\n}\n/**\n * Creates a `Part` object from a `text` string.\n */\nexport function createPartFromText(text: string): Part {\n  return {\n    text: text,\n  };\n}\n/**\n * Creates a `Part` object from a `FunctionCall` object.\n */\nexport function createPartFromFunctionCall(\n  name: string,\n  args: Record<string, unknown>,\n): Part {\n  return {\n    functionCall: {\n      name: name,\n      args: args,\n    },\n  };\n}\n/**\n * Creates a `Part` object from a `FunctionResponse` object.\n */\nexport function createPartFromFunctionResponse(\n  id: string,\n  name: string,\n  response: Record<string, unknown>,\n): Part {\n  return {\n    functionResponse: {\n      id: id,\n      name: name,\n      response: response,\n    },\n  };\n}\n/**\n * Creates a `Part` object from a `base64` encoded `string`.\n */\nexport function createPartFromBase64(data: string, mimeType: string): Part {\n  return {\n    inlineData: {\n      data: data,\n      mimeType: mimeType,\n    },\n  };\n}\n/**\n * Creates a `Part` object from the `outcome` and `output` of a `CodeExecutionResult` object.\n */\nexport function createPartFromCodeExecutionResult(\n  outcome: Outcome,\n  output: string,\n): Part {\n  return {\n    codeExecutionResult: {\n      outcome: outcome,\n      output: output,\n    },\n  };\n}\n/**\n * Creates a `Part` object from the `code` and `language` of an `ExecutableCode` object.\n */\nexport function createPartFromExecutableCode(\n  code: string,\n  language: Language,\n): Part {\n  return {\n    executableCode: {\n      code: code,\n      language: language,\n    },\n  };\n}\n\n/** Contains the multi-part content of a message. */\nexport declare interface Content {\n  /** List of parts that constitute a single message. Each part may have\n      a different IANA MIME type. */\n  parts?: Part[];\n  /** Optional. The producer of the content. Must be either 'user' or\n      'model'. Useful to set for multi-turn conversations, otherwise can be\n      empty. If role is not specified, SDK will determine the role. */\n  role?: string;\n}\nfunction _isPart(obj: unknown): obj is Part {\n  if (typeof obj === 'object' && obj !== null) {\n    return (\n      'fileData' in obj ||\n      'text' in obj ||\n      'functionCall' in obj ||\n      'functionResponse' in obj ||\n      'inlineData' in obj ||\n      'videoMetadata' in obj ||\n      'codeExecutionResult' in obj ||\n      'executableCode' in obj\n    );\n  }\n  return false;\n}\nfunction _toParts(partOrString: PartListUnion | string): Part[] {\n  const parts: Part[] = [];\n  if (typeof partOrString === 'string') {\n    parts.push(createPartFromText(partOrString));\n  } else if (_isPart(partOrString)) {\n    parts.push(partOrString);\n  } else if (Array.isArray(partOrString)) {\n    if (partOrString.length === 0) {\n      throw new Error('partOrString cannot be an empty array');\n    }\n    for (const part of partOrString) {\n      if (typeof part === 'string') {\n        parts.push(createPartFromText(part));\n      } else if (_isPart(part)) {\n        parts.push(part);\n      } else {\n        throw new Error('element in PartUnion must be a Part object or string');\n      }\n    }\n  } else {\n    throw new Error('partOrString must be a Part object, string, or array');\n  }\n  return parts;\n}\n/**\n * Creates a `Content` object with a user role from a `PartListUnion` object or `string`.\n */\nexport function createUserContent(\n  partOrString: PartListUnion | string,\n): Content {\n  return {\n    role: 'user',\n    parts: _toParts(partOrString),\n  };\n}\n\n/**\n * Creates a `Content` object with a model role from a `PartListUnion` object or `string`.\n */\nexport function createModelContent(\n  partOrString: PartListUnion | string,\n): Content {\n  return {\n    role: 'model',\n    parts: _toParts(partOrString),\n  };\n}\n/** HTTP options to be used in each of the requests. */\nexport declare interface HttpOptions {\n  /** The base URL for the AI platform service endpoint. */\n  baseUrl?: string;\n  /** Specifies the version of the API to use. */\n  apiVersion?: string;\n  /** Additional HTTP headers to be sent with the request. */\n  headers?: Record<string, string>;\n  /** Timeout for the request in milliseconds. */\n  timeout?: number;\n}\n\n/** Schema is used to define the format of input/output data.\n\n  Represents a select subset of an [OpenAPI 3.0 schema\n  object](https://spec.openapis.org/oas/v3.0.3#schema-object). More fields may\n  be added in the future as needed.\n   */\nexport declare interface Schema {\n  /** Optional. The value should be validated against any (one or more) of the subschemas in the list. */\n  anyOf?: Schema[];\n  /** Optional. Default value of the data. */\n  default?: unknown;\n  /** Optional. The description of the data. */\n  description?: string;\n  /** Optional. Possible values of the element of primitive type with enum format. Examples: 1. We can define direction as : {type:STRING, format:enum, enum:[\"EAST\", NORTH\", \"SOUTH\", \"WEST\"]} 2. We can define apartment number as : {type:INTEGER, format:enum, enum:[\"101\", \"201\", \"301\"]} */\n  enum?: string[];\n  /** Optional. Example of the object. Will only populated when the object is the root. */\n  example?: unknown;\n  /** Optional. The format of the data. Supported formats: for NUMBER type: \"float\", \"double\" for INTEGER type: \"int32\", \"int64\" for STRING type: \"email\", \"byte\", etc */\n  format?: string;\n  /** Optional. SCHEMA FIELDS FOR TYPE ARRAY Schema of the elements of Type.ARRAY. */\n  items?: Schema;\n  /** Optional. Maximum number of the elements for Type.ARRAY. */\n  maxItems?: string;\n  /** Optional. Maximum length of the Type.STRING */\n  maxLength?: string;\n  /** Optional. Maximum number of the properties for Type.OBJECT. */\n  maxProperties?: string;\n  /** Optional. Maximum value of the Type.INTEGER and Type.NUMBER */\n  maximum?: number;\n  /** Optional. Minimum number of the elements for Type.ARRAY. */\n  minItems?: string;\n  /** Optional. SCHEMA FIELDS FOR TYPE STRING Minimum length of the Type.STRING */\n  minLength?: string;\n  /** Optional. Minimum number of the properties for Type.OBJECT. */\n  minProperties?: string;\n  /** Optional. SCHEMA FIELDS FOR TYPE INTEGER and NUMBER Minimum value of the Type.INTEGER and Type.NUMBER */\n  minimum?: number;\n  /** Optional. Indicates if the value may be null. */\n  nullable?: boolean;\n  /** Optional. Pattern of the Type.STRING to restrict a string to a regular expression. */\n  pattern?: string;\n  /** Optional. SCHEMA FIELDS FOR TYPE OBJECT Properties of Type.OBJECT. */\n  properties?: Record<string, Schema>;\n  /** Optional. The order of the properties. Not a standard field in open api spec. Only used to support the order of the properties. */\n  propertyOrdering?: string[];\n  /** Optional. Required properties of Type.OBJECT. */\n  required?: string[];\n  /** Optional. The title of the Schema. */\n  title?: string;\n  /** Optional. The type of the data. */\n  type?: Type;\n}\n\n/** Config for model selection. */\nexport declare interface ModelSelectionConfig {\n  /** Options for feature selection preference. */\n  featureSelectionPreference?: FeatureSelectionPreference;\n}\n\n/** Safety settings. */\nexport declare interface SafetySetting {\n  /** Determines if the harm block method uses probability or probability\n      and severity scores. */\n  method?: HarmBlockMethod;\n  /** Required. Harm category. */\n  category?: HarmCategory;\n  /** Required. The harm block threshold. */\n  threshold?: HarmBlockThreshold;\n}\n\n/** Defines a function that the model can generate JSON inputs for.\n\n  The inputs are based on `OpenAPI 3.0 specifications\n  <https://spec.openapis.org/oas/v3.0.3>`_.\n   */\nexport declare interface FunctionDeclaration {\n  /** Defines the function behavior. */\n  behavior?: Behavior;\n  /** Optional. Description and purpose of the function. Model uses it to decide how and whether to call the function. */\n  description?: string;\n  /** Required. The name of the function to call. Must start with a letter or an underscore. Must be a-z, A-Z, 0-9, or contain underscores, dots and dashes, with a maximum length of 64. */\n  name?: string;\n  /** Optional. Describes the parameters to this function in JSON Schema Object format. Reflects the Open API 3.03 Parameter Object. string Key: the name of the parameter. Parameter names are case sensitive. Schema Value: the Schema defining the type used for the parameter. For function with no parameters, this can be left unset. Parameter names must start with a letter or an underscore and must only contain chars a-z, A-Z, 0-9, or underscores with a maximum length of 64. Example with 1 required and 1 optional parameter: type: OBJECT properties: param1: type: STRING param2: type: INTEGER required: - param1 */\n  parameters?: Schema;\n  /** Optional. Describes the output from this function in JSON Schema format. Reflects the Open API 3.03 Response Object. The Schema defines the type used for the response value of the function. */\n  response?: Schema;\n}\n\n/** Represents a time interval, encoded as a start time (inclusive) and an end time (exclusive).\n\n  The start time must be less than or equal to the end time.\n  When the start equals the end time, the interval is an empty interval.\n  (matches no time)\n  When both start and end are unspecified, the interval matches any time.\n   */\nexport declare interface Interval {\n  /** The start time of the interval. */\n  startTime?: string;\n  /** The end time of the interval. */\n  endTime?: string;\n}\n\n/** Tool to support Google Search in Model. Powered by Google. */\nexport declare interface GoogleSearch {\n  /** Optional. Filter search results to a specific time range.\n      If customers set a start time, they must set an end time (and vice versa).\n       */\n  timeRangeFilter?: Interval;\n}\n\n/** Describes the options to customize dynamic retrieval. */\nexport declare interface DynamicRetrievalConfig {\n  /** The mode of the predictor to be used in dynamic retrieval. */\n  mode?: DynamicRetrievalConfigMode;\n  /** Optional. The threshold to be used in dynamic retrieval. If not set, a system default value is used. */\n  dynamicThreshold?: number;\n}\n\n/** Tool to retrieve public web data for grounding, powered by Google. */\nexport declare interface GoogleSearchRetrieval {\n  /** Specifies the dynamic retrieval configuration for the given source. */\n  dynamicRetrievalConfig?: DynamicRetrievalConfig;\n}\n\n/** Tool to search public web data, powered by Vertex AI Search and Sec4 compliance. */\nexport declare interface EnterpriseWebSearch {}\n\n/** Config for authentication with API key. */\nexport declare interface ApiKeyConfig {\n  /** The API key to be used in the request directly. */\n  apiKeyString?: string;\n}\n\n/** Config for Google Service Account Authentication. */\nexport declare interface AuthConfigGoogleServiceAccountConfig {\n  /** Optional. The service account that the extension execution service runs as. - If the service account is specified, the `iam.serviceAccounts.getAccessToken` permission should be granted to Vertex AI Extension Service Agent (https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) on the specified service account. - If not specified, the Vertex AI Extension Service Agent will be used to execute the Extension. */\n  serviceAccount?: string;\n}\n\n/** Config for HTTP Basic Authentication. */\nexport declare interface AuthConfigHttpBasicAuthConfig {\n  /** Required. The name of the SecretManager secret version resource storing the base64 encoded credentials. Format: `projects/{project}/secrets/{secrete}/versions/{version}` - If specified, the `secretmanager.versions.access` permission should be granted to Vertex AI Extension Service Agent (https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) on the specified resource. */\n  credentialSecret?: string;\n}\n\n/** Config for user oauth. */\nexport declare interface AuthConfigOauthConfig {\n  /** Access token for extension endpoint. Only used to propagate token from [[ExecuteExtensionRequest.runtime_auth_config]] at request time. */\n  accessToken?: string;\n  /** The service account used to generate access tokens for executing the Extension. - If the service account is specified, the `iam.serviceAccounts.getAccessToken` permission should be granted to Vertex AI Extension Service Agent (https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) on the provided service account. */\n  serviceAccount?: string;\n}\n\n/** Config for user OIDC auth. */\nexport declare interface AuthConfigOidcConfig {\n  /** OpenID Connect formatted ID token for extension endpoint. Only used to propagate token from [[ExecuteExtensionRequest.runtime_auth_config]] at request time. */\n  idToken?: string;\n  /** The service account used to generate an OpenID Connect (OIDC)-compatible JWT token signed by the Google OIDC Provider (accounts.google.com) for extension endpoint (https://cloud.google.com/iam/docs/create-short-lived-credentials-direct#sa-credentials-oidc). - The audience for the token will be set to the URL in the server url defined in the OpenApi spec. - If the service account is provided, the service account should grant `iam.serviceAccounts.getOpenIdToken` permission to Vertex AI Extension Service Agent (https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents). */\n  serviceAccount?: string;\n}\n\n/** Auth configuration to run the extension. */\nexport declare interface AuthConfig {\n  /** Config for API key auth. */\n  apiKeyConfig?: ApiKeyConfig;\n  /** Type of auth scheme. */\n  authType?: AuthType;\n  /** Config for Google Service Account auth. */\n  googleServiceAccountConfig?: AuthConfigGoogleServiceAccountConfig;\n  /** Config for HTTP Basic auth. */\n  httpBasicAuthConfig?: AuthConfigHttpBasicAuthConfig;\n  /** Config for user oauth. */\n  oauthConfig?: AuthConfigOauthConfig;\n  /** Config for user OIDC auth. */\n  oidcConfig?: AuthConfigOidcConfig;\n}\n\n/** Tool to support Google Maps in Model. */\nexport declare interface GoogleMaps {\n  /** Optional. Auth config for the Google Maps tool. */\n  authConfig?: AuthConfig;\n}\n\n/** Tool to support URL context retrieval. */\nexport declare interface UrlContext {}\n\n/** Retrieve from Vertex AI Search datastore or engine for grounding. datastore and engine are mutually exclusive. See https://cloud.google.com/products/agent-builder */\nexport declare interface VertexAISearch {\n  /** Optional. Fully-qualified Vertex AI Search data store resource ID. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}` */\n  datastore?: string;\n  /** Optional. Fully-qualified Vertex AI Search engine resource ID. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` */\n  engine?: string;\n  /** Optional. Filter strings to be passed to the search API. */\n  filter?: string;\n  /** Optional. Number of search results to return per query. The default value is 10. The maximumm allowed value is 10. */\n  maxResults?: number;\n}\n\n/** The definition of the Rag resource. */\nexport declare interface VertexRagStoreRagResource {\n  /** Optional. RagCorpora resource name. Format: `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}` */\n  ragCorpus?: string;\n  /** Optional. rag_file_id. The files should be in the same rag_corpus set in rag_corpus field. */\n  ragFileIds?: string[];\n}\n\n/** Config for filters. */\nexport declare interface RagRetrievalConfigFilter {\n  /** Optional. String for metadata filtering. */\n  metadataFilter?: string;\n  /** Optional. Only returns contexts with vector distance smaller than the threshold. */\n  vectorDistanceThreshold?: number;\n  /** Optional. Only returns contexts with vector similarity larger than the threshold. */\n  vectorSimilarityThreshold?: number;\n}\n\n/** Config for Hybrid Search. */\nexport declare interface RagRetrievalConfigHybridSearch {\n  /** Optional. Alpha value controls the weight between dense and sparse vector search results. The range is [0, 1], while 0 means sparse vector search only and 1 means dense vector search only. The default value is 0.5 which balances sparse and dense vector search equally. */\n  alpha?: number;\n}\n\n/** Config for LlmRanker. */\nexport declare interface RagRetrievalConfigRankingLlmRanker {\n  /** Optional. The model name used for ranking. See [Supported models](https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/inference#supported-models). */\n  modelName?: string;\n}\n\n/** Config for Rank Service. */\nexport declare interface RagRetrievalConfigRankingRankService {\n  /** Optional. The model name of the rank service. Format: `semantic-ranker-512@latest` */\n  modelName?: string;\n}\n\n/** Config for ranking and reranking. */\nexport declare interface RagRetrievalConfigRanking {\n  /** Optional. Config for LlmRanker. */\n  llmRanker?: RagRetrievalConfigRankingLlmRanker;\n  /** Optional. Config for Rank Service. */\n  rankService?: RagRetrievalConfigRankingRankService;\n}\n\n/** Specifies the context retrieval config. */\nexport declare interface RagRetrievalConfig {\n  /** Optional. Config for filters. */\n  filter?: RagRetrievalConfigFilter;\n  /** Optional. Config for Hybrid Search. */\n  hybridSearch?: RagRetrievalConfigHybridSearch;\n  /** Optional. Config for ranking and reranking. */\n  ranking?: RagRetrievalConfigRanking;\n  /** Optional. The number of contexts to retrieve. */\n  topK?: number;\n}\n\n/** Retrieve from Vertex RAG Store for grounding. */\nexport declare interface VertexRagStore {\n  /** Optional. Deprecated. Please use rag_resources instead. */\n  ragCorpora?: string[];\n  /** Optional. The representation of the rag source. It can be used to specify corpus only or ragfiles. Currently only support one corpus or multiple files from one corpus. In the future we may open up multiple corpora support. */\n  ragResources?: VertexRagStoreRagResource[];\n  /** Optional. The retrieval config for the Rag query. */\n  ragRetrievalConfig?: RagRetrievalConfig;\n  /** Optional. Number of top k results to return from the selected corpora. */\n  similarityTopK?: number;\n  /** Optional. Only return results with vector distance smaller than the threshold. */\n  vectorDistanceThreshold?: number;\n}\n\n/** Defines a retrieval tool that model can call to access external knowledge. */\nexport declare interface Retrieval {\n  /** Optional. Deprecated. This option is no longer supported. */\n  disableAttribution?: boolean;\n  /** Set to use data source powered by Vertex AI Search. */\n  vertexAiSearch?: VertexAISearch;\n  /** Set to use data source powered by Vertex RAG store. User data is uploaded via the VertexRagDataService. */\n  vertexRagStore?: VertexRagStore;\n}\n\n/** Tool that executes code generated by the model, and automatically returns the result to the model. See also [ExecutableCode]and [CodeExecutionResult] which are input and output to this tool. */\nexport declare interface ToolCodeExecution {}\n\n/** Tool details of a tool that the model may use to generate a response. */\nexport declare interface Tool {\n  /** List of function declarations that the tool supports. */\n  functionDeclarations?: FunctionDeclaration[];\n  /** Optional. Retrieval tool type. System will always execute the provided retrieval tool(s) to get external knowledge to answer the prompt. Retrieval results are presented to the model for generation. */\n  retrieval?: Retrieval;\n  /** Optional. Google Search tool type. Specialized retrieval tool\n      that is powered by Google Search. */\n  googleSearch?: GoogleSearch;\n  /** Optional. GoogleSearchRetrieval tool type. Specialized retrieval tool that is powered by Google search. */\n  googleSearchRetrieval?: GoogleSearchRetrieval;\n  /** Optional. Enterprise web search tool type. Specialized retrieval\n      tool that is powered by Vertex AI Search and Sec4 compliance. */\n  enterpriseWebSearch?: EnterpriseWebSearch;\n  /** Optional. Google Maps tool type. Specialized retrieval tool\n      that is powered by Google Maps. */\n  googleMaps?: GoogleMaps;\n  /** Optional. Tool to support URL context retrieval. */\n  urlContext?: UrlContext;\n  /** Optional. CodeExecution tool type. Enables the model to execute code as part of generation. */\n  codeExecution?: ToolCodeExecution;\n}\n\n/** Function calling config. */\nexport declare interface FunctionCallingConfig {\n  /** Optional. Function calling mode. */\n  mode?: FunctionCallingConfigMode;\n  /** Optional. Function names to call. Only set when the Mode is ANY. Function names should match [FunctionDeclaration.name]. With mode set to ANY, model will predict a function call from the set of function names provided. */\n  allowedFunctionNames?: string[];\n}\n\n/** An object that represents a latitude/longitude pair.\n\n  This is expressed as a pair of doubles to represent degrees latitude and\n  degrees longitude. Unless specified otherwise, this object must conform to the\n  <a href=\"https://en.wikipedia.org/wiki/World_Geodetic_System#1984_version\">\n  WGS84 standard</a>. Values must be within normalized ranges.\n   */\nexport declare interface LatLng {\n  /** The latitude in degrees. It must be in the range [-90.0, +90.0]. */\n  latitude?: number;\n  /** The longitude in degrees. It must be in the range [-180.0, +180.0] */\n  longitude?: number;\n}\n\n/** Retrieval config.\n */\nexport declare interface RetrievalConfig {\n  /** Optional. The location of the user. */\n  latLng?: LatLng;\n  /** The language code of the user. */\n  languageCode?: string;\n}\n\n/** Tool config.\n\n  This config is shared for all tools provided in the request.\n   */\nexport declare interface ToolConfig {\n  /** Optional. Function calling config. */\n  functionCallingConfig?: FunctionCallingConfig;\n  /** Optional. Retrieval config. */\n  retrievalConfig?: RetrievalConfig;\n}\n\n/** The configuration for the prebuilt speaker to use. */\nexport declare interface PrebuiltVoiceConfig {\n  /** The name of the prebuilt voice to use. */\n  voiceName?: string;\n}\n\n/** The configuration for the voice to use. */\nexport declare interface VoiceConfig {\n  /** The configuration for the speaker to use.\n   */\n  prebuiltVoiceConfig?: PrebuiltVoiceConfig;\n}\n\n/** The configuration for the speaker to use. */\nexport declare interface SpeakerVoiceConfig {\n  /** The name of the speaker to use. Should be the same as in the\n          prompt. */\n  speaker?: string;\n  /** The configuration for the voice to use. */\n  voiceConfig?: VoiceConfig;\n}\n\n/** The configuration for the multi-speaker setup. */\nexport declare interface MultiSpeakerVoiceConfig {\n  /** The configuration for the speaker to use. */\n  speakerVoiceConfigs?: SpeakerVoiceConfig[];\n}\n\n/** The speech generation configuration. */\nexport declare interface SpeechConfig {\n  /** The configuration for the speaker to use.\n   */\n  voiceConfig?: VoiceConfig;\n  /** The configuration for the multi-speaker setup.\n          It is mutually exclusive with the voice_config field.\n           */\n  multiSpeakerVoiceConfig?: MultiSpeakerVoiceConfig;\n  /** Language code (ISO 639. e.g. en-US) for the speech synthesization.\n      Only available for Live API.\n       */\n  languageCode?: string;\n}\n\n/** The configuration for automatic function calling. */\nexport declare interface AutomaticFunctionCallingConfig {\n  /** Whether to disable automatic function calling.\n      If not set or set to False, will enable automatic function calling.\n      If set to True, will disable automatic function calling.\n       */\n  disable?: boolean;\n  /** If automatic function calling is enabled,\n      maximum number of remote calls for automatic function calling.\n      This number should be a positive integer.\n      If not set, SDK will set maximum number of remote calls to 10.\n       */\n  maximumRemoteCalls?: number;\n  /** If automatic function calling is enabled,\n      whether to ignore call history to the response.\n      If not set, SDK will set ignore_call_history to false,\n      and will append the call history to\n      GenerateContentResponse.automatic_function_calling_history.\n       */\n  ignoreCallHistory?: boolean;\n}\n\n/** The thinking features configuration. */\nexport declare interface ThinkingConfig {\n  /** Indicates whether to include thoughts in the response. If true, thoughts are returned only if the model supports thought and thoughts are available.\n   */\n  includeThoughts?: boolean;\n  /** Indicates the thinking budget in tokens.\n   */\n  thinkingBudget?: number;\n}\n\n/** When automated routing is specified, the routing will be determined by the pretrained routing model and customer provided model routing preference. */\nexport declare interface GenerationConfigRoutingConfigAutoRoutingMode {\n  /** The model routing preference. */\n  modelRoutingPreference?:\n    | 'UNKNOWN'\n    | 'PRIORITIZE_QUALITY'\n    | 'BALANCED'\n    | 'PRIORITIZE_COST';\n}\n\n/** When manual routing is set, the specified model will be used directly. */\nexport declare interface GenerationConfigRoutingConfigManualRoutingMode {\n  /** The model name to use. Only the public LLM models are accepted. See [Supported models](https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/inference#supported-models). */\n  modelName?: string;\n}\n\n/** The configuration for routing the request to a specific model. */\nexport declare interface GenerationConfigRoutingConfig {\n  /** Automated routing. */\n  autoMode?: GenerationConfigRoutingConfigAutoRoutingMode;\n  /** Manual routing. */\n  manualMode?: GenerationConfigRoutingConfigManualRoutingMode;\n}\n\n/** Optional model configuration parameters.\n\n  For more information, see `Content generation parameters\n  <https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/content-generation-parameters>`_.\n   */\nexport declare interface GenerateContentConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** Instructions for the model to steer it toward better performance.\n      For example, \"Answer as concisely as possible\" or \"Don't use technical\n      terms in your response\".\n       */\n  systemInstruction?: ContentUnion;\n  /** Value that controls the degree of randomness in token selection.\n      Lower temperatures are good for prompts that require a less open-ended or\n      creative response, while higher temperatures can lead to more diverse or\n      creative results.\n       */\n  temperature?: number;\n  /** Tokens are selected from the most to least probable until the sum\n      of their probabilities equals this value. Use a lower value for less\n      random responses and a higher value for more random responses.\n       */\n  topP?: number;\n  /** For each token selection step, the ``top_k`` tokens with the\n      highest probabilities are sampled. Then tokens are further filtered based\n      on ``top_p`` with the final token selected using temperature sampling. Use\n      a lower number for less random responses and a higher number for more\n      random responses.\n       */\n  topK?: number;\n  /** Number of response variations to return.\n   */\n  candidateCount?: number;\n  /** Maximum number of tokens that can be generated in the response.\n   */\n  maxOutputTokens?: number;\n  /** List of strings that tells the model to stop generating text if one\n      of the strings is encountered in the response.\n       */\n  stopSequences?: string[];\n  /** Whether to return the log probabilities of the tokens that were\n      chosen by the model at each step.\n       */\n  responseLogprobs?: boolean;\n  /** Number of top candidate tokens to return the log probabilities for\n      at each generation step.\n       */\n  logprobs?: number;\n  /** Positive values penalize tokens that already appear in the\n      generated text, increasing the probability of generating more diverse\n      content.\n       */\n  presencePenalty?: number;\n  /** Positive values penalize tokens that repeatedly appear in the\n      generated text, increasing the probability of generating more diverse\n      content.\n       */\n  frequencyPenalty?: number;\n  /** When ``seed`` is fixed to a specific number, the model makes a best\n      effort to provide the same response for repeated requests. By default, a\n      random number is used.\n       */\n  seed?: number;\n  /** Output response mimetype of the generated candidate text.\n      Supported mimetype:\n        - `text/plain`: (default) Text output.\n        - `application/json`: JSON response in the candidates.\n      The model needs to be prompted to output the appropriate response type,\n      otherwise the behavior is undefined.\n      This is a preview feature.\n       */\n  responseMimeType?: string;\n  /** The `Schema` object allows the definition of input and output data types.\n      These types can be objects, but also primitives and arrays.\n      Represents a select subset of an [OpenAPI 3.0 schema\n      object](https://spec.openapis.org/oas/v3.0.3#schema).\n      If set, a compatible response_mime_type must also be set.\n      Compatible mimetypes: `application/json`: Schema for JSON response.\n       */\n  responseSchema?: SchemaUnion;\n  /** Configuration for model router requests.\n   */\n  routingConfig?: GenerationConfigRoutingConfig;\n  /** Configuration for model selection.\n   */\n  modelSelectionConfig?: ModelSelectionConfig;\n  /** Safety settings in the request to block unsafe content in the\n      response.\n       */\n  safetySettings?: SafetySetting[];\n  /** Code that enables the system to interact with external systems to\n      perform an action outside of the knowledge and scope of the model.\n       */\n  tools?: ToolListUnion;\n  /** Associates model output to a specific function call.\n   */\n  toolConfig?: ToolConfig;\n  /** Labels with user-defined metadata to break down billed charges. */\n  labels?: Record<string, string>;\n  /** Resource name of a context cache that can be used in subsequent\n      requests.\n       */\n  cachedContent?: string;\n  /** The requested modalities of the response. Represents the set of\n      modalities that the model can return.\n       */\n  responseModalities?: string[];\n  /** If specified, the media resolution specified will be used.\n   */\n  mediaResolution?: MediaResolution;\n  /** The speech generation configuration.\n   */\n  speechConfig?: SpeechConfigUnion;\n  /** If enabled, audio timestamp will be included in the request to the\n       model.\n       */\n  audioTimestamp?: boolean;\n  /** The configuration for automatic function calling.\n   */\n  automaticFunctionCalling?: AutomaticFunctionCallingConfig;\n  /** The thinking features configuration.\n   */\n  thinkingConfig?: ThinkingConfig;\n}\n\n/** Config for models.generate_content parameters. */\nexport declare interface GenerateContentParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** Content of the request.\n   */\n  contents: ContentListUnion;\n  /** Configuration that contains optional model parameters.\n   */\n  config?: GenerateContentConfig;\n}\n\n/** Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp */\nexport declare interface GoogleTypeDate {\n  /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */\n  day?: number;\n  /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */\n  month?: number;\n  /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */\n  year?: number;\n}\n\n/** Source attributions for content. */\nexport declare interface Citation {\n  /** Output only. End index into the content. */\n  endIndex?: number;\n  /** Output only. License of the attribution. */\n  license?: string;\n  /** Output only. Publication date of the attribution. */\n  publicationDate?: GoogleTypeDate;\n  /** Output only. Start index into the content. */\n  startIndex?: number;\n  /** Output only. Title of the attribution. */\n  title?: string;\n  /** Output only. Url reference of the attribution. */\n  uri?: string;\n}\n\n/** Citation information when the model quotes another source. */\nexport declare interface CitationMetadata {\n  /** Contains citation information when the model directly quotes, at\n      length, from another source. Can include traditional websites and code\n      repositories.\n       */\n  citations?: Citation[];\n}\n\n/** Context for a single url retrieval. */\nexport declare interface UrlMetadata {\n  /** The URL retrieved by the tool. */\n  retrievedUrl?: string;\n  /** Status of the url retrieval. */\n  urlRetrievalStatus?: UrlRetrievalStatus;\n}\n\n/** Metadata related to url context retrieval tool. */\nexport declare interface UrlContextMetadata {\n  /** List of url context. */\n  urlMetadata?: UrlMetadata[];\n}\n\n/** Represents where the chunk starts and ends in the document. */\nexport declare interface RagChunkPageSpan {\n  /** Page where chunk starts in the document. Inclusive. 1-indexed. */\n  firstPage?: number;\n  /** Page where chunk ends in the document. Inclusive. 1-indexed. */\n  lastPage?: number;\n}\n\n/** A RagChunk includes the content of a chunk of a RagFile, and associated metadata. */\nexport declare interface RagChunk {\n  /** If populated, represents where the chunk starts and ends in the document. */\n  pageSpan?: RagChunkPageSpan;\n  /** The content of the chunk. */\n  text?: string;\n}\n\n/** Chunk from context retrieved by the retrieval tools. */\nexport declare interface GroundingChunkRetrievedContext {\n  /** Additional context for the RAG retrieval result. This is only populated when using the RAG retrieval tool. */\n  ragChunk?: RagChunk;\n  /** Text of the attribution. */\n  text?: string;\n  /** Title of the attribution. */\n  title?: string;\n  /** URI reference of the attribution. */\n  uri?: string;\n}\n\n/** Chunk from the web. */\nexport declare interface GroundingChunkWeb {\n  /** Domain of the (original) URI. */\n  domain?: string;\n  /** Title of the chunk. */\n  title?: string;\n  /** URI reference of the chunk. */\n  uri?: string;\n}\n\n/** Grounding chunk. */\nexport declare interface GroundingChunk {\n  /** Grounding chunk from context retrieved by the retrieval tools. */\n  retrievedContext?: GroundingChunkRetrievedContext;\n  /** Grounding chunk from the web. */\n  web?: GroundingChunkWeb;\n}\n\n/** Segment of the content. */\nexport declare interface Segment {\n  /** Output only. End index in the given Part, measured in bytes. Offset from the start of the Part, exclusive, starting at zero. */\n  endIndex?: number;\n  /** Output only. The index of a Part object within its parent Content object. */\n  partIndex?: number;\n  /** Output only. Start index in the given Part, measured in bytes. Offset from the start of the Part, inclusive, starting at zero. */\n  startIndex?: number;\n  /** Output only. The text corresponding to the segment from the response. */\n  text?: string;\n}\n\n/** Grounding support. */\nexport declare interface GroundingSupport {\n  /** Confidence score of the support references. Ranges from 0 to 1. 1 is the most confident. This list must have the same size as the grounding_chunk_indices. */\n  confidenceScores?: number[];\n  /** A list of indices (into 'grounding_chunk') specifying the citations associated with the claim. For instance [1,3,4] means that grounding_chunk[1], grounding_chunk[3], grounding_chunk[4] are the retrieved content attributed to the claim. */\n  groundingChunkIndices?: number[];\n  /** Segment of the content this support belongs to. */\n  segment?: Segment;\n}\n\n/** Metadata related to retrieval in the grounding flow. */\nexport declare interface RetrievalMetadata {\n  /** Optional. Score indicating how likely information from Google Search could help answer the prompt. The score is in the range `[0, 1]`, where 0 is the least likely and 1 is the most likely. This score is only populated when Google Search grounding and dynamic retrieval is enabled. It will be compared to the threshold to determine whether to trigger Google Search. */\n  googleSearchDynamicRetrievalScore?: number;\n}\n\n/** Google search entry point. */\nexport declare interface SearchEntryPoint {\n  /** Optional. Web content snippet that can be embedded in a web page or an app webview. */\n  renderedContent?: string;\n  /** Optional. Base64 encoded JSON representing array of tuple. */\n  sdkBlob?: string;\n}\n\n/** Metadata returned to client when grounding is enabled. */\nexport declare interface GroundingMetadata {\n  /** List of supporting references retrieved from specified grounding source. */\n  groundingChunks?: GroundingChunk[];\n  /** Optional. List of grounding support. */\n  groundingSupports?: GroundingSupport[];\n  /** Optional. Output only. Retrieval metadata. */\n  retrievalMetadata?: RetrievalMetadata;\n  /** Optional. Queries executed by the retrieval tools. */\n  retrievalQueries?: string[];\n  /** Optional. Google search entry for the following-up web searches. */\n  searchEntryPoint?: SearchEntryPoint;\n  /** Optional. Web search queries for the following-up web search. */\n  webSearchQueries?: string[];\n}\n\n/** Candidate for the logprobs token and score. */\nexport declare interface LogprobsResultCandidate {\n  /** The candidate's log probability. */\n  logProbability?: number;\n  /** The candidate's token string value. */\n  token?: string;\n  /** The candidate's token id value. */\n  tokenId?: number;\n}\n\n/** Candidates with top log probabilities at each decoding step. */\nexport declare interface LogprobsResultTopCandidates {\n  /** Sorted by log probability in descending order. */\n  candidates?: LogprobsResultCandidate[];\n}\n\n/** Logprobs Result */\nexport declare interface LogprobsResult {\n  /** Length = total number of decoding steps. The chosen candidates may or may not be in top_candidates. */\n  chosenCandidates?: LogprobsResultCandidate[];\n  /** Length = total number of decoding steps. */\n  topCandidates?: LogprobsResultTopCandidates[];\n}\n\n/** Safety rating corresponding to the generated content. */\nexport declare interface SafetyRating {\n  /** Output only. Indicates whether the content was filtered out because of this rating. */\n  blocked?: boolean;\n  /** Output only. Harm category. */\n  category?: HarmCategory;\n  /** Output only. Harm probability levels in the content. */\n  probability?: HarmProbability;\n  /** Output only. Harm probability score. */\n  probabilityScore?: number;\n  /** Output only. Harm severity levels in the content. */\n  severity?: HarmSeverity;\n  /** Output only. Harm severity score. */\n  severityScore?: number;\n}\n\n/** A response candidate generated from the model. */\nexport declare interface Candidate {\n  /** Contains the multi-part content of the response.\n   */\n  content?: Content;\n  /** Source attribution of the generated content.\n   */\n  citationMetadata?: CitationMetadata;\n  /** Describes the reason the model stopped generating tokens.\n   */\n  finishMessage?: string;\n  /** Number of tokens for this candidate.\n   */\n  tokenCount?: number;\n  /** The reason why the model stopped generating tokens.\n      If empty, the model has not stopped generating the tokens.\n       */\n  finishReason?: FinishReason;\n  /** Metadata related to url context retrieval tool. */\n  urlContextMetadata?: UrlContextMetadata;\n  /** Output only. Average log probability score of the candidate. */\n  avgLogprobs?: number;\n  /** Output only. Metadata specifies sources used to ground generated content. */\n  groundingMetadata?: GroundingMetadata;\n  /** Output only. Index of the candidate. */\n  index?: number;\n  /** Output only. Log-likelihood scores for the response tokens and top tokens */\n  logprobsResult?: LogprobsResult;\n  /** Output only. List of ratings for the safety of a response candidate. There is at most one rating per category. */\n  safetyRatings?: SafetyRating[];\n}\n\n/** Content filter results for a prompt sent in the request. */\nexport class GenerateContentResponsePromptFeedback {\n  /** Output only. Blocked reason. */\n  blockReason?: BlockedReason;\n  /** Output only. A readable block reason message. */\n  blockReasonMessage?: string;\n  /** Output only. Safety ratings. */\n  safetyRatings?: SafetyRating[];\n}\n\n/** Represents token counting info for a single modality. */\nexport declare interface ModalityTokenCount {\n  /** The modality associated with this token count. */\n  modality?: MediaModality;\n  /** Number of tokens. */\n  tokenCount?: number;\n}\n\n/** Usage metadata about response(s). */\nexport class GenerateContentResponseUsageMetadata {\n  /** Output only. List of modalities of the cached content in the request input. */\n  cacheTokensDetails?: ModalityTokenCount[];\n  /** Output only. Number of tokens in the cached part in the input (the cached content). */\n  cachedContentTokenCount?: number;\n  /** Number of tokens in the response(s). */\n  candidatesTokenCount?: number;\n  /** Output only. List of modalities that were returned in the response. */\n  candidatesTokensDetails?: ModalityTokenCount[];\n  /** Number of tokens in the request. When `cached_content` is set, this is still the total effective prompt size meaning this includes the number of tokens in the cached content. */\n  promptTokenCount?: number;\n  /** Output only. List of modalities that were processed in the request input. */\n  promptTokensDetails?: ModalityTokenCount[];\n  /** Output only. Number of tokens present in thoughts output. */\n  thoughtsTokenCount?: number;\n  /** Output only. Number of tokens present in tool-use prompt(s). */\n  toolUsePromptTokenCount?: number;\n  /** Output only. List of modalities that were processed for tool-use request inputs. */\n  toolUsePromptTokensDetails?: ModalityTokenCount[];\n  /** Total token count for prompt, response candidates, and tool-use prompts (if present). */\n  totalTokenCount?: number;\n  /** Output only. Traffic type. This shows whether a request consumes Pay-As-You-Go or Provisioned Throughput quota. */\n  trafficType?: TrafficType;\n}\n\n/** Response message for PredictionService.GenerateContent. */\nexport class GenerateContentResponse {\n  /** Response variations returned by the model.\n   */\n  candidates?: Candidate[];\n  /** Timestamp when the request is made to the server.\n   */\n  createTime?: string;\n  /** Identifier for each response.\n   */\n  responseId?: string;\n  /** The history of automatic function calling.\n   */\n  automaticFunctionCallingHistory?: Content[];\n  /** Output only. The model version used to generate the response. */\n  modelVersion?: string;\n  /** Output only. Content filter results for a prompt sent in the request. Note: Sent only in the first stream chunk. Only happens when no candidates were generated due to content violations. */\n  promptFeedback?: GenerateContentResponsePromptFeedback;\n  /** Usage metadata about the response(s). */\n  usageMetadata?: GenerateContentResponseUsageMetadata;\n  /**\n   * Returns the concatenation of all text parts from the first candidate in the response.\n   *\n   * @remarks\n   * If there are multiple candidates in the response, the text from the first\n   * one will be returned.\n   * If there are non-text parts in the response, the concatenation of all text\n   * parts will be returned, and a warning will be logged.\n   * If there are thought parts in the response, the concatenation of all text\n   * parts excluding the thought parts will be returned.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.generateContent({\n   *   model: 'gemini-2.0-flash',\n   *   contents:\n   *     'Why is the sky blue?',\n   * });\n   *\n   * console.debug(response.text);\n   * ```\n   */\n  get text(): string | undefined {\n    if (this.candidates?.[0]?.content?.parts?.length === 0) {\n      return undefined;\n    }\n    if (this.candidates && this.candidates.length > 1) {\n      console.warn(\n        'there are multiple candidates in the response, returning text from the first one.',\n      );\n    }\n    let text = '';\n    let anyTextPartText = false;\n    const nonTextParts = [];\n    for (const part of this.candidates?.[0]?.content?.parts ?? []) {\n      for (const [fieldName, fieldValue] of Object.entries(part)) {\n        if (\n          fieldName !== 'text' &&\n          fieldName !== 'thought' &&\n          (fieldValue !== null || fieldValue !== undefined)\n        ) {\n          nonTextParts.push(fieldName);\n        }\n      }\n      if (typeof part.text === 'string') {\n        if (typeof part.thought === 'boolean' && part.thought) {\n          continue;\n        }\n        anyTextPartText = true;\n        text += part.text;\n      }\n    }\n    if (nonTextParts.length > 0) {\n      console.warn(\n        `there are non-text parts ${nonTextParts} in the response, returning concatenation of all text parts. Please refer to the non text parts for a full response from model.`,\n      );\n    }\n    // part.text === '' is different from part.text is null\n    return anyTextPartText ? text : undefined;\n  }\n\n  /**\n   * Returns the concatenation of all inline data parts from the first candidate\n   * in the response.\n   *\n   * @remarks\n   * If there are multiple candidates in the response, the inline data from the\n   * first one will be returned. If there are non-inline data parts in the\n   * response, the concatenation of all inline data parts will be returned, and\n   * a warning will be logged.\n   */\n  get data(): string | undefined {\n    if (this.candidates?.[0]?.content?.parts?.length === 0) {\n      return undefined;\n    }\n    if (this.candidates && this.candidates.length > 1) {\n      console.warn(\n        'there are multiple candidates in the response, returning data from the first one.',\n      );\n    }\n    let data = '';\n    const nonDataParts = [];\n    for (const part of this.candidates?.[0]?.content?.parts ?? []) {\n      for (const [fieldName, fieldValue] of Object.entries(part)) {\n        if (\n          fieldName !== 'inlineData' &&\n          (fieldValue !== null || fieldValue !== undefined)\n        ) {\n          nonDataParts.push(fieldName);\n        }\n      }\n      if (part.inlineData && typeof part.inlineData.data === 'string') {\n        data += atob(part.inlineData.data);\n      }\n    }\n    if (nonDataParts.length > 0) {\n      console.warn(\n        `there are non-data parts ${nonDataParts} in the response, returning concatenation of all data parts. Please refer to the non data parts for a full response from model.`,\n      );\n    }\n    return data.length > 0 ? btoa(data) : undefined;\n  }\n\n  /**\n   * Returns the function calls from the first candidate in the response.\n   *\n   * @remarks\n   * If there are multiple candidates in the response, the function calls from\n   * the first one will be returned.\n   * If there are no function calls in the response, undefined will be returned.\n   *\n   * @example\n   * ```ts\n   * const controlLightFunctionDeclaration: FunctionDeclaration = {\n   *   name: 'controlLight',\n   *   parameters: {\n   *   type: Type.OBJECT,\n   *   description: 'Set the brightness and color temperature of a room light.',\n   *   properties: {\n   *     brightness: {\n   *       type: Type.NUMBER,\n   *       description:\n   *         'Light level from 0 to 100. Zero is off and 100 is full brightness.',\n   *     },\n   *     colorTemperature: {\n   *       type: Type.STRING,\n   *       description:\n   *         'Color temperature of the light fixture which can be `daylight`, `cool` or `warm`.',\n   *     },\n   *   },\n   *   required: ['brightness', 'colorTemperature'],\n   *  };\n   *  const response = await ai.models.generateContent({\n   *     model: 'gemini-2.0-flash',\n   *     contents: 'Dim the lights so the room feels cozy and warm.',\n   *     config: {\n   *       tools: [{functionDeclarations: [controlLightFunctionDeclaration]}],\n   *       toolConfig: {\n   *         functionCallingConfig: {\n   *           mode: FunctionCallingConfigMode.ANY,\n   *           allowedFunctionNames: ['controlLight'],\n   *         },\n   *       },\n   *     },\n   *   });\n   *  console.debug(JSON.stringify(response.functionCalls));\n   * ```\n   */\n  get functionCalls(): FunctionCall[] | undefined {\n    if (this.candidates?.[0]?.content?.parts?.length === 0) {\n      return undefined;\n    }\n    if (this.candidates && this.candidates.length > 1) {\n      console.warn(\n        'there are multiple candidates in the response, returning function calls from the first one.',\n      );\n    }\n    const functionCalls = this.candidates?.[0]?.content?.parts\n      ?.filter((part) => part.functionCall)\n      .map((part) => part.functionCall)\n      .filter(\n        (functionCall): functionCall is FunctionCall =>\n          functionCall !== undefined,\n      );\n    if (functionCalls?.length === 0) {\n      return undefined;\n    }\n    return functionCalls;\n  }\n  /**\n   * Returns the first executable code from the first candidate in the response.\n   *\n   * @remarks\n   * If there are multiple candidates in the response, the executable code from\n   * the first one will be returned.\n   * If there are no executable code in the response, undefined will be\n   * returned.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.generateContent({\n   *   model: 'gemini-2.0-flash',\n   *   contents:\n   *     'What is the sum of the first 50 prime numbers? Generate and run code for the calculation, and make sure you get all 50.'\n   *   config: {\n   *     tools: [{codeExecution: {}}],\n   *   },\n   * });\n   *\n   * console.debug(response.executableCode);\n   * ```\n   */\n  get executableCode(): string | undefined {\n    if (this.candidates?.[0]?.content?.parts?.length === 0) {\n      return undefined;\n    }\n    if (this.candidates && this.candidates.length > 1) {\n      console.warn(\n        'there are multiple candidates in the response, returning executable code from the first one.',\n      );\n    }\n    const executableCode = this.candidates?.[0]?.content?.parts\n      ?.filter((part) => part.executableCode)\n      .map((part) => part.executableCode)\n      .filter(\n        (executableCode): executableCode is ExecutableCode =>\n          executableCode !== undefined,\n      );\n    if (executableCode?.length === 0) {\n      return undefined;\n    }\n\n    return executableCode?.[0]?.code;\n  }\n  /**\n   * Returns the first code execution result from the first candidate in the response.\n   *\n   * @remarks\n   * If there are multiple candidates in the response, the code execution result from\n   * the first one will be returned.\n   * If there are no code execution result in the response, undefined will be returned.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.generateContent({\n   *   model: 'gemini-2.0-flash',\n   *   contents:\n   *     'What is the sum of the first 50 prime numbers? Generate and run code for the calculation, and make sure you get all 50.'\n   *   config: {\n   *     tools: [{codeExecution: {}}],\n   *   },\n   * });\n   *\n   * console.debug(response.codeExecutionResult);\n   * ```\n   */\n  get codeExecutionResult(): string | undefined {\n    if (this.candidates?.[0]?.content?.parts?.length === 0) {\n      return undefined;\n    }\n    if (this.candidates && this.candidates.length > 1) {\n      console.warn(\n        'there are multiple candidates in the response, returning code execution result from the first one.',\n      );\n    }\n    const codeExecutionResult = this.candidates?.[0]?.content?.parts\n      ?.filter((part) => part.codeExecutionResult)\n      .map((part) => part.codeExecutionResult)\n      .filter(\n        (codeExecutionResult): codeExecutionResult is CodeExecutionResult =>\n          codeExecutionResult !== undefined,\n      );\n    if (codeExecutionResult?.length === 0) {\n      return undefined;\n    }\n    return codeExecutionResult?.[0]?.output;\n  }\n}\n\nexport type ReferenceImage =\n  | RawReferenceImage\n  | MaskReferenceImage\n  | ControlReferenceImage\n  | StyleReferenceImage\n  | SubjectReferenceImage;\n\n/** Parameters for the request to edit an image. */\nexport declare interface EditImageParameters {\n  /** The model to use. */\n  model: string;\n  /** A text description of the edit to apply to the image. */\n  prompt: string;\n  /** The reference images for Imagen 3 editing. */\n  referenceImages: ReferenceImage[];\n  /** Configuration for editing. */\n  config?: EditImageConfig;\n}\n\n/** Optional parameters for the embed_content method. */\nexport declare interface EmbedContentConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** Type of task for which the embedding will be used.\n   */\n  taskType?: string;\n  /** Title for the text. Only applicable when TaskType is\n      `RETRIEVAL_DOCUMENT`.\n       */\n  title?: string;\n  /** Reduced dimension for the output embedding. If set,\n      excessive values in the output embedding are truncated from the end.\n      Supported by newer models since 2024 only. You cannot set this value if\n      using the earlier model (`models/embedding-001`).\n       */\n  outputDimensionality?: number;\n  /** Vertex API only. The MIME type of the input.\n   */\n  mimeType?: string;\n  /** Vertex API only. Whether to silently truncate inputs longer than\n      the max sequence length. If this option is set to false, oversized inputs\n      will lead to an INVALID_ARGUMENT error, similar to other text APIs.\n       */\n  autoTruncate?: boolean;\n}\n\n/** Parameters for the embed_content method. */\nexport declare interface EmbedContentParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** The content to embed. Only the `parts.text` fields will be counted.\n   */\n  contents: ContentListUnion;\n  /** Configuration that contains optional parameters.\n   */\n  config?: EmbedContentConfig;\n}\n\n/** Statistics of the input text associated with the result of content embedding. */\nexport declare interface ContentEmbeddingStatistics {\n  /** Vertex API only. If the input text was truncated due to having\n      a length longer than the allowed maximum input.\n       */\n  truncated?: boolean;\n  /** Vertex API only. Number of tokens of the input text.\n   */\n  tokenCount?: number;\n}\n\n/** The embedding generated from an input content. */\nexport declare interface ContentEmbedding {\n  /** A list of floats representing an embedding.\n   */\n  values?: number[];\n  /** Vertex API only. Statistics of the input text associated with this\n      embedding.\n       */\n  statistics?: ContentEmbeddingStatistics;\n}\n\n/** Request-level metadata for the Vertex Embed Content API. */\nexport declare interface EmbedContentMetadata {\n  /** Vertex API only. The total number of billable characters included\n      in the request.\n       */\n  billableCharacterCount?: number;\n}\n\n/** Response for the embed_content method. */\nexport class EmbedContentResponse {\n  /** The embeddings for each request, in the same order as provided in\n      the batch request.\n       */\n  embeddings?: ContentEmbedding[];\n  /** Vertex API only. Metadata about the request.\n   */\n  metadata?: EmbedContentMetadata;\n}\n\n/** The config for generating an images. */\nexport declare interface GenerateImagesConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** Cloud Storage URI used to store the generated images.\n   */\n  outputGcsUri?: string;\n  /** Description of what to discourage in the generated images.\n   */\n  negativePrompt?: string;\n  /** Number of images to generate.\n   */\n  numberOfImages?: number;\n  /** Aspect ratio of the generated images.\n   */\n  aspectRatio?: string;\n  /** Controls how much the model adheres to the text prompt. Large\n      values increase output and prompt alignment, but may compromise image\n      quality.\n       */\n  guidanceScale?: number;\n  /** Random seed for image generation. This is not available when\n      ``add_watermark`` is set to true.\n       */\n  seed?: number;\n  /** Filter level for safety filtering.\n   */\n  safetyFilterLevel?: SafetyFilterLevel;\n  /** Allows generation of people by the model.\n   */\n  personGeneration?: PersonGeneration;\n  /** Whether to report the safety scores of each generated image and\n      the positive prompt in the response.\n       */\n  includeSafetyAttributes?: boolean;\n  /** Whether to include the Responsible AI filter reason if the image\n      is filtered out of the response.\n       */\n  includeRaiReason?: boolean;\n  /** Language of the text in the prompt.\n   */\n  language?: ImagePromptLanguage;\n  /** MIME type of the generated image.\n   */\n  outputMimeType?: string;\n  /** Compression quality of the generated image (for ``image/jpeg``\n      only).\n       */\n  outputCompressionQuality?: number;\n  /** Whether to add a watermark to the generated images.\n   */\n  addWatermark?: boolean;\n  /** Whether to use the prompt rewriting logic.\n   */\n  enhancePrompt?: boolean;\n}\n\n/** The parameters for generating images. */\nexport declare interface GenerateImagesParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** Text prompt that typically describes the images to output.\n   */\n  prompt: string;\n  /** Configuration for generating images.\n   */\n  config?: GenerateImagesConfig;\n}\n\n/** An image. */\nexport declare interface Image {\n  /** The Cloud Storage URI of the image. ``Image`` can contain a value\n      for this field or the ``image_bytes`` field but not both.\n       */\n  gcsUri?: string;\n  /** The image bytes data. ``Image`` can contain a value for this field\n      or the ``gcs_uri`` field but not both.\n       */\n  imageBytes?: string;\n  /** The MIME type of the image. */\n  mimeType?: string;\n}\n\n/** Safety attributes of a GeneratedImage or the user-provided prompt. */\nexport declare interface SafetyAttributes {\n  /** List of RAI categories.\n   */\n  categories?: string[];\n  /** List of scores of each categories.\n   */\n  scores?: number[];\n  /** Internal use only.\n   */\n  contentType?: string;\n}\n\n/** An output image. */\nexport declare interface GeneratedImage {\n  /** The output image data.\n   */\n  image?: Image;\n  /** Responsible AI filter reason if the image is filtered out of the\n      response.\n       */\n  raiFilteredReason?: string;\n  /** Safety attributes of the image. Lists of RAI categories and their\n      scores of each content.\n       */\n  safetyAttributes?: SafetyAttributes;\n  /** The rewritten prompt used for the image generation if the prompt\n      enhancer is enabled.\n       */\n  enhancedPrompt?: string;\n}\n\n/** The output images response. */\nexport class GenerateImagesResponse {\n  /** List of generated images.\n   */\n  generatedImages?: GeneratedImage[];\n  /** Safety attributes of the positive prompt. Only populated if\n      ``include_safety_attributes`` is set to True.\n       */\n  positivePromptSafetyAttributes?: SafetyAttributes;\n}\n\n/** Configuration for a Mask reference image. */\nexport declare interface MaskReferenceConfig {\n  /** Prompts the model to generate a mask instead of you needing to\n      provide one (unless MASK_MODE_USER_PROVIDED is used). */\n  maskMode?: MaskReferenceMode;\n  /** A list of up to 5 class ids to use for semantic segmentation.\n      Automatically creates an image mask based on specific objects. */\n  segmentationClasses?: number[];\n  /** Dilation percentage of the mask provided.\n      Float between 0 and 1. */\n  maskDilation?: number;\n}\n\n/** Configuration for a Control reference image. */\nexport declare interface ControlReferenceConfig {\n  /** The type of control reference image to use. */\n  controlType?: ControlReferenceType;\n  /** Defaults to False. When set to True, the control image will be\n      computed by the model based on the control type. When set to False,\n      the control image must be provided by the user. */\n  enableControlImageComputation?: boolean;\n}\n\n/** Configuration for a Style reference image. */\nexport declare interface StyleReferenceConfig {\n  /** A text description of the style to use for the generated image. */\n  styleDescription?: string;\n}\n\n/** Configuration for a Subject reference image. */\nexport declare interface SubjectReferenceConfig {\n  /** The subject type of a subject reference image. */\n  subjectType?: SubjectReferenceType;\n  /** Subject description for the image. */\n  subjectDescription?: string;\n}\n\n/** Configuration for editing an image. */\nexport declare interface EditImageConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** Cloud Storage URI used to store the generated images.\n   */\n  outputGcsUri?: string;\n  /** Description of what to discourage in the generated images.\n   */\n  negativePrompt?: string;\n  /** Number of images to generate.\n   */\n  numberOfImages?: number;\n  /** Aspect ratio of the generated images.\n   */\n  aspectRatio?: string;\n  /** Controls how much the model adheres to the text prompt. Large\n      values increase output and prompt alignment, but may compromise image\n      quality.\n       */\n  guidanceScale?: number;\n  /** Random seed for image generation. This is not available when\n      ``add_watermark`` is set to true.\n       */\n  seed?: number;\n  /** Filter level for safety filtering.\n   */\n  safetyFilterLevel?: SafetyFilterLevel;\n  /** Allows generation of people by the model.\n   */\n  personGeneration?: PersonGeneration;\n  /** Whether to report the safety scores of each generated image and\n      the positive prompt in the response.\n       */\n  includeSafetyAttributes?: boolean;\n  /** Whether to include the Responsible AI filter reason if the image\n      is filtered out of the response.\n       */\n  includeRaiReason?: boolean;\n  /** Language of the text in the prompt.\n   */\n  language?: ImagePromptLanguage;\n  /** MIME type of the generated image.\n   */\n  outputMimeType?: string;\n  /** Compression quality of the generated image (for ``image/jpeg``\n      only).\n       */\n  outputCompressionQuality?: number;\n  /** Describes the editing mode for the request. */\n  editMode?: EditMode;\n  /** The number of sampling steps. A higher value has better image\n      quality, while a lower value has better latency. */\n  baseSteps?: number;\n}\n\n/** Response for the request to edit an image. */\nexport class EditImageResponse {\n  /** Generated images. */\n  generatedImages?: GeneratedImage[];\n}\n\nexport class UpscaleImageResponse {\n  /** Generated images. */\n  generatedImages?: GeneratedImage[];\n}\n\n/** Optional parameters for models.get method. */\nexport declare interface GetModelConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n}\n\nexport declare interface GetModelParameters {\n  model: string;\n  /** Optional parameters for the request. */\n  config?: GetModelConfig;\n}\n\n/** An endpoint where you deploy models. */\nexport declare interface Endpoint {\n  /** Resource name of the endpoint. */\n  name?: string;\n  /** ID of the model that's deployed to the endpoint. */\n  deployedModelId?: string;\n}\n\n/** A tuned machine learning model. */\nexport declare interface TunedModelInfo {\n  /** ID of the base model that you want to tune. */\n  baseModel?: string;\n  /** Date and time when the base model was created. */\n  createTime?: string;\n  /** Date and time when the base model was last updated. */\n  updateTime?: string;\n}\n\n/** Describes the machine learning model version checkpoint. */\nexport declare interface Checkpoint {\n  /** The ID of the checkpoint.\n   */\n  checkpointId?: string;\n  /** The epoch of the checkpoint.\n   */\n  epoch?: string;\n  /** The step of the checkpoint.\n   */\n  step?: string;\n}\n\n/** A trained machine learning model. */\nexport declare interface Model {\n  /** Resource name of the model. */\n  name?: string;\n  /** Display name of the model. */\n  displayName?: string;\n  /** Description of the model. */\n  description?: string;\n  /** Version ID of the model. A new version is committed when a new\n      model version is uploaded or trained under an existing model ID. The\n      version ID is an auto-incrementing decimal number in string\n      representation. */\n  version?: string;\n  /** List of deployed models created from this base model. Note that a\n      model could have been deployed to endpoints in different locations. */\n  endpoints?: Endpoint[];\n  /** Labels with user-defined metadata to organize your models. */\n  labels?: Record<string, string>;\n  /** Information about the tuned model from the base model. */\n  tunedModelInfo?: TunedModelInfo;\n  /** The maximum number of input tokens that the model can handle. */\n  inputTokenLimit?: number;\n  /** The maximum number of output tokens that the model can generate. */\n  outputTokenLimit?: number;\n  /** List of actions that are supported by the model. */\n  supportedActions?: string[];\n  /** The default checkpoint id of a model version.\n   */\n  defaultCheckpointId?: string;\n  /** The checkpoints of the model. */\n  checkpoints?: Checkpoint[];\n}\n\nexport declare interface ListModelsConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  pageSize?: number;\n  pageToken?: string;\n  filter?: string;\n  /** Set true to list base models, false to list tuned models. */\n  queryBase?: boolean;\n}\n\nexport declare interface ListModelsParameters {\n  config?: ListModelsConfig;\n}\n\nexport class ListModelsResponse {\n  nextPageToken?: string;\n  models?: Model[];\n}\n\n/** Configuration for updating a tuned model. */\nexport declare interface UpdateModelConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  displayName?: string;\n  description?: string;\n  defaultCheckpointId?: string;\n}\n\n/** Configuration for updating a tuned model. */\nexport declare interface UpdateModelParameters {\n  model: string;\n  config?: UpdateModelConfig;\n}\n\n/** Configuration for deleting a tuned model. */\nexport declare interface DeleteModelConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n}\n\n/** Parameters for deleting a tuned model. */\nexport declare interface DeleteModelParameters {\n  model: string;\n  /** Optional parameters for the request. */\n  config?: DeleteModelConfig;\n}\n\nexport class DeleteModelResponse {}\n\n/** Config for thinking features. */\nexport declare interface GenerationConfigThinkingConfig {\n  /** Optional. Indicates whether to include thoughts in the response. If true, thoughts are returned only when available. */\n  includeThoughts?: boolean;\n  /** Optional. Indicates the thinking budget in tokens. This is only applied when enable_thinking is true. */\n  thinkingBudget?: number;\n}\n\n/** Generation config. */\nexport declare interface GenerationConfig {\n  /** Optional. Config for model selection. */\n  modelSelectionConfig?: ModelSelectionConfig;\n  /** Optional. If enabled, audio timestamp will be included in the request to the model. */\n  audioTimestamp?: boolean;\n  /** Optional. Number of candidates to generate. */\n  candidateCount?: number;\n  /** Optional. Frequency penalties. */\n  frequencyPenalty?: number;\n  /** Optional. Logit probabilities. */\n  logprobs?: number;\n  /** Optional. The maximum number of output tokens to generate per message. */\n  maxOutputTokens?: number;\n  /** Optional. If specified, the media resolution specified will be used. */\n  mediaResolution?: MediaResolution;\n  /** Optional. Positive penalties. */\n  presencePenalty?: number;\n  /** Optional. If true, export the logprobs results in response. */\n  responseLogprobs?: boolean;\n  /** Optional. Output response mimetype of the generated candidate text. Supported mimetype: - `text/plain`: (default) Text output. - `application/json`: JSON response in the candidates. The model needs to be prompted to output the appropriate response type, otherwise the behavior is undefined. This is a preview feature. */\n  responseMimeType?: string;\n  /** Optional. The modalities of the response. */\n  responseModalities?: Modality[];\n  /** Optional. The `Schema` object allows the definition of input and output data types. These types can be objects, but also primitives and arrays. Represents a select subset of an [OpenAPI 3.0 schema object](https://spec.openapis.org/oas/v3.0.3#schema). If set, a compatible response_mime_type must also be set. Compatible mimetypes: `application/json`: Schema for JSON response. */\n  responseSchema?: Schema;\n  /** Optional. Routing configuration. */\n  routingConfig?: GenerationConfigRoutingConfig;\n  /** Optional. Seed. */\n  seed?: number;\n  /** Optional. The speech generation config. */\n  speechConfig?: SpeechConfig;\n  /** Optional. Stop sequences. */\n  stopSequences?: string[];\n  /** Optional. Controls the randomness of predictions. */\n  temperature?: number;\n  /** Optional. Config for thinking features. An error will be returned if this field is set for models that don't support thinking. */\n  thinkingConfig?: GenerationConfigThinkingConfig;\n  /** Optional. If specified, top-k sampling will be used. */\n  topK?: number;\n  /** Optional. If specified, nucleus sampling will be used. */\n  topP?: number;\n}\n\n/** Config for the count_tokens method. */\nexport declare interface CountTokensConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** Instructions for the model to steer it toward better performance.\n   */\n  systemInstruction?: ContentUnion;\n  /** Code that enables the system to interact with external systems to\n      perform an action outside of the knowledge and scope of the model.\n       */\n  tools?: Tool[];\n  /** Configuration that the model uses to generate the response. Not\n      supported by the Gemini Developer API.\n       */\n  generationConfig?: GenerationConfig;\n}\n\n/** Parameters for counting tokens. */\nexport declare interface CountTokensParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** Input content. */\n  contents: ContentListUnion;\n  /** Configuration for counting tokens. */\n  config?: CountTokensConfig;\n}\n\n/** Response for counting tokens. */\nexport class CountTokensResponse {\n  /** Total number of tokens. */\n  totalTokens?: number;\n  /** Number of tokens in the cached part of the prompt (the cached content). */\n  cachedContentTokenCount?: number;\n}\n\n/** Optional parameters for computing tokens. */\nexport declare interface ComputeTokensConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n}\n\n/** Parameters for computing tokens. */\nexport declare interface ComputeTokensParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** Input content. */\n  contents: ContentListUnion;\n  /** Optional parameters for the request.\n   */\n  config?: ComputeTokensConfig;\n}\n\n/** Tokens info with a list of tokens and the corresponding list of token ids. */\nexport declare interface TokensInfo {\n  /** Optional. Optional fields for the role from the corresponding Content. */\n  role?: string;\n  /** A list of token ids from the input. */\n  tokenIds?: string[];\n  /** A list of tokens from the input. */\n  tokens?: string[];\n}\n\n/** Response for computing tokens. */\nexport class ComputeTokensResponse {\n  /** Lists of tokens info from the input. A ComputeTokensRequest could have multiple instances with a prompt in each instance. We also need to return lists of tokens info for the request with multiple instances. */\n  tokensInfo?: TokensInfo[];\n}\n\n/** Configuration for generating videos. */\nexport declare interface GenerateVideosConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** Number of output videos. */\n  numberOfVideos?: number;\n  /** The gcs bucket where to save the generated videos. */\n  outputGcsUri?: string;\n  /** Frames per second for video generation. */\n  fps?: number;\n  /** Duration of the clip for video generation in seconds. */\n  durationSeconds?: number;\n  /** The RNG seed. If RNG seed is exactly same for each request with unchanged inputs, the prediction results will be consistent. Otherwise, a random RNG seed will be used each time to produce a different result. */\n  seed?: number;\n  /** The aspect ratio for the generated video. 16:9 (landscape) and 9:16 (portrait) are supported. */\n  aspectRatio?: string;\n  /** The resolution for the generated video. 1280x720, 1920x1080 are supported. */\n  resolution?: string;\n  /** Whether allow to generate person videos, and restrict to specific ages. Supported values are: dont_allow, allow_adult. */\n  personGeneration?: string;\n  /** The pubsub topic where to publish the video generation progress. */\n  pubsubTopic?: string;\n  /** Optional field in addition to the text content. Negative prompts can be explicitly stated here to help generate the video. */\n  negativePrompt?: string;\n  /** Whether to use the prompt rewriting logic. */\n  enhancePrompt?: boolean;\n  /** Whether to generate audio along with the video. */\n  generateAudio?: boolean;\n}\n\n/** Class that represents the parameters for generating an image. */\nexport declare interface GenerateVideosParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** The text prompt for generating the videos. Optional for image to video use cases. */\n  prompt?: string;\n  /** The input image for generating the videos.\n      Optional if prompt is provided. */\n  image?: Image;\n  /** Configuration for generating videos. */\n  config?: GenerateVideosConfig;\n}\n\n/** A generated video. */\nexport declare interface Video {\n  /** Path to another storage. */\n  uri?: string;\n  /** Video bytes. */\n  videoBytes?: string;\n  /** Video encoding, for example \"video/mp4\". */\n  mimeType?: string;\n}\n\n/** A generated video. */\nexport declare interface GeneratedVideo {\n  /** The output video */\n  video?: Video;\n}\n\n/** Response with generated videos. */\nexport class GenerateVideosResponse {\n  /** List of the generated videos */\n  generatedVideos?: GeneratedVideo[];\n  /** Returns if any videos were filtered due to RAI policies. */\n  raiMediaFilteredCount?: number;\n  /** Returns rai failure reasons if any. */\n  raiMediaFilteredReasons?: string[];\n}\n\n/** A video generation operation. */\nexport declare interface GenerateVideosOperation {\n  /** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */\n  name?: string;\n  /** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata.  Any method that returns a long-running operation should document the metadata type, if any. */\n  metadata?: Record<string, unknown>;\n  /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */\n  done?: boolean;\n  /** The error result of the operation in case of failure or cancellation. */\n  error?: Record<string, unknown>;\n  /** The generated videos. */\n  response?: GenerateVideosResponse;\n}\n\n/** Optional parameters for tunings.get method. */\nexport declare interface GetTuningJobConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n}\n\n/** Parameters for the get method. */\nexport declare interface GetTuningJobParameters {\n  name: string;\n  /** Optional parameters for the request. */\n  config?: GetTuningJobConfig;\n}\n\n/** TunedModelCheckpoint for the Tuned Model of a Tuning Job. */\nexport declare interface TunedModelCheckpoint {\n  /** The ID of the checkpoint.\n   */\n  checkpointId?: string;\n  /** The epoch of the checkpoint.\n   */\n  epoch?: string;\n  /** The step of the checkpoint.\n   */\n  step?: string;\n  /** The Endpoint resource name that the checkpoint is deployed to.\n      Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`.\n       */\n  endpoint?: string;\n}\n\nexport declare interface TunedModel {\n  /** Output only. The resource name of the TunedModel. Format: `projects/{project}/locations/{location}/models/{model}`. */\n  model?: string;\n  /** Output only. A resource name of an Endpoint. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`. */\n  endpoint?: string;\n  /** The checkpoints associated with this TunedModel.\n      This field is only populated for tuning jobs that enable intermediate\n      checkpoints. */\n  checkpoints?: TunedModelCheckpoint[];\n}\n\n/** The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors). */\nexport declare interface GoogleRpcStatus {\n  /** The status code, which should be an enum value of google.rpc.Code. */\n  code?: number;\n  /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */\n  details?: Record<string, unknown>[];\n  /** A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */\n  message?: string;\n}\n\n/** Hyperparameters for SFT. */\nexport declare interface SupervisedHyperParameters {\n  /** Optional. Adapter size for tuning. */\n  adapterSize?: AdapterSize;\n  /** Optional. Number of complete passes the model makes over the entire training dataset during training. */\n  epochCount?: string;\n  /** Optional. Multiplier for adjusting the default learning rate. */\n  learningRateMultiplier?: number;\n}\n\n/** Tuning Spec for Supervised Tuning for first party models. */\nexport declare interface SupervisedTuningSpec {\n  /** Optional. If set to true, disable intermediate checkpoints for SFT and only the last checkpoint will be exported. Otherwise, enable intermediate checkpoints for SFT. Default is false. */\n  exportLastCheckpointOnly?: boolean;\n  /** Optional. Hyperparameters for SFT. */\n  hyperParameters?: SupervisedHyperParameters;\n  /** Required. Cloud Storage path to file containing training dataset for tuning. The dataset must be formatted as a JSONL file. */\n  trainingDatasetUri?: string;\n  /** Optional. Cloud Storage path to file containing validation dataset for tuning. The dataset must be formatted as a JSONL file. */\n  validationDatasetUri?: string;\n}\n\n/** Dataset bucket used to create a histogram for the distribution given a population of values. */\nexport declare interface DatasetDistributionDistributionBucket {\n  /** Output only. Number of values in the bucket. */\n  count?: string;\n  /** Output only. Left bound of the bucket. */\n  left?: number;\n  /** Output only. Right bound of the bucket. */\n  right?: number;\n}\n\n/** Distribution computed over a tuning dataset. */\nexport declare interface DatasetDistribution {\n  /** Output only. Defines the histogram bucket. */\n  buckets?: DatasetDistributionDistributionBucket[];\n  /** Output only. The maximum of the population values. */\n  max?: number;\n  /** Output only. The arithmetic mean of the values in the population. */\n  mean?: number;\n  /** Output only. The median of the values in the population. */\n  median?: number;\n  /** Output only. The minimum of the population values. */\n  min?: number;\n  /** Output only. The 5th percentile of the values in the population. */\n  p5?: number;\n  /** Output only. The 95th percentile of the values in the population. */\n  p95?: number;\n  /** Output only. Sum of a given population of values. */\n  sum?: number;\n}\n\n/** Statistics computed over a tuning dataset. */\nexport declare interface DatasetStats {\n  /** Output only. Number of billable characters in the tuning dataset. */\n  totalBillableCharacterCount?: string;\n  /** Output only. Number of tuning characters in the tuning dataset. */\n  totalTuningCharacterCount?: string;\n  /** Output only. Number of examples in the tuning dataset. */\n  tuningDatasetExampleCount?: string;\n  /** Output only. Number of tuning steps for this Tuning Job. */\n  tuningStepCount?: string;\n  /** Output only. Sample user messages in the training dataset uri. */\n  userDatasetExamples?: Content[];\n  /** Output only. Dataset distributions for the user input tokens. */\n  userInputTokenDistribution?: DatasetDistribution;\n  /** Output only. Dataset distributions for the messages per example. */\n  userMessagePerExampleDistribution?: DatasetDistribution;\n  /** Output only. Dataset distributions for the user output tokens. */\n  userOutputTokenDistribution?: DatasetDistribution;\n}\n\n/** Statistics computed for datasets used for distillation. */\nexport declare interface DistillationDataStats {\n  /** Output only. Statistics computed for the training dataset. */\n  trainingDatasetStats?: DatasetStats;\n}\n\n/** Dataset bucket used to create a histogram for the distribution given a population of values. */\nexport declare interface SupervisedTuningDatasetDistributionDatasetBucket {\n  /** Output only. Number of values in the bucket. */\n  count?: number;\n  /** Output only. Left bound of the bucket. */\n  left?: number;\n  /** Output only. Right bound of the bucket. */\n  right?: number;\n}\n\n/** Dataset distribution for Supervised Tuning. */\nexport declare interface SupervisedTuningDatasetDistribution {\n  /** Output only. Sum of a given population of values that are billable. */\n  billableSum?: string;\n  /** Output only. Defines the histogram bucket. */\n  buckets?: SupervisedTuningDatasetDistributionDatasetBucket[];\n  /** Output only. The maximum of the population values. */\n  max?: number;\n  /** Output only. The arithmetic mean of the values in the population. */\n  mean?: number;\n  /** Output only. The median of the values in the population. */\n  median?: number;\n  /** Output only. The minimum of the population values. */\n  min?: number;\n  /** Output only. The 5th percentile of the values in the population. */\n  p5?: number;\n  /** Output only. The 95th percentile of the values in the population. */\n  p95?: number;\n  /** Output only. Sum of a given population of values. */\n  sum?: string;\n}\n\n/** Tuning data statistics for Supervised Tuning. */\nexport declare interface SupervisedTuningDataStats {\n  /** Output only. For each index in `truncated_example_indices`, the user-facing reason why the example was dropped. */\n  droppedExampleReasons?: string[];\n  /** Output only. Number of billable characters in the tuning dataset. */\n  totalBillableCharacterCount?: string;\n  /** Output only. Number of billable tokens in the tuning dataset. */\n  totalBillableTokenCount?: string;\n  /** Output only. The number of examples in the dataset that have been dropped. An example can be dropped for reasons including: too many tokens, contains an invalid image, contains too many images, etc. */\n  totalTruncatedExampleCount?: string;\n  /** Output only. Number of tuning characters in the tuning dataset. */\n  totalTuningCharacterCount?: string;\n  /** Output only. A partial sample of the indices (starting from 1) of the dropped examples. */\n  truncatedExampleIndices?: string[];\n  /** Output only. Number of examples in the tuning dataset. */\n  tuningDatasetExampleCount?: string;\n  /** Output only. Number of tuning steps for this Tuning Job. */\n  tuningStepCount?: string;\n  /** Output only. Sample user messages in the training dataset uri. */\n  userDatasetExamples?: Content[];\n  /** Output only. Dataset distributions for the user input tokens. */\n  userInputTokenDistribution?: SupervisedTuningDatasetDistribution;\n  /** Output only. Dataset distributions for the messages per example. */\n  userMessagePerExampleDistribution?: SupervisedTuningDatasetDistribution;\n  /** Output only. Dataset distributions for the user output tokens. */\n  userOutputTokenDistribution?: SupervisedTuningDatasetDistribution;\n}\n\n/** The tuning data statistic values for TuningJob. */\nexport declare interface TuningDataStats {\n  /** Output only. Statistics for distillation. */\n  distillationDataStats?: DistillationDataStats;\n  /** The SFT Tuning data stats. */\n  supervisedTuningDataStats?: SupervisedTuningDataStats;\n}\n\n/** Represents a customer-managed encryption key spec that can be applied to a top-level resource. */\nexport declare interface EncryptionSpec {\n  /** Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created. */\n  kmsKeyName?: string;\n}\n\n/** Tuning spec for Partner models. */\nexport declare interface PartnerModelTuningSpec {\n  /** Hyperparameters for tuning. The accepted hyper_parameters and their valid range of values will differ depending on the base model. */\n  hyperParameters?: Record<string, unknown>;\n  /** Required. Cloud Storage path to file containing training dataset for tuning. The dataset must be formatted as a JSONL file. */\n  trainingDatasetUri?: string;\n  /** Optional. Cloud Storage path to file containing validation dataset for tuning. The dataset must be formatted as a JSONL file. */\n  validationDatasetUri?: string;\n}\n\n/** Hyperparameters for Distillation. */\nexport declare interface DistillationHyperParameters {\n  /** Optional. Adapter size for distillation. */\n  adapterSize?: AdapterSize;\n  /** Optional. Number of complete passes the model makes over the entire training dataset during training. */\n  epochCount?: string;\n  /** Optional. Multiplier for adjusting the default learning rate. */\n  learningRateMultiplier?: number;\n}\n\n/** Tuning Spec for Distillation. */\nexport declare interface DistillationSpec {\n  /** The base teacher model that is being distilled. See [Supported models](https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/tuning#supported_models). */\n  baseTeacherModel?: string;\n  /** Optional. Hyperparameters for Distillation. */\n  hyperParameters?: DistillationHyperParameters;\n  /** Deprecated. A path in a Cloud Storage bucket, which will be treated as the root output directory of the distillation pipeline. It is used by the system to generate the paths of output artifacts. */\n  pipelineRootDirectory?: string;\n  /** The student model that is being tuned, e.g., \"google/gemma-2b-1.1-it\". Deprecated. Use base_model instead. */\n  studentModel?: string;\n  /** Deprecated. Cloud Storage path to file containing training dataset for tuning. The dataset must be formatted as a JSONL file. */\n  trainingDatasetUri?: string;\n  /** The resource name of the Tuned teacher model. Format: `projects/{project}/locations/{location}/models/{model}`. */\n  tunedTeacherModelSource?: string;\n  /** Optional. Cloud Storage path to file containing validation dataset for tuning. The dataset must be formatted as a JSONL file. */\n  validationDatasetUri?: string;\n}\n\n/** A tuning job. */\nexport declare interface TuningJob {\n  /** Output only. Identifier. Resource name of a TuningJob. Format: `projects/{project}/locations/{location}/tuningJobs/{tuning_job}` */\n  name?: string;\n  /** Output only. The detailed state of the job. */\n  state?: JobState;\n  /** Output only. Time when the TuningJob was created. */\n  createTime?: string;\n  /** Output only. Time when the TuningJob for the first time entered the `JOB_STATE_RUNNING` state. */\n  startTime?: string;\n  /** Output only. Time when the TuningJob entered any of the following JobStates: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`, `JOB_STATE_EXPIRED`. */\n  endTime?: string;\n  /** Output only. Time when the TuningJob was most recently updated. */\n  updateTime?: string;\n  /** Output only. Only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`. */\n  error?: GoogleRpcStatus;\n  /** Optional. The description of the TuningJob. */\n  description?: string;\n  /** The base model that is being tuned. See [Supported models](https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/tuning#supported_models). */\n  baseModel?: string;\n  /** Output only. The tuned model resources associated with this TuningJob. */\n  tunedModel?: TunedModel;\n  /** Tuning Spec for Supervised Fine Tuning. */\n  supervisedTuningSpec?: SupervisedTuningSpec;\n  /** Output only. The tuning data statistics associated with this TuningJob. */\n  tuningDataStats?: TuningDataStats;\n  /** Customer-managed encryption key options for a TuningJob. If this is set, then all resources created by the TuningJob will be encrypted with the provided encryption key. */\n  encryptionSpec?: EncryptionSpec;\n  /** Tuning Spec for open sourced and third party Partner models. */\n  partnerModelTuningSpec?: PartnerModelTuningSpec;\n  /** Tuning Spec for Distillation. */\n  distillationSpec?: DistillationSpec;\n  /** Output only. The Experiment associated with this TuningJob. */\n  experiment?: string;\n  /** Optional. The labels with user-defined metadata to organize TuningJob and generated resources such as Model and Endpoint. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. */\n  labels?: Record<string, string>;\n  /** Output only. The resource name of the PipelineJob associated with the TuningJob. Format: `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`. */\n  pipelineJob?: string;\n  /** The service account that the tuningJob workload runs as. If not specified, the Vertex AI Secure Fine-Tuned Service Agent in the project will be used. See https://cloud.google.com/iam/docs/service-agents#vertex-ai-secure-fine-tuning-service-agent Users starting the pipeline must have the `iam.serviceAccounts.actAs` permission on this service account. */\n  serviceAccount?: string;\n  /** Optional. The display name of the TunedModel. The name can be up to 128 characters long and can consist of any UTF-8 characters. */\n  tunedModelDisplayName?: string;\n}\n\n/** Configuration for the list tuning jobs method. */\nexport declare interface ListTuningJobsConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  pageSize?: number;\n  pageToken?: string;\n  filter?: string;\n}\n\n/** Parameters for the list tuning jobs method. */\nexport declare interface ListTuningJobsParameters {\n  config?: ListTuningJobsConfig;\n}\n\n/** Response for the list tuning jobs method. */\nexport class ListTuningJobsResponse {\n  /** A token to retrieve the next page of results. Pass to ListTuningJobsRequest.page_token to obtain that page. */\n  nextPageToken?: string;\n  /** List of TuningJobs in the requested page. */\n  tuningJobs?: TuningJob[];\n}\n\nexport declare interface TuningExample {\n  /** Text model input. */\n  textInput?: string;\n  /** The expected model output. */\n  output?: string;\n}\n\n/** Supervised fine-tuning training dataset. */\nexport declare interface TuningDataset {\n  /** GCS URI of the file containing training dataset in JSONL format. */\n  gcsUri?: string;\n  /** Inline examples with simple input/output text. */\n  examples?: TuningExample[];\n}\n\nexport declare interface TuningValidationDataset {\n  /** GCS URI of the file containing validation dataset in JSONL format. */\n  gcsUri?: string;\n}\n\n/** Supervised fine-tuning job creation request - optional fields. */\nexport declare interface CreateTuningJobConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** Cloud Storage path to file containing training dataset for tuning. The dataset must be formatted as a JSONL file. */\n  validationDataset?: TuningValidationDataset;\n  /** The display name of the tuned Model. The name can be up to 128 characters long and can consist of any UTF-8 characters. */\n  tunedModelDisplayName?: string;\n  /** The description of the TuningJob */\n  description?: string;\n  /** Number of complete passes the model makes over the entire training dataset during training. */\n  epochCount?: number;\n  /** Multiplier for adjusting the default learning rate. */\n  learningRateMultiplier?: number;\n  /** If set to true, disable intermediate checkpoints for SFT and only the last checkpoint will be exported. Otherwise, enable intermediate checkpoints for SFT. */\n  exportLastCheckpointOnly?: boolean;\n  /** Adapter size for tuning. */\n  adapterSize?: AdapterSize;\n  /** The batch size hyperparameter for tuning. If not set, a default of 4 or 16 will be used based on the number of training examples. */\n  batchSize?: number;\n  /** The learning rate hyperparameter for tuning. If not set, a default of 0.001 or 0.0002 will be calculated based on the number of training examples. */\n  learningRate?: number;\n}\n\n/** Supervised fine-tuning job creation parameters - optional fields. */\nexport declare interface CreateTuningJobParameters {\n  /** The base model that is being tuned, e.g., \"gemini-1.0-pro-002\". */\n  baseModel: string;\n  /** Cloud Storage path to file containing training dataset for tuning. The dataset must be formatted as a JSONL file. */\n  trainingDataset: TuningDataset;\n  /** Configuration for the tuning job. */\n  config?: CreateTuningJobConfig;\n}\n\n/** A long-running operation. */\nexport declare interface Operation {\n  /** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */\n  name?: string;\n  /** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata.  Any method that returns a long-running operation should document the metadata type, if any. */\n  metadata?: Record<string, unknown>;\n  /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */\n  done?: boolean;\n  /** The error result of the operation in case of failure or cancellation. */\n  error?: Record<string, unknown>;\n}\n\n/** Optional configuration for cached content creation. */\nexport declare interface CreateCachedContentConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** The TTL for this resource. The expiration time is computed: now + TTL. It is a duration string, with up to nine fractional digits, terminated by 's'. Example: \"3.5s\". */\n  ttl?: string;\n  /** Timestamp of when this resource is considered expired. Uses RFC 3339 format, Example: 2014-10-02T15:01:23Z. */\n  expireTime?: string;\n  /** The user-generated meaningful display name of the cached content.\n   */\n  displayName?: string;\n  /** The content to cache.\n   */\n  contents?: ContentListUnion;\n  /** Developer set system instruction.\n   */\n  systemInstruction?: ContentUnion;\n  /** A list of `Tools` the model may use to generate the next response.\n   */\n  tools?: Tool[];\n  /** Configuration for the tools to use. This config is shared for all tools.\n   */\n  toolConfig?: ToolConfig;\n  /** The Cloud KMS resource identifier of the customer managed\n      encryption key used to protect a resource.\n      The key needs to be in the same region as where the compute resource is\n      created. See\n      https://cloud.google.com/vertex-ai/docs/general/cmek for more\n      details. If this is set, then all created CachedContent objects\n      will be encrypted with the provided encryption key.\n      Allowed formats: projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}\n       */\n  kmsKeyName?: string;\n}\n\n/** Parameters for caches.create method. */\nexport declare interface CreateCachedContentParameters {\n  /** ID of the model to use. Example: gemini-2.0-flash */\n  model: string;\n  /** Configuration that contains optional parameters.\n   */\n  config?: CreateCachedContentConfig;\n}\n\n/** Metadata on the usage of the cached content. */\nexport declare interface CachedContentUsageMetadata {\n  /** Duration of audio in seconds. */\n  audioDurationSeconds?: number;\n  /** Number of images. */\n  imageCount?: number;\n  /** Number of text characters. */\n  textCount?: number;\n  /** Total number of tokens that the cached content consumes. */\n  totalTokenCount?: number;\n  /** Duration of video in seconds. */\n  videoDurationSeconds?: number;\n}\n\n/** A resource used in LLM queries for users to explicitly specify what to cache. */\nexport declare interface CachedContent {\n  /** The server-generated resource name of the cached content. */\n  name?: string;\n  /** The user-generated meaningful display name of the cached content. */\n  displayName?: string;\n  /** The name of the publisher model to use for cached content. */\n  model?: string;\n  /** Creation time of the cache entry. */\n  createTime?: string;\n  /** When the cache entry was last updated in UTC time. */\n  updateTime?: string;\n  /** Expiration time of the cached content. */\n  expireTime?: string;\n  /** Metadata on the usage of the cached content. */\n  usageMetadata?: CachedContentUsageMetadata;\n}\n\n/** Optional parameters for caches.get method. */\nexport declare interface GetCachedContentConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n}\n\n/** Parameters for caches.get method. */\nexport declare interface GetCachedContentParameters {\n  /** The server-generated resource name of the cached content.\n   */\n  name: string;\n  /** Optional parameters for the request.\n   */\n  config?: GetCachedContentConfig;\n}\n\n/** Optional parameters for caches.delete method. */\nexport declare interface DeleteCachedContentConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n}\n\n/** Parameters for caches.delete method. */\nexport declare interface DeleteCachedContentParameters {\n  /** The server-generated resource name of the cached content.\n   */\n  name: string;\n  /** Optional parameters for the request.\n   */\n  config?: DeleteCachedContentConfig;\n}\n\n/** Empty response for caches.delete method. */\nexport class DeleteCachedContentResponse {}\n\n/** Optional parameters for caches.update method. */\nexport declare interface UpdateCachedContentConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** The TTL for this resource. The expiration time is computed: now + TTL. It is a duration string, with up to nine fractional digits, terminated by 's'. Example: \"3.5s\". */\n  ttl?: string;\n  /** Timestamp of when this resource is considered expired. Uses RFC 3339 format, Example: 2014-10-02T15:01:23Z. */\n  expireTime?: string;\n}\n\nexport declare interface UpdateCachedContentParameters {\n  /** The server-generated resource name of the cached content.\n   */\n  name: string;\n  /** Configuration that contains optional parameters.\n   */\n  config?: UpdateCachedContentConfig;\n}\n\n/** Config for caches.list method. */\nexport declare interface ListCachedContentsConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  pageSize?: number;\n  pageToken?: string;\n}\n\n/** Parameters for caches.list method. */\nexport declare interface ListCachedContentsParameters {\n  /** Configuration that contains optional parameters.\n   */\n  config?: ListCachedContentsConfig;\n}\n\nexport class ListCachedContentsResponse {\n  nextPageToken?: string;\n  /** List of cached contents.\n   */\n  cachedContents?: CachedContent[];\n}\n\n/** Used to override the default configuration. */\nexport declare interface ListFilesConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  pageSize?: number;\n  pageToken?: string;\n}\n\n/** Generates the parameters for the list method. */\nexport declare interface ListFilesParameters {\n  /** Used to override the default configuration. */\n  config?: ListFilesConfig;\n}\n\n/** Status of a File that uses a common error model. */\nexport declare interface FileStatus {\n  /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */\n  details?: Record<string, unknown>[];\n  /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */\n  message?: string;\n  /** The status code. 0 for OK, 1 for CANCELLED */\n  code?: number;\n}\n\n/** A file uploaded to the API. */\nexport declare interface File {\n  /** The `File` resource name. The ID (name excluding the \"files/\" prefix) can contain up to 40 characters that are lowercase alphanumeric or dashes (-). The ID cannot start or end with a dash. If the name is empty on create, a unique name will be generated. Example: `files/123-456` */\n  name?: string;\n  /** Optional. The human-readable display name for the `File`. The display name must be no more than 512 characters in length, including spaces. Example: 'Welcome Image' */\n  displayName?: string;\n  /** Output only. MIME type of the file. */\n  mimeType?: string;\n  /** Output only. Size of the file in bytes. */\n  sizeBytes?: string;\n  /** Output only. The timestamp of when the `File` was created. */\n  createTime?: string;\n  /** Output only. The timestamp of when the `File` will be deleted. Only set if the `File` is scheduled to expire. */\n  expirationTime?: string;\n  /** Output only. The timestamp of when the `File` was last updated. */\n  updateTime?: string;\n  /** Output only. SHA-256 hash of the uploaded bytes. The hash value is encoded in base64 format. */\n  sha256Hash?: string;\n  /** Output only. The URI of the `File`. */\n  uri?: string;\n  /** Output only. The URI of the `File`, only set for downloadable (generated) files. */\n  downloadUri?: string;\n  /** Output only. Processing state of the File. */\n  state?: FileState;\n  /** Output only. The source of the `File`. */\n  source?: FileSource;\n  /** Output only. Metadata for a video. */\n  videoMetadata?: Record<string, unknown>;\n  /** Output only. Error status if File processing failed. */\n  error?: FileStatus;\n}\n\n/** Response for the list files method. */\nexport class ListFilesResponse {\n  /** A token to retrieve next page of results. */\n  nextPageToken?: string;\n  /** The list of files. */\n  files?: File[];\n}\n\n/** Used to override the default configuration. */\nexport declare interface CreateFileConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n}\n\n/** Generates the parameters for the private _create method. */\nexport declare interface CreateFileParameters {\n  /** The file to be uploaded.\n            mime_type: (Required) The MIME type of the file. Must be provided.\n            name: (Optional) The name of the file in the destination (e.g.\n            'files/sample-image').\n            display_name: (Optional) The display name of the file.\n       */\n  file: File;\n  /** Used to override the default configuration. */\n  config?: CreateFileConfig;\n}\n\n/** A wrapper class for the http response. */\nexport class HttpResponse {\n  /** Used to retain the processed HTTP headers in the response. */\n  headers?: Record<string, string>;\n  /**\n   * The original http response.\n   */\n  responseInternal: Response;\n\n  constructor(response: Response) {\n    // Process the headers.\n    const headers: Record<string, string> = {};\n    for (const pair of response.headers.entries()) {\n      headers[pair[0]] = pair[1];\n    }\n    this.headers = headers;\n\n    // Keep the original response.\n    this.responseInternal = response;\n  }\n\n  json(): Promise<unknown> {\n    return this.responseInternal.json();\n  }\n}\n\n/** Callbacks for the live API. */\nexport interface LiveCallbacks {\n  /**\n   * Called when the websocket connection is established.\n   */\n  onopen?: (() => void) | null;\n  /**\n   * Called when a message is received from the server.\n   */\n  onmessage: (e: LiveServerMessage) => void;\n  /**\n   * Called when an error occurs.\n   */\n  onerror?: ((e: ErrorEvent) => void) | null;\n  /**\n   * Called when the websocket connection is closed.\n   */\n  onclose?: ((e: CloseEvent) => void) | null;\n}\n\n/** Response for the create file method. */\nexport class CreateFileResponse {\n  /** Used to retain the full HTTP response. */\n  sdkHttpResponse?: HttpResponse;\n}\n\n/** Used to override the default configuration. */\nexport declare interface GetFileConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n}\n\n/** Generates the parameters for the get method. */\nexport declare interface GetFileParameters {\n  /** The name identifier for the file to retrieve. */\n  name: string;\n  /** Used to override the default configuration. */\n  config?: GetFileConfig;\n}\n\n/** Used to override the default configuration. */\nexport declare interface DeleteFileConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n}\n\n/** Generates the parameters for the get method. */\nexport declare interface DeleteFileParameters {\n  /** The name identifier for the file to be deleted. */\n  name: string;\n  /** Used to override the default configuration. */\n  config?: DeleteFileConfig;\n}\n\n/** Response for the delete file method. */\nexport class DeleteFileResponse {}\n\nexport declare interface GetOperationConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n}\n\n/** Parameters for the GET method. */\nexport declare interface GetOperationParameters {\n  /** The server-assigned name for the operation. */\n  operationName: string;\n  /** Used to override the default configuration. */\n  config?: GetOperationConfig;\n}\n\nexport declare interface FetchPredictOperationConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n}\n\n/** Parameters for the fetchPredictOperation method. */\nexport declare interface FetchPredictOperationParameters {\n  /** The server-assigned name for the operation. */\n  operationName: string;\n  resourceName: string;\n  /** Used to override the default configuration. */\n  config?: FetchPredictOperationConfig;\n}\n\nexport declare interface TestTableItem {\n  /** The name of the test. This is used to derive the replay id. */\n  name?: string;\n  /** The parameters to the test. Use pydantic models. */\n  parameters?: Record<string, unknown>;\n  /** Expects an exception for MLDev matching the string. */\n  exceptionIfMldev?: string;\n  /** Expects an exception for Vertex matching the string. */\n  exceptionIfVertex?: string;\n  /** Use if you don't want to use the default replay id which is derived from the test name. */\n  overrideReplayId?: string;\n  /** True if the parameters contain an unsupported union type. This test  will be skipped for languages that do not support the union type. */\n  hasUnion?: boolean;\n  /** When set to a reason string, this test will be skipped in the API mode. Use this flag for tests that can not be reproduced with the real API. E.g. a test that deletes a resource. */\n  skipInApiMode?: string;\n  /** Keys to ignore when comparing the request and response. This is useful for tests that are not deterministic. */\n  ignoreKeys?: string[];\n}\n\nexport declare interface TestTableFile {\n  comment?: string;\n  testMethod?: string;\n  parameterNames?: string[];\n  testTable?: TestTableItem[];\n}\n\n/** Represents a single request in a replay. */\nexport declare interface ReplayRequest {\n  method?: string;\n  url?: string;\n  headers?: Record<string, string>;\n  bodySegments?: Record<string, unknown>[];\n}\n\n/** Represents a single response in a replay. */\nexport class ReplayResponse {\n  statusCode?: number;\n  headers?: Record<string, string>;\n  bodySegments?: Record<string, unknown>[];\n  sdkResponseSegments?: Record<string, unknown>[];\n}\n\n/** Represents a single interaction, request and response in a replay. */\nexport declare interface ReplayInteraction {\n  request?: ReplayRequest;\n  response?: ReplayResponse;\n}\n\n/** Represents a recorded session. */\nexport declare interface ReplayFile {\n  replayId?: string;\n  interactions?: ReplayInteraction[];\n}\n\n/** Used to override the default configuration. */\nexport declare interface UploadFileConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** The name of the file in the destination (e.g., 'files/sample-image'. If not provided one will be generated. */\n  name?: string;\n  /** mime_type: The MIME type of the file. If not provided, it will be inferred from the file extension. */\n  mimeType?: string;\n  /** Optional display name of the file. */\n  displayName?: string;\n}\n\n/** Used to override the default configuration. */\nexport declare interface DownloadFileConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n}\n\n/** Parameters used to download a file. */\nexport declare interface DownloadFileParameters {\n  /** The file to download. It can be a file name, a file object or a generated video. */\n  file: DownloadableFileUnion;\n  /** Location where the file should be downloaded to. */\n  downloadPath: string;\n  /** Configuration to for the download operation. */\n  config?: DownloadFileConfig;\n}\n\n/** Configuration for upscaling an image.\n\n  For more information on this configuration, refer to\n  the `Imagen API reference documentation\n  <https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/imagen-api>`_.\n   */\nexport declare interface UpscaleImageConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** Whether to include a reason for filtered-out images in the\n      response. */\n  includeRaiReason?: boolean;\n  /** The image format that the output should be saved as. */\n  outputMimeType?: string;\n  /** The level of compression if the ``output_mime_type`` is\n      ``image/jpeg``. */\n  outputCompressionQuality?: number;\n}\n\n/** User-facing config UpscaleImageParameters. */\nexport declare interface UpscaleImageParameters {\n  /** The model to use. */\n  model: string;\n  /** The input image to upscale. */\n  image: Image;\n  /** The factor to upscale the image (x2 or x4). */\n  upscaleFactor: string;\n  /** Configuration for upscaling. */\n  config?: UpscaleImageConfig;\n}\n\n/** A raw reference image.\n\n  A raw reference image represents the base image to edit, provided by the user.\n  It can optionally be provided in addition to a mask reference image or\n  a style reference image.\n   */\nexport class RawReferenceImage {\n  /** The reference image for the editing operation. */\n  referenceImage?: Image;\n  /** The id of the reference image. */\n  referenceId?: number;\n  /** The type of the reference image. Only set by the SDK. */\n  referenceType?: string;\n  /** Internal method to convert to ReferenceImageAPIInternal. */\n  toReferenceImageAPI(): ReferenceImageAPIInternal {\n    const referenceImageAPI = {\n      referenceType: 'REFERENCE_TYPE_RAW',\n      referenceImage: this.referenceImage,\n      referenceId: this.referenceId,\n    };\n    return referenceImageAPI;\n  }\n}\n\n/** A mask reference image.\n\n  This encapsulates either a mask image provided by the user and configs for\n  the user provided mask, or only config parameters for the model to generate\n  a mask.\n\n  A mask image is an image whose non-zero values indicate where to edit the base\n  image. If the user provides a mask image, the mask must be in the same\n  dimensions as the raw image.\n   */\nexport class MaskReferenceImage {\n  /** The reference image for the editing operation. */\n  referenceImage?: Image;\n  /** The id of the reference image. */\n  referenceId?: number;\n  /** The type of the reference image. Only set by the SDK. */\n  referenceType?: string;\n  /** Configuration for the mask reference image. */\n  config?: MaskReferenceConfig;\n  /** Internal method to convert to ReferenceImageAPIInternal. */\n  toReferenceImageAPI(): ReferenceImageAPIInternal {\n    const referenceImageAPI = {\n      referenceType: 'REFERENCE_TYPE_MASK',\n      referenceImage: this.referenceImage,\n      referenceId: this.referenceId,\n      maskImageConfig: this.config,\n    };\n    return referenceImageAPI;\n  }\n}\n\n/** A control reference image.\n\n  The image of the control reference image is either a control image provided\n  by the user, or a regular image which the backend will use to generate a\n  control image of. In the case of the latter, the\n  enable_control_image_computation field in the config should be set to True.\n\n  A control image is an image that represents a sketch image of areas for the\n  model to fill in based on the prompt.\n   */\nexport class ControlReferenceImage {\n  /** The reference image for the editing operation. */\n  referenceImage?: Image;\n  /** The id of the reference image. */\n  referenceId?: number;\n  /** The type of the reference image. Only set by the SDK. */\n  referenceType?: string;\n  /** Configuration for the control reference image. */\n  config?: ControlReferenceConfig;\n  /** Internal method to convert to ReferenceImageAPIInternal. */\n  toReferenceImageAPI(): ReferenceImageAPIInternal {\n    const referenceImageAPI = {\n      referenceType: 'REFERENCE_TYPE_CONTROL',\n      referenceImage: this.referenceImage,\n      referenceId: this.referenceId,\n      controlImageConfig: this.config,\n    };\n    return referenceImageAPI;\n  }\n}\n\n/** A style reference image.\n\n  This encapsulates a style reference image provided by the user, and\n  additionally optional config parameters for the style reference image.\n\n  A raw reference image can also be provided as a destination for the style to\n  be applied to.\n   */\nexport class StyleReferenceImage {\n  /** The reference image for the editing operation. */\n  referenceImage?: Image;\n  /** The id of the reference image. */\n  referenceId?: number;\n  /** The type of the reference image. Only set by the SDK. */\n  referenceType?: string;\n  /** Configuration for the style reference image. */\n  config?: StyleReferenceConfig;\n  /** Internal method to convert to ReferenceImageAPIInternal. */\n  toReferenceImageAPI(): ReferenceImageAPIInternal {\n    const referenceImageAPI = {\n      referenceType: 'REFERENCE_TYPE_STYLE',\n      referenceImage: this.referenceImage,\n      referenceId: this.referenceId,\n      styleImageConfig: this.config,\n    };\n    return referenceImageAPI;\n  }\n}\n\n/** A subject reference image.\n\n  This encapsulates a subject reference image provided by the user, and\n  additionally optional config parameters for the subject reference image.\n\n  A raw reference image can also be provided as a destination for the subject to\n  be applied to.\n   */\nexport class SubjectReferenceImage {\n  /** The reference image for the editing operation. */\n  referenceImage?: Image;\n  /** The id of the reference image. */\n  referenceId?: number;\n  /** The type of the reference image. Only set by the SDK. */\n  referenceType?: string;\n  /** Configuration for the subject reference image. */\n  config?: SubjectReferenceConfig;\n  /* Internal method to convert to ReferenceImageAPIInternal. */\n  toReferenceImageAPI(): ReferenceImageAPIInternal {\n    const referenceImageAPI = {\n      referenceType: 'REFERENCE_TYPE_SUBJECT',\n      referenceImage: this.referenceImage,\n      referenceId: this.referenceId,\n      subjectImageConfig: this.config,\n    };\n    return referenceImageAPI;\n  }\n}\n\nexport /** Sent in response to a `LiveGenerateContentSetup` message from the client. */\ndeclare interface LiveServerSetupComplete {}\n\n/** Audio transcription in Server Conent. */\nexport declare interface Transcription {\n  /** Transcription text.\n   */\n  text?: string;\n  /** The bool indicates the end of the transcription.\n   */\n  finished?: boolean;\n}\n\n/** Incremental server update generated by the model in response to client messages.\n\n  Content is generated as quickly as possible, and not in real time. Clients\n  may choose to buffer and play it out in real time.\n   */\nexport declare interface LiveServerContent {\n  /** The content that the model has generated as part of the current conversation with the user. */\n  modelTurn?: Content;\n  /** If true, indicates that the model is done generating. Generation will only start in response to additional client messages. Can be set alongside `content`, indicating that the `content` is the last in the turn. */\n  turnComplete?: boolean;\n  /** If true, indicates that a client message has interrupted current model generation. If the client is playing out the content in realtime, this is a good signal to stop and empty the current queue. */\n  interrupted?: boolean;\n  /** Metadata returned to client when grounding is enabled. */\n  groundingMetadata?: GroundingMetadata;\n  /** If true, indicates that the model is done generating. When model is\n      interrupted while generating there will be no generation_complete message\n      in interrupted turn, it will go through interrupted > turn_complete.\n      When model assumes realtime playback there will be delay between\n      generation_complete and turn_complete that is caused by model\n      waiting for playback to finish. If true, indicates that the model\n      has finished generating all content. This is a signal to the client\n      that it can stop sending messages. */\n  generationComplete?: boolean;\n  /** Input transcription. The transcription is independent to the model\n      turn which means it doesn’t imply any ordering between transcription and\n      model turn. */\n  inputTranscription?: Transcription;\n  /** Output transcription. The transcription is independent to the model\n      turn which means it doesn’t imply any ordering between transcription and\n      model turn.\n       */\n  outputTranscription?: Transcription;\n  /** Metadata related to url context retrieval tool. */\n  urlContextMetadata?: UrlContextMetadata;\n}\n\n/** Request for the client to execute the `function_calls` and return the responses with the matching `id`s. */\nexport declare interface LiveServerToolCall {\n  /** The function call to be executed. */\n  functionCalls?: FunctionCall[];\n}\n\n/** Notification for the client that a previously issued `ToolCallMessage` with the specified `id`s should have been not executed and should be cancelled.\n\n  If there were side-effects to those tool calls, clients may attempt to undo\n  the tool calls. This message occurs only in cases where the clients interrupt\n  server turns.\n   */\nexport declare interface LiveServerToolCallCancellation {\n  /** The ids of the tool calls to be cancelled. */\n  ids?: string[];\n}\n\n/** Usage metadata about response(s). */\nexport declare interface UsageMetadata {\n  /** Number of tokens in the prompt. When `cached_content` is set, this is still the total effective prompt size meaning this includes the number of tokens in the cached content. */\n  promptTokenCount?: number;\n  /** Number of tokens in the cached part of the prompt (the cached content). */\n  cachedContentTokenCount?: number;\n  /** Total number of tokens across all the generated response candidates. */\n  responseTokenCount?: number;\n  /** Number of tokens present in tool-use prompt(s). */\n  toolUsePromptTokenCount?: number;\n  /** Number of tokens of thoughts for thinking models. */\n  thoughtsTokenCount?: number;\n  /** Total token count for prompt, response candidates, and tool-use prompts(if present). */\n  totalTokenCount?: number;\n  /** List of modalities that were processed in the request input. */\n  promptTokensDetails?: ModalityTokenCount[];\n  /** List of modalities that were processed in the cache input. */\n  cacheTokensDetails?: ModalityTokenCount[];\n  /** List of modalities that were returned in the response. */\n  responseTokensDetails?: ModalityTokenCount[];\n  /** List of modalities that were processed in the tool-use prompt. */\n  toolUsePromptTokensDetails?: ModalityTokenCount[];\n  /** Traffic type. This shows whether a request consumes Pay-As-You-Go\n or Provisioned Throughput quota. */\n  trafficType?: TrafficType;\n}\n\n/** Server will not be able to service client soon. */\nexport declare interface LiveServerGoAway {\n  /** The remaining time before the connection will be terminated as ABORTED. The minimal time returned here is specified differently together with the rate limits for a given model. */\n  timeLeft?: string;\n}\n\n/** Update of the session resumption state.\n\n  Only sent if `session_resumption` was set in the connection config.\n   */\nexport declare interface LiveServerSessionResumptionUpdate {\n  /** New handle that represents state that can be resumed. Empty if `resumable`=false. */\n  newHandle?: string;\n  /** True if session can be resumed at this point. It might be not possible to resume session at some points. In that case we send update empty new_handle and resumable=false. Example of such case could be model executing function calls or just generating. Resuming session (using previous session token) in such state will result in some data loss. */\n  resumable?: boolean;\n  /** Index of last message sent by client that is included in state represented by this SessionResumptionToken. Only sent when `SessionResumptionConfig.transparent` is set.\n\nPresence of this index allows users to transparently reconnect and avoid issue of losing some part of realtime audio input/video. If client wishes to temporarily disconnect (for example as result of receiving GoAway) they can do it without losing state by buffering messages sent since last `SessionResmumptionTokenUpdate`. This field will enable them to limit buffering (avoid keeping all requests in RAM).\n\nNote: This should not be used for when resuming a session at some time later -- in those cases partial audio and video frames arelikely not needed. */\n  lastConsumedClientMessageIndex?: string;\n}\n\n/** Response message for API call. */\nexport class LiveServerMessage {\n  /** Sent in response to a `LiveClientSetup` message from the client. */\n  setupComplete?: LiveServerSetupComplete;\n  /** Content generated by the model in response to client messages. */\n  serverContent?: LiveServerContent;\n  /** Request for the client to execute the `function_calls` and return the responses with the matching `id`s. */\n  toolCall?: LiveServerToolCall;\n  /** Notification for the client that a previously issued `ToolCallMessage` with the specified `id`s should have been not executed and should be cancelled. */\n  toolCallCancellation?: LiveServerToolCallCancellation;\n  /** Usage metadata about model response(s). */\n  usageMetadata?: UsageMetadata;\n  /** Server will disconnect soon. */\n  goAway?: LiveServerGoAway;\n  /** Update of the session resumption state. */\n  sessionResumptionUpdate?: LiveServerSessionResumptionUpdate;\n  /**\n   * Returns the concatenation of all text parts from the server content if present.\n   *\n   * @remarks\n   * If there are non-text parts in the response, the concatenation of all text\n   * parts will be returned, and a warning will be logged.\n   */\n  get text(): string | undefined {\n    let text = '';\n    let anyTextPartFound = false;\n    const nonTextParts = [];\n    for (const part of this.serverContent?.modelTurn?.parts ?? []) {\n      for (const [fieldName, fieldValue] of Object.entries(part)) {\n        if (\n          fieldName !== 'text' &&\n          fieldName !== 'thought' &&\n          fieldValue !== null\n        ) {\n          nonTextParts.push(fieldName);\n        }\n      }\n      if (typeof part.text === 'string') {\n        if (typeof part.thought === 'boolean' && part.thought) {\n          continue;\n        }\n        anyTextPartFound = true;\n        text += part.text;\n      }\n    }\n    if (nonTextParts.length > 0) {\n      console.warn(\n        `there are non-text parts ${nonTextParts} in the response, returning concatenation of all text parts. Please refer to the non text parts for a full response from model.`,\n      );\n    }\n    // part.text === '' is different from part.text is null\n    return anyTextPartFound ? text : undefined;\n  }\n\n  /**\n   * Returns the concatenation of all inline data parts from the server content if present.\n   *\n   * @remarks\n   * If there are non-inline data parts in the\n   * response, the concatenation of all inline data parts will be returned, and\n   * a warning will be logged.\n   */\n  get data(): string | undefined {\n    let data = '';\n    const nonDataParts = [];\n    for (const part of this.serverContent?.modelTurn?.parts ?? []) {\n      for (const [fieldName, fieldValue] of Object.entries(part)) {\n        if (fieldName !== 'inlineData' && fieldValue !== null) {\n          nonDataParts.push(fieldName);\n        }\n      }\n      if (part.inlineData && typeof part.inlineData.data === 'string') {\n        data += atob(part.inlineData.data);\n      }\n    }\n    if (nonDataParts.length > 0) {\n      console.warn(\n        `there are non-data parts ${nonDataParts} in the response, returning concatenation of all data parts. Please refer to the non data parts for a full response from model.`,\n      );\n    }\n    return data.length > 0 ? btoa(data) : undefined;\n  }\n}\n\n/** Configures automatic detection of activity. */\nexport declare interface AutomaticActivityDetection {\n  /** If enabled, detected voice and text input count as activity. If disabled, the client must send activity signals. */\n  disabled?: boolean;\n  /** Determines how likely speech is to be detected. */\n  startOfSpeechSensitivity?: StartSensitivity;\n  /** Determines how likely detected speech is ended. */\n  endOfSpeechSensitivity?: EndSensitivity;\n  /** The required duration of detected speech before start-of-speech is committed. The lower this value the more sensitive the start-of-speech detection is and the shorter speech can be recognized. However, this also increases the probability of false positives. */\n  prefixPaddingMs?: number;\n  /** The required duration of detected non-speech (e.g. silence) before end-of-speech is committed. The larger this value, the longer speech gaps can be without interrupting the user's activity but this will increase the model's latency. */\n  silenceDurationMs?: number;\n}\n\n/** Marks the end of user activity.\n\n  This can only be sent if automatic (i.e. server-side) activity detection is\n  disabled.\n   */\nexport declare interface RealtimeInputConfig {\n  /** If not set, automatic activity detection is enabled by default. If automatic voice detection is disabled, the client must send activity signals. */\n  automaticActivityDetection?: AutomaticActivityDetection;\n  /** Defines what effect activity has. */\n  activityHandling?: ActivityHandling;\n  /** Defines which input is included in the user's turn. */\n  turnCoverage?: TurnCoverage;\n}\n\n/** Configuration of session resumption mechanism.\n\n  Included in `LiveConnectConfig.session_resumption`. If included server\n  will send `LiveServerSessionResumptionUpdate` messages.\n   */\nexport declare interface SessionResumptionConfig {\n  /** Session resumption handle of previous session (session to restore).\n\nIf not present new session will be started. */\n  handle?: string;\n  /** If set the server will send `last_consumed_client_message_index` in the `session_resumption_update` messages to allow for transparent reconnections. */\n  transparent?: boolean;\n}\n\n/** Context window will be truncated by keeping only suffix of it.\n\n  Context window will always be cut at start of USER role turn. System\n  instructions and `BidiGenerateContentSetup.prefix_turns` will not be\n  subject to the sliding window mechanism, they will always stay at the\n  beginning of context window.\n   */\nexport declare interface SlidingWindow {\n  /** Session reduction target -- how many tokens we should keep. Window shortening operation has some latency costs, so we should avoid running it on every turn. Should be < trigger_tokens. If not set, trigger_tokens/2 is assumed. */\n  targetTokens?: string;\n}\n\n/** Enables context window compression -- mechanism managing model context window so it does not exceed given length. */\nexport declare interface ContextWindowCompressionConfig {\n  /** Number of tokens (before running turn) that triggers context window compression mechanism. */\n  triggerTokens?: string;\n  /** Sliding window compression mechanism. */\n  slidingWindow?: SlidingWindow;\n}\n\n/** The audio transcription configuration in Setup. */\nexport declare interface AudioTranscriptionConfig {}\n\n/** Config for proactivity features. */\nexport declare interface ProactivityConfig {\n  /** If enabled, the model can reject responding to the last prompt. For\n        example, this allows the model to ignore out of context speech or to stay\n        silent if the user did not make a request, yet. */\n  proactiveAudio?: boolean;\n}\n\n/** Message contains configuration that will apply for the duration of the streaming session. */\nexport declare interface LiveClientSetup {\n  /** \n      The fully qualified name of the publisher model or tuned model endpoint to\n      use.\n       */\n  model?: string;\n  /** The generation configuration for the session.\n      Note: only a subset of fields are supported.\n       */\n  generationConfig?: GenerationConfig;\n  /** The user provided system instructions for the model.\n      Note: only text should be used in parts and content in each part will be\n      in a separate paragraph. */\n  systemInstruction?: ContentUnion;\n  /**  A list of `Tools` the model may use to generate the next response.\n\n      A `Tool` is a piece of code that enables the system to interact with\n      external systems to perform an action, or set of actions, outside of\n      knowledge and scope of the model. */\n  tools?: ToolListUnion;\n  /** Configures the realtime input behavior in BidiGenerateContent. */\n  realtimeInputConfig?: RealtimeInputConfig;\n  /** Configures session resumption mechanism.\n\n          If included server will send SessionResumptionUpdate messages. */\n  sessionResumption?: SessionResumptionConfig;\n  /** Configures context window compression mechanism.\n\n      If included, server will compress context window to fit into given length. */\n  contextWindowCompression?: ContextWindowCompressionConfig;\n  /** The transcription of the input aligns with the input audio language.\n   */\n  inputAudioTranscription?: AudioTranscriptionConfig;\n  /** The transcription of the output aligns with the language code\n      specified for the output audio.\n       */\n  outputAudioTranscription?: AudioTranscriptionConfig;\n  /** Configures the proactivity of the model. This allows the model to respond proactively to\n    the input and to ignore irrelevant input. */\n  proactivity?: ProactivityConfig;\n}\n\n/** Incremental update of the current conversation delivered from the client.\n\n  All the content here will unconditionally be appended to the conversation\n  history and used as part of the prompt to the model to generate content.\n\n  A message here will interrupt any current model generation.\n   */\nexport declare interface LiveClientContent {\n  /** The content appended to the current conversation with the model.\n\n      For single-turn queries, this is a single instance. For multi-turn\n      queries, this is a repeated field that contains conversation history and\n      latest request.\n       */\n  turns?: Content[];\n  /** If true, indicates that the server content generation should start with\n  the currently accumulated prompt. Otherwise, the server will await\n  additional messages before starting generation. */\n  turnComplete?: boolean;\n}\n\n/** Marks the start of user activity.\n\n  This can only be sent if automatic (i.e. server-side) activity detection is\n  disabled.\n   */\nexport declare interface ActivityStart {}\n\n/** Marks the end of user activity.\n\n  This can only be sent if automatic (i.e. server-side) activity detection is\n  disabled.\n   */\nexport declare interface ActivityEnd {}\n\n/** User input that is sent in real time.\n\n  This is different from `LiveClientContent` in a few ways:\n\n    - Can be sent continuously without interruption to model generation.\n    - If there is a need to mix data interleaved across the\n      `LiveClientContent` and the `LiveClientRealtimeInput`, server attempts to\n      optimize for best response, but there are no guarantees.\n    - End of turn is not explicitly specified, but is rather derived from user\n      activity (for example, end of speech).\n    - Even before the end of turn, the data is processed incrementally\n      to optimize for a fast start of the response from the model.\n    - Is always assumed to be the user's input (cannot be used to populate\n      conversation history).\n   */\nexport declare interface LiveClientRealtimeInput {\n  /** Inlined bytes data for media input. */\n  mediaChunks?: Blob[];\n  /** The realtime audio input stream. */\n  audio?: Blob;\n  /** \nIndicates that the audio stream has ended, e.g. because the microphone was\nturned off.\n\nThis should only be sent when automatic activity detection is enabled\n(which is the default).\n\nThe client can reopen the stream by sending an audio message.\n */\n  audioStreamEnd?: boolean;\n  /** The realtime video input stream. */\n  video?: Blob;\n  /** The realtime text input stream. */\n  text?: string;\n  /** Marks the start of user activity. */\n  activityStart?: ActivityStart;\n  /** Marks the end of user activity. */\n  activityEnd?: ActivityEnd;\n}\n\n/** Parameters for sending realtime input to the live API. */\nexport declare interface LiveSendRealtimeInputParameters {\n  /** Realtime input to send to the session. */\n  media?: BlobImageUnion;\n  /** The realtime audio input stream. */\n  audio?: Blob;\n  /** \nIndicates that the audio stream has ended, e.g. because the microphone was\nturned off.\n\nThis should only be sent when automatic activity detection is enabled\n(which is the default).\n\nThe client can reopen the stream by sending an audio message.\n */\n  audioStreamEnd?: boolean;\n  /** The realtime video input stream. */\n  video?: BlobImageUnion;\n  /** The realtime text input stream. */\n  text?: string;\n  /** Marks the start of user activity. */\n  activityStart?: ActivityStart;\n  /** Marks the end of user activity. */\n  activityEnd?: ActivityEnd;\n}\n\n/** Client generated response to a `ToolCall` received from the server.\n\n  Individual `FunctionResponse` objects are matched to the respective\n  `FunctionCall` objects by the `id` field.\n\n  Note that in the unary and server-streaming GenerateContent APIs function\n  calling happens by exchanging the `Content` parts, while in the bidi\n  GenerateContent APIs function calling happens over this dedicated set of\n  messages.\n   */\nexport class LiveClientToolResponse {\n  /** The response to the function calls. */\n  functionResponses?: FunctionResponse[];\n}\n\n/** Messages sent by the client in the API call. */\nexport declare interface LiveClientMessage {\n  /** Message to be sent by the system when connecting to the API. SDK users should not send this message. */\n  setup?: LiveClientSetup;\n  /** Incremental update of the current conversation delivered from the client. */\n  clientContent?: LiveClientContent;\n  /** User input that is sent in real time. */\n  realtimeInput?: LiveClientRealtimeInput;\n  /** Response to a `ToolCallMessage` received from the server. */\n  toolResponse?: LiveClientToolResponse;\n}\n\n/** Session config for the API connection. */\nexport declare interface LiveConnectConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** The generation configuration for the session. */\n  generationConfig?: GenerationConfig;\n  /** The requested modalities of the response. Represents the set of\n      modalities that the model can return. Defaults to AUDIO if not specified.\n       */\n  responseModalities?: Modality[];\n  /** Value that controls the degree of randomness in token selection.\n      Lower temperatures are good for prompts that require a less open-ended or\n      creative response, while higher temperatures can lead to more diverse or\n      creative results.\n       */\n  temperature?: number;\n  /** Tokens are selected from the most to least probable until the sum\n      of their probabilities equals this value. Use a lower value for less\n      random responses and a higher value for more random responses.\n       */\n  topP?: number;\n  /** For each token selection step, the ``top_k`` tokens with the\n      highest probabilities are sampled. Then tokens are further filtered based\n      on ``top_p`` with the final token selected using temperature sampling. Use\n      a lower number for less random responses and a higher number for more\n      random responses.\n       */\n  topK?: number;\n  /** Maximum number of tokens that can be generated in the response.\n   */\n  maxOutputTokens?: number;\n  /** If specified, the media resolution specified will be used.\n   */\n  mediaResolution?: MediaResolution;\n  /** When ``seed`` is fixed to a specific number, the model makes a best\n      effort to provide the same response for repeated requests. By default, a\n      random number is used.\n       */\n  seed?: number;\n  /** The speech generation configuration.\n   */\n  speechConfig?: SpeechConfig;\n  /** If enabled, the model will detect emotions and adapt its responses accordingly. */\n  enableAffectiveDialog?: boolean;\n  /** The user provided system instructions for the model.\n      Note: only text should be used in parts and content in each part will be\n      in a separate paragraph. */\n  systemInstruction?: ContentUnion;\n  /** A list of `Tools` the model may use to generate the next response.\n\n      A `Tool` is a piece of code that enables the system to interact with\n      external systems to perform an action, or set of actions, outside of\n      knowledge and scope of the model. */\n  tools?: ToolListUnion;\n  /** Configures session resumption mechanism.\n\nIf included the server will send SessionResumptionUpdate messages. */\n  sessionResumption?: SessionResumptionConfig;\n  /** The transcription of the input aligns with the input audio language.\n   */\n  inputAudioTranscription?: AudioTranscriptionConfig;\n  /** The transcription of the output aligns with the language code\n      specified for the output audio.\n       */\n  outputAudioTranscription?: AudioTranscriptionConfig;\n  /** Configures the realtime input behavior in BidiGenerateContent. */\n  realtimeInputConfig?: RealtimeInputConfig;\n  /** Configures context window compression mechanism.\n\n      If included, server will compress context window to fit into given length. */\n  contextWindowCompression?: ContextWindowCompressionConfig;\n  /** Configures the proactivity of the model. This allows the model to respond proactively to\n    the input and to ignore irrelevant input. */\n  proactivity?: ProactivityConfig;\n}\n\n/** Parameters for connecting to the live API. */\nexport declare interface LiveConnectParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** callbacks */\n  callbacks: LiveCallbacks;\n  /** Optional configuration parameters for the request.\n   */\n  config?: LiveConnectConfig;\n}\n\n/** Parameters for initializing a new chat session.\n\n  These parameters are used when creating a chat session with the\n  `chats.create()` method.\n   */\nexport declare interface CreateChatParameters {\n  /** The name of the model to use for the chat session.\n\n      For example: 'gemini-2.0-flash', 'gemini-2.0-flash-lite', etc. See Gemini API\n      docs to find the available models.\n       */\n  model: string;\n  /** Config for the entire chat session.\n\n      This config applies to all requests within the session\n      unless overridden by a per-request `config` in `SendMessageParameters`.\n       */\n  config?: GenerateContentConfig;\n  /** The initial conversation history for the chat session.\n\n      This allows you to start the chat with a pre-existing history. The history\n      must be a list of `Content` alternating between 'user' and 'model' roles.\n      It should start with a 'user' message.\n       */\n  history?: Content[];\n}\n\n/** Parameters for sending a message within a chat session.\n\n  These parameters are used with the `chat.sendMessage()` method.\n   */\nexport declare interface SendMessageParameters {\n  /** The message to send to the model.\n\n      The SDK will combine all parts into a single 'user' content to send to\n      the model.\n       */\n  message: PartListUnion;\n  /**  Config for this specific request.\n\n      Please note that the per-request config does not change the chat level\n      config, nor inherit from it. If you intend to use some values from the\n      chat's default config, you must explicitly copy them into this per-request\n      config.\n       */\n  config?: GenerateContentConfig;\n}\n\n/** Parameters for sending client content to the live API. */\nexport declare interface LiveSendClientContentParameters {\n  /** Client content to send to the session. */\n  turns?: ContentListUnion;\n  /** If true, indicates that the server content generation should start with\n  the currently accumulated prompt. Otherwise, the server will await\n  additional messages before starting generation. */\n  turnComplete?: boolean;\n}\n\n/** Parameters for sending tool responses to the live API. */\nexport class LiveSendToolResponseParameters {\n  /** Tool responses to send to the session. */\n  functionResponses: FunctionResponse[] | FunctionResponse = [];\n}\n\n/** Message to be sent by the system when connecting to the API. */\nexport declare interface LiveMusicClientSetup {\n  /** The model's resource name. Format: `models/{model}`. */\n  model?: string;\n}\n\n/** Maps a prompt to a relative weight to steer music generation. */\nexport declare interface WeightedPrompt {\n  /** Text prompt. */\n  text?: string;\n  /** Weight of the prompt. The weight is used to control the relative\n      importance of the prompt. Higher weights are more important than lower\n      weights.\n\n      Weight must not be 0. Weights of all weighted_prompts in this\n      LiveMusicClientContent message will be normalized. */\n  weight?: number;\n}\n\n/** User input to start or steer the music. */\nexport declare interface LiveMusicClientContent {\n  /** Weighted prompts as the model input. */\n  weightedPrompts?: WeightedPrompt[];\n}\n\n/** Configuration for music generation. */\nexport declare interface LiveMusicGenerationConfig {\n  /** Controls the variance in audio generation. Higher values produce\n      higher variance. Range is [0.0, 3.0]. */\n  temperature?: number;\n  /** Controls how the model selects tokens for output. Samples the topK\n      tokens with the highest probabilities. Range is [1, 1000]. */\n  topK?: number;\n  /** Seeds audio generation. If not set, the request uses a randomly\n      generated seed. */\n  seed?: number;\n  /** Controls how closely the model follows prompts.\n      Higher guidance follows more closely, but will make transitions more\n      abrupt. Range is [0.0, 6.0]. */\n  guidance?: number;\n  /** Beats per minute. Range is [60, 200]. */\n  bpm?: number;\n  /** Density of sounds. Range is [0.0, 1.0]. */\n  density?: number;\n  /** Brightness of the music. Range is [0.0, 1.0]. */\n  brightness?: number;\n  /** Scale of the generated music. */\n  scale?: Scale;\n  /** Whether the audio output should contain bass. */\n  muteBass?: boolean;\n  /** Whether the audio output should contain drums. */\n  muteDrums?: boolean;\n  /** Whether the audio output should contain only bass and drums. */\n  onlyBassAndDrums?: boolean;\n}\n\n/** Messages sent by the client in the LiveMusicClientMessage call. */\nexport declare interface LiveMusicClientMessage {\n  /** Message to be sent in the first (and only in the first) `LiveMusicClientMessage`.\n      Clients should wait for a `LiveMusicSetupComplete` message before\n      sending any additional messages. */\n  setup?: LiveMusicClientSetup;\n  /** User input to influence music generation. */\n  clientContent?: LiveMusicClientContent;\n  /** Configuration for music generation. */\n  musicGenerationConfig?: LiveMusicGenerationConfig;\n  /** Playback control signal for the music generation. */\n  playbackControl?: LiveMusicPlaybackControl;\n}\n\n/** Sent in response to a `LiveMusicClientSetup` message from the client. */\nexport declare interface LiveMusicServerSetupComplete {}\n\n/** Prompts and config used for generating this audio chunk. */\nexport declare interface LiveMusicSourceMetadata {\n  /** Weighted prompts for generating this audio chunk. */\n  clientContent?: LiveMusicClientContent;\n  /** Music generation config for generating this audio chunk. */\n  musicGenerationConfig?: LiveMusicGenerationConfig;\n}\n\n/** Representation of an audio chunk. */\nexport declare interface AudioChunk {\n  /** Raw byets of audio data. */\n  data?: string;\n  /** MIME type of the audio chunk. */\n  mimeType?: string;\n  /** Prompts and config used for generating this audio chunk. */\n  sourceMetadata?: LiveMusicSourceMetadata;\n}\n\n/** Server update generated by the model in response to client messages.\n\n  Content is generated as quickly as possible, and not in real time.\n  Clients may choose to buffer and play it out in real time.\n   */\nexport declare interface LiveMusicServerContent {\n  /** The audio chunks that the model has generated. */\n  audioChunks?: AudioChunk[];\n}\n\n/** A prompt that was filtered with the reason. */\nexport declare interface LiveMusicFilteredPrompt {\n  /** The text prompt that was filtered. */\n  text?: string;\n  /** The reason the prompt was filtered. */\n  filteredReason?: string;\n}\n\n/** Response message for the LiveMusicClientMessage call. */\nexport class LiveMusicServerMessage {\n  /** Message sent in response to a `LiveMusicClientSetup` message from the client.\n      Clients should wait for this message before sending any additional messages. */\n  setupComplete?: LiveMusicServerSetupComplete;\n  /** Content generated by the model in response to client messages. */\n  serverContent?: LiveMusicServerContent;\n  /** A prompt that was filtered with the reason. */\n  filteredPrompt?: LiveMusicFilteredPrompt;\n  /**\n   * Returns the first audio chunk from the server content, if present.\n   *\n   * @remarks\n   * If there are no audio chunks in the response, undefined will be returned.\n   */\n  get audioChunk(): AudioChunk | undefined {\n    if (\n      this.serverContent &&\n      this.serverContent.audioChunks &&\n      this.serverContent.audioChunks.length > 0\n    ) {\n      return this.serverContent.audioChunks[0];\n    }\n    return undefined;\n  }\n}\n\n/** Callbacks for the realtime music API. */\nexport interface LiveMusicCallbacks {\n  /**\n   * Called when a message is received from the server.\n   */\n  onmessage: (e: LiveMusicServerMessage) => void;\n  /**\n   * Called when an error occurs.\n   */\n  onerror?: ((e: ErrorEvent) => void) | null;\n  /**\n   * Called when the websocket connection is closed.\n   */\n  onclose?: ((e: CloseEvent) => void) | null;\n}\n\n/** Parameters for the upload file method. */\nexport interface UploadFileParameters {\n  /** The string path to the file to be uploaded or a Blob object. */\n  file: string | globalThis.Blob;\n  /** Configuration that contains optional parameters. */\n  config?: UploadFileConfig;\n}\n\n/**\n * CallableTool is an invokable tool that can be executed with external\n * application (e.g., via Model Context Protocol) or local functions with\n * function calling.\n */\nexport interface CallableTool {\n  /**\n   * Returns tool that can be called by Gemini.\n   */\n  tool(): Promise<Tool>;\n  /**\n   * Executes the callable tool with the given function call arguments and\n   * returns the response parts from the tool execution.\n   */\n  callTool(functionCalls: FunctionCall[]): Promise<Part[]>;\n}\n\n/**\n * CallableToolConfig is the configuration for a callable tool.\n */\nexport interface CallableToolConfig {\n  /**\n   * Specifies the model's behavior after invoking this tool.\n   */\n  behavior?: Behavior;\n}\n\n/** Parameters for connecting to the live API. */\nexport declare interface LiveMusicConnectParameters {\n  /** The model's resource name. */\n  model: string;\n  /** Callbacks invoked on server events. */\n  callbacks: LiveMusicCallbacks;\n}\n\n/** Parameters for setting config for the live music API. */\nexport declare interface LiveMusicSetConfigParameters {\n  /** Configuration for music generation. */\n  musicGenerationConfig: LiveMusicGenerationConfig;\n}\n\n/** Parameters for setting weighted prompts for the live music API. */\nexport declare interface LiveMusicSetWeightedPromptsParameters {\n  /** A map of text prompts to weights to use for the generation request. */\n  weightedPrompts: WeightedPrompt[];\n}\n\n/** Config for auth_tokens.create parameters. */\nexport declare interface AuthToken {\n  /** The name of the auth token. */\n  name?: string;\n}\n\n/** Config for LiveConnectConstraints for Auth Token creation. */\nexport declare interface LiveConnectConstraints {\n  /** ID of the model to configure in the ephemeral token for Live API.\n      For a list of models, see `Gemini models\n      <https://ai.google.dev/gemini-api/docs/models>`. */\n  model?: string;\n  /** Configuration specific to Live API connections created using this token. */\n  config?: LiveConnectConfig;\n}\n\n/** Optional parameters. */\nexport declare interface CreateAuthTokenConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Abort signal which can be used to cancel the request.\n\n  NOTE: AbortSignal is a client-only operation. Using it to cancel an\n  operation will not cancel the request in the service. You will still\n  be charged usage for any applicable operations.\n       */\n  abortSignal?: AbortSignal;\n  /** An optional time after which, when using the resulting token,\n      messages in Live API sessions will be rejected. (Gemini may\n      preemptively close the session after this time.)\n\n      If not set then this defaults to 30 minutes in the future. If set, this\n      value must be less than 20 hours in the future. */\n  expireTime?: string;\n  /** The time after which new Live API sessions using the token\n      resulting from this request will be rejected.\n\n      If not set this defaults to 60 seconds in the future. If set, this value\n      must be less than 20 hours in the future. */\n  newSessionExpireTime?: string;\n  /** The number of times the token can be used. If this value is zero\n      then no limit is applied. Default is 1. Resuming a Live API session does\n      not count as a use. */\n  uses?: number;\n  /** Configuration specific to Live API connections created using this token. */\n  liveConnectConstraints?: LiveConnectConstraints;\n  /** Additional fields to lock in the effective LiveConnectParameters. */\n  lockAdditionalFields?: string[];\n}\n\n/** Config for auth_tokens.create parameters. */\nexport declare interface CreateAuthTokenParameters {\n  /** Optional parameters for the request. */\n  config?: CreateAuthTokenConfig;\n}\n\n/** Parameters for the get method of the operations module. */\nexport declare interface OperationGetParameters {\n  /** The operation to be retrieved. */\n  operation: GenerateVideosOperation;\n  /** Used to override the default configuration. */\n  config?: GetOperationConfig;\n}\n\nexport type BlobImageUnion = Blob;\n\nexport type PartUnion = Part | string;\n\nexport type PartListUnion = PartUnion[] | PartUnion;\n\nexport type ContentUnion = Content | PartUnion[] | PartUnion;\n\nexport type ContentListUnion = Content | Content[] | PartUnion | PartUnion[];\n\nexport type SchemaUnion = Schema | unknown;\n\nexport type SpeechConfigUnion = SpeechConfig | string;\n\nexport type ToolUnion = Tool | CallableTool;\n\nexport type ToolListUnion = ToolUnion[];\n\nexport type DownloadableFileUnion = string | File | GeneratedVideo | Video;\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Tool as McpTool} from '@modelcontextprotocol/sdk/types.js';\nimport {z} from 'zod';\n\nimport {ApiClient} from './_api_client.js';\nimport * as types from './types.js';\n\nexport function tModel(apiClient: ApiClient, model: string | unknown): string {\n  if (!model || typeof model !== 'string') {\n    throw new Error('model is required and must be a string');\n  }\n\n  if (apiClient.isVertexAI()) {\n    if (\n      model.startsWith('publishers/') ||\n      model.startsWith('projects/') ||\n      model.startsWith('models/')\n    ) {\n      return model;\n    } else if (model.indexOf('/') >= 0) {\n      const parts = model.split('/', 2);\n      return `publishers/${parts[0]}/models/${parts[1]}`;\n    } else {\n      return `publishers/google/models/${model}`;\n    }\n  } else {\n    if (model.startsWith('models/') || model.startsWith('tunedModels/')) {\n      return model;\n    } else {\n      return `models/${model}`;\n    }\n  }\n}\n\nexport function tCachesModel(\n  apiClient: ApiClient,\n  model: string | unknown,\n): string {\n  const transformedModel = tModel(apiClient, model as string);\n  if (!transformedModel) {\n    return '';\n  }\n\n  if (transformedModel.startsWith('publishers/') && apiClient.isVertexAI()) {\n    // vertex caches only support model name start with projects.\n    return `projects/${apiClient.getProject()}/locations/${apiClient.getLocation()}/${transformedModel}`;\n  } else if (transformedModel.startsWith('models/') && apiClient.isVertexAI()) {\n    return `projects/${apiClient.getProject()}/locations/${apiClient.getLocation()}/publishers/google/${transformedModel}`;\n  } else {\n    return transformedModel;\n  }\n}\n\nexport function tBlobs(\n  apiClient: ApiClient,\n  blobs: types.BlobImageUnion | types.BlobImageUnion[],\n): types.Blob[] {\n  if (Array.isArray(blobs)) {\n    return blobs.map((blob) => tBlob(apiClient, blob));\n  } else {\n    return [tBlob(apiClient, blobs)];\n  }\n}\n\nexport function tBlob(\n  apiClient: ApiClient,\n  blob: types.BlobImageUnion,\n): types.Blob {\n  if (typeof blob === 'object' && blob !== null) {\n    return blob;\n  }\n\n  throw new Error(\n    `Could not parse input as Blob. Unsupported blob type: ${typeof blob}`,\n  );\n}\n\nexport function tImageBlob(\n  apiClient: ApiClient,\n  blob: types.BlobImageUnion,\n): types.Blob {\n  const transformedBlob = tBlob(apiClient, blob);\n  if (\n    transformedBlob.mimeType &&\n    transformedBlob.mimeType.startsWith('image/')\n  ) {\n    return transformedBlob;\n  }\n  throw new Error(`Unsupported mime type: ${transformedBlob.mimeType!}`);\n}\n\nexport function tAudioBlob(apiClient: ApiClient, blob: types.Blob): types.Blob {\n  const transformedBlob = tBlob(apiClient, blob);\n  if (\n    transformedBlob.mimeType &&\n    transformedBlob.mimeType.startsWith('audio/')\n  ) {\n    return transformedBlob;\n  }\n  throw new Error(`Unsupported mime type: ${transformedBlob.mimeType!}`);\n}\n\nexport function tPart(\n  apiClient: ApiClient,\n  origin?: types.PartUnion | null,\n): types.Part {\n  if (origin === null || origin === undefined) {\n    throw new Error('PartUnion is required');\n  }\n  if (typeof origin === 'object') {\n    return origin;\n  }\n  if (typeof origin === 'string') {\n    return {text: origin};\n  }\n  throw new Error(`Unsupported part type: ${typeof origin}`);\n}\n\nexport function tParts(\n  apiClient: ApiClient,\n  origin?: types.PartListUnion | null,\n): types.Part[] {\n  if (\n    origin === null ||\n    origin === undefined ||\n    (Array.isArray(origin) && origin.length === 0)\n  ) {\n    throw new Error('PartListUnion is required');\n  }\n  if (Array.isArray(origin)) {\n    return origin.map((item) => tPart(apiClient, item as types.PartUnion)!);\n  }\n  return [tPart(apiClient, origin)!];\n}\n\nfunction _isContent(origin: unknown): boolean {\n  return (\n    origin !== null &&\n    origin !== undefined &&\n    typeof origin === 'object' &&\n    'parts' in origin &&\n    Array.isArray(origin.parts)\n  );\n}\n\nfunction _isFunctionCallPart(origin: unknown): boolean {\n  return (\n    origin !== null &&\n    origin !== undefined &&\n    typeof origin === 'object' &&\n    'functionCall' in origin\n  );\n}\n\nfunction _isFunctionResponsePart(origin: unknown): boolean {\n  return (\n    origin !== null &&\n    origin !== undefined &&\n    typeof origin === 'object' &&\n    'functionResponse' in origin\n  );\n}\n\nexport function tContent(\n  apiClient: ApiClient,\n  origin?: types.ContentUnion,\n): types.Content {\n  if (origin === null || origin === undefined) {\n    throw new Error('ContentUnion is required');\n  }\n  if (_isContent(origin)) {\n    // _isContent is a utility function that checks if the\n    // origin is a Content.\n    return origin as types.Content;\n  }\n\n  return {\n    role: 'user',\n    parts: tParts(apiClient, origin as types.PartListUnion)!,\n  };\n}\n\nexport function tContentsForEmbed(\n  apiClient: ApiClient,\n  origin: types.ContentListUnion,\n): types.ContentUnion[] {\n  if (!origin) {\n    return [];\n  }\n  if (apiClient.isVertexAI() && Array.isArray(origin)) {\n    return origin.flatMap((item) => {\n      const content = tContent(apiClient, item as types.ContentUnion);\n      if (\n        content.parts &&\n        content.parts.length > 0 &&\n        content.parts[0].text !== undefined\n      ) {\n        return [content.parts[0].text];\n      }\n      return [];\n    });\n  } else if (apiClient.isVertexAI()) {\n    const content = tContent(apiClient, origin as types.ContentUnion);\n    if (\n      content.parts &&\n      content.parts.length > 0 &&\n      content.parts[0].text !== undefined\n    ) {\n      return [content.parts[0].text];\n    }\n    return [];\n  }\n  if (Array.isArray(origin)) {\n    return origin.map(\n      (item) => tContent(apiClient, item as types.ContentUnion)!,\n    );\n  }\n  return [tContent(apiClient, origin as types.ContentUnion)!];\n}\n\nexport function tContents(\n  apiClient: ApiClient,\n  origin?: types.ContentListUnion,\n): types.Content[] {\n  if (\n    origin === null ||\n    origin === undefined ||\n    (Array.isArray(origin) && origin.length === 0)\n  ) {\n    throw new Error('contents are required');\n  }\n  if (!Array.isArray(origin)) {\n    // If it's not an array, it's a single content or a single PartUnion.\n    if (_isFunctionCallPart(origin) || _isFunctionResponsePart(origin)) {\n      throw new Error(\n        'To specify functionCall or functionResponse parts, please wrap them in a Content object, specifying the role for them',\n      );\n    }\n    return [tContent(apiClient, origin as types.ContentUnion)];\n  }\n\n  const result: types.Content[] = [];\n  const accumulatedParts: types.PartUnion[] = [];\n  const isContentArray = _isContent(origin[0]);\n\n  for (const item of origin) {\n    const isContent = _isContent(item);\n\n    if (isContent != isContentArray) {\n      throw new Error(\n        'Mixing Content and Parts is not supported, please group the parts into a the appropriate Content objects and specify the roles for them',\n      );\n    }\n\n    if (isContent) {\n      // `isContent` contains the result of _isContent, which is a utility\n      // function that checks if the item is a Content.\n      result.push(item as types.Content);\n    } else if (_isFunctionCallPart(item) || _isFunctionResponsePart(item)) {\n      throw new Error(\n        'To specify functionCall or functionResponse parts, please wrap them, and any other parts, in Content objects as appropriate, specifying the role for them',\n      );\n    } else {\n      accumulatedParts.push(item as types.PartUnion);\n    }\n  }\n\n  if (!isContentArray) {\n    result.push({role: 'user', parts: tParts(apiClient, accumulatedParts)});\n  }\n  return result;\n}\n\n/**\n * Represents the possible JSON schema types.\n */\ntype JSONSchemaType =\n  | 'string'\n  | 'number'\n  | 'integer'\n  | 'object'\n  | 'array'\n  | 'boolean'\n  | 'null';\n\n/**\n * A subset of JSON Schema according to 2020-12 JSON Schema draft, plus one\n * additional google only field: propertyOrdering. The propertyOrdering field\n * is used to specify the order of the properties in the object. see details in\n * https://ai.google.dev/gemini-api/docs/structured-output#property-ordering\n * for more details.\n *\n * Represents a subset of a JSON Schema object that can be used by Gemini API.\n * The difference between this interface and the Schema interface is that this\n * interface is compatible with OpenAPI 3.1 schema objects while the\n * types.Schema interface @see {@link Schema} is used to make API call to\n * Gemini API.\n */\nexport interface JSONSchema {\n  /**\n   * Validation succeeds if the type of the instance matches the type\n   * represented by the given type, or matches at least one of the given types\n   * in the array.\n   */\n  type?: JSONSchemaType | JSONSchemaType[];\n\n  /**\n   * Defines semantic information about a string instance (e.g., \"date-time\",\n   * \"email\").\n   */\n  format?: string;\n\n  /**\n   * A preferably short description about the purpose of the instance\n   * described by the schema. This is not supported for Gemini API.\n   */\n  title?: string;\n\n  /**\n   * An explanation about the purpose of the instance described by the\n   * schema.\n   */\n  description?: string;\n\n  /**\n   * This keyword can be used to supply a default JSON value associated\n   * with a particular schema. The value should be valid according to the\n   * schema. This is not supported for Gemini API.\n   */\n  default?: unknown;\n\n  /**\n   * Used for arrays. This keyword is used to define the schema of the elements\n   * in the array.\n   */\n  items?: JSONSchema;\n\n  /**\n   * Key word for arrays. Specify the minimum number of elements in the array.\n   */\n  minItems?: string;\n\n  /**\n   * Key word for arrays. Specify the maximum number of elements in the array.e\n   */\n  maxItems?: string;\n\n  /**\n   * Used for specify the possible values for an enum.\n   */\n  enum?: unknown[];\n\n  /**\n   * Used for objects. This keyword is used to define the schema of the\n   * properties in the object.\n   */\n  properties?: Record<string, JSONSchema>;\n\n  /**\n   * Used for objects. This keyword is used to specify the properties of the\n   * object that are required to be present in the instance.\n   */\n  required?: string[];\n\n  /**\n   * The key word for objects. Specify the minimum number of properties in the\n   * object.\n   */\n  minProperties?: string;\n\n  /**\n   * The key word for objects. Specify the maximum number of properties in the\n   * object.\n   */\n  maxProperties?: string;\n\n  /**\n   * Used for numbers. Specify the minimum value for a number.\n   */\n  minimum?: number;\n\n  /**\n   * Used for numbers. specify the maximum value for a number.\n   */\n  maximum?: number;\n\n  /**\n   * Used for strings. The keyword to specify the minimum length of the\n   * string.\n   */\n  minLength?: string;\n\n  /**\n   * Used for strings. The keyword to specify the maximum length of the\n   * string.\n   */\n  maxLength?: string;\n\n  /**\n   * Used for strings. Key word to specify a regular\n   * expression (ECMA-262) matches the instance successfully.\n   */\n  pattern?: string;\n\n  /**\n   * Used for Union types and Intersection types. This keyword is used to define\n   * the schema of the possible values.\n   */\n  anyOf?: JSONSchema[];\n\n  /**\n   * The order of the properties. Not a standard field in OpenAPI spec.\n   * Only used to support the order of the properties. see details in\n   * https://ai.google.dev/gemini-api/docs/structured-output#property-ordering\n   */\n  propertyOrdering?: string[];\n}\n\n// The fields that are supported by JSONSchema. Must be kept in sync with the\n// JSONSchema interface above.\nexport const supportedJsonSchemaFields = new Set<string>([\n  'type',\n  'format',\n  'title',\n  'description',\n  'default',\n  'items',\n  'minItems',\n  'maxItems',\n  'enum',\n  'properties',\n  'required',\n  'minProperties',\n  'maxProperties',\n  'minimum',\n  'maximum',\n  'minLength',\n  'maxLength',\n  'pattern',\n  'anyOf',\n  'propertyOrdering',\n]);\n\nconst jsonSchemaTypeValidator = z.enum([\n  'string',\n  'number',\n  'integer',\n  'object',\n  'array',\n  'boolean',\n  'null',\n]);\n\n// Handles all types and arrays of all types.\nconst schemaTypeUnion = z.union([\n  jsonSchemaTypeValidator,\n  z.array(jsonSchemaTypeValidator),\n]);\n\n// Declare the type for the schema variable.\ntype jsonSchemaValidatorType = z.ZodType<JSONSchema>;\n\n/**\n * Creates a zod validator for JSONSchema.\n *\n * @param strictMode Whether to enable strict mode, default to true. When\n * strict mode is enabled, the zod validator will throw error if there\n * are unrecognized fields in the input data. If strict mode is\n * disabled, the zod validator will ignore the unrecognized fields, only\n * populate the fields that are listed in the JSONSchema. Regardless of\n * the mode the type mismatch will always result in an error, for example\n * items field should be a single JSONSchema, but for tuple type it would\n * be an array of JSONSchema, this will always result in an error.\n * @return The zod validator for JSONSchema.\n */\nexport function createJsonSchemaValidator(\n  strictMode: boolean = true,\n): jsonSchemaValidatorType {\n  const jsonSchemaValidator: jsonSchemaValidatorType = z.lazy(() => {\n    // Define the base object shape *inside* the z.lazy callback\n    const baseShape = z.object({\n      // --- Type ---\n      type: schemaTypeUnion.optional(),\n\n      // --- Annotations ---\n      format: z.string().optional(),\n      title: z.string().optional(),\n      description: z.string().optional(),\n      default: z.unknown().optional(),\n\n      // --- Array Validations ---\n      items: jsonSchemaValidator.optional(),\n      minItems: z.coerce.string().optional(),\n      maxItems: z.coerce.string().optional(),\n      // --- Generic Validations ---\n      enum: z.array(z.unknown()).optional(),\n\n      // --- Object Validations ---\n      properties: z.record(z.string(), jsonSchemaValidator).optional(),\n      required: z.array(z.string()).optional(),\n      minProperties: z.coerce.string().optional(),\n      maxProperties: z.coerce.string().optional(),\n      propertyOrdering: z.array(z.string()).optional(),\n\n      // --- Numeric Validations ---\n      minimum: z.number().optional(),\n      maximum: z.number().optional(),\n\n      // --- String Validations ---\n      minLength: z.coerce.string().optional(),\n      maxLength: z.coerce.string().optional(),\n      pattern: z.string().optional(),\n\n      // --- Schema Composition ---\n      anyOf: z.array(jsonSchemaValidator).optional(),\n\n      // --- Additional Properties --- This field is not included in the\n      // JSONSchema, will not be communicated to the model, it is here purely\n      // for enabling the zod validation strict mode.\n      additionalProperties: z.boolean().optional(),\n    });\n\n    // Conditionally apply .strict() based on the flag\n    return strictMode ? baseShape.strict() : baseShape;\n  });\n  return jsonSchemaValidator;\n}\n\n/*\nHandle type field:\nThe resulted type field in JSONSchema form zod_to_json_schema can be either\nan array consist of primitive types or a single primitive type.\nThis is due to the optimization of zod_to_json_schema, when the types in the\nunion are primitive types without any additional specifications,\nzod_to_json_schema will squash the types into an array instead of put them\nin anyOf fields. Otherwise, it will put the types in anyOf fields.\nSee the following link for more details:\nhttps://github.com/zodjs/zod-to-json-schema/blob/main/src/index.ts#L101\nThe logic here is trying to undo that optimization, flattening the array of\ntypes to anyOf fields.\n                                 type field\n                                      |\n                            ___________________________\n                           /                           \\\n                          /                              \\\n                         /                                \\\n                       Array                              Type.*\n                /                  \\                       |\n      Include null.              Not included null     type = Type.*.\n      [null, Type.*, Type.*]     multiple types.\n      [null, Type.*]             [Type.*, Type.*]\n            /                                \\\n      remove null                             \\\n      add nullable = true                      \\\n       /                    \\                   \\\n    [Type.*]           [Type.*, Type.*]          \\\n only one type left     multiple types left       \\\n add type = Type.*.           \\                  /\n                               \\                /\n                         not populate the type field in final result\n                           and make the types into anyOf fields\n                          anyOf:[{type: 'Type.*'}, {type: 'Type.*'}];\n*/\nfunction flattenTypeArrayToAnyOf(\n  typeList: string[],\n  resultingSchema: types.Schema,\n) {\n  if (typeList.includes('null')) {\n    resultingSchema['nullable'] = true;\n  }\n  const listWithoutNull = typeList.filter((type) => type !== 'null');\n\n  if (listWithoutNull.length === 1) {\n    resultingSchema['type'] = Object.values(types.Type).includes(\n      listWithoutNull[0].toUpperCase() as types.Type,\n    )\n      ? (listWithoutNull[0].toUpperCase() as types.Type)\n      : types.Type.TYPE_UNSPECIFIED;\n  } else {\n    resultingSchema['anyOf'] = [];\n    for (const i of listWithoutNull) {\n      resultingSchema['anyOf'].push({\n        'type': Object.values(types.Type).includes(\n          i.toUpperCase() as types.Type,\n        )\n          ? (i.toUpperCase() as types.Type)\n          : types.Type.TYPE_UNSPECIFIED,\n      });\n    }\n  }\n}\n\nexport function processJsonSchema(\n  _jsonSchema: JSONSchema | types.Schema | Record<string, unknown>,\n): types.Schema {\n  const genAISchema: types.Schema = {};\n  const schemaFieldNames = ['items'];\n  const listSchemaFieldNames = ['anyOf'];\n  const dictSchemaFieldNames = ['properties'];\n\n  if (_jsonSchema['type'] && _jsonSchema['anyOf']) {\n    throw new Error('type and anyOf cannot be both populated.');\n  }\n\n  /*\n  This is to handle the nullable array or object. The _jsonSchema will\n  be in the format of {anyOf: [{type: 'null'}, {type: 'object'}]}. The\n  logic is to check if anyOf has 2 elements and one of the element is null,\n  if so, the anyOf field is unnecessary, so we need to get rid of the anyOf\n  field and make the schema nullable. Then use the other element as the new\n  _jsonSchema for processing. This is because the backend doesn't have a null\n  type.\n  This has to be checked before we process any other fields.\n  For example:\n    const objectNullable = z.object({\n      nullableArray: z.array(z.string()).nullable(),\n    });\n  Will have the raw _jsonSchema as:\n  {\n    type: 'OBJECT',\n    properties: {\n        nullableArray: {\n           anyOf: [\n              {type: 'null'},\n              {\n                type: 'array',\n                items: {type: 'string'},\n              },\n            ],\n        }\n    },\n    required: [ 'nullableArray' ],\n  }\n  Will result in following schema compatible with Gemini API:\n    {\n      type: 'OBJECT',\n      properties: {\n         nullableArray: {\n            nullable: true,\n            type: 'ARRAY',\n            items: {type: 'string'},\n         }\n      },\n      required: [ 'nullableArray' ],\n    }\n  */\n  const incomingAnyOf = _jsonSchema['anyOf'] as JSONSchema[];\n  if (incomingAnyOf != null && incomingAnyOf.length == 2) {\n    if (incomingAnyOf[0]!['type'] === 'null') {\n      genAISchema['nullable'] = true;\n      _jsonSchema = incomingAnyOf![1];\n    } else if (incomingAnyOf[1]!['type'] === 'null') {\n      genAISchema['nullable'] = true;\n      _jsonSchema = incomingAnyOf![0];\n    }\n  }\n\n  if (_jsonSchema['type'] instanceof Array) {\n    flattenTypeArrayToAnyOf(_jsonSchema['type'], genAISchema);\n  }\n\n  for (const [fieldName, fieldValue] of Object.entries(_jsonSchema)) {\n    // Skip if the fieldvalue is undefined or null.\n    if (fieldValue == null) {\n      continue;\n    }\n\n    if (fieldName == 'type') {\n      if (fieldValue === 'null') {\n        throw new Error(\n          'type: null can not be the only possible type for the field.',\n        );\n      }\n      if (fieldValue instanceof Array) {\n        // we have already handled the type field with array of types in the\n        // beginning of this function.\n        continue;\n      }\n      genAISchema['type'] = Object.values(types.Type).includes(\n        fieldValue.toUpperCase() as types.Type,\n      )\n        ? fieldValue.toUpperCase()\n        : types.Type.TYPE_UNSPECIFIED;\n    } else if (schemaFieldNames.includes(fieldName)) {\n      (genAISchema as Record<string, unknown>)[fieldName] =\n        processJsonSchema(fieldValue);\n    } else if (listSchemaFieldNames.includes(fieldName)) {\n      const listSchemaFieldValue: Array<types.Schema> = [];\n      for (const item of fieldValue) {\n        if (item['type'] == 'null') {\n          genAISchema['nullable'] = true;\n          continue;\n        }\n        listSchemaFieldValue.push(processJsonSchema(item as JSONSchema));\n      }\n      (genAISchema as Record<string, unknown>)[fieldName] =\n        listSchemaFieldValue;\n    } else if (dictSchemaFieldNames.includes(fieldName)) {\n      const dictSchemaFieldValue: Record<string, types.Schema> = {};\n      for (const [key, value] of Object.entries(\n        fieldValue as Record<string, unknown>,\n      )) {\n        dictSchemaFieldValue[key] = processJsonSchema(value as JSONSchema);\n      }\n      (genAISchema as Record<string, unknown>)[fieldName] =\n        dictSchemaFieldValue;\n    } else {\n      // additionalProperties is not included in JSONSchema, skipping it.\n      if (fieldName === 'additionalProperties') {\n        continue;\n      }\n      (genAISchema as Record<string, unknown>)[fieldName] = fieldValue;\n    }\n  }\n  return genAISchema;\n}\n\n// we take the unknown in the schema field because we want enable user to pass\n// the output of major schema declaration tools without casting. Tools such as\n// zodToJsonSchema, typebox, zodToJsonSchema function can return JsonSchema7Type\n// or object, see details in\n// https://github.com/StefanTerdell/zod-to-json-schema/blob/70525efe555cd226691e093d171370a3b10921d1/src/zodToJsonSchema.ts#L7\n// typebox can return unknown, see details in\n// https://github.com/sinclairzx81/typebox/blob/5a5431439f7d5ca6b494d0d18fbfd7b1a356d67c/src/type/create/type.ts#L35\nexport function tSchema(\n  apiClient: ApiClient,\n  schema: types.Schema | unknown,\n): types.Schema {\n  if (Object.keys(schema as Record<string, unknown>).includes('$schema')) {\n    delete (schema as Record<string, unknown>)['$schema'];\n    const validatedJsonSchema = createJsonSchemaValidator().parse(schema);\n    return processJsonSchema(validatedJsonSchema);\n  } else {\n    return processJsonSchema(schema as types.Schema);\n  }\n}\n\nexport function tSpeechConfig(\n  apiClient: ApiClient,\n  speechConfig: types.SpeechConfigUnion,\n): types.SpeechConfig {\n  if (typeof speechConfig === 'object') {\n    return speechConfig;\n  } else if (typeof speechConfig === 'string') {\n    return {\n      voiceConfig: {\n        prebuiltVoiceConfig: {\n          voiceName: speechConfig,\n        },\n      },\n    };\n  } else {\n    throw new Error(`Unsupported speechConfig type: ${typeof speechConfig}`);\n  }\n}\n\nexport function tLiveSpeechConfig(\n  apiClient: ApiClient,\n  speechConfig: types.SpeechConfig | object,\n): types.SpeechConfig {\n  if ('multiSpeakerVoiceConfig' in speechConfig) {\n    throw new Error(\n      'multiSpeakerVoiceConfig is not supported in the live API.',\n    );\n  }\n  return speechConfig;\n}\n\nexport function tTool(apiClient: ApiClient, tool: types.Tool): types.Tool {\n  if (tool.functionDeclarations) {\n    for (const functionDeclaration of tool.functionDeclarations) {\n      if (functionDeclaration.parameters) {\n        functionDeclaration.parameters = tSchema(\n          apiClient,\n          functionDeclaration.parameters,\n        );\n      }\n      if (functionDeclaration.response) {\n        functionDeclaration.response = tSchema(\n          apiClient,\n          functionDeclaration.response,\n        );\n      }\n    }\n  }\n  return tool;\n}\n\nexport function tTools(\n  apiClient: ApiClient,\n  tools: types.ToolListUnion | unknown,\n): types.Tool[] {\n  // Check if the incoming type is defined.\n  if (tools === undefined || tools === null) {\n    throw new Error('tools is required');\n  }\n  if (!Array.isArray(tools)) {\n    throw new Error('tools is required and must be an array of Tools');\n  }\n  const result: types.Tool[] = [];\n  for (const tool of tools) {\n    result.push(tool as types.Tool);\n  }\n  return result;\n}\n\n/**\n * Prepends resource name with project, location, resource_prefix if needed.\n *\n * @param client The API client.\n * @param resourceName The resource name.\n * @param resourcePrefix The resource prefix.\n * @param splitsAfterPrefix The number of splits after the prefix.\n * @returns The completed resource name.\n *\n * Examples:\n *\n * ```\n * resource_name = '123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = True\n * client.project = 'bar'\n * client.location = 'us-west1'\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * returns: 'projects/bar/locations/us-west1/cachedContents/123'\n * ```\n *\n * ```\n * resource_name = 'projects/foo/locations/us-central1/cachedContents/123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = True\n * client.project = 'bar'\n * client.location = 'us-west1'\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * returns: 'projects/foo/locations/us-central1/cachedContents/123'\n * ```\n *\n * ```\n * resource_name = '123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = False\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * returns 'cachedContents/123'\n * ```\n *\n * ```\n * resource_name = 'some/wrong/cachedContents/resource/name/123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = False\n * # client.vertexai = True\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * -> 'some/wrong/resource/name/123'\n * ```\n */\nfunction resourceName(\n  client: ApiClient,\n  resourceName: string,\n  resourcePrefix: string,\n  splitsAfterPrefix: number = 1,\n): string {\n  const shouldAppendPrefix =\n    !resourceName.startsWith(`${resourcePrefix}/`) &&\n    resourceName.split('/').length === splitsAfterPrefix;\n  if (client.isVertexAI()) {\n    if (resourceName.startsWith('projects/')) {\n      return resourceName;\n    } else if (resourceName.startsWith('locations/')) {\n      return `projects/${client.getProject()}/${resourceName}`;\n    } else if (resourceName.startsWith(`${resourcePrefix}/`)) {\n      return `projects/${client.getProject()}/locations/${client.getLocation()}/${resourceName}`;\n    } else if (shouldAppendPrefix) {\n      return `projects/${client.getProject()}/locations/${client.getLocation()}/${resourcePrefix}/${resourceName}`;\n    } else {\n      return resourceName;\n    }\n  }\n  if (shouldAppendPrefix) {\n    return `${resourcePrefix}/${resourceName}`;\n  }\n  return resourceName;\n}\n\nexport function tCachedContentName(\n  apiClient: ApiClient,\n  name: string | unknown,\n): string {\n  if (typeof name !== 'string') {\n    throw new Error('name must be a string');\n  }\n  return resourceName(apiClient, name, 'cachedContents');\n}\n\nexport function tTuningJobStatus(\n  apiClient: ApiClient,\n  status: string | unknown,\n): string {\n  switch (status) {\n    case 'STATE_UNSPECIFIED':\n      return 'JOB_STATE_UNSPECIFIED';\n    case 'CREATING':\n      return 'JOB_STATE_RUNNING';\n    case 'ACTIVE':\n      return 'JOB_STATE_SUCCEEDED';\n    case 'FAILED':\n      return 'JOB_STATE_FAILED';\n    default:\n      return status as string;\n  }\n}\n\nexport function tBytes(\n  apiClient: ApiClient,\n  fromImageBytes: string | unknown,\n): string {\n  if (typeof fromImageBytes !== 'string') {\n    throw new Error('fromImageBytes must be a string');\n  }\n  // TODO(b/389133914): Remove dummy bytes converter.\n  return fromImageBytes;\n}\n\nfunction _isFile(origin: unknown): boolean {\n  return (\n    origin !== null &&\n    origin !== undefined &&\n    typeof origin === 'object' &&\n    'name' in origin\n  );\n}\n\nexport function isGeneratedVideo(origin: unknown): boolean {\n  return (\n    origin !== null &&\n    origin !== undefined &&\n    typeof origin === 'object' &&\n    'video' in origin\n  );\n}\n\nexport function isVideo(origin: unknown): boolean {\n  return (\n    origin !== null &&\n    origin !== undefined &&\n    typeof origin === 'object' &&\n    'uri' in origin\n  );\n}\n\nexport function tFileName(\n  apiClient: ApiClient,\n  fromName: string | types.File | types.GeneratedVideo | types.Video,\n): string | undefined {\n  let name: string | undefined;\n\n  if (_isFile(fromName)) {\n    name = (fromName as types.File).name;\n  }\n  if (isVideo(fromName)) {\n    name = (fromName as types.Video).uri;\n    if (name === undefined) {\n      return undefined;\n    }\n  }\n  if (isGeneratedVideo(fromName)) {\n    name = (fromName as types.GeneratedVideo).video?.uri;\n    if (name === undefined) {\n      return undefined;\n    }\n  }\n  if (typeof fromName === 'string') {\n    name = fromName;\n  }\n\n  if (name === undefined) {\n    throw new Error('Could not extract file name from the provided input.');\n  }\n\n  if (name.startsWith('https://')) {\n    const suffix = name.split('files/')[1];\n    const match = suffix.match(/[a-z0-9]+/);\n    if (match === null) {\n      throw new Error(`Could not extract file name from URI ${name}`);\n    }\n    name = match[0];\n  } else if (name.startsWith('files/')) {\n    name = name.split('files/')[1];\n  }\n  return name;\n}\n\nexport function tModelsUrl(\n  apiClient: ApiClient,\n  baseModels: boolean | unknown,\n): string {\n  let res: string;\n  if (apiClient.isVertexAI()) {\n    res = baseModels ? 'publishers/google/models' : 'models';\n  } else {\n    res = baseModels ? 'models' : 'tunedModels';\n  }\n  return res;\n}\n\nexport function tExtractModels(\n  apiClient: ApiClient,\n  response: unknown,\n): Record<string, unknown>[] {\n  for (const key of ['models', 'tunedModels', 'publisherModels']) {\n    if (hasField(response, key)) {\n      return (response as Record<string, unknown>)[key] as Record<\n        string,\n        unknown\n      >[];\n    }\n  }\n  return [];\n}\n\nfunction hasField(data: unknown, fieldName: string): boolean {\n  return data !== null && typeof data === 'object' && fieldName in data;\n}\n\nexport function mcpToGeminiTool(\n  mcpTool: McpTool,\n  config: types.CallableToolConfig = {},\n): types.Tool {\n  const mcpToolSchema = mcpTool as Record<string, unknown>;\n  const functionDeclaration: Record<string, unknown> = {\n    name: mcpToolSchema['name'],\n    description: mcpToolSchema['description'],\n    parameters: processJsonSchema(\n      filterToJsonSchema(\n        mcpToolSchema['inputSchema'] as Record<string, unknown>,\n      ),\n    ),\n  };\n  if (config.behavior) {\n    functionDeclaration['behavior'] = config.behavior;\n  }\n\n  const geminiTool = {\n    functionDeclarations: [\n      functionDeclaration as unknown as types.FunctionDeclaration,\n    ],\n  };\n\n  return geminiTool;\n}\n\n/**\n * Converts a list of MCP tools to a single Gemini tool with a list of function\n * declarations.\n */\nexport function mcpToolsToGeminiTool(\n  mcpTools: McpTool[],\n  config: types.CallableToolConfig = {},\n): types.Tool {\n  const functionDeclarations: types.FunctionDeclaration[] = [];\n  const toolNames = new Set<string>();\n  for (const mcpTool of mcpTools) {\n    const mcpToolName = mcpTool.name as string;\n    if (toolNames.has(mcpToolName)) {\n      throw new Error(\n        `Duplicate function name ${\n          mcpToolName\n        } found in MCP tools. Please ensure function names are unique.`,\n      );\n    }\n    toolNames.add(mcpToolName);\n    const geminiTool = mcpToGeminiTool(mcpTool, config);\n    if (geminiTool.functionDeclarations) {\n      functionDeclarations.push(...geminiTool.functionDeclarations);\n    }\n  }\n\n  return {functionDeclarations: functionDeclarations};\n}\n\n// Filters the list schema field to only include fields that are supported by\n// JSONSchema.\nfunction filterListSchemaField(fieldValue: unknown): Record<string, unknown>[] {\n  const listSchemaFieldValue: Record<string, unknown>[] = [];\n  for (const listFieldValue of fieldValue as Record<string, unknown>[]) {\n    listSchemaFieldValue.push(filterToJsonSchema(listFieldValue));\n  }\n  return listSchemaFieldValue;\n}\n\n// Filters the dict schema field to only include fields that are supported by\n// JSONSchema.\nfunction filterDictSchemaField(fieldValue: unknown): Record<string, unknown> {\n  const dictSchemaFieldValue: Record<string, unknown> = {};\n  for (const [key, value] of Object.entries(\n    fieldValue as Record<string, unknown>,\n  )) {\n    const valueRecord = value as Record<string, unknown>;\n    dictSchemaFieldValue[key] = filterToJsonSchema(valueRecord);\n  }\n  return dictSchemaFieldValue;\n}\n\n// Filters the schema to only include fields that are supported by JSONSchema.\nfunction filterToJsonSchema(\n  schema: Record<string, unknown>,\n): Record<string, unknown> {\n  const schemaFieldNames: Set<string> = new Set(['items']); // 'additional_properties' to come\n  const listSchemaFieldNames: Set<string> = new Set(['anyOf']); // 'one_of', 'all_of', 'not' to come\n  const dictSchemaFieldNames: Set<string> = new Set(['properties']); // 'defs' to come\n  const filteredSchema: Record<string, unknown> = {};\n\n  for (const [fieldName, fieldValue] of Object.entries(schema)) {\n    if (schemaFieldNames.has(fieldName)) {\n      filteredSchema[fieldName] = filterToJsonSchema(\n        fieldValue as Record<string, unknown>,\n      );\n    } else if (listSchemaFieldNames.has(fieldName)) {\n      filteredSchema[fieldName] = filterListSchemaField(fieldValue);\n    } else if (dictSchemaFieldNames.has(fieldName)) {\n      filteredSchema[fieldName] = filterDictSchemaField(fieldValue);\n    } else if (fieldName === 'type') {\n      const typeValue = (fieldValue as string).toUpperCase();\n      filteredSchema[fieldName] = Object.values(types.Type).includes(\n        typeValue as types.Type,\n      )\n        ? (typeValue as types.Type)\n        : types.Type.TYPE_UNSPECIFIED;\n    } else if (supportedJsonSchemaFields.has(fieldName)) {\n      filteredSchema[fieldName] = fieldValue;\n    }\n  }\n\n  return filteredSchema;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from '../_api_client.js';\nimport * as common from '../_common.js';\nimport * as t from '../_transformers.js';\nimport * as types from '../types.js';\n\nexport function videoMetadataToMldev(\n  apiClient: ApiClient,\n  fromObject: types.VideoMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (fromFps != null) {\n    common.setValueByPath(toObject, ['fps'], fromFps);\n  }\n\n  const fromEndOffset = common.getValueByPath(fromObject, ['endOffset']);\n  if (fromEndOffset != null) {\n    common.setValueByPath(toObject, ['endOffset'], fromEndOffset);\n  }\n\n  const fromStartOffset = common.getValueByPath(fromObject, ['startOffset']);\n  if (fromStartOffset != null) {\n    common.setValueByPath(toObject, ['startOffset'], fromStartOffset);\n  }\n\n  return toObject;\n}\n\nexport function blobToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Blob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['displayName']) !== undefined) {\n    throw new Error('displayName parameter is not supported in Gemini API.');\n  }\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function fileDataToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FileData,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['displayName']) !== undefined) {\n    throw new Error('displayName parameter is not supported in Gemini API.');\n  }\n\n  const fromFileUri = common.getValueByPath(fromObject, ['fileUri']);\n  if (fromFileUri != null) {\n    common.setValueByPath(toObject, ['fileUri'], fromFileUri);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function partToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoMetadata'],\n      videoMetadataToMldev(apiClient, fromVideoMetadata),\n    );\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(\n      toObject,\n      ['inlineData'],\n      blobToMldev(apiClient, fromInlineData),\n    );\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(\n      toObject,\n      ['fileData'],\n      fileDataToMldev(apiClient, fromFileData),\n    );\n  }\n\n  const fromThoughtSignature = common.getValueByPath(fromObject, [\n    'thoughtSignature',\n  ]);\n  if (fromThoughtSignature != null) {\n    common.setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    let transformedList = fromParts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return partToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['parts'], transformedList);\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function functionDeclarationToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionDeclaration,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromBehavior = common.getValueByPath(fromObject, ['behavior']);\n  if (fromBehavior != null) {\n    common.setValueByPath(toObject, ['behavior'], fromBehavior);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromParameters = common.getValueByPath(fromObject, ['parameters']);\n  if (fromParameters != null) {\n    common.setValueByPath(toObject, ['parameters'], fromParameters);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(toObject, ['response'], fromResponse);\n  }\n\n  return toObject;\n}\n\nexport function intervalToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Interval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromStartTime = common.getValueByPath(fromObject, ['startTime']);\n  if (fromStartTime != null) {\n    common.setValueByPath(toObject, ['startTime'], fromStartTime);\n  }\n\n  const fromEndTime = common.getValueByPath(fromObject, ['endTime']);\n  if (fromEndTime != null) {\n    common.setValueByPath(toObject, ['endTime'], fromEndTime);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearch,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTimeRangeFilter = common.getValueByPath(fromObject, [\n    'timeRangeFilter',\n  ]);\n  if (fromTimeRangeFilter != null) {\n    common.setValueByPath(\n      toObject,\n      ['timeRangeFilter'],\n      intervalToMldev(apiClient, fromTimeRangeFilter),\n    );\n  }\n\n  return toObject;\n}\n\nexport function dynamicRetrievalConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.DynamicRetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromDynamicThreshold = common.getValueByPath(fromObject, [\n    'dynamicThreshold',\n  ]);\n  if (fromDynamicThreshold != null) {\n    common.setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchRetrievalToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearchRetrieval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDynamicRetrievalConfig = common.getValueByPath(fromObject, [\n    'dynamicRetrievalConfig',\n  ]);\n  if (fromDynamicRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['dynamicRetrievalConfig'],\n      dynamicRetrievalConfigToMldev(apiClient, fromDynamicRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function enterpriseWebSearchToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function apiKeyConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ApiKeyConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['apiKeyString']) !== undefined) {\n    throw new Error('apiKeyString parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function authConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.AuthConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['apiKeyConfig']) !== undefined) {\n    throw new Error('apiKeyConfig parameter is not supported in Gemini API.');\n  }\n\n  const fromAuthType = common.getValueByPath(fromObject, ['authType']);\n  if (fromAuthType != null) {\n    common.setValueByPath(toObject, ['authType'], fromAuthType);\n  }\n\n  const fromGoogleServiceAccountConfig = common.getValueByPath(fromObject, [\n    'googleServiceAccountConfig',\n  ]);\n  if (fromGoogleServiceAccountConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleServiceAccountConfig'],\n      fromGoogleServiceAccountConfig,\n    );\n  }\n\n  const fromHttpBasicAuthConfig = common.getValueByPath(fromObject, [\n    'httpBasicAuthConfig',\n  ]);\n  if (fromHttpBasicAuthConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['httpBasicAuthConfig'],\n      fromHttpBasicAuthConfig,\n    );\n  }\n\n  const fromOauthConfig = common.getValueByPath(fromObject, ['oauthConfig']);\n  if (fromOauthConfig != null) {\n    common.setValueByPath(toObject, ['oauthConfig'], fromOauthConfig);\n  }\n\n  const fromOidcConfig = common.getValueByPath(fromObject, ['oidcConfig']);\n  if (fromOidcConfig != null) {\n    common.setValueByPath(toObject, ['oidcConfig'], fromOidcConfig);\n  }\n\n  return toObject;\n}\n\nexport function googleMapsToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleMaps,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['authConfig']) !== undefined) {\n    throw new Error('authConfig parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function urlContextToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function toolToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Tool,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionDeclarations = common.getValueByPath(fromObject, [\n    'functionDeclarations',\n  ]);\n  if (fromFunctionDeclarations != null) {\n    let transformedList = fromFunctionDeclarations;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return functionDeclarationToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['functionDeclarations'], transformedList);\n  }\n\n  if (common.getValueByPath(fromObject, ['retrieval']) !== undefined) {\n    throw new Error('retrieval parameter is not supported in Gemini API.');\n  }\n\n  const fromGoogleSearch = common.getValueByPath(fromObject, ['googleSearch']);\n  if (fromGoogleSearch != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearch'],\n      googleSearchToMldev(apiClient, fromGoogleSearch),\n    );\n  }\n\n  const fromGoogleSearchRetrieval = common.getValueByPath(fromObject, [\n    'googleSearchRetrieval',\n  ]);\n  if (fromGoogleSearchRetrieval != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearchRetrieval'],\n      googleSearchRetrievalToMldev(apiClient, fromGoogleSearchRetrieval),\n    );\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['enterpriseWebSearch']) !== undefined\n  ) {\n    throw new Error(\n      'enterpriseWebSearch parameter is not supported in Gemini API.',\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['googleMaps']) !== undefined) {\n    throw new Error('googleMaps parameter is not supported in Gemini API.');\n  }\n\n  const fromUrlContext = common.getValueByPath(fromObject, ['urlContext']);\n  if (fromUrlContext != null) {\n    common.setValueByPath(toObject, ['urlContext'], urlContextToMldev());\n  }\n\n  const fromCodeExecution = common.getValueByPath(fromObject, [\n    'codeExecution',\n  ]);\n  if (fromCodeExecution != null) {\n    common.setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n  }\n\n  return toObject;\n}\n\nexport function functionCallingConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionCallingConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromAllowedFunctionNames = common.getValueByPath(fromObject, [\n    'allowedFunctionNames',\n  ]);\n  if (fromAllowedFunctionNames != null) {\n    common.setValueByPath(\n      toObject,\n      ['allowedFunctionNames'],\n      fromAllowedFunctionNames,\n    );\n  }\n\n  return toObject;\n}\n\nexport function latLngToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LatLng,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromLatitude = common.getValueByPath(fromObject, ['latitude']);\n  if (fromLatitude != null) {\n    common.setValueByPath(toObject, ['latitude'], fromLatitude);\n  }\n\n  const fromLongitude = common.getValueByPath(fromObject, ['longitude']);\n  if (fromLongitude != null) {\n    common.setValueByPath(toObject, ['longitude'], fromLongitude);\n  }\n\n  return toObject;\n}\n\nexport function retrievalConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.RetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromLatLng = common.getValueByPath(fromObject, ['latLng']);\n  if (fromLatLng != null) {\n    common.setValueByPath(\n      toObject,\n      ['latLng'],\n      latLngToMldev(apiClient, fromLatLng),\n    );\n  }\n\n  const fromLanguageCode = common.getValueByPath(fromObject, ['languageCode']);\n  if (fromLanguageCode != null) {\n    common.setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n  }\n\n  return toObject;\n}\n\nexport function toolConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ToolConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionCallingConfig = common.getValueByPath(fromObject, [\n    'functionCallingConfig',\n  ]);\n  if (fromFunctionCallingConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['functionCallingConfig'],\n      functionCallingConfigToMldev(apiClient, fromFunctionCallingConfig),\n    );\n  }\n\n  const fromRetrievalConfig = common.getValueByPath(fromObject, [\n    'retrievalConfig',\n  ]);\n  if (fromRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['retrievalConfig'],\n      retrievalConfigToMldev(apiClient, fromRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function createCachedContentConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CreateCachedContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTtl = common.getValueByPath(fromObject, ['ttl']);\n  if (parentObject !== undefined && fromTtl != null) {\n    common.setValueByPath(parentObject, ['ttl'], fromTtl);\n  }\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (parentObject !== undefined && fromExpireTime != null) {\n    common.setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (parentObject !== undefined && fromDisplayName != null) {\n    common.setValueByPath(parentObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (parentObject !== undefined && fromContents != null) {\n    let transformedList = t.tContents(apiClient, fromContents);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return contentToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(parentObject, ['contents'], transformedList);\n  }\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['systemInstruction'],\n      contentToMldev(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    let transformedList = fromTools;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return toolToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(parentObject, ['tools'], transformedList);\n  }\n\n  const fromToolConfig = common.getValueByPath(fromObject, ['toolConfig']);\n  if (parentObject !== undefined && fromToolConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['toolConfig'],\n      toolConfigToMldev(apiClient, fromToolConfig),\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['kmsKeyName']) !== undefined) {\n    throw new Error('kmsKeyName parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function createCachedContentParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CreateCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['model'],\n      t.tCachesModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      createCachedContentConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function getCachedContentParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GetCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tCachedContentName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function deleteCachedContentParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.DeleteCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tCachedContentName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function updateCachedContentConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.UpdateCachedContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTtl = common.getValueByPath(fromObject, ['ttl']);\n  if (parentObject !== undefined && fromTtl != null) {\n    common.setValueByPath(parentObject, ['ttl'], fromTtl);\n  }\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (parentObject !== undefined && fromExpireTime != null) {\n    common.setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n  }\n\n  return toObject;\n}\n\nexport function updateCachedContentParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.UpdateCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tCachedContentName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      updateCachedContentConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function listCachedContentsConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListCachedContentsConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPageSize = common.getValueByPath(fromObject, ['pageSize']);\n  if (parentObject !== undefined && fromPageSize != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n  }\n\n  const fromPageToken = common.getValueByPath(fromObject, ['pageToken']);\n  if (parentObject !== undefined && fromPageToken != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n  }\n\n  return toObject;\n}\n\nexport function listCachedContentsParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListCachedContentsParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      listCachedContentsConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function videoMetadataToVertex(\n  apiClient: ApiClient,\n  fromObject: types.VideoMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (fromFps != null) {\n    common.setValueByPath(toObject, ['fps'], fromFps);\n  }\n\n  const fromEndOffset = common.getValueByPath(fromObject, ['endOffset']);\n  if (fromEndOffset != null) {\n    common.setValueByPath(toObject, ['endOffset'], fromEndOffset);\n  }\n\n  const fromStartOffset = common.getValueByPath(fromObject, ['startOffset']);\n  if (fromStartOffset != null) {\n    common.setValueByPath(toObject, ['startOffset'], fromStartOffset);\n  }\n\n  return toObject;\n}\n\nexport function blobToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Blob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function fileDataToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FileData,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromFileUri = common.getValueByPath(fromObject, ['fileUri']);\n  if (fromFileUri != null) {\n    common.setValueByPath(toObject, ['fileUri'], fromFileUri);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function partToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoMetadata'],\n      videoMetadataToVertex(apiClient, fromVideoMetadata),\n    );\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(\n      toObject,\n      ['inlineData'],\n      blobToVertex(apiClient, fromInlineData),\n    );\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(\n      toObject,\n      ['fileData'],\n      fileDataToVertex(apiClient, fromFileData),\n    );\n  }\n\n  const fromThoughtSignature = common.getValueByPath(fromObject, [\n    'thoughtSignature',\n  ]);\n  if (fromThoughtSignature != null) {\n    common.setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    let transformedList = fromParts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return partToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['parts'], transformedList);\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function functionDeclarationToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionDeclaration,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['behavior']) !== undefined) {\n    throw new Error('behavior parameter is not supported in Vertex AI.');\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromParameters = common.getValueByPath(fromObject, ['parameters']);\n  if (fromParameters != null) {\n    common.setValueByPath(toObject, ['parameters'], fromParameters);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(toObject, ['response'], fromResponse);\n  }\n\n  return toObject;\n}\n\nexport function intervalToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Interval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromStartTime = common.getValueByPath(fromObject, ['startTime']);\n  if (fromStartTime != null) {\n    common.setValueByPath(toObject, ['startTime'], fromStartTime);\n  }\n\n  const fromEndTime = common.getValueByPath(fromObject, ['endTime']);\n  if (fromEndTime != null) {\n    common.setValueByPath(toObject, ['endTime'], fromEndTime);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearch,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTimeRangeFilter = common.getValueByPath(fromObject, [\n    'timeRangeFilter',\n  ]);\n  if (fromTimeRangeFilter != null) {\n    common.setValueByPath(\n      toObject,\n      ['timeRangeFilter'],\n      intervalToVertex(apiClient, fromTimeRangeFilter),\n    );\n  }\n\n  return toObject;\n}\n\nexport function dynamicRetrievalConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.DynamicRetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromDynamicThreshold = common.getValueByPath(fromObject, [\n    'dynamicThreshold',\n  ]);\n  if (fromDynamicThreshold != null) {\n    common.setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchRetrievalToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearchRetrieval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDynamicRetrievalConfig = common.getValueByPath(fromObject, [\n    'dynamicRetrievalConfig',\n  ]);\n  if (fromDynamicRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['dynamicRetrievalConfig'],\n      dynamicRetrievalConfigToVertex(apiClient, fromDynamicRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function enterpriseWebSearchToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function apiKeyConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ApiKeyConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromApiKeyString = common.getValueByPath(fromObject, ['apiKeyString']);\n  if (fromApiKeyString != null) {\n    common.setValueByPath(toObject, ['apiKeyString'], fromApiKeyString);\n  }\n\n  return toObject;\n}\n\nexport function authConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.AuthConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromApiKeyConfig = common.getValueByPath(fromObject, ['apiKeyConfig']);\n  if (fromApiKeyConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['apiKeyConfig'],\n      apiKeyConfigToVertex(apiClient, fromApiKeyConfig),\n    );\n  }\n\n  const fromAuthType = common.getValueByPath(fromObject, ['authType']);\n  if (fromAuthType != null) {\n    common.setValueByPath(toObject, ['authType'], fromAuthType);\n  }\n\n  const fromGoogleServiceAccountConfig = common.getValueByPath(fromObject, [\n    'googleServiceAccountConfig',\n  ]);\n  if (fromGoogleServiceAccountConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleServiceAccountConfig'],\n      fromGoogleServiceAccountConfig,\n    );\n  }\n\n  const fromHttpBasicAuthConfig = common.getValueByPath(fromObject, [\n    'httpBasicAuthConfig',\n  ]);\n  if (fromHttpBasicAuthConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['httpBasicAuthConfig'],\n      fromHttpBasicAuthConfig,\n    );\n  }\n\n  const fromOauthConfig = common.getValueByPath(fromObject, ['oauthConfig']);\n  if (fromOauthConfig != null) {\n    common.setValueByPath(toObject, ['oauthConfig'], fromOauthConfig);\n  }\n\n  const fromOidcConfig = common.getValueByPath(fromObject, ['oidcConfig']);\n  if (fromOidcConfig != null) {\n    common.setValueByPath(toObject, ['oidcConfig'], fromOidcConfig);\n  }\n\n  return toObject;\n}\n\nexport function googleMapsToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleMaps,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAuthConfig = common.getValueByPath(fromObject, ['authConfig']);\n  if (fromAuthConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['authConfig'],\n      authConfigToVertex(apiClient, fromAuthConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function urlContextToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function toolToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Tool,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionDeclarations = common.getValueByPath(fromObject, [\n    'functionDeclarations',\n  ]);\n  if (fromFunctionDeclarations != null) {\n    let transformedList = fromFunctionDeclarations;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return functionDeclarationToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['functionDeclarations'], transformedList);\n  }\n\n  const fromRetrieval = common.getValueByPath(fromObject, ['retrieval']);\n  if (fromRetrieval != null) {\n    common.setValueByPath(toObject, ['retrieval'], fromRetrieval);\n  }\n\n  const fromGoogleSearch = common.getValueByPath(fromObject, ['googleSearch']);\n  if (fromGoogleSearch != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearch'],\n      googleSearchToVertex(apiClient, fromGoogleSearch),\n    );\n  }\n\n  const fromGoogleSearchRetrieval = common.getValueByPath(fromObject, [\n    'googleSearchRetrieval',\n  ]);\n  if (fromGoogleSearchRetrieval != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearchRetrieval'],\n      googleSearchRetrievalToVertex(apiClient, fromGoogleSearchRetrieval),\n    );\n  }\n\n  const fromEnterpriseWebSearch = common.getValueByPath(fromObject, [\n    'enterpriseWebSearch',\n  ]);\n  if (fromEnterpriseWebSearch != null) {\n    common.setValueByPath(\n      toObject,\n      ['enterpriseWebSearch'],\n      enterpriseWebSearchToVertex(),\n    );\n  }\n\n  const fromGoogleMaps = common.getValueByPath(fromObject, ['googleMaps']);\n  if (fromGoogleMaps != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleMaps'],\n      googleMapsToVertex(apiClient, fromGoogleMaps),\n    );\n  }\n\n  const fromUrlContext = common.getValueByPath(fromObject, ['urlContext']);\n  if (fromUrlContext != null) {\n    common.setValueByPath(toObject, ['urlContext'], urlContextToVertex());\n  }\n\n  const fromCodeExecution = common.getValueByPath(fromObject, [\n    'codeExecution',\n  ]);\n  if (fromCodeExecution != null) {\n    common.setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n  }\n\n  return toObject;\n}\n\nexport function functionCallingConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionCallingConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromAllowedFunctionNames = common.getValueByPath(fromObject, [\n    'allowedFunctionNames',\n  ]);\n  if (fromAllowedFunctionNames != null) {\n    common.setValueByPath(\n      toObject,\n      ['allowedFunctionNames'],\n      fromAllowedFunctionNames,\n    );\n  }\n\n  return toObject;\n}\n\nexport function latLngToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LatLng,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromLatitude = common.getValueByPath(fromObject, ['latitude']);\n  if (fromLatitude != null) {\n    common.setValueByPath(toObject, ['latitude'], fromLatitude);\n  }\n\n  const fromLongitude = common.getValueByPath(fromObject, ['longitude']);\n  if (fromLongitude != null) {\n    common.setValueByPath(toObject, ['longitude'], fromLongitude);\n  }\n\n  return toObject;\n}\n\nexport function retrievalConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.RetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromLatLng = common.getValueByPath(fromObject, ['latLng']);\n  if (fromLatLng != null) {\n    common.setValueByPath(\n      toObject,\n      ['latLng'],\n      latLngToVertex(apiClient, fromLatLng),\n    );\n  }\n\n  const fromLanguageCode = common.getValueByPath(fromObject, ['languageCode']);\n  if (fromLanguageCode != null) {\n    common.setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n  }\n\n  return toObject;\n}\n\nexport function toolConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ToolConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionCallingConfig = common.getValueByPath(fromObject, [\n    'functionCallingConfig',\n  ]);\n  if (fromFunctionCallingConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['functionCallingConfig'],\n      functionCallingConfigToVertex(apiClient, fromFunctionCallingConfig),\n    );\n  }\n\n  const fromRetrievalConfig = common.getValueByPath(fromObject, [\n    'retrievalConfig',\n  ]);\n  if (fromRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['retrievalConfig'],\n      retrievalConfigToVertex(apiClient, fromRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function createCachedContentConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.CreateCachedContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTtl = common.getValueByPath(fromObject, ['ttl']);\n  if (parentObject !== undefined && fromTtl != null) {\n    common.setValueByPath(parentObject, ['ttl'], fromTtl);\n  }\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (parentObject !== undefined && fromExpireTime != null) {\n    common.setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (parentObject !== undefined && fromDisplayName != null) {\n    common.setValueByPath(parentObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (parentObject !== undefined && fromContents != null) {\n    let transformedList = t.tContents(apiClient, fromContents);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return contentToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(parentObject, ['contents'], transformedList);\n  }\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['systemInstruction'],\n      contentToVertex(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    let transformedList = fromTools;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return toolToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(parentObject, ['tools'], transformedList);\n  }\n\n  const fromToolConfig = common.getValueByPath(fromObject, ['toolConfig']);\n  if (parentObject !== undefined && fromToolConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['toolConfig'],\n      toolConfigToVertex(apiClient, fromToolConfig),\n    );\n  }\n\n  const fromKmsKeyName = common.getValueByPath(fromObject, ['kmsKeyName']);\n  if (parentObject !== undefined && fromKmsKeyName != null) {\n    common.setValueByPath(\n      parentObject,\n      ['encryption_spec', 'kmsKeyName'],\n      fromKmsKeyName,\n    );\n  }\n\n  return toObject;\n}\n\nexport function createCachedContentParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.CreateCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['model'],\n      t.tCachesModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      createCachedContentConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function getCachedContentParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GetCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tCachedContentName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function deleteCachedContentParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.DeleteCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tCachedContentName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function updateCachedContentConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.UpdateCachedContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTtl = common.getValueByPath(fromObject, ['ttl']);\n  if (parentObject !== undefined && fromTtl != null) {\n    common.setValueByPath(parentObject, ['ttl'], fromTtl);\n  }\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (parentObject !== undefined && fromExpireTime != null) {\n    common.setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n  }\n\n  return toObject;\n}\n\nexport function updateCachedContentParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.UpdateCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tCachedContentName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      updateCachedContentConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function listCachedContentsConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ListCachedContentsConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPageSize = common.getValueByPath(fromObject, ['pageSize']);\n  if (parentObject !== undefined && fromPageSize != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n  }\n\n  const fromPageToken = common.getValueByPath(fromObject, ['pageToken']);\n  if (parentObject !== undefined && fromPageToken != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n  }\n\n  return toObject;\n}\n\nexport function listCachedContentsParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ListCachedContentsParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      listCachedContentsConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function cachedContentFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.CachedContent,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(toObject, ['model'], fromModel);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (fromExpireTime != null) {\n    common.setValueByPath(toObject, ['expireTime'], fromExpireTime);\n  }\n\n  const fromUsageMetadata = common.getValueByPath(fromObject, [\n    'usageMetadata',\n  ]);\n  if (fromUsageMetadata != null) {\n    common.setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n  }\n\n  return toObject;\n}\n\nexport function deleteCachedContentResponseFromMldev(): Record<\n  string,\n  unknown\n> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function listCachedContentsResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListCachedContentsResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNextPageToken = common.getValueByPath(fromObject, [\n    'nextPageToken',\n  ]);\n  if (fromNextPageToken != null) {\n    common.setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n  }\n\n  const fromCachedContents = common.getValueByPath(fromObject, [\n    'cachedContents',\n  ]);\n  if (fromCachedContents != null) {\n    let transformedList = fromCachedContents;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return cachedContentFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['cachedContents'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function cachedContentFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.CachedContent,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(toObject, ['model'], fromModel);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (fromExpireTime != null) {\n    common.setValueByPath(toObject, ['expireTime'], fromExpireTime);\n  }\n\n  const fromUsageMetadata = common.getValueByPath(fromObject, [\n    'usageMetadata',\n  ]);\n  if (fromUsageMetadata != null) {\n    common.setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n  }\n\n  return toObject;\n}\n\nexport function deleteCachedContentResponseFromVertex(): Record<\n  string,\n  unknown\n> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function listCachedContentsResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.ListCachedContentsResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNextPageToken = common.getValueByPath(fromObject, [\n    'nextPageToken',\n  ]);\n  if (fromNextPageToken != null) {\n    common.setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n  }\n\n  const fromCachedContents = common.getValueByPath(fromObject, [\n    'cachedContents',\n  ]);\n  if (fromCachedContents != null) {\n    let transformedList = fromCachedContents;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return cachedContentFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['cachedContents'], transformedList);\n  }\n\n  return toObject;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Pagers for the GenAI List APIs.\n */\n\nexport enum PagedItem {\n  PAGED_ITEM_BATCH_JOBS = 'batchJobs',\n  PAGED_ITEM_MODELS = 'models',\n  PAGED_ITEM_TUNING_JOBS = 'tuningJobs',\n  PAGED_ITEM_FILES = 'files',\n  PAGED_ITEM_CACHED_CONTENTS = 'cachedContents',\n}\n\ninterface PagedItemConfig {\n  config?: {\n    pageToken?: string;\n    pageSize?: number;\n  };\n}\n\ninterface PagedItemResponse<T> {\n  nextPageToken?: string;\n  batchJobs?: T[];\n  models?: T[];\n  tuningJobs?: T[];\n  files?: T[];\n  cachedContents?: T[];\n}\n\n/**\n * Pager class for iterating through paginated results.\n */\nexport class Pager<T> implements AsyncIterable<T> {\n  private nameInternal!: PagedItem;\n  private pageInternal: T[] = [];\n  private paramsInternal: PagedItemConfig = {};\n  private pageInternalSize!: number;\n  protected requestInternal!: (\n    params: PagedItemConfig,\n  ) => Promise<PagedItemResponse<T>>;\n  protected idxInternal!: number;\n\n  constructor(\n    name: PagedItem,\n    request: (params: PagedItemConfig) => Promise<PagedItemResponse<T>>,\n    response: PagedItemResponse<T>,\n    params: PagedItemConfig,\n  ) {\n    this.requestInternal = request;\n    this.init(name, response, params);\n  }\n\n  private init(\n    name: PagedItem,\n    response: PagedItemResponse<T>,\n    params: PagedItemConfig,\n  ) {\n    this.nameInternal = name;\n    this.pageInternal = response[this.nameInternal] || [];\n    this.idxInternal = 0;\n    let requestParams: PagedItemConfig = {config: {}};\n    if (!params) {\n      requestParams = {config: {}};\n    } else if (typeof params === 'object') {\n      requestParams = {...params};\n    } else {\n      requestParams = params;\n    }\n    if (requestParams['config']) {\n      requestParams['config']['pageToken'] = response['nextPageToken'];\n    }\n    this.paramsInternal = requestParams;\n    this.pageInternalSize =\n      requestParams['config']?.['pageSize'] ?? this.pageInternal.length;\n  }\n\n  private initNextPage(response: PagedItemResponse<T>): void {\n    this.init(this.nameInternal, response, this.paramsInternal);\n  }\n\n  /**\n   * Returns the current page, which is a list of items.\n   *\n   * @remarks\n   * The first page is retrieved when the pager is created. The returned list of\n   * items could be a subset of the entire list.\n   */\n  get page(): T[] {\n    return this.pageInternal;\n  }\n\n  /**\n   * Returns the type of paged item (for example, ``batch_jobs``).\n   */\n  get name(): PagedItem {\n    return this.nameInternal;\n  }\n\n  /**\n   * Returns the length of the page fetched each time by this pager.\n   *\n   * @remarks\n   * The number of items in the page is less than or equal to the page length.\n   */\n  get pageSize(): number {\n    return this.pageInternalSize;\n  }\n\n  /**\n   * Returns the parameters when making the API request for the next page.\n   *\n   * @remarks\n   * Parameters contain a set of optional configs that can be\n   * used to customize the API request. For example, the `pageToken` parameter\n   * contains the token to request the next page.\n   */\n  get params(): PagedItemConfig {\n    return this.paramsInternal;\n  }\n\n  /**\n   * Returns the total number of items in the current page.\n   */\n  get pageLength(): number {\n    return this.pageInternal.length;\n  }\n\n  /**\n   * Returns the item at the given index.\n   */\n  getItem(index: number): T {\n    return this.pageInternal[index];\n  }\n\n  /**\n   * Returns an async iterator that support iterating through all items\n   * retrieved from the API.\n   *\n   * @remarks\n   * The iterator will automatically fetch the next page if there are more items\n   * to fetch from the API.\n   *\n   * @example\n   *\n   * ```ts\n   * const pager = await ai.files.list({config: {pageSize: 10}});\n   * for await (const file of pager) {\n   *   console.log(file.name);\n   * }\n   * ```\n   */\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return {\n      next: async () => {\n        if (this.idxInternal >= this.pageLength) {\n          if (this.hasNextPage()) {\n            await this.nextPage();\n          } else {\n            return {value: undefined, done: true};\n          }\n        }\n        const item = this.getItem(this.idxInternal);\n        this.idxInternal += 1;\n        return {value: item, done: false};\n      },\n      return: async () => {\n        return {value: undefined, done: true};\n      },\n    };\n  }\n\n  /**\n   * Fetches the next page of items. This makes a new API request.\n   *\n   * @throws {Error} If there are no more pages to fetch.\n   *\n   * @example\n   *\n   * ```ts\n   * const pager = await ai.files.list({config: {pageSize: 10}});\n   * let page = pager.page;\n   * while (true) {\n   *   for (const file of page) {\n   *     console.log(file.name);\n   *   }\n   *   if (!pager.hasNextPage()) {\n   *     break;\n   *   }\n   *   page = await pager.nextPage();\n   * }\n   * ```\n   */\n  async nextPage(): Promise<T[]> {\n    if (!this.hasNextPage()) {\n      throw new Error('No more pages to fetch.');\n    }\n    const response = await this.requestInternal(this.params);\n    this.initNextPage(response);\n    return this.page;\n  }\n\n  /**\n   * Returns true if there are more pages to fetch from the API.\n   */\n  hasNextPage(): boolean {\n    if (this.params['config']?.['pageToken'] !== undefined) {\n      return true;\n    }\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from './_api_client.js';\nimport * as common from './_common.js';\nimport {BaseModule} from './_common.js';\nimport * as converters from './converters/_caches_converters.js';\nimport {PagedItem, Pager} from './pagers.js';\nimport * as types from './types.js';\n\nexport class Caches extends BaseModule {\n  constructor(private readonly apiClient: ApiClient) {\n    super();\n  }\n\n  /**\n   * Lists cached content configurations.\n   *\n   * @param params - The parameters for the list request.\n   * @return The paginated results of the list of cached contents.\n   *\n   * @example\n   * ```ts\n   * const cachedContents = await ai.caches.list({config: {'pageSize': 2}});\n   * for (const cachedContent of cachedContents) {\n   *   console.log(cachedContent);\n   * }\n   * ```\n   */\n  list = async (\n    params: types.ListCachedContentsParameters = {},\n  ): Promise<Pager<types.CachedContent>> => {\n    return new Pager<types.CachedContent>(\n      PagedItem.PAGED_ITEM_CACHED_CONTENTS,\n      (x: types.ListCachedContentsParameters) => this.listInternal(x),\n      await this.listInternal(params),\n      params,\n    );\n  };\n\n  /**\n   * Creates a cached contents resource.\n   *\n   * @remarks\n   * Context caching is only supported for specific models. See [Gemini\n   * Developer API reference](https://ai.google.dev/gemini-api/docs/caching?lang=node/context-cac)\n   * and [Vertex AI reference](https://cloud.google.com/vertex-ai/generative-ai/docs/context-cache/context-cache-overview#supported_models)\n   * for more information.\n   *\n   * @param params - The parameters for the create request.\n   * @return The created cached content.\n   *\n   * @example\n   * ```ts\n   * const contents = ...; // Initialize the content to cache.\n   * const response = await ai.caches.create({\n   *   model: 'gemini-2.0-flash-001',\n   *   config: {\n   *    'contents': contents,\n   *    'displayName': 'test cache',\n   *    'systemInstruction': 'What is the sum of the two pdfs?',\n   *    'ttl': '86400s',\n   *  }\n   * });\n   * ```\n   */\n  async create(\n    params: types.CreateCachedContentParameters,\n  ): Promise<types.CachedContent> {\n    let response: Promise<types.CachedContent>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.createCachedContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'cachedContents',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CachedContent>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.cachedContentFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.CachedContent;\n      });\n    } else {\n      const body = converters.createCachedContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'cachedContents',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CachedContent>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.cachedContentFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.CachedContent;\n      });\n    }\n  }\n\n  /**\n   * Gets cached content configurations.\n   *\n   * @param params - The parameters for the get request.\n   * @return The cached content.\n   *\n   * @example\n   * ```ts\n   * await ai.caches.get({name: '...'}); // The server-generated resource name.\n   * ```\n   */\n  async get(\n    params: types.GetCachedContentParameters,\n  ): Promise<types.CachedContent> {\n    let response: Promise<types.CachedContent>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.getCachedContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CachedContent>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.cachedContentFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.CachedContent;\n      });\n    } else {\n      const body = converters.getCachedContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CachedContent>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.cachedContentFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.CachedContent;\n      });\n    }\n  }\n\n  /**\n   * Deletes cached content.\n   *\n   * @param params - The parameters for the delete request.\n   * @return The empty response returned by the API.\n   *\n   * @example\n   * ```ts\n   * await ai.caches.delete({name: '...'}); // The server-generated resource name.\n   * ```\n   */\n  async delete(\n    params: types.DeleteCachedContentParameters,\n  ): Promise<types.DeleteCachedContentResponse> {\n    let response: Promise<types.DeleteCachedContentResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.deleteCachedContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'DELETE',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.DeleteCachedContentResponse>;\n\n      return response.then(() => {\n        const resp = converters.deleteCachedContentResponseFromVertex();\n        const typedResp = new types.DeleteCachedContentResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.deleteCachedContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'DELETE',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.DeleteCachedContentResponse>;\n\n      return response.then(() => {\n        const resp = converters.deleteCachedContentResponseFromMldev();\n        const typedResp = new types.DeleteCachedContentResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  /**\n   * Updates cached content configurations.\n   *\n   * @param params - The parameters for the update request.\n   * @return The updated cached content.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.caches.update({\n   *   name: '...',  // The server-generated resource name.\n   *   config: {'ttl': '7600s'}\n   * });\n   * ```\n   */\n  async update(\n    params: types.UpdateCachedContentParameters,\n  ): Promise<types.CachedContent> {\n    let response: Promise<types.CachedContent>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.updateCachedContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'PATCH',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CachedContent>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.cachedContentFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.CachedContent;\n      });\n    } else {\n      const body = converters.updateCachedContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'PATCH',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CachedContent>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.cachedContentFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.CachedContent;\n      });\n    }\n  }\n\n  private async listInternal(\n    params: types.ListCachedContentsParameters,\n  ): Promise<types.ListCachedContentsResponse> {\n    let response: Promise<types.ListCachedContentsResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.listCachedContentsParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'cachedContents',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.ListCachedContentsResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.listCachedContentsResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.ListCachedContentsResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.listCachedContentsParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'cachedContents',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.ListCachedContentsResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.listCachedContentsResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.ListCachedContentsResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ApiClient} from './_api_client.js';\nimport * as t from './_transformers.js';\nimport {Models} from './models.js';\nimport * as types from './types.js';\n\n/**\n * Returns true if the response is valid, false otherwise.\n */\nfunction isValidResponse(response: types.GenerateContentResponse): boolean {\n  if (response.candidates == undefined || response.candidates.length === 0) {\n    return false;\n  }\n  const content = response.candidates[0]?.content;\n  if (content === undefined) {\n    return false;\n  }\n  return isValidContent(content);\n}\n\nfunction isValidContent(content: types.Content): boolean {\n  if (content.parts === undefined || content.parts.length === 0) {\n    return false;\n  }\n  for (const part of content.parts) {\n    if (part === undefined || Object.keys(part).length === 0) {\n      return false;\n    }\n    if (!part.thought && part.text !== undefined && part.text === '') {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates the history contains the correct roles.\n *\n * @throws Error if the history does not start with a user turn.\n * @throws Error if the history contains an invalid role.\n */\nfunction validateHistory(history: types.Content[]) {\n  // Empty history is valid.\n  if (history.length === 0) {\n    return;\n  }\n  for (const content of history) {\n    if (content.role !== 'user' && content.role !== 'model') {\n      throw new Error(`Role must be user or model, but got ${content.role}.`);\n    }\n  }\n}\n\n/**\n * Extracts the curated (valid) history from a comprehensive history.\n *\n * @remarks\n * The model may sometimes generate invalid or empty contents(e.g., due to safty\n * filters or recitation). Extracting valid turns from the history\n * ensures that subsequent requests could be accpeted by the model.\n */\nfunction extractCuratedHistory(\n  comprehensiveHistory: types.Content[],\n): types.Content[] {\n  if (comprehensiveHistory === undefined || comprehensiveHistory.length === 0) {\n    return [];\n  }\n  const curatedHistory: types.Content[] = [];\n  const length = comprehensiveHistory.length;\n  let i = 0;\n  while (i < length) {\n    if (comprehensiveHistory[i].role === 'user') {\n      curatedHistory.push(comprehensiveHistory[i]);\n      i++;\n    } else {\n      const modelOutput: types.Content[] = [];\n      let isValid = true;\n      while (i < length && comprehensiveHistory[i].role === 'model') {\n        modelOutput.push(comprehensiveHistory[i]);\n        if (isValid && !isValidContent(comprehensiveHistory[i])) {\n          isValid = false;\n        }\n        i++;\n      }\n      if (isValid) {\n        curatedHistory.push(...modelOutput);\n      } else {\n        // Remove the last user input when model content is invalid.\n        curatedHistory.pop();\n      }\n    }\n  }\n  return curatedHistory;\n}\n\n/**\n * A utility class to create a chat session.\n */\nexport class Chats {\n  private readonly modelsModule: Models;\n  private readonly apiClient: ApiClient;\n\n  constructor(modelsModule: Models, apiClient: ApiClient) {\n    this.modelsModule = modelsModule;\n    this.apiClient = apiClient;\n  }\n\n  /**\n   * Creates a new chat session.\n   *\n   * @remarks\n   * The config in the params will be used for all requests within the chat\n   * session unless overridden by a per-request `config` in\n   * @see {@link types.SendMessageParameters#config}.\n   *\n   * @param params - Parameters for creating a chat session.\n   * @returns A new chat session.\n   *\n   * @example\n   * ```ts\n   * const chat = ai.chats.create({\n   *   model: 'gemini-2.0-flash'\n   *   config: {\n   *     temperature: 0.5,\n   *     maxOutputTokens: 1024,\n   *   }\n   * });\n   * ```\n   */\n  create(params: types.CreateChatParameters) {\n    return new Chat(\n      this.apiClient,\n      this.modelsModule,\n      params.model,\n      params.config,\n      // Deep copy the history to avoid mutating the history outside of the\n      // chat session.\n      structuredClone(params.history),\n    );\n  }\n}\n\n/**\n * Chat session that enables sending messages to the model with previous\n * conversation context.\n *\n * @remarks\n * The session maintains all the turns between user and model.\n */\nexport class Chat {\n  // A promise to represent the current state of the message being sent to the\n  // model.\n  private sendPromise: Promise<void> = Promise.resolve();\n\n  constructor(\n    private readonly apiClient: ApiClient,\n    private readonly modelsModule: Models,\n    private readonly model: string,\n    private readonly config: types.GenerateContentConfig = {},\n    private history: types.Content[] = [],\n  ) {\n    validateHistory(history);\n  }\n\n  /**\n   * Sends a message to the model and returns the response.\n   *\n   * @remarks\n   * This method will wait for the previous message to be processed before\n   * sending the next message.\n   *\n   * @see {@link Chat#sendMessageStream} for streaming method.\n   * @param params - parameters for sending messages within a chat session.\n   * @returns The model's response.\n   *\n   * @example\n   * ```ts\n   * const chat = ai.chats.create({model: 'gemini-2.0-flash'});\n   * const response = await chat.sendMessage({\n   *   message: 'Why is the sky blue?'\n   * });\n   * console.log(response.text);\n   * ```\n   */\n  async sendMessage(\n    params: types.SendMessageParameters,\n  ): Promise<types.GenerateContentResponse> {\n    await this.sendPromise;\n    const inputContent = t.tContent(this.apiClient, params.message);\n    const responsePromise = this.modelsModule.generateContent({\n      model: this.model,\n      contents: this.getHistory(true).concat(inputContent),\n      config: params.config ?? this.config,\n    });\n    this.sendPromise = (async () => {\n      const response = await responsePromise;\n      const outputContent = response.candidates?.[0]?.content;\n\n      // Because the AFC input contains the entire curated chat history in\n      // addition to the new user input, we need to truncate the AFC history\n      // to deduplicate the existing chat history.\n      const fullAutomaticFunctionCallingHistory =\n        response.automaticFunctionCallingHistory;\n      const index = this.getHistory(true).length;\n\n      let automaticFunctionCallingHistory: types.Content[] = [];\n      if (fullAutomaticFunctionCallingHistory != null) {\n        automaticFunctionCallingHistory =\n          fullAutomaticFunctionCallingHistory.slice(index) ?? [];\n      }\n\n      const modelOutput = outputContent ? [outputContent] : [];\n      this.recordHistory(\n        inputContent,\n        modelOutput,\n        automaticFunctionCallingHistory,\n      );\n      return;\n    })();\n    await this.sendPromise.catch(() => {\n      // Resets sendPromise to avoid subsequent calls failing\n      this.sendPromise = Promise.resolve();\n    });\n    return responsePromise;\n  }\n\n  /**\n   * Sends a message to the model and returns the response in chunks.\n   *\n   * @remarks\n   * This method will wait for the previous message to be processed before\n   * sending the next message.\n   *\n   * @see {@link Chat#sendMessage} for non-streaming method.\n   * @param params - parameters for sending the message.\n   * @return The model's response.\n   *\n   * @example\n   * ```ts\n   * const chat = ai.chats.create({model: 'gemini-2.0-flash'});\n   * const response = await chat.sendMessageStream({\n   *   message: 'Why is the sky blue?'\n   * });\n   * for await (const chunk of response) {\n   *   console.log(chunk.text);\n   * }\n   * ```\n   */\n  async sendMessageStream(\n    params: types.SendMessageParameters,\n  ): Promise<AsyncGenerator<types.GenerateContentResponse>> {\n    await this.sendPromise;\n    const inputContent = t.tContent(this.apiClient, params.message);\n    const streamResponse = this.modelsModule.generateContentStream({\n      model: this.model,\n      contents: this.getHistory(true).concat(inputContent),\n      config: params.config ?? this.config,\n    });\n    // Resolve the internal tracking of send completion promise - `sendPromise`\n    // for both success and failure response. The actual failure is still\n    // propagated by the `await streamResponse`.\n    this.sendPromise = streamResponse\n      .then(() => undefined)\n      .catch(() => undefined);\n    const response = await streamResponse;\n    const result = this.processStreamResponse(response, inputContent);\n    return result;\n  }\n\n  /**\n   * Returns the chat history.\n   *\n   * @remarks\n   * The history is a list of contents alternating between user and model.\n   *\n   * There are two types of history:\n   * - The `curated history` contains only the valid turns between user and\n   * model, which will be included in the subsequent requests sent to the model.\n   * - The `comprehensive history` contains all turns, including invalid or\n   *   empty model outputs, providing a complete record of the history.\n   *\n   * The history is updated after receiving the response from the model,\n   * for streaming response, it means receiving the last chunk of the response.\n   *\n   * The `comprehensive history` is returned by default. To get the `curated\n   * history`, set the `curated` parameter to `true`.\n   *\n   * @param curated - whether to return the curated history or the comprehensive\n   *     history.\n   * @return History contents alternating between user and model for the entire\n   *     chat session.\n   */\n  getHistory(curated: boolean = false): types.Content[] {\n    const history = curated\n      ? extractCuratedHistory(this.history)\n      : this.history;\n    // Deep copy the history to avoid mutating the history outside of the\n    // chat session.\n    return structuredClone(history);\n  }\n\n  private async *processStreamResponse(\n    streamResponse: AsyncGenerator<types.GenerateContentResponse>,\n    inputContent: types.Content,\n  ) {\n    const outputContent: types.Content[] = [];\n    for await (const chunk of streamResponse) {\n      if (isValidResponse(chunk)) {\n        const content = chunk.candidates?.[0]?.content;\n        if (content !== undefined) {\n          outputContent.push(content);\n        }\n      }\n      yield chunk;\n    }\n    this.recordHistory(inputContent, outputContent);\n  }\n\n  private recordHistory(\n    userInput: types.Content,\n    modelOutput: types.Content[],\n    automaticFunctionCallingHistory?: types.Content[],\n  ) {\n    let outputContents: types.Content[] = [];\n    if (\n      modelOutput.length > 0 &&\n      modelOutput.every((content) => content.role !== undefined)\n    ) {\n      outputContents = modelOutput;\n    } else {\n      // Appends an empty content when model returns empty response, so that the\n      // history is always alternating between user and model.\n      outputContents.push({\n        role: 'model',\n        parts: [],\n      } as types.Content);\n    }\n    if (\n      automaticFunctionCallingHistory &&\n      automaticFunctionCallingHistory.length > 0\n    ) {\n      this.history.push(\n        ...extractCuratedHistory(automaticFunctionCallingHistory!),\n      );\n    } else {\n      this.history.push(userInput);\n    }\n    this.history.push(...outputContents);\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from '../_api_client.js';\nimport * as common from '../_common.js';\nimport * as t from '../_transformers.js';\nimport * as types from '../types.js';\n\nexport function listFilesConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListFilesConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPageSize = common.getValueByPath(fromObject, ['pageSize']);\n  if (parentObject !== undefined && fromPageSize != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n  }\n\n  const fromPageToken = common.getValueByPath(fromObject, ['pageToken']);\n  if (parentObject !== undefined && fromPageToken != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n  }\n\n  return toObject;\n}\n\nexport function listFilesParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListFilesParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      listFilesConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function fileStatusToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FileStatus,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDetails = common.getValueByPath(fromObject, ['details']);\n  if (fromDetails != null) {\n    common.setValueByPath(toObject, ['details'], fromDetails);\n  }\n\n  const fromMessage = common.getValueByPath(fromObject, ['message']);\n  if (fromMessage != null) {\n    common.setValueByPath(toObject, ['message'], fromMessage);\n  }\n\n  const fromCode = common.getValueByPath(fromObject, ['code']);\n  if (fromCode != null) {\n    common.setValueByPath(toObject, ['code'], fromCode);\n  }\n\n  return toObject;\n}\n\nexport function fileToMldev(\n  apiClient: ApiClient,\n  fromObject: types.File,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  const fromSizeBytes = common.getValueByPath(fromObject, ['sizeBytes']);\n  if (fromSizeBytes != null) {\n    common.setValueByPath(toObject, ['sizeBytes'], fromSizeBytes);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromExpirationTime = common.getValueByPath(fromObject, [\n    'expirationTime',\n  ]);\n  if (fromExpirationTime != null) {\n    common.setValueByPath(toObject, ['expirationTime'], fromExpirationTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  const fromSha256Hash = common.getValueByPath(fromObject, ['sha256Hash']);\n  if (fromSha256Hash != null) {\n    common.setValueByPath(toObject, ['sha256Hash'], fromSha256Hash);\n  }\n\n  const fromUri = common.getValueByPath(fromObject, ['uri']);\n  if (fromUri != null) {\n    common.setValueByPath(toObject, ['uri'], fromUri);\n  }\n\n  const fromDownloadUri = common.getValueByPath(fromObject, ['downloadUri']);\n  if (fromDownloadUri != null) {\n    common.setValueByPath(toObject, ['downloadUri'], fromDownloadUri);\n  }\n\n  const fromState = common.getValueByPath(fromObject, ['state']);\n  if (fromState != null) {\n    common.setValueByPath(toObject, ['state'], fromState);\n  }\n\n  const fromSource = common.getValueByPath(fromObject, ['source']);\n  if (fromSource != null) {\n    common.setValueByPath(toObject, ['source'], fromSource);\n  }\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(\n      toObject,\n      ['error'],\n      fileStatusToMldev(apiClient, fromError),\n    );\n  }\n\n  return toObject;\n}\n\nexport function createFileParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CreateFileParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFile = common.getValueByPath(fromObject, ['file']);\n  if (fromFile != null) {\n    common.setValueByPath(toObject, ['file'], fileToMldev(apiClient, fromFile));\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function getFileParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GetFileParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'file'],\n      t.tFileName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function deleteFileParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.DeleteFileParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'file'],\n      t.tFileName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function fileStatusFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.FileStatus,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDetails = common.getValueByPath(fromObject, ['details']);\n  if (fromDetails != null) {\n    common.setValueByPath(toObject, ['details'], fromDetails);\n  }\n\n  const fromMessage = common.getValueByPath(fromObject, ['message']);\n  if (fromMessage != null) {\n    common.setValueByPath(toObject, ['message'], fromMessage);\n  }\n\n  const fromCode = common.getValueByPath(fromObject, ['code']);\n  if (fromCode != null) {\n    common.setValueByPath(toObject, ['code'], fromCode);\n  }\n\n  return toObject;\n}\n\nexport function fileFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.File,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  const fromSizeBytes = common.getValueByPath(fromObject, ['sizeBytes']);\n  if (fromSizeBytes != null) {\n    common.setValueByPath(toObject, ['sizeBytes'], fromSizeBytes);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromExpirationTime = common.getValueByPath(fromObject, [\n    'expirationTime',\n  ]);\n  if (fromExpirationTime != null) {\n    common.setValueByPath(toObject, ['expirationTime'], fromExpirationTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  const fromSha256Hash = common.getValueByPath(fromObject, ['sha256Hash']);\n  if (fromSha256Hash != null) {\n    common.setValueByPath(toObject, ['sha256Hash'], fromSha256Hash);\n  }\n\n  const fromUri = common.getValueByPath(fromObject, ['uri']);\n  if (fromUri != null) {\n    common.setValueByPath(toObject, ['uri'], fromUri);\n  }\n\n  const fromDownloadUri = common.getValueByPath(fromObject, ['downloadUri']);\n  if (fromDownloadUri != null) {\n    common.setValueByPath(toObject, ['downloadUri'], fromDownloadUri);\n  }\n\n  const fromState = common.getValueByPath(fromObject, ['state']);\n  if (fromState != null) {\n    common.setValueByPath(toObject, ['state'], fromState);\n  }\n\n  const fromSource = common.getValueByPath(fromObject, ['source']);\n  if (fromSource != null) {\n    common.setValueByPath(toObject, ['source'], fromSource);\n  }\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(\n      toObject,\n      ['error'],\n      fileStatusFromMldev(apiClient, fromError),\n    );\n  }\n\n  return toObject;\n}\n\nexport function listFilesResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListFilesResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNextPageToken = common.getValueByPath(fromObject, [\n    'nextPageToken',\n  ]);\n  if (fromNextPageToken != null) {\n    common.setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n  }\n\n  const fromFiles = common.getValueByPath(fromObject, ['files']);\n  if (fromFiles != null) {\n    let transformedList = fromFiles;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return fileFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['files'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function createFileResponseFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function deleteFileResponseFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from './_api_client.js';\nimport * as common from './_common.js';\nimport {BaseModule} from './_common.js';\nimport * as converters from './converters/_files_converters.js';\nimport {PagedItem, Pager} from './pagers.js';\nimport * as types from './types.js';\n\nexport class Files extends BaseModule {\n  constructor(private readonly apiClient: ApiClient) {\n    super();\n  }\n\n  /**\n   * Lists all current project files from the service.\n   *\n   * @param params - The parameters for the list request\n   * @return The paginated results of the list of files\n   *\n   * @example\n   * The following code prints the names of all files from the service, the\n   * size of each page is 10.\n   *\n   * ```ts\n   * const listResponse = await ai.files.list({config: {'pageSize': 10}});\n   * for await (const file of listResponse) {\n   *   console.log(file.name);\n   * }\n   * ```\n   */\n  list = async (\n    params: types.ListFilesParameters = {},\n  ): Promise<Pager<types.File>> => {\n    return new Pager<types.File>(\n      PagedItem.PAGED_ITEM_FILES,\n      (x: types.ListFilesParameters) => this.listInternal(x),\n      await this.listInternal(params),\n      params,\n    );\n  };\n\n  /**\n   * Uploads a file asynchronously to the Gemini API.\n   * This method is not available in Vertex AI.\n   * Supported upload sources:\n   * - Node.js: File path (string) or Blob object.\n   * - Browser: Blob object (e.g., File).\n   *\n   * @remarks\n   * The `mimeType` can be specified in the `config` parameter. If omitted:\n   *  - For file path (string) inputs, the `mimeType` will be inferred from the\n   *     file extension.\n   *  - For Blob object inputs, the `mimeType` will be set to the Blob's `type`\n   *     property.\n   * Somex eamples for file extension to mimeType mapping:\n   * .txt -> text/plain\n   * .json -> application/json\n   * .jpg  -> image/jpeg\n   * .png -> image/png\n   * .mp3 -> audio/mpeg\n   * .mp4 -> video/mp4\n   *\n   * This section can contain multiple paragraphs and code examples.\n   *\n   * @param params - Optional parameters specified in the\n   *        `types.UploadFileParameters` interface.\n   *         @see {@link types.UploadFileParameters#config} for the optional\n   *         config in the parameters.\n   * @return A promise that resolves to a `types.File` object.\n   * @throws An error if called on a Vertex AI client.\n   * @throws An error if the `mimeType` is not provided and can not be inferred,\n   * the `mimeType` can be provided in the `params.config` parameter.\n   * @throws An error occurs if a suitable upload location cannot be established.\n   *\n   * @example\n   * The following code uploads a file to Gemini API.\n   *\n   * ```ts\n   * const file = await ai.files.upload({file: 'file.txt', config: {\n   *   mimeType: 'text/plain',\n   * }});\n   * console.log(file.name);\n   * ```\n   */\n  async upload(params: types.UploadFileParameters): Promise<types.File> {\n    if (this.apiClient.isVertexAI()) {\n      throw new Error(\n        'Vertex AI does not support uploading files. You can share files through a GCS bucket.',\n      );\n    }\n\n    return this.apiClient\n      .uploadFile(params.file, params.config)\n      .then((response) => {\n        const file = converters.fileFromMldev(this.apiClient, response);\n        return file as types.File;\n      });\n  }\n\n  /**\n   * Downloads a remotely stored file asynchronously to a location specified in\n   * the `params` object. This method only works on Node environment, to\n   * download files in the browser, use a browser compliant method like an <a>\n   * tag.\n   *\n   * @param params - The parameters for the download request.\n   *\n   * @example\n   * The following code downloads an example file named \"files/mehozpxf877d\" as\n   * \"file.txt\".\n   *\n   * ```ts\n   * await ai.files.download({file: file.name, downloadPath: 'file.txt'});\n   * ```\n   */\n\n  async download(params: types.DownloadFileParameters): Promise<void> {\n    await this.apiClient.downloadFile(params);\n  }\n\n  private async listInternal(\n    params: types.ListFilesParameters,\n  ): Promise<types.ListFilesResponse> {\n    let response: Promise<types.ListFilesResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      throw new Error(\n        'This method is only supported by the Gemini Developer API.',\n      );\n    } else {\n      const body = converters.listFilesParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap('files', body['_url'] as Record<string, unknown>);\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.ListFilesResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.listFilesResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.ListFilesResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  private async createInternal(\n    params: types.CreateFileParameters,\n  ): Promise<types.CreateFileResponse> {\n    let response: Promise<types.CreateFileResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      throw new Error(\n        'This method is only supported by the Gemini Developer API.',\n      );\n    } else {\n      const body = converters.createFileParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'upload/v1beta/files',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CreateFileResponse>;\n\n      return response.then(() => {\n        const resp = converters.createFileResponseFromMldev();\n        const typedResp = new types.CreateFileResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  /**\n   * Retrieves the file information from the service.\n   *\n   * @param params - The parameters for the get request\n   * @return The Promise that resolves to the types.File object requested.\n   *\n   * @example\n   * ```ts\n   * const config: GetFileParameters = {\n   *   name: fileName,\n   * };\n   * file = await ai.files.get(config);\n   * console.log(file.name);\n   * ```\n   */\n  async get(params: types.GetFileParameters): Promise<types.File> {\n    let response: Promise<types.File>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      throw new Error(\n        'This method is only supported by the Gemini Developer API.',\n      );\n    } else {\n      const body = converters.getFileParametersToMldev(this.apiClient, params);\n      path = common.formatMap(\n        'files/{file}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.File>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.fileFromMldev(this.apiClient, apiResponse);\n\n        return resp as types.File;\n      });\n    }\n  }\n\n  /**\n   * Deletes a remotely stored file.\n   *\n   * @param params - The parameters for the delete request.\n   * @return The DeleteFileResponse, the response for the delete method.\n   *\n   * @example\n   * The following code deletes an example file named \"files/mehozpxf877d\".\n   *\n   * ```ts\n   * await ai.files.delete({name: file.name});\n   * ```\n   */\n  async delete(\n    params: types.DeleteFileParameters,\n  ): Promise<types.DeleteFileResponse> {\n    let response: Promise<types.DeleteFileResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      throw new Error(\n        'This method is only supported by the Gemini Developer API.',\n      );\n    } else {\n      const body = converters.deleteFileParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'files/{file}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'DELETE',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.DeleteFileResponse>;\n\n      return response.then(() => {\n        const resp = converters.deleteFileResponseFromMldev();\n        const typedResp = new types.DeleteFileResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from '../_api_client.js';\nimport * as common from '../_common.js';\nimport * as t from '../_transformers.js';\nimport * as types from '../types.js';\n\nexport function prebuiltVoiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.PrebuiltVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceName = common.getValueByPath(fromObject, ['voiceName']);\n  if (fromVoiceName != null) {\n    common.setValueByPath(toObject, ['voiceName'], fromVoiceName);\n  }\n\n  return toObject;\n}\n\nexport function prebuiltVoiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.PrebuiltVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceName = common.getValueByPath(fromObject, ['voiceName']);\n  if (fromVoiceName != null) {\n    common.setValueByPath(toObject, ['voiceName'], fromVoiceName);\n  }\n\n  return toObject;\n}\n\nexport function voiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.VoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPrebuiltVoiceConfig = common.getValueByPath(fromObject, [\n    'prebuiltVoiceConfig',\n  ]);\n  if (fromPrebuiltVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['prebuiltVoiceConfig'],\n      prebuiltVoiceConfigToMldev(apiClient, fromPrebuiltVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function voiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.VoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPrebuiltVoiceConfig = common.getValueByPath(fromObject, [\n    'prebuiltVoiceConfig',\n  ]);\n  if (fromPrebuiltVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['prebuiltVoiceConfig'],\n      prebuiltVoiceConfigToVertex(apiClient, fromPrebuiltVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function speakerVoiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SpeakerVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSpeaker = common.getValueByPath(fromObject, ['speaker']);\n  if (fromSpeaker != null) {\n    common.setValueByPath(toObject, ['speaker'], fromSpeaker);\n  }\n\n  const fromVoiceConfig = common.getValueByPath(fromObject, ['voiceConfig']);\n  if (fromVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['voiceConfig'],\n      voiceConfigToMldev(apiClient, fromVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function speakerVoiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SpeakerVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['speaker']) !== undefined) {\n    throw new Error('speaker parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['voiceConfig']) !== undefined) {\n    throw new Error('voiceConfig parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function multiSpeakerVoiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.MultiSpeakerVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSpeakerVoiceConfigs = common.getValueByPath(fromObject, [\n    'speakerVoiceConfigs',\n  ]);\n  if (fromSpeakerVoiceConfigs != null) {\n    let transformedList = fromSpeakerVoiceConfigs;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return speakerVoiceConfigToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['speakerVoiceConfigs'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function multiSpeakerVoiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.MultiSpeakerVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (\n    common.getValueByPath(fromObject, ['speakerVoiceConfigs']) !== undefined\n  ) {\n    throw new Error(\n      'speakerVoiceConfigs parameter is not supported in Vertex AI.',\n    );\n  }\n\n  return toObject;\n}\n\nexport function speechConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SpeechConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceConfig = common.getValueByPath(fromObject, ['voiceConfig']);\n  if (fromVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['voiceConfig'],\n      voiceConfigToMldev(apiClient, fromVoiceConfig),\n    );\n  }\n\n  const fromMultiSpeakerVoiceConfig = common.getValueByPath(fromObject, [\n    'multiSpeakerVoiceConfig',\n  ]);\n  if (fromMultiSpeakerVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['multiSpeakerVoiceConfig'],\n      multiSpeakerVoiceConfigToMldev(apiClient, fromMultiSpeakerVoiceConfig),\n    );\n  }\n\n  const fromLanguageCode = common.getValueByPath(fromObject, ['languageCode']);\n  if (fromLanguageCode != null) {\n    common.setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n  }\n\n  return toObject;\n}\n\nexport function speechConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SpeechConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceConfig = common.getValueByPath(fromObject, ['voiceConfig']);\n  if (fromVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['voiceConfig'],\n      voiceConfigToVertex(apiClient, fromVoiceConfig),\n    );\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['multiSpeakerVoiceConfig']) !== undefined\n  ) {\n    throw new Error(\n      'multiSpeakerVoiceConfig parameter is not supported in Vertex AI.',\n    );\n  }\n\n  const fromLanguageCode = common.getValueByPath(fromObject, ['languageCode']);\n  if (fromLanguageCode != null) {\n    common.setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n  }\n\n  return toObject;\n}\n\nexport function videoMetadataToMldev(\n  apiClient: ApiClient,\n  fromObject: types.VideoMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (fromFps != null) {\n    common.setValueByPath(toObject, ['fps'], fromFps);\n  }\n\n  const fromEndOffset = common.getValueByPath(fromObject, ['endOffset']);\n  if (fromEndOffset != null) {\n    common.setValueByPath(toObject, ['endOffset'], fromEndOffset);\n  }\n\n  const fromStartOffset = common.getValueByPath(fromObject, ['startOffset']);\n  if (fromStartOffset != null) {\n    common.setValueByPath(toObject, ['startOffset'], fromStartOffset);\n  }\n\n  return toObject;\n}\n\nexport function videoMetadataToVertex(\n  apiClient: ApiClient,\n  fromObject: types.VideoMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (fromFps != null) {\n    common.setValueByPath(toObject, ['fps'], fromFps);\n  }\n\n  const fromEndOffset = common.getValueByPath(fromObject, ['endOffset']);\n  if (fromEndOffset != null) {\n    common.setValueByPath(toObject, ['endOffset'], fromEndOffset);\n  }\n\n  const fromStartOffset = common.getValueByPath(fromObject, ['startOffset']);\n  if (fromStartOffset != null) {\n    common.setValueByPath(toObject, ['startOffset'], fromStartOffset);\n  }\n\n  return toObject;\n}\n\nexport function blobToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Blob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['displayName']) !== undefined) {\n    throw new Error('displayName parameter is not supported in Gemini API.');\n  }\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function blobToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Blob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function fileDataToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FileData,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['displayName']) !== undefined) {\n    throw new Error('displayName parameter is not supported in Gemini API.');\n  }\n\n  const fromFileUri = common.getValueByPath(fromObject, ['fileUri']);\n  if (fromFileUri != null) {\n    common.setValueByPath(toObject, ['fileUri'], fromFileUri);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function fileDataToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FileData,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromFileUri = common.getValueByPath(fromObject, ['fileUri']);\n  if (fromFileUri != null) {\n    common.setValueByPath(toObject, ['fileUri'], fromFileUri);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function partToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoMetadata'],\n      videoMetadataToMldev(apiClient, fromVideoMetadata),\n    );\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(\n      toObject,\n      ['inlineData'],\n      blobToMldev(apiClient, fromInlineData),\n    );\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(\n      toObject,\n      ['fileData'],\n      fileDataToMldev(apiClient, fromFileData),\n    );\n  }\n\n  const fromThoughtSignature = common.getValueByPath(fromObject, [\n    'thoughtSignature',\n  ]);\n  if (fromThoughtSignature != null) {\n    common.setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function partToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoMetadata'],\n      videoMetadataToVertex(apiClient, fromVideoMetadata),\n    );\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(\n      toObject,\n      ['inlineData'],\n      blobToVertex(apiClient, fromInlineData),\n    );\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(\n      toObject,\n      ['fileData'],\n      fileDataToVertex(apiClient, fromFileData),\n    );\n  }\n\n  const fromThoughtSignature = common.getValueByPath(fromObject, [\n    'thoughtSignature',\n  ]);\n  if (fromThoughtSignature != null) {\n    common.setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    let transformedList = fromParts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return partToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['parts'], transformedList);\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function contentToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    let transformedList = fromParts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return partToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['parts'], transformedList);\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function functionDeclarationToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionDeclaration,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromBehavior = common.getValueByPath(fromObject, ['behavior']);\n  if (fromBehavior != null) {\n    common.setValueByPath(toObject, ['behavior'], fromBehavior);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromParameters = common.getValueByPath(fromObject, ['parameters']);\n  if (fromParameters != null) {\n    common.setValueByPath(toObject, ['parameters'], fromParameters);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(toObject, ['response'], fromResponse);\n  }\n\n  return toObject;\n}\n\nexport function functionDeclarationToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionDeclaration,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['behavior']) !== undefined) {\n    throw new Error('behavior parameter is not supported in Vertex AI.');\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromParameters = common.getValueByPath(fromObject, ['parameters']);\n  if (fromParameters != null) {\n    common.setValueByPath(toObject, ['parameters'], fromParameters);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(toObject, ['response'], fromResponse);\n  }\n\n  return toObject;\n}\n\nexport function intervalToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Interval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromStartTime = common.getValueByPath(fromObject, ['startTime']);\n  if (fromStartTime != null) {\n    common.setValueByPath(toObject, ['startTime'], fromStartTime);\n  }\n\n  const fromEndTime = common.getValueByPath(fromObject, ['endTime']);\n  if (fromEndTime != null) {\n    common.setValueByPath(toObject, ['endTime'], fromEndTime);\n  }\n\n  return toObject;\n}\n\nexport function intervalToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Interval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromStartTime = common.getValueByPath(fromObject, ['startTime']);\n  if (fromStartTime != null) {\n    common.setValueByPath(toObject, ['startTime'], fromStartTime);\n  }\n\n  const fromEndTime = common.getValueByPath(fromObject, ['endTime']);\n  if (fromEndTime != null) {\n    common.setValueByPath(toObject, ['endTime'], fromEndTime);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearch,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTimeRangeFilter = common.getValueByPath(fromObject, [\n    'timeRangeFilter',\n  ]);\n  if (fromTimeRangeFilter != null) {\n    common.setValueByPath(\n      toObject,\n      ['timeRangeFilter'],\n      intervalToMldev(apiClient, fromTimeRangeFilter),\n    );\n  }\n\n  return toObject;\n}\n\nexport function googleSearchToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearch,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTimeRangeFilter = common.getValueByPath(fromObject, [\n    'timeRangeFilter',\n  ]);\n  if (fromTimeRangeFilter != null) {\n    common.setValueByPath(\n      toObject,\n      ['timeRangeFilter'],\n      intervalToVertex(apiClient, fromTimeRangeFilter),\n    );\n  }\n\n  return toObject;\n}\n\nexport function dynamicRetrievalConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.DynamicRetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromDynamicThreshold = common.getValueByPath(fromObject, [\n    'dynamicThreshold',\n  ]);\n  if (fromDynamicThreshold != null) {\n    common.setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n  }\n\n  return toObject;\n}\n\nexport function dynamicRetrievalConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.DynamicRetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromDynamicThreshold = common.getValueByPath(fromObject, [\n    'dynamicThreshold',\n  ]);\n  if (fromDynamicThreshold != null) {\n    common.setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchRetrievalToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearchRetrieval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDynamicRetrievalConfig = common.getValueByPath(fromObject, [\n    'dynamicRetrievalConfig',\n  ]);\n  if (fromDynamicRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['dynamicRetrievalConfig'],\n      dynamicRetrievalConfigToMldev(apiClient, fromDynamicRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function googleSearchRetrievalToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearchRetrieval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDynamicRetrievalConfig = common.getValueByPath(fromObject, [\n    'dynamicRetrievalConfig',\n  ]);\n  if (fromDynamicRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['dynamicRetrievalConfig'],\n      dynamicRetrievalConfigToVertex(apiClient, fromDynamicRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function enterpriseWebSearchToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function enterpriseWebSearchToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function apiKeyConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ApiKeyConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['apiKeyString']) !== undefined) {\n    throw new Error('apiKeyString parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function apiKeyConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ApiKeyConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromApiKeyString = common.getValueByPath(fromObject, ['apiKeyString']);\n  if (fromApiKeyString != null) {\n    common.setValueByPath(toObject, ['apiKeyString'], fromApiKeyString);\n  }\n\n  return toObject;\n}\n\nexport function authConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.AuthConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['apiKeyConfig']) !== undefined) {\n    throw new Error('apiKeyConfig parameter is not supported in Gemini API.');\n  }\n\n  const fromAuthType = common.getValueByPath(fromObject, ['authType']);\n  if (fromAuthType != null) {\n    common.setValueByPath(toObject, ['authType'], fromAuthType);\n  }\n\n  const fromGoogleServiceAccountConfig = common.getValueByPath(fromObject, [\n    'googleServiceAccountConfig',\n  ]);\n  if (fromGoogleServiceAccountConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleServiceAccountConfig'],\n      fromGoogleServiceAccountConfig,\n    );\n  }\n\n  const fromHttpBasicAuthConfig = common.getValueByPath(fromObject, [\n    'httpBasicAuthConfig',\n  ]);\n  if (fromHttpBasicAuthConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['httpBasicAuthConfig'],\n      fromHttpBasicAuthConfig,\n    );\n  }\n\n  const fromOauthConfig = common.getValueByPath(fromObject, ['oauthConfig']);\n  if (fromOauthConfig != null) {\n    common.setValueByPath(toObject, ['oauthConfig'], fromOauthConfig);\n  }\n\n  const fromOidcConfig = common.getValueByPath(fromObject, ['oidcConfig']);\n  if (fromOidcConfig != null) {\n    common.setValueByPath(toObject, ['oidcConfig'], fromOidcConfig);\n  }\n\n  return toObject;\n}\n\nexport function authConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.AuthConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromApiKeyConfig = common.getValueByPath(fromObject, ['apiKeyConfig']);\n  if (fromApiKeyConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['apiKeyConfig'],\n      apiKeyConfigToVertex(apiClient, fromApiKeyConfig),\n    );\n  }\n\n  const fromAuthType = common.getValueByPath(fromObject, ['authType']);\n  if (fromAuthType != null) {\n    common.setValueByPath(toObject, ['authType'], fromAuthType);\n  }\n\n  const fromGoogleServiceAccountConfig = common.getValueByPath(fromObject, [\n    'googleServiceAccountConfig',\n  ]);\n  if (fromGoogleServiceAccountConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleServiceAccountConfig'],\n      fromGoogleServiceAccountConfig,\n    );\n  }\n\n  const fromHttpBasicAuthConfig = common.getValueByPath(fromObject, [\n    'httpBasicAuthConfig',\n  ]);\n  if (fromHttpBasicAuthConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['httpBasicAuthConfig'],\n      fromHttpBasicAuthConfig,\n    );\n  }\n\n  const fromOauthConfig = common.getValueByPath(fromObject, ['oauthConfig']);\n  if (fromOauthConfig != null) {\n    common.setValueByPath(toObject, ['oauthConfig'], fromOauthConfig);\n  }\n\n  const fromOidcConfig = common.getValueByPath(fromObject, ['oidcConfig']);\n  if (fromOidcConfig != null) {\n    common.setValueByPath(toObject, ['oidcConfig'], fromOidcConfig);\n  }\n\n  return toObject;\n}\n\nexport function googleMapsToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleMaps,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['authConfig']) !== undefined) {\n    throw new Error('authConfig parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function googleMapsToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleMaps,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAuthConfig = common.getValueByPath(fromObject, ['authConfig']);\n  if (fromAuthConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['authConfig'],\n      authConfigToVertex(apiClient, fromAuthConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function urlContextToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function urlContextToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function toolToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Tool,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionDeclarations = common.getValueByPath(fromObject, [\n    'functionDeclarations',\n  ]);\n  if (fromFunctionDeclarations != null) {\n    let transformedList = fromFunctionDeclarations;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return functionDeclarationToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['functionDeclarations'], transformedList);\n  }\n\n  if (common.getValueByPath(fromObject, ['retrieval']) !== undefined) {\n    throw new Error('retrieval parameter is not supported in Gemini API.');\n  }\n\n  const fromGoogleSearch = common.getValueByPath(fromObject, ['googleSearch']);\n  if (fromGoogleSearch != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearch'],\n      googleSearchToMldev(apiClient, fromGoogleSearch),\n    );\n  }\n\n  const fromGoogleSearchRetrieval = common.getValueByPath(fromObject, [\n    'googleSearchRetrieval',\n  ]);\n  if (fromGoogleSearchRetrieval != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearchRetrieval'],\n      googleSearchRetrievalToMldev(apiClient, fromGoogleSearchRetrieval),\n    );\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['enterpriseWebSearch']) !== undefined\n  ) {\n    throw new Error(\n      'enterpriseWebSearch parameter is not supported in Gemini API.',\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['googleMaps']) !== undefined) {\n    throw new Error('googleMaps parameter is not supported in Gemini API.');\n  }\n\n  const fromUrlContext = common.getValueByPath(fromObject, ['urlContext']);\n  if (fromUrlContext != null) {\n    common.setValueByPath(toObject, ['urlContext'], urlContextToMldev());\n  }\n\n  const fromCodeExecution = common.getValueByPath(fromObject, [\n    'codeExecution',\n  ]);\n  if (fromCodeExecution != null) {\n    common.setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n  }\n\n  return toObject;\n}\n\nexport function toolToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Tool,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionDeclarations = common.getValueByPath(fromObject, [\n    'functionDeclarations',\n  ]);\n  if (fromFunctionDeclarations != null) {\n    let transformedList = fromFunctionDeclarations;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return functionDeclarationToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['functionDeclarations'], transformedList);\n  }\n\n  const fromRetrieval = common.getValueByPath(fromObject, ['retrieval']);\n  if (fromRetrieval != null) {\n    common.setValueByPath(toObject, ['retrieval'], fromRetrieval);\n  }\n\n  const fromGoogleSearch = common.getValueByPath(fromObject, ['googleSearch']);\n  if (fromGoogleSearch != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearch'],\n      googleSearchToVertex(apiClient, fromGoogleSearch),\n    );\n  }\n\n  const fromGoogleSearchRetrieval = common.getValueByPath(fromObject, [\n    'googleSearchRetrieval',\n  ]);\n  if (fromGoogleSearchRetrieval != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearchRetrieval'],\n      googleSearchRetrievalToVertex(apiClient, fromGoogleSearchRetrieval),\n    );\n  }\n\n  const fromEnterpriseWebSearch = common.getValueByPath(fromObject, [\n    'enterpriseWebSearch',\n  ]);\n  if (fromEnterpriseWebSearch != null) {\n    common.setValueByPath(\n      toObject,\n      ['enterpriseWebSearch'],\n      enterpriseWebSearchToVertex(),\n    );\n  }\n\n  const fromGoogleMaps = common.getValueByPath(fromObject, ['googleMaps']);\n  if (fromGoogleMaps != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleMaps'],\n      googleMapsToVertex(apiClient, fromGoogleMaps),\n    );\n  }\n\n  const fromUrlContext = common.getValueByPath(fromObject, ['urlContext']);\n  if (fromUrlContext != null) {\n    common.setValueByPath(toObject, ['urlContext'], urlContextToVertex());\n  }\n\n  const fromCodeExecution = common.getValueByPath(fromObject, [\n    'codeExecution',\n  ]);\n  if (fromCodeExecution != null) {\n    common.setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n  }\n\n  return toObject;\n}\n\nexport function sessionResumptionConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SessionResumptionConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromHandle = common.getValueByPath(fromObject, ['handle']);\n  if (fromHandle != null) {\n    common.setValueByPath(toObject, ['handle'], fromHandle);\n  }\n\n  if (common.getValueByPath(fromObject, ['transparent']) !== undefined) {\n    throw new Error('transparent parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function sessionResumptionConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SessionResumptionConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromHandle = common.getValueByPath(fromObject, ['handle']);\n  if (fromHandle != null) {\n    common.setValueByPath(toObject, ['handle'], fromHandle);\n  }\n\n  const fromTransparent = common.getValueByPath(fromObject, ['transparent']);\n  if (fromTransparent != null) {\n    common.setValueByPath(toObject, ['transparent'], fromTransparent);\n  }\n\n  return toObject;\n}\n\nexport function audioTranscriptionConfigToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function audioTranscriptionConfigToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function automaticActivityDetectionToMldev(\n  apiClient: ApiClient,\n  fromObject: types.AutomaticActivityDetection,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisabled = common.getValueByPath(fromObject, ['disabled']);\n  if (fromDisabled != null) {\n    common.setValueByPath(toObject, ['disabled'], fromDisabled);\n  }\n\n  const fromStartOfSpeechSensitivity = common.getValueByPath(fromObject, [\n    'startOfSpeechSensitivity',\n  ]);\n  if (fromStartOfSpeechSensitivity != null) {\n    common.setValueByPath(\n      toObject,\n      ['startOfSpeechSensitivity'],\n      fromStartOfSpeechSensitivity,\n    );\n  }\n\n  const fromEndOfSpeechSensitivity = common.getValueByPath(fromObject, [\n    'endOfSpeechSensitivity',\n  ]);\n  if (fromEndOfSpeechSensitivity != null) {\n    common.setValueByPath(\n      toObject,\n      ['endOfSpeechSensitivity'],\n      fromEndOfSpeechSensitivity,\n    );\n  }\n\n  const fromPrefixPaddingMs = common.getValueByPath(fromObject, [\n    'prefixPaddingMs',\n  ]);\n  if (fromPrefixPaddingMs != null) {\n    common.setValueByPath(toObject, ['prefixPaddingMs'], fromPrefixPaddingMs);\n  }\n\n  const fromSilenceDurationMs = common.getValueByPath(fromObject, [\n    'silenceDurationMs',\n  ]);\n  if (fromSilenceDurationMs != null) {\n    common.setValueByPath(\n      toObject,\n      ['silenceDurationMs'],\n      fromSilenceDurationMs,\n    );\n  }\n\n  return toObject;\n}\n\nexport function automaticActivityDetectionToVertex(\n  apiClient: ApiClient,\n  fromObject: types.AutomaticActivityDetection,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisabled = common.getValueByPath(fromObject, ['disabled']);\n  if (fromDisabled != null) {\n    common.setValueByPath(toObject, ['disabled'], fromDisabled);\n  }\n\n  const fromStartOfSpeechSensitivity = common.getValueByPath(fromObject, [\n    'startOfSpeechSensitivity',\n  ]);\n  if (fromStartOfSpeechSensitivity != null) {\n    common.setValueByPath(\n      toObject,\n      ['startOfSpeechSensitivity'],\n      fromStartOfSpeechSensitivity,\n    );\n  }\n\n  const fromEndOfSpeechSensitivity = common.getValueByPath(fromObject, [\n    'endOfSpeechSensitivity',\n  ]);\n  if (fromEndOfSpeechSensitivity != null) {\n    common.setValueByPath(\n      toObject,\n      ['endOfSpeechSensitivity'],\n      fromEndOfSpeechSensitivity,\n    );\n  }\n\n  const fromPrefixPaddingMs = common.getValueByPath(fromObject, [\n    'prefixPaddingMs',\n  ]);\n  if (fromPrefixPaddingMs != null) {\n    common.setValueByPath(toObject, ['prefixPaddingMs'], fromPrefixPaddingMs);\n  }\n\n  const fromSilenceDurationMs = common.getValueByPath(fromObject, [\n    'silenceDurationMs',\n  ]);\n  if (fromSilenceDurationMs != null) {\n    common.setValueByPath(\n      toObject,\n      ['silenceDurationMs'],\n      fromSilenceDurationMs,\n    );\n  }\n\n  return toObject;\n}\n\nexport function realtimeInputConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.RealtimeInputConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAutomaticActivityDetection = common.getValueByPath(fromObject, [\n    'automaticActivityDetection',\n  ]);\n  if (fromAutomaticActivityDetection != null) {\n    common.setValueByPath(\n      toObject,\n      ['automaticActivityDetection'],\n      automaticActivityDetectionToMldev(\n        apiClient,\n        fromAutomaticActivityDetection,\n      ),\n    );\n  }\n\n  const fromActivityHandling = common.getValueByPath(fromObject, [\n    'activityHandling',\n  ]);\n  if (fromActivityHandling != null) {\n    common.setValueByPath(toObject, ['activityHandling'], fromActivityHandling);\n  }\n\n  const fromTurnCoverage = common.getValueByPath(fromObject, ['turnCoverage']);\n  if (fromTurnCoverage != null) {\n    common.setValueByPath(toObject, ['turnCoverage'], fromTurnCoverage);\n  }\n\n  return toObject;\n}\n\nexport function realtimeInputConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.RealtimeInputConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAutomaticActivityDetection = common.getValueByPath(fromObject, [\n    'automaticActivityDetection',\n  ]);\n  if (fromAutomaticActivityDetection != null) {\n    common.setValueByPath(\n      toObject,\n      ['automaticActivityDetection'],\n      automaticActivityDetectionToVertex(\n        apiClient,\n        fromAutomaticActivityDetection,\n      ),\n    );\n  }\n\n  const fromActivityHandling = common.getValueByPath(fromObject, [\n    'activityHandling',\n  ]);\n  if (fromActivityHandling != null) {\n    common.setValueByPath(toObject, ['activityHandling'], fromActivityHandling);\n  }\n\n  const fromTurnCoverage = common.getValueByPath(fromObject, ['turnCoverage']);\n  if (fromTurnCoverage != null) {\n    common.setValueByPath(toObject, ['turnCoverage'], fromTurnCoverage);\n  }\n\n  return toObject;\n}\n\nexport function slidingWindowToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SlidingWindow,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTargetTokens = common.getValueByPath(fromObject, ['targetTokens']);\n  if (fromTargetTokens != null) {\n    common.setValueByPath(toObject, ['targetTokens'], fromTargetTokens);\n  }\n\n  return toObject;\n}\n\nexport function slidingWindowToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SlidingWindow,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTargetTokens = common.getValueByPath(fromObject, ['targetTokens']);\n  if (fromTargetTokens != null) {\n    common.setValueByPath(toObject, ['targetTokens'], fromTargetTokens);\n  }\n\n  return toObject;\n}\n\nexport function contextWindowCompressionConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ContextWindowCompressionConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTriggerTokens = common.getValueByPath(fromObject, [\n    'triggerTokens',\n  ]);\n  if (fromTriggerTokens != null) {\n    common.setValueByPath(toObject, ['triggerTokens'], fromTriggerTokens);\n  }\n\n  const fromSlidingWindow = common.getValueByPath(fromObject, [\n    'slidingWindow',\n  ]);\n  if (fromSlidingWindow != null) {\n    common.setValueByPath(\n      toObject,\n      ['slidingWindow'],\n      slidingWindowToMldev(apiClient, fromSlidingWindow),\n    );\n  }\n\n  return toObject;\n}\n\nexport function contextWindowCompressionConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ContextWindowCompressionConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTriggerTokens = common.getValueByPath(fromObject, [\n    'triggerTokens',\n  ]);\n  if (fromTriggerTokens != null) {\n    common.setValueByPath(toObject, ['triggerTokens'], fromTriggerTokens);\n  }\n\n  const fromSlidingWindow = common.getValueByPath(fromObject, [\n    'slidingWindow',\n  ]);\n  if (fromSlidingWindow != null) {\n    common.setValueByPath(\n      toObject,\n      ['slidingWindow'],\n      slidingWindowToVertex(apiClient, fromSlidingWindow),\n    );\n  }\n\n  return toObject;\n}\n\nexport function proactivityConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ProactivityConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromProactiveAudio = common.getValueByPath(fromObject, [\n    'proactiveAudio',\n  ]);\n  if (fromProactiveAudio != null) {\n    common.setValueByPath(toObject, ['proactiveAudio'], fromProactiveAudio);\n  }\n\n  return toObject;\n}\n\nexport function proactivityConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ProactivityConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromProactiveAudio = common.getValueByPath(fromObject, [\n    'proactiveAudio',\n  ]);\n  if (fromProactiveAudio != null) {\n    common.setValueByPath(toObject, ['proactiveAudio'], fromProactiveAudio);\n  }\n\n  return toObject;\n}\n\nexport function liveConnectConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveConnectConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGenerationConfig = common.getValueByPath(fromObject, [\n    'generationConfig',\n  ]);\n  if (parentObject !== undefined && fromGenerationConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig'],\n      fromGenerationConfig,\n    );\n  }\n\n  const fromResponseModalities = common.getValueByPath(fromObject, [\n    'responseModalities',\n  ]);\n  if (parentObject !== undefined && fromResponseModalities != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'responseModalities'],\n      fromResponseModalities,\n    );\n  }\n\n  const fromTemperature = common.getValueByPath(fromObject, ['temperature']);\n  if (parentObject !== undefined && fromTemperature != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'temperature'],\n      fromTemperature,\n    );\n  }\n\n  const fromTopP = common.getValueByPath(fromObject, ['topP']);\n  if (parentObject !== undefined && fromTopP != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'topP'],\n      fromTopP,\n    );\n  }\n\n  const fromTopK = common.getValueByPath(fromObject, ['topK']);\n  if (parentObject !== undefined && fromTopK != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'topK'],\n      fromTopK,\n    );\n  }\n\n  const fromMaxOutputTokens = common.getValueByPath(fromObject, [\n    'maxOutputTokens',\n  ]);\n  if (parentObject !== undefined && fromMaxOutputTokens != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'maxOutputTokens'],\n      fromMaxOutputTokens,\n    );\n  }\n\n  const fromMediaResolution = common.getValueByPath(fromObject, [\n    'mediaResolution',\n  ]);\n  if (parentObject !== undefined && fromMediaResolution != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'mediaResolution'],\n      fromMediaResolution,\n    );\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (parentObject !== undefined && fromSeed != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'seed'],\n      fromSeed,\n    );\n  }\n\n  const fromSpeechConfig = common.getValueByPath(fromObject, ['speechConfig']);\n  if (parentObject !== undefined && fromSpeechConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'speechConfig'],\n      speechConfigToMldev(\n        apiClient,\n        t.tLiveSpeechConfig(apiClient, fromSpeechConfig),\n      ),\n    );\n  }\n\n  const fromEnableAffectiveDialog = common.getValueByPath(fromObject, [\n    'enableAffectiveDialog',\n  ]);\n  if (parentObject !== undefined && fromEnableAffectiveDialog != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'enableAffectiveDialog'],\n      fromEnableAffectiveDialog,\n    );\n  }\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'systemInstruction'],\n      contentToMldev(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    let transformedList = t.tTools(apiClient, fromTools);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return toolToMldev(apiClient, t.tTool(apiClient, item));\n      });\n    }\n    common.setValueByPath(parentObject, ['setup', 'tools'], transformedList);\n  }\n\n  const fromSessionResumption = common.getValueByPath(fromObject, [\n    'sessionResumption',\n  ]);\n  if (parentObject !== undefined && fromSessionResumption != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'sessionResumption'],\n      sessionResumptionConfigToMldev(apiClient, fromSessionResumption),\n    );\n  }\n\n  const fromInputAudioTranscription = common.getValueByPath(fromObject, [\n    'inputAudioTranscription',\n  ]);\n  if (parentObject !== undefined && fromInputAudioTranscription != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'inputAudioTranscription'],\n      audioTranscriptionConfigToMldev(),\n    );\n  }\n\n  const fromOutputAudioTranscription = common.getValueByPath(fromObject, [\n    'outputAudioTranscription',\n  ]);\n  if (parentObject !== undefined && fromOutputAudioTranscription != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'outputAudioTranscription'],\n      audioTranscriptionConfigToMldev(),\n    );\n  }\n\n  const fromRealtimeInputConfig = common.getValueByPath(fromObject, [\n    'realtimeInputConfig',\n  ]);\n  if (parentObject !== undefined && fromRealtimeInputConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'realtimeInputConfig'],\n      realtimeInputConfigToMldev(apiClient, fromRealtimeInputConfig),\n    );\n  }\n\n  const fromContextWindowCompression = common.getValueByPath(fromObject, [\n    'contextWindowCompression',\n  ]);\n  if (parentObject !== undefined && fromContextWindowCompression != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'contextWindowCompression'],\n      contextWindowCompressionConfigToMldev(\n        apiClient,\n        fromContextWindowCompression,\n      ),\n    );\n  }\n\n  const fromProactivity = common.getValueByPath(fromObject, ['proactivity']);\n  if (parentObject !== undefined && fromProactivity != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'proactivity'],\n      proactivityConfigToMldev(apiClient, fromProactivity),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveConnectConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveConnectConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGenerationConfig = common.getValueByPath(fromObject, [\n    'generationConfig',\n  ]);\n  if (parentObject !== undefined && fromGenerationConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig'],\n      fromGenerationConfig,\n    );\n  }\n\n  const fromResponseModalities = common.getValueByPath(fromObject, [\n    'responseModalities',\n  ]);\n  if (parentObject !== undefined && fromResponseModalities != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'responseModalities'],\n      fromResponseModalities,\n    );\n  }\n\n  const fromTemperature = common.getValueByPath(fromObject, ['temperature']);\n  if (parentObject !== undefined && fromTemperature != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'temperature'],\n      fromTemperature,\n    );\n  }\n\n  const fromTopP = common.getValueByPath(fromObject, ['topP']);\n  if (parentObject !== undefined && fromTopP != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'topP'],\n      fromTopP,\n    );\n  }\n\n  const fromTopK = common.getValueByPath(fromObject, ['topK']);\n  if (parentObject !== undefined && fromTopK != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'topK'],\n      fromTopK,\n    );\n  }\n\n  const fromMaxOutputTokens = common.getValueByPath(fromObject, [\n    'maxOutputTokens',\n  ]);\n  if (parentObject !== undefined && fromMaxOutputTokens != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'maxOutputTokens'],\n      fromMaxOutputTokens,\n    );\n  }\n\n  const fromMediaResolution = common.getValueByPath(fromObject, [\n    'mediaResolution',\n  ]);\n  if (parentObject !== undefined && fromMediaResolution != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'mediaResolution'],\n      fromMediaResolution,\n    );\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (parentObject !== undefined && fromSeed != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'seed'],\n      fromSeed,\n    );\n  }\n\n  const fromSpeechConfig = common.getValueByPath(fromObject, ['speechConfig']);\n  if (parentObject !== undefined && fromSpeechConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'speechConfig'],\n      speechConfigToVertex(\n        apiClient,\n        t.tLiveSpeechConfig(apiClient, fromSpeechConfig),\n      ),\n    );\n  }\n\n  const fromEnableAffectiveDialog = common.getValueByPath(fromObject, [\n    'enableAffectiveDialog',\n  ]);\n  if (parentObject !== undefined && fromEnableAffectiveDialog != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'enableAffectiveDialog'],\n      fromEnableAffectiveDialog,\n    );\n  }\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'systemInstruction'],\n      contentToVertex(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    let transformedList = t.tTools(apiClient, fromTools);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return toolToVertex(apiClient, t.tTool(apiClient, item));\n      });\n    }\n    common.setValueByPath(parentObject, ['setup', 'tools'], transformedList);\n  }\n\n  const fromSessionResumption = common.getValueByPath(fromObject, [\n    'sessionResumption',\n  ]);\n  if (parentObject !== undefined && fromSessionResumption != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'sessionResumption'],\n      sessionResumptionConfigToVertex(apiClient, fromSessionResumption),\n    );\n  }\n\n  const fromInputAudioTranscription = common.getValueByPath(fromObject, [\n    'inputAudioTranscription',\n  ]);\n  if (parentObject !== undefined && fromInputAudioTranscription != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'inputAudioTranscription'],\n      audioTranscriptionConfigToVertex(),\n    );\n  }\n\n  const fromOutputAudioTranscription = common.getValueByPath(fromObject, [\n    'outputAudioTranscription',\n  ]);\n  if (parentObject !== undefined && fromOutputAudioTranscription != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'outputAudioTranscription'],\n      audioTranscriptionConfigToVertex(),\n    );\n  }\n\n  const fromRealtimeInputConfig = common.getValueByPath(fromObject, [\n    'realtimeInputConfig',\n  ]);\n  if (parentObject !== undefined && fromRealtimeInputConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'realtimeInputConfig'],\n      realtimeInputConfigToVertex(apiClient, fromRealtimeInputConfig),\n    );\n  }\n\n  const fromContextWindowCompression = common.getValueByPath(fromObject, [\n    'contextWindowCompression',\n  ]);\n  if (parentObject !== undefined && fromContextWindowCompression != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'contextWindowCompression'],\n      contextWindowCompressionConfigToVertex(\n        apiClient,\n        fromContextWindowCompression,\n      ),\n    );\n  }\n\n  const fromProactivity = common.getValueByPath(fromObject, ['proactivity']);\n  if (parentObject !== undefined && fromProactivity != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'proactivity'],\n      proactivityConfigToVertex(apiClient, fromProactivity),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveConnectParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveConnectParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['setup', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      liveConnectConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveConnectParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveConnectParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['setup', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      liveConnectConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function activityStartToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function activityStartToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function activityEndToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function activityEndToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function liveSendRealtimeInputParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveSendRealtimeInputParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMedia = common.getValueByPath(fromObject, ['media']);\n  if (fromMedia != null) {\n    common.setValueByPath(\n      toObject,\n      ['mediaChunks'],\n      t.tBlobs(apiClient, fromMedia),\n    );\n  }\n\n  const fromAudio = common.getValueByPath(fromObject, ['audio']);\n  if (fromAudio != null) {\n    common.setValueByPath(\n      toObject,\n      ['audio'],\n      t.tAudioBlob(apiClient, fromAudio),\n    );\n  }\n\n  const fromAudioStreamEnd = common.getValueByPath(fromObject, [\n    'audioStreamEnd',\n  ]);\n  if (fromAudioStreamEnd != null) {\n    common.setValueByPath(toObject, ['audioStreamEnd'], fromAudioStreamEnd);\n  }\n\n  const fromVideo = common.getValueByPath(fromObject, ['video']);\n  if (fromVideo != null) {\n    common.setValueByPath(\n      toObject,\n      ['video'],\n      t.tImageBlob(apiClient, fromVideo),\n    );\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  const fromActivityStart = common.getValueByPath(fromObject, [\n    'activityStart',\n  ]);\n  if (fromActivityStart != null) {\n    common.setValueByPath(toObject, ['activityStart'], activityStartToMldev());\n  }\n\n  const fromActivityEnd = common.getValueByPath(fromObject, ['activityEnd']);\n  if (fromActivityEnd != null) {\n    common.setValueByPath(toObject, ['activityEnd'], activityEndToMldev());\n  }\n\n  return toObject;\n}\n\nexport function liveSendRealtimeInputParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveSendRealtimeInputParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMedia = common.getValueByPath(fromObject, ['media']);\n  if (fromMedia != null) {\n    common.setValueByPath(\n      toObject,\n      ['mediaChunks'],\n      t.tBlobs(apiClient, fromMedia),\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['audio']) !== undefined) {\n    throw new Error('audio parameter is not supported in Vertex AI.');\n  }\n\n  const fromAudioStreamEnd = common.getValueByPath(fromObject, [\n    'audioStreamEnd',\n  ]);\n  if (fromAudioStreamEnd != null) {\n    common.setValueByPath(toObject, ['audioStreamEnd'], fromAudioStreamEnd);\n  }\n\n  if (common.getValueByPath(fromObject, ['video']) !== undefined) {\n    throw new Error('video parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['text']) !== undefined) {\n    throw new Error('text parameter is not supported in Vertex AI.');\n  }\n\n  const fromActivityStart = common.getValueByPath(fromObject, [\n    'activityStart',\n  ]);\n  if (fromActivityStart != null) {\n    common.setValueByPath(toObject, ['activityStart'], activityStartToVertex());\n  }\n\n  const fromActivityEnd = common.getValueByPath(fromObject, ['activityEnd']);\n  if (fromActivityEnd != null) {\n    common.setValueByPath(toObject, ['activityEnd'], activityEndToVertex());\n  }\n\n  return toObject;\n}\n\nexport function liveClientSetupToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveClientSetup,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(toObject, ['model'], fromModel);\n  }\n\n  const fromGenerationConfig = common.getValueByPath(fromObject, [\n    'generationConfig',\n  ]);\n  if (fromGenerationConfig != null) {\n    common.setValueByPath(toObject, ['generationConfig'], fromGenerationConfig);\n  }\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (fromSystemInstruction != null) {\n    common.setValueByPath(\n      toObject,\n      ['systemInstruction'],\n      contentToMldev(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (fromTools != null) {\n    let transformedList = t.tTools(apiClient, fromTools);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return toolToMldev(apiClient, t.tTool(apiClient, item));\n      });\n    }\n    common.setValueByPath(toObject, ['tools'], transformedList);\n  }\n\n  const fromRealtimeInputConfig = common.getValueByPath(fromObject, [\n    'realtimeInputConfig',\n  ]);\n  if (fromRealtimeInputConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['realtimeInputConfig'],\n      realtimeInputConfigToMldev(apiClient, fromRealtimeInputConfig),\n    );\n  }\n\n  const fromSessionResumption = common.getValueByPath(fromObject, [\n    'sessionResumption',\n  ]);\n  if (fromSessionResumption != null) {\n    common.setValueByPath(\n      toObject,\n      ['sessionResumption'],\n      sessionResumptionConfigToMldev(apiClient, fromSessionResumption),\n    );\n  }\n\n  const fromContextWindowCompression = common.getValueByPath(fromObject, [\n    'contextWindowCompression',\n  ]);\n  if (fromContextWindowCompression != null) {\n    common.setValueByPath(\n      toObject,\n      ['contextWindowCompression'],\n      contextWindowCompressionConfigToMldev(\n        apiClient,\n        fromContextWindowCompression,\n      ),\n    );\n  }\n\n  const fromInputAudioTranscription = common.getValueByPath(fromObject, [\n    'inputAudioTranscription',\n  ]);\n  if (fromInputAudioTranscription != null) {\n    common.setValueByPath(\n      toObject,\n      ['inputAudioTranscription'],\n      audioTranscriptionConfigToMldev(),\n    );\n  }\n\n  const fromOutputAudioTranscription = common.getValueByPath(fromObject, [\n    'outputAudioTranscription',\n  ]);\n  if (fromOutputAudioTranscription != null) {\n    common.setValueByPath(\n      toObject,\n      ['outputAudioTranscription'],\n      audioTranscriptionConfigToMldev(),\n    );\n  }\n\n  const fromProactivity = common.getValueByPath(fromObject, ['proactivity']);\n  if (fromProactivity != null) {\n    common.setValueByPath(\n      toObject,\n      ['proactivity'],\n      proactivityConfigToMldev(apiClient, fromProactivity),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveClientSetupToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveClientSetup,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(toObject, ['model'], fromModel);\n  }\n\n  const fromGenerationConfig = common.getValueByPath(fromObject, [\n    'generationConfig',\n  ]);\n  if (fromGenerationConfig != null) {\n    common.setValueByPath(toObject, ['generationConfig'], fromGenerationConfig);\n  }\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (fromSystemInstruction != null) {\n    common.setValueByPath(\n      toObject,\n      ['systemInstruction'],\n      contentToVertex(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (fromTools != null) {\n    let transformedList = t.tTools(apiClient, fromTools);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return toolToVertex(apiClient, t.tTool(apiClient, item));\n      });\n    }\n    common.setValueByPath(toObject, ['tools'], transformedList);\n  }\n\n  const fromRealtimeInputConfig = common.getValueByPath(fromObject, [\n    'realtimeInputConfig',\n  ]);\n  if (fromRealtimeInputConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['realtimeInputConfig'],\n      realtimeInputConfigToVertex(apiClient, fromRealtimeInputConfig),\n    );\n  }\n\n  const fromSessionResumption = common.getValueByPath(fromObject, [\n    'sessionResumption',\n  ]);\n  if (fromSessionResumption != null) {\n    common.setValueByPath(\n      toObject,\n      ['sessionResumption'],\n      sessionResumptionConfigToVertex(apiClient, fromSessionResumption),\n    );\n  }\n\n  const fromContextWindowCompression = common.getValueByPath(fromObject, [\n    'contextWindowCompression',\n  ]);\n  if (fromContextWindowCompression != null) {\n    common.setValueByPath(\n      toObject,\n      ['contextWindowCompression'],\n      contextWindowCompressionConfigToVertex(\n        apiClient,\n        fromContextWindowCompression,\n      ),\n    );\n  }\n\n  const fromInputAudioTranscription = common.getValueByPath(fromObject, [\n    'inputAudioTranscription',\n  ]);\n  if (fromInputAudioTranscription != null) {\n    common.setValueByPath(\n      toObject,\n      ['inputAudioTranscription'],\n      audioTranscriptionConfigToVertex(),\n    );\n  }\n\n  const fromOutputAudioTranscription = common.getValueByPath(fromObject, [\n    'outputAudioTranscription',\n  ]);\n  if (fromOutputAudioTranscription != null) {\n    common.setValueByPath(\n      toObject,\n      ['outputAudioTranscription'],\n      audioTranscriptionConfigToVertex(),\n    );\n  }\n\n  const fromProactivity = common.getValueByPath(fromObject, ['proactivity']);\n  if (fromProactivity != null) {\n    common.setValueByPath(\n      toObject,\n      ['proactivity'],\n      proactivityConfigToVertex(apiClient, fromProactivity),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveClientContentToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveClientContent,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTurns = common.getValueByPath(fromObject, ['turns']);\n  if (fromTurns != null) {\n    let transformedList = fromTurns;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return contentToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['turns'], transformedList);\n  }\n\n  const fromTurnComplete = common.getValueByPath(fromObject, ['turnComplete']);\n  if (fromTurnComplete != null) {\n    common.setValueByPath(toObject, ['turnComplete'], fromTurnComplete);\n  }\n\n  return toObject;\n}\n\nexport function liveClientContentToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveClientContent,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTurns = common.getValueByPath(fromObject, ['turns']);\n  if (fromTurns != null) {\n    let transformedList = fromTurns;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return contentToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['turns'], transformedList);\n  }\n\n  const fromTurnComplete = common.getValueByPath(fromObject, ['turnComplete']);\n  if (fromTurnComplete != null) {\n    common.setValueByPath(toObject, ['turnComplete'], fromTurnComplete);\n  }\n\n  return toObject;\n}\n\nexport function liveClientRealtimeInputToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveClientRealtimeInput,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMediaChunks = common.getValueByPath(fromObject, ['mediaChunks']);\n  if (fromMediaChunks != null) {\n    common.setValueByPath(toObject, ['mediaChunks'], fromMediaChunks);\n  }\n\n  const fromAudio = common.getValueByPath(fromObject, ['audio']);\n  if (fromAudio != null) {\n    common.setValueByPath(toObject, ['audio'], fromAudio);\n  }\n\n  const fromAudioStreamEnd = common.getValueByPath(fromObject, [\n    'audioStreamEnd',\n  ]);\n  if (fromAudioStreamEnd != null) {\n    common.setValueByPath(toObject, ['audioStreamEnd'], fromAudioStreamEnd);\n  }\n\n  const fromVideo = common.getValueByPath(fromObject, ['video']);\n  if (fromVideo != null) {\n    common.setValueByPath(toObject, ['video'], fromVideo);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  const fromActivityStart = common.getValueByPath(fromObject, [\n    'activityStart',\n  ]);\n  if (fromActivityStart != null) {\n    common.setValueByPath(toObject, ['activityStart'], activityStartToMldev());\n  }\n\n  const fromActivityEnd = common.getValueByPath(fromObject, ['activityEnd']);\n  if (fromActivityEnd != null) {\n    common.setValueByPath(toObject, ['activityEnd'], activityEndToMldev());\n  }\n\n  return toObject;\n}\n\nexport function liveClientRealtimeInputToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveClientRealtimeInput,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMediaChunks = common.getValueByPath(fromObject, ['mediaChunks']);\n  if (fromMediaChunks != null) {\n    common.setValueByPath(toObject, ['mediaChunks'], fromMediaChunks);\n  }\n\n  if (common.getValueByPath(fromObject, ['audio']) !== undefined) {\n    throw new Error('audio parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['audioStreamEnd']) !== undefined) {\n    throw new Error('audioStreamEnd parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['video']) !== undefined) {\n    throw new Error('video parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['text']) !== undefined) {\n    throw new Error('text parameter is not supported in Vertex AI.');\n  }\n\n  const fromActivityStart = common.getValueByPath(fromObject, [\n    'activityStart',\n  ]);\n  if (fromActivityStart != null) {\n    common.setValueByPath(toObject, ['activityStart'], activityStartToVertex());\n  }\n\n  const fromActivityEnd = common.getValueByPath(fromObject, ['activityEnd']);\n  if (fromActivityEnd != null) {\n    common.setValueByPath(toObject, ['activityEnd'], activityEndToVertex());\n  }\n\n  return toObject;\n}\n\nexport function functionResponseToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromWillContinue = common.getValueByPath(fromObject, ['willContinue']);\n  if (fromWillContinue != null) {\n    common.setValueByPath(toObject, ['willContinue'], fromWillContinue);\n  }\n\n  const fromScheduling = common.getValueByPath(fromObject, ['scheduling']);\n  if (fromScheduling != null) {\n    common.setValueByPath(toObject, ['scheduling'], fromScheduling);\n  }\n\n  const fromId = common.getValueByPath(fromObject, ['id']);\n  if (fromId != null) {\n    common.setValueByPath(toObject, ['id'], fromId);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(toObject, ['response'], fromResponse);\n  }\n\n  return toObject;\n}\n\nexport function functionResponseToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['willContinue']) !== undefined) {\n    throw new Error('willContinue parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['scheduling']) !== undefined) {\n    throw new Error('scheduling parameter is not supported in Vertex AI.');\n  }\n\n  const fromId = common.getValueByPath(fromObject, ['id']);\n  if (fromId != null) {\n    common.setValueByPath(toObject, ['id'], fromId);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(toObject, ['response'], fromResponse);\n  }\n\n  return toObject;\n}\n\nexport function liveClientToolResponseToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveClientToolResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionResponses = common.getValueByPath(fromObject, [\n    'functionResponses',\n  ]);\n  if (fromFunctionResponses != null) {\n    let transformedList = fromFunctionResponses;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return functionResponseToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['functionResponses'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function liveClientToolResponseToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveClientToolResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionResponses = common.getValueByPath(fromObject, [\n    'functionResponses',\n  ]);\n  if (fromFunctionResponses != null) {\n    let transformedList = fromFunctionResponses;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return functionResponseToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['functionResponses'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function liveClientMessageToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveClientMessage,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSetup = common.getValueByPath(fromObject, ['setup']);\n  if (fromSetup != null) {\n    common.setValueByPath(\n      toObject,\n      ['setup'],\n      liveClientSetupToMldev(apiClient, fromSetup),\n    );\n  }\n\n  const fromClientContent = common.getValueByPath(fromObject, [\n    'clientContent',\n  ]);\n  if (fromClientContent != null) {\n    common.setValueByPath(\n      toObject,\n      ['clientContent'],\n      liveClientContentToMldev(apiClient, fromClientContent),\n    );\n  }\n\n  const fromRealtimeInput = common.getValueByPath(fromObject, [\n    'realtimeInput',\n  ]);\n  if (fromRealtimeInput != null) {\n    common.setValueByPath(\n      toObject,\n      ['realtimeInput'],\n      liveClientRealtimeInputToMldev(apiClient, fromRealtimeInput),\n    );\n  }\n\n  const fromToolResponse = common.getValueByPath(fromObject, ['toolResponse']);\n  if (fromToolResponse != null) {\n    common.setValueByPath(\n      toObject,\n      ['toolResponse'],\n      liveClientToolResponseToMldev(apiClient, fromToolResponse),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveClientMessageToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveClientMessage,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSetup = common.getValueByPath(fromObject, ['setup']);\n  if (fromSetup != null) {\n    common.setValueByPath(\n      toObject,\n      ['setup'],\n      liveClientSetupToVertex(apiClient, fromSetup),\n    );\n  }\n\n  const fromClientContent = common.getValueByPath(fromObject, [\n    'clientContent',\n  ]);\n  if (fromClientContent != null) {\n    common.setValueByPath(\n      toObject,\n      ['clientContent'],\n      liveClientContentToVertex(apiClient, fromClientContent),\n    );\n  }\n\n  const fromRealtimeInput = common.getValueByPath(fromObject, [\n    'realtimeInput',\n  ]);\n  if (fromRealtimeInput != null) {\n    common.setValueByPath(\n      toObject,\n      ['realtimeInput'],\n      liveClientRealtimeInputToVertex(apiClient, fromRealtimeInput),\n    );\n  }\n\n  const fromToolResponse = common.getValueByPath(fromObject, ['toolResponse']);\n  if (fromToolResponse != null) {\n    common.setValueByPath(\n      toObject,\n      ['toolResponse'],\n      liveClientToolResponseToVertex(apiClient, fromToolResponse),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveMusicConnectParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicConnectParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(toObject, ['setup', 'model'], fromModel);\n  }\n\n  const fromCallbacks = common.getValueByPath(fromObject, ['callbacks']);\n  if (fromCallbacks != null) {\n    common.setValueByPath(toObject, ['callbacks'], fromCallbacks);\n  }\n\n  return toObject;\n}\n\nexport function liveMusicConnectParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicConnectParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['model']) !== undefined) {\n    throw new Error('model parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['callbacks']) !== undefined) {\n    throw new Error('callbacks parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function weightedPromptToMldev(\n  apiClient: ApiClient,\n  fromObject: types.WeightedPrompt,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  const fromWeight = common.getValueByPath(fromObject, ['weight']);\n  if (fromWeight != null) {\n    common.setValueByPath(toObject, ['weight'], fromWeight);\n  }\n\n  return toObject;\n}\n\nexport function weightedPromptToVertex(\n  apiClient: ApiClient,\n  fromObject: types.WeightedPrompt,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['text']) !== undefined) {\n    throw new Error('text parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['weight']) !== undefined) {\n    throw new Error('weight parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function liveMusicSetWeightedPromptsParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicSetWeightedPromptsParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromWeightedPrompts = common.getValueByPath(fromObject, [\n    'weightedPrompts',\n  ]);\n  if (fromWeightedPrompts != null) {\n    let transformedList = fromWeightedPrompts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return weightedPromptToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['weightedPrompts'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function liveMusicSetWeightedPromptsParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicSetWeightedPromptsParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['weightedPrompts']) !== undefined) {\n    throw new Error('weightedPrompts parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function liveMusicGenerationConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicGenerationConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTemperature = common.getValueByPath(fromObject, ['temperature']);\n  if (fromTemperature != null) {\n    common.setValueByPath(toObject, ['temperature'], fromTemperature);\n  }\n\n  const fromTopK = common.getValueByPath(fromObject, ['topK']);\n  if (fromTopK != null) {\n    common.setValueByPath(toObject, ['topK'], fromTopK);\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (fromSeed != null) {\n    common.setValueByPath(toObject, ['seed'], fromSeed);\n  }\n\n  const fromGuidance = common.getValueByPath(fromObject, ['guidance']);\n  if (fromGuidance != null) {\n    common.setValueByPath(toObject, ['guidance'], fromGuidance);\n  }\n\n  const fromBpm = common.getValueByPath(fromObject, ['bpm']);\n  if (fromBpm != null) {\n    common.setValueByPath(toObject, ['bpm'], fromBpm);\n  }\n\n  const fromDensity = common.getValueByPath(fromObject, ['density']);\n  if (fromDensity != null) {\n    common.setValueByPath(toObject, ['density'], fromDensity);\n  }\n\n  const fromBrightness = common.getValueByPath(fromObject, ['brightness']);\n  if (fromBrightness != null) {\n    common.setValueByPath(toObject, ['brightness'], fromBrightness);\n  }\n\n  const fromScale = common.getValueByPath(fromObject, ['scale']);\n  if (fromScale != null) {\n    common.setValueByPath(toObject, ['scale'], fromScale);\n  }\n\n  const fromMuteBass = common.getValueByPath(fromObject, ['muteBass']);\n  if (fromMuteBass != null) {\n    common.setValueByPath(toObject, ['muteBass'], fromMuteBass);\n  }\n\n  const fromMuteDrums = common.getValueByPath(fromObject, ['muteDrums']);\n  if (fromMuteDrums != null) {\n    common.setValueByPath(toObject, ['muteDrums'], fromMuteDrums);\n  }\n\n  const fromOnlyBassAndDrums = common.getValueByPath(fromObject, [\n    'onlyBassAndDrums',\n  ]);\n  if (fromOnlyBassAndDrums != null) {\n    common.setValueByPath(toObject, ['onlyBassAndDrums'], fromOnlyBassAndDrums);\n  }\n\n  return toObject;\n}\n\nexport function liveMusicGenerationConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicGenerationConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['temperature']) !== undefined) {\n    throw new Error('temperature parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['topK']) !== undefined) {\n    throw new Error('topK parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['seed']) !== undefined) {\n    throw new Error('seed parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['guidance']) !== undefined) {\n    throw new Error('guidance parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['bpm']) !== undefined) {\n    throw new Error('bpm parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['density']) !== undefined) {\n    throw new Error('density parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['brightness']) !== undefined) {\n    throw new Error('brightness parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['scale']) !== undefined) {\n    throw new Error('scale parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['muteBass']) !== undefined) {\n    throw new Error('muteBass parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['muteDrums']) !== undefined) {\n    throw new Error('muteDrums parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['onlyBassAndDrums']) !== undefined) {\n    throw new Error(\n      'onlyBassAndDrums parameter is not supported in Vertex AI.',\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveMusicSetConfigParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicSetConfigParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMusicGenerationConfig = common.getValueByPath(fromObject, [\n    'musicGenerationConfig',\n  ]);\n  if (fromMusicGenerationConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['musicGenerationConfig'],\n      liveMusicGenerationConfigToMldev(apiClient, fromMusicGenerationConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveMusicSetConfigParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicSetConfigParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (\n    common.getValueByPath(fromObject, ['musicGenerationConfig']) !== undefined\n  ) {\n    throw new Error(\n      'musicGenerationConfig parameter is not supported in Vertex AI.',\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveMusicClientSetupToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicClientSetup,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(toObject, ['model'], fromModel);\n  }\n\n  return toObject;\n}\n\nexport function liveMusicClientSetupToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicClientSetup,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['model']) !== undefined) {\n    throw new Error('model parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function liveMusicClientContentToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicClientContent,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromWeightedPrompts = common.getValueByPath(fromObject, [\n    'weightedPrompts',\n  ]);\n  if (fromWeightedPrompts != null) {\n    let transformedList = fromWeightedPrompts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return weightedPromptToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['weightedPrompts'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function liveMusicClientContentToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicClientContent,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['weightedPrompts']) !== undefined) {\n    throw new Error('weightedPrompts parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function liveMusicClientMessageToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicClientMessage,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSetup = common.getValueByPath(fromObject, ['setup']);\n  if (fromSetup != null) {\n    common.setValueByPath(\n      toObject,\n      ['setup'],\n      liveMusicClientSetupToMldev(apiClient, fromSetup),\n    );\n  }\n\n  const fromClientContent = common.getValueByPath(fromObject, [\n    'clientContent',\n  ]);\n  if (fromClientContent != null) {\n    common.setValueByPath(\n      toObject,\n      ['clientContent'],\n      liveMusicClientContentToMldev(apiClient, fromClientContent),\n    );\n  }\n\n  const fromMusicGenerationConfig = common.getValueByPath(fromObject, [\n    'musicGenerationConfig',\n  ]);\n  if (fromMusicGenerationConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['musicGenerationConfig'],\n      liveMusicGenerationConfigToMldev(apiClient, fromMusicGenerationConfig),\n    );\n  }\n\n  const fromPlaybackControl = common.getValueByPath(fromObject, [\n    'playbackControl',\n  ]);\n  if (fromPlaybackControl != null) {\n    common.setValueByPath(toObject, ['playbackControl'], fromPlaybackControl);\n  }\n\n  return toObject;\n}\n\nexport function liveMusicClientMessageToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicClientMessage,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['setup']) !== undefined) {\n    throw new Error('setup parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['clientContent']) !== undefined) {\n    throw new Error('clientContent parameter is not supported in Vertex AI.');\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['musicGenerationConfig']) !== undefined\n  ) {\n    throw new Error(\n      'musicGenerationConfig parameter is not supported in Vertex AI.',\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['playbackControl']) !== undefined) {\n    throw new Error('playbackControl parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function liveServerSetupCompleteFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function liveServerSetupCompleteFromVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function videoMetadataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.VideoMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (fromFps != null) {\n    common.setValueByPath(toObject, ['fps'], fromFps);\n  }\n\n  const fromEndOffset = common.getValueByPath(fromObject, ['endOffset']);\n  if (fromEndOffset != null) {\n    common.setValueByPath(toObject, ['endOffset'], fromEndOffset);\n  }\n\n  const fromStartOffset = common.getValueByPath(fromObject, ['startOffset']);\n  if (fromStartOffset != null) {\n    common.setValueByPath(toObject, ['startOffset'], fromStartOffset);\n  }\n\n  return toObject;\n}\n\nexport function videoMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.VideoMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (fromFps != null) {\n    common.setValueByPath(toObject, ['fps'], fromFps);\n  }\n\n  const fromEndOffset = common.getValueByPath(fromObject, ['endOffset']);\n  if (fromEndOffset != null) {\n    common.setValueByPath(toObject, ['endOffset'], fromEndOffset);\n  }\n\n  const fromStartOffset = common.getValueByPath(fromObject, ['startOffset']);\n  if (fromStartOffset != null) {\n    common.setValueByPath(toObject, ['startOffset'], fromStartOffset);\n  }\n\n  return toObject;\n}\n\nexport function blobFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Blob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function blobFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Blob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function fileDataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.FileData,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFileUri = common.getValueByPath(fromObject, ['fileUri']);\n  if (fromFileUri != null) {\n    common.setValueByPath(toObject, ['fileUri'], fromFileUri);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function fileDataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.FileData,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromFileUri = common.getValueByPath(fromObject, ['fileUri']);\n  if (fromFileUri != null) {\n    common.setValueByPath(toObject, ['fileUri'], fromFileUri);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function partFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoMetadata'],\n      videoMetadataFromMldev(apiClient, fromVideoMetadata),\n    );\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(\n      toObject,\n      ['inlineData'],\n      blobFromMldev(apiClient, fromInlineData),\n    );\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(\n      toObject,\n      ['fileData'],\n      fileDataFromMldev(apiClient, fromFileData),\n    );\n  }\n\n  const fromThoughtSignature = common.getValueByPath(fromObject, [\n    'thoughtSignature',\n  ]);\n  if (fromThoughtSignature != null) {\n    common.setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function partFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoMetadata'],\n      videoMetadataFromVertex(apiClient, fromVideoMetadata),\n    );\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(\n      toObject,\n      ['inlineData'],\n      blobFromVertex(apiClient, fromInlineData),\n    );\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(\n      toObject,\n      ['fileData'],\n      fileDataFromVertex(apiClient, fromFileData),\n    );\n  }\n\n  const fromThoughtSignature = common.getValueByPath(fromObject, [\n    'thoughtSignature',\n  ]);\n  if (fromThoughtSignature != null) {\n    common.setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    let transformedList = fromParts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return partFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['parts'], transformedList);\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function contentFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    let transformedList = fromParts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return partFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['parts'], transformedList);\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function transcriptionFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Transcription,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  const fromFinished = common.getValueByPath(fromObject, ['finished']);\n  if (fromFinished != null) {\n    common.setValueByPath(toObject, ['finished'], fromFinished);\n  }\n\n  return toObject;\n}\n\nexport function transcriptionFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Transcription,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  const fromFinished = common.getValueByPath(fromObject, ['finished']);\n  if (fromFinished != null) {\n    common.setValueByPath(toObject, ['finished'], fromFinished);\n  }\n\n  return toObject;\n}\n\nexport function urlMetadataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.UrlMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromRetrievedUrl = common.getValueByPath(fromObject, ['retrievedUrl']);\n  if (fromRetrievedUrl != null) {\n    common.setValueByPath(toObject, ['retrievedUrl'], fromRetrievedUrl);\n  }\n\n  const fromUrlRetrievalStatus = common.getValueByPath(fromObject, [\n    'urlRetrievalStatus',\n  ]);\n  if (fromUrlRetrievalStatus != null) {\n    common.setValueByPath(\n      toObject,\n      ['urlRetrievalStatus'],\n      fromUrlRetrievalStatus,\n    );\n  }\n\n  return toObject;\n}\n\nexport function urlMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.UrlMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromRetrievedUrl = common.getValueByPath(fromObject, ['retrievedUrl']);\n  if (fromRetrievedUrl != null) {\n    common.setValueByPath(toObject, ['retrievedUrl'], fromRetrievedUrl);\n  }\n\n  const fromUrlRetrievalStatus = common.getValueByPath(fromObject, [\n    'urlRetrievalStatus',\n  ]);\n  if (fromUrlRetrievalStatus != null) {\n    common.setValueByPath(\n      toObject,\n      ['urlRetrievalStatus'],\n      fromUrlRetrievalStatus,\n    );\n  }\n\n  return toObject;\n}\n\nexport function urlContextMetadataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.UrlContextMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromUrlMetadata = common.getValueByPath(fromObject, ['urlMetadata']);\n  if (fromUrlMetadata != null) {\n    let transformedList = fromUrlMetadata;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return urlMetadataFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['urlMetadata'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function urlContextMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.UrlContextMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromUrlMetadata = common.getValueByPath(fromObject, ['urlMetadata']);\n  if (fromUrlMetadata != null) {\n    let transformedList = fromUrlMetadata;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return urlMetadataFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['urlMetadata'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function liveServerContentFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerContent,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModelTurn = common.getValueByPath(fromObject, ['modelTurn']);\n  if (fromModelTurn != null) {\n    common.setValueByPath(\n      toObject,\n      ['modelTurn'],\n      contentFromMldev(apiClient, fromModelTurn),\n    );\n  }\n\n  const fromTurnComplete = common.getValueByPath(fromObject, ['turnComplete']);\n  if (fromTurnComplete != null) {\n    common.setValueByPath(toObject, ['turnComplete'], fromTurnComplete);\n  }\n\n  const fromInterrupted = common.getValueByPath(fromObject, ['interrupted']);\n  if (fromInterrupted != null) {\n    common.setValueByPath(toObject, ['interrupted'], fromInterrupted);\n  }\n\n  const fromGroundingMetadata = common.getValueByPath(fromObject, [\n    'groundingMetadata',\n  ]);\n  if (fromGroundingMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['groundingMetadata'],\n      fromGroundingMetadata,\n    );\n  }\n\n  const fromGenerationComplete = common.getValueByPath(fromObject, [\n    'generationComplete',\n  ]);\n  if (fromGenerationComplete != null) {\n    common.setValueByPath(\n      toObject,\n      ['generationComplete'],\n      fromGenerationComplete,\n    );\n  }\n\n  const fromInputTranscription = common.getValueByPath(fromObject, [\n    'inputTranscription',\n  ]);\n  if (fromInputTranscription != null) {\n    common.setValueByPath(\n      toObject,\n      ['inputTranscription'],\n      transcriptionFromMldev(apiClient, fromInputTranscription),\n    );\n  }\n\n  const fromOutputTranscription = common.getValueByPath(fromObject, [\n    'outputTranscription',\n  ]);\n  if (fromOutputTranscription != null) {\n    common.setValueByPath(\n      toObject,\n      ['outputTranscription'],\n      transcriptionFromMldev(apiClient, fromOutputTranscription),\n    );\n  }\n\n  const fromUrlContextMetadata = common.getValueByPath(fromObject, [\n    'urlContextMetadata',\n  ]);\n  if (fromUrlContextMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['urlContextMetadata'],\n      urlContextMetadataFromMldev(apiClient, fromUrlContextMetadata),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveServerContentFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerContent,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModelTurn = common.getValueByPath(fromObject, ['modelTurn']);\n  if (fromModelTurn != null) {\n    common.setValueByPath(\n      toObject,\n      ['modelTurn'],\n      contentFromVertex(apiClient, fromModelTurn),\n    );\n  }\n\n  const fromTurnComplete = common.getValueByPath(fromObject, ['turnComplete']);\n  if (fromTurnComplete != null) {\n    common.setValueByPath(toObject, ['turnComplete'], fromTurnComplete);\n  }\n\n  const fromInterrupted = common.getValueByPath(fromObject, ['interrupted']);\n  if (fromInterrupted != null) {\n    common.setValueByPath(toObject, ['interrupted'], fromInterrupted);\n  }\n\n  const fromGroundingMetadata = common.getValueByPath(fromObject, [\n    'groundingMetadata',\n  ]);\n  if (fromGroundingMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['groundingMetadata'],\n      fromGroundingMetadata,\n    );\n  }\n\n  const fromGenerationComplete = common.getValueByPath(fromObject, [\n    'generationComplete',\n  ]);\n  if (fromGenerationComplete != null) {\n    common.setValueByPath(\n      toObject,\n      ['generationComplete'],\n      fromGenerationComplete,\n    );\n  }\n\n  const fromInputTranscription = common.getValueByPath(fromObject, [\n    'inputTranscription',\n  ]);\n  if (fromInputTranscription != null) {\n    common.setValueByPath(\n      toObject,\n      ['inputTranscription'],\n      transcriptionFromVertex(apiClient, fromInputTranscription),\n    );\n  }\n\n  const fromOutputTranscription = common.getValueByPath(fromObject, [\n    'outputTranscription',\n  ]);\n  if (fromOutputTranscription != null) {\n    common.setValueByPath(\n      toObject,\n      ['outputTranscription'],\n      transcriptionFromVertex(apiClient, fromOutputTranscription),\n    );\n  }\n\n  return toObject;\n}\n\nexport function functionCallFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionCall,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromId = common.getValueByPath(fromObject, ['id']);\n  if (fromId != null) {\n    common.setValueByPath(toObject, ['id'], fromId);\n  }\n\n  const fromArgs = common.getValueByPath(fromObject, ['args']);\n  if (fromArgs != null) {\n    common.setValueByPath(toObject, ['args'], fromArgs);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  return toObject;\n}\n\nexport function functionCallFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionCall,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromArgs = common.getValueByPath(fromObject, ['args']);\n  if (fromArgs != null) {\n    common.setValueByPath(toObject, ['args'], fromArgs);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  return toObject;\n}\n\nexport function liveServerToolCallFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerToolCall,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionCalls = common.getValueByPath(fromObject, [\n    'functionCalls',\n  ]);\n  if (fromFunctionCalls != null) {\n    let transformedList = fromFunctionCalls;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return functionCallFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['functionCalls'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function liveServerToolCallFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerToolCall,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionCalls = common.getValueByPath(fromObject, [\n    'functionCalls',\n  ]);\n  if (fromFunctionCalls != null) {\n    let transformedList = fromFunctionCalls;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return functionCallFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['functionCalls'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function liveServerToolCallCancellationFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerToolCallCancellation,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromIds = common.getValueByPath(fromObject, ['ids']);\n  if (fromIds != null) {\n    common.setValueByPath(toObject, ['ids'], fromIds);\n  }\n\n  return toObject;\n}\n\nexport function liveServerToolCallCancellationFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerToolCallCancellation,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromIds = common.getValueByPath(fromObject, ['ids']);\n  if (fromIds != null) {\n    common.setValueByPath(toObject, ['ids'], fromIds);\n  }\n\n  return toObject;\n}\n\nexport function modalityTokenCountFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.ModalityTokenCount,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModality = common.getValueByPath(fromObject, ['modality']);\n  if (fromModality != null) {\n    common.setValueByPath(toObject, ['modality'], fromModality);\n  }\n\n  const fromTokenCount = common.getValueByPath(fromObject, ['tokenCount']);\n  if (fromTokenCount != null) {\n    common.setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n  }\n\n  return toObject;\n}\n\nexport function modalityTokenCountFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.ModalityTokenCount,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModality = common.getValueByPath(fromObject, ['modality']);\n  if (fromModality != null) {\n    common.setValueByPath(toObject, ['modality'], fromModality);\n  }\n\n  const fromTokenCount = common.getValueByPath(fromObject, ['tokenCount']);\n  if (fromTokenCount != null) {\n    common.setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n  }\n\n  return toObject;\n}\n\nexport function usageMetadataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.UsageMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPromptTokenCount = common.getValueByPath(fromObject, [\n    'promptTokenCount',\n  ]);\n  if (fromPromptTokenCount != null) {\n    common.setValueByPath(toObject, ['promptTokenCount'], fromPromptTokenCount);\n  }\n\n  const fromCachedContentTokenCount = common.getValueByPath(fromObject, [\n    'cachedContentTokenCount',\n  ]);\n  if (fromCachedContentTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['cachedContentTokenCount'],\n      fromCachedContentTokenCount,\n    );\n  }\n\n  const fromResponseTokenCount = common.getValueByPath(fromObject, [\n    'responseTokenCount',\n  ]);\n  if (fromResponseTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['responseTokenCount'],\n      fromResponseTokenCount,\n    );\n  }\n\n  const fromToolUsePromptTokenCount = common.getValueByPath(fromObject, [\n    'toolUsePromptTokenCount',\n  ]);\n  if (fromToolUsePromptTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['toolUsePromptTokenCount'],\n      fromToolUsePromptTokenCount,\n    );\n  }\n\n  const fromThoughtsTokenCount = common.getValueByPath(fromObject, [\n    'thoughtsTokenCount',\n  ]);\n  if (fromThoughtsTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['thoughtsTokenCount'],\n      fromThoughtsTokenCount,\n    );\n  }\n\n  const fromTotalTokenCount = common.getValueByPath(fromObject, [\n    'totalTokenCount',\n  ]);\n  if (fromTotalTokenCount != null) {\n    common.setValueByPath(toObject, ['totalTokenCount'], fromTotalTokenCount);\n  }\n\n  const fromPromptTokensDetails = common.getValueByPath(fromObject, [\n    'promptTokensDetails',\n  ]);\n  if (fromPromptTokensDetails != null) {\n    let transformedList = fromPromptTokensDetails;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return modalityTokenCountFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['promptTokensDetails'], transformedList);\n  }\n\n  const fromCacheTokensDetails = common.getValueByPath(fromObject, [\n    'cacheTokensDetails',\n  ]);\n  if (fromCacheTokensDetails != null) {\n    let transformedList = fromCacheTokensDetails;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return modalityTokenCountFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['cacheTokensDetails'], transformedList);\n  }\n\n  const fromResponseTokensDetails = common.getValueByPath(fromObject, [\n    'responseTokensDetails',\n  ]);\n  if (fromResponseTokensDetails != null) {\n    let transformedList = fromResponseTokensDetails;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return modalityTokenCountFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['responseTokensDetails'], transformedList);\n  }\n\n  const fromToolUsePromptTokensDetails = common.getValueByPath(fromObject, [\n    'toolUsePromptTokensDetails',\n  ]);\n  if (fromToolUsePromptTokensDetails != null) {\n    let transformedList = fromToolUsePromptTokensDetails;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return modalityTokenCountFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(\n      toObject,\n      ['toolUsePromptTokensDetails'],\n      transformedList,\n    );\n  }\n\n  return toObject;\n}\n\nexport function usageMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.UsageMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPromptTokenCount = common.getValueByPath(fromObject, [\n    'promptTokenCount',\n  ]);\n  if (fromPromptTokenCount != null) {\n    common.setValueByPath(toObject, ['promptTokenCount'], fromPromptTokenCount);\n  }\n\n  const fromCachedContentTokenCount = common.getValueByPath(fromObject, [\n    'cachedContentTokenCount',\n  ]);\n  if (fromCachedContentTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['cachedContentTokenCount'],\n      fromCachedContentTokenCount,\n    );\n  }\n\n  const fromResponseTokenCount = common.getValueByPath(fromObject, [\n    'candidatesTokenCount',\n  ]);\n  if (fromResponseTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['responseTokenCount'],\n      fromResponseTokenCount,\n    );\n  }\n\n  const fromToolUsePromptTokenCount = common.getValueByPath(fromObject, [\n    'toolUsePromptTokenCount',\n  ]);\n  if (fromToolUsePromptTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['toolUsePromptTokenCount'],\n      fromToolUsePromptTokenCount,\n    );\n  }\n\n  const fromThoughtsTokenCount = common.getValueByPath(fromObject, [\n    'thoughtsTokenCount',\n  ]);\n  if (fromThoughtsTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['thoughtsTokenCount'],\n      fromThoughtsTokenCount,\n    );\n  }\n\n  const fromTotalTokenCount = common.getValueByPath(fromObject, [\n    'totalTokenCount',\n  ]);\n  if (fromTotalTokenCount != null) {\n    common.setValueByPath(toObject, ['totalTokenCount'], fromTotalTokenCount);\n  }\n\n  const fromPromptTokensDetails = common.getValueByPath(fromObject, [\n    'promptTokensDetails',\n  ]);\n  if (fromPromptTokensDetails != null) {\n    let transformedList = fromPromptTokensDetails;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return modalityTokenCountFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['promptTokensDetails'], transformedList);\n  }\n\n  const fromCacheTokensDetails = common.getValueByPath(fromObject, [\n    'cacheTokensDetails',\n  ]);\n  if (fromCacheTokensDetails != null) {\n    let transformedList = fromCacheTokensDetails;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return modalityTokenCountFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['cacheTokensDetails'], transformedList);\n  }\n\n  const fromResponseTokensDetails = common.getValueByPath(fromObject, [\n    'candidatesTokensDetails',\n  ]);\n  if (fromResponseTokensDetails != null) {\n    let transformedList = fromResponseTokensDetails;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return modalityTokenCountFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['responseTokensDetails'], transformedList);\n  }\n\n  const fromToolUsePromptTokensDetails = common.getValueByPath(fromObject, [\n    'toolUsePromptTokensDetails',\n  ]);\n  if (fromToolUsePromptTokensDetails != null) {\n    let transformedList = fromToolUsePromptTokensDetails;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return modalityTokenCountFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(\n      toObject,\n      ['toolUsePromptTokensDetails'],\n      transformedList,\n    );\n  }\n\n  const fromTrafficType = common.getValueByPath(fromObject, ['trafficType']);\n  if (fromTrafficType != null) {\n    common.setValueByPath(toObject, ['trafficType'], fromTrafficType);\n  }\n\n  return toObject;\n}\n\nexport function liveServerGoAwayFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerGoAway,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTimeLeft = common.getValueByPath(fromObject, ['timeLeft']);\n  if (fromTimeLeft != null) {\n    common.setValueByPath(toObject, ['timeLeft'], fromTimeLeft);\n  }\n\n  return toObject;\n}\n\nexport function liveServerGoAwayFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerGoAway,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTimeLeft = common.getValueByPath(fromObject, ['timeLeft']);\n  if (fromTimeLeft != null) {\n    common.setValueByPath(toObject, ['timeLeft'], fromTimeLeft);\n  }\n\n  return toObject;\n}\n\nexport function liveServerSessionResumptionUpdateFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerSessionResumptionUpdate,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNewHandle = common.getValueByPath(fromObject, ['newHandle']);\n  if (fromNewHandle != null) {\n    common.setValueByPath(toObject, ['newHandle'], fromNewHandle);\n  }\n\n  const fromResumable = common.getValueByPath(fromObject, ['resumable']);\n  if (fromResumable != null) {\n    common.setValueByPath(toObject, ['resumable'], fromResumable);\n  }\n\n  const fromLastConsumedClientMessageIndex = common.getValueByPath(fromObject, [\n    'lastConsumedClientMessageIndex',\n  ]);\n  if (fromLastConsumedClientMessageIndex != null) {\n    common.setValueByPath(\n      toObject,\n      ['lastConsumedClientMessageIndex'],\n      fromLastConsumedClientMessageIndex,\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveServerSessionResumptionUpdateFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerSessionResumptionUpdate,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNewHandle = common.getValueByPath(fromObject, ['newHandle']);\n  if (fromNewHandle != null) {\n    common.setValueByPath(toObject, ['newHandle'], fromNewHandle);\n  }\n\n  const fromResumable = common.getValueByPath(fromObject, ['resumable']);\n  if (fromResumable != null) {\n    common.setValueByPath(toObject, ['resumable'], fromResumable);\n  }\n\n  const fromLastConsumedClientMessageIndex = common.getValueByPath(fromObject, [\n    'lastConsumedClientMessageIndex',\n  ]);\n  if (fromLastConsumedClientMessageIndex != null) {\n    common.setValueByPath(\n      toObject,\n      ['lastConsumedClientMessageIndex'],\n      fromLastConsumedClientMessageIndex,\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveServerMessageFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerMessage,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSetupComplete = common.getValueByPath(fromObject, [\n    'setupComplete',\n  ]);\n  if (fromSetupComplete != null) {\n    common.setValueByPath(\n      toObject,\n      ['setupComplete'],\n      liveServerSetupCompleteFromMldev(),\n    );\n  }\n\n  const fromServerContent = common.getValueByPath(fromObject, [\n    'serverContent',\n  ]);\n  if (fromServerContent != null) {\n    common.setValueByPath(\n      toObject,\n      ['serverContent'],\n      liveServerContentFromMldev(apiClient, fromServerContent),\n    );\n  }\n\n  const fromToolCall = common.getValueByPath(fromObject, ['toolCall']);\n  if (fromToolCall != null) {\n    common.setValueByPath(\n      toObject,\n      ['toolCall'],\n      liveServerToolCallFromMldev(apiClient, fromToolCall),\n    );\n  }\n\n  const fromToolCallCancellation = common.getValueByPath(fromObject, [\n    'toolCallCancellation',\n  ]);\n  if (fromToolCallCancellation != null) {\n    common.setValueByPath(\n      toObject,\n      ['toolCallCancellation'],\n      liveServerToolCallCancellationFromMldev(\n        apiClient,\n        fromToolCallCancellation,\n      ),\n    );\n  }\n\n  const fromUsageMetadata = common.getValueByPath(fromObject, [\n    'usageMetadata',\n  ]);\n  if (fromUsageMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['usageMetadata'],\n      usageMetadataFromMldev(apiClient, fromUsageMetadata),\n    );\n  }\n\n  const fromGoAway = common.getValueByPath(fromObject, ['goAway']);\n  if (fromGoAway != null) {\n    common.setValueByPath(\n      toObject,\n      ['goAway'],\n      liveServerGoAwayFromMldev(apiClient, fromGoAway),\n    );\n  }\n\n  const fromSessionResumptionUpdate = common.getValueByPath(fromObject, [\n    'sessionResumptionUpdate',\n  ]);\n  if (fromSessionResumptionUpdate != null) {\n    common.setValueByPath(\n      toObject,\n      ['sessionResumptionUpdate'],\n      liveServerSessionResumptionUpdateFromMldev(\n        apiClient,\n        fromSessionResumptionUpdate,\n      ),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveServerMessageFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerMessage,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSetupComplete = common.getValueByPath(fromObject, [\n    'setupComplete',\n  ]);\n  if (fromSetupComplete != null) {\n    common.setValueByPath(\n      toObject,\n      ['setupComplete'],\n      liveServerSetupCompleteFromVertex(),\n    );\n  }\n\n  const fromServerContent = common.getValueByPath(fromObject, [\n    'serverContent',\n  ]);\n  if (fromServerContent != null) {\n    common.setValueByPath(\n      toObject,\n      ['serverContent'],\n      liveServerContentFromVertex(apiClient, fromServerContent),\n    );\n  }\n\n  const fromToolCall = common.getValueByPath(fromObject, ['toolCall']);\n  if (fromToolCall != null) {\n    common.setValueByPath(\n      toObject,\n      ['toolCall'],\n      liveServerToolCallFromVertex(apiClient, fromToolCall),\n    );\n  }\n\n  const fromToolCallCancellation = common.getValueByPath(fromObject, [\n    'toolCallCancellation',\n  ]);\n  if (fromToolCallCancellation != null) {\n    common.setValueByPath(\n      toObject,\n      ['toolCallCancellation'],\n      liveServerToolCallCancellationFromVertex(\n        apiClient,\n        fromToolCallCancellation,\n      ),\n    );\n  }\n\n  const fromUsageMetadata = common.getValueByPath(fromObject, [\n    'usageMetadata',\n  ]);\n  if (fromUsageMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['usageMetadata'],\n      usageMetadataFromVertex(apiClient, fromUsageMetadata),\n    );\n  }\n\n  const fromGoAway = common.getValueByPath(fromObject, ['goAway']);\n  if (fromGoAway != null) {\n    common.setValueByPath(\n      toObject,\n      ['goAway'],\n      liveServerGoAwayFromVertex(apiClient, fromGoAway),\n    );\n  }\n\n  const fromSessionResumptionUpdate = common.getValueByPath(fromObject, [\n    'sessionResumptionUpdate',\n  ]);\n  if (fromSessionResumptionUpdate != null) {\n    common.setValueByPath(\n      toObject,\n      ['sessionResumptionUpdate'],\n      liveServerSessionResumptionUpdateFromVertex(\n        apiClient,\n        fromSessionResumptionUpdate,\n      ),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveMusicServerSetupCompleteFromMldev(): Record<\n  string,\n  unknown\n> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function liveMusicServerSetupCompleteFromVertex(): Record<\n  string,\n  unknown\n> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function weightedPromptFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.WeightedPrompt,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  const fromWeight = common.getValueByPath(fromObject, ['weight']);\n  if (fromWeight != null) {\n    common.setValueByPath(toObject, ['weight'], fromWeight);\n  }\n\n  return toObject;\n}\n\nexport function weightedPromptFromVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function liveMusicClientContentFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicClientContent,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromWeightedPrompts = common.getValueByPath(fromObject, [\n    'weightedPrompts',\n  ]);\n  if (fromWeightedPrompts != null) {\n    let transformedList = fromWeightedPrompts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return weightedPromptFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['weightedPrompts'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function liveMusicClientContentFromVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function liveMusicGenerationConfigFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicGenerationConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTemperature = common.getValueByPath(fromObject, ['temperature']);\n  if (fromTemperature != null) {\n    common.setValueByPath(toObject, ['temperature'], fromTemperature);\n  }\n\n  const fromTopK = common.getValueByPath(fromObject, ['topK']);\n  if (fromTopK != null) {\n    common.setValueByPath(toObject, ['topK'], fromTopK);\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (fromSeed != null) {\n    common.setValueByPath(toObject, ['seed'], fromSeed);\n  }\n\n  const fromGuidance = common.getValueByPath(fromObject, ['guidance']);\n  if (fromGuidance != null) {\n    common.setValueByPath(toObject, ['guidance'], fromGuidance);\n  }\n\n  const fromBpm = common.getValueByPath(fromObject, ['bpm']);\n  if (fromBpm != null) {\n    common.setValueByPath(toObject, ['bpm'], fromBpm);\n  }\n\n  const fromDensity = common.getValueByPath(fromObject, ['density']);\n  if (fromDensity != null) {\n    common.setValueByPath(toObject, ['density'], fromDensity);\n  }\n\n  const fromBrightness = common.getValueByPath(fromObject, ['brightness']);\n  if (fromBrightness != null) {\n    common.setValueByPath(toObject, ['brightness'], fromBrightness);\n  }\n\n  const fromScale = common.getValueByPath(fromObject, ['scale']);\n  if (fromScale != null) {\n    common.setValueByPath(toObject, ['scale'], fromScale);\n  }\n\n  const fromMuteBass = common.getValueByPath(fromObject, ['muteBass']);\n  if (fromMuteBass != null) {\n    common.setValueByPath(toObject, ['muteBass'], fromMuteBass);\n  }\n\n  const fromMuteDrums = common.getValueByPath(fromObject, ['muteDrums']);\n  if (fromMuteDrums != null) {\n    common.setValueByPath(toObject, ['muteDrums'], fromMuteDrums);\n  }\n\n  const fromOnlyBassAndDrums = common.getValueByPath(fromObject, [\n    'onlyBassAndDrums',\n  ]);\n  if (fromOnlyBassAndDrums != null) {\n    common.setValueByPath(toObject, ['onlyBassAndDrums'], fromOnlyBassAndDrums);\n  }\n\n  return toObject;\n}\n\nexport function liveMusicGenerationConfigFromVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function liveMusicSourceMetadataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicSourceMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromClientContent = common.getValueByPath(fromObject, [\n    'clientContent',\n  ]);\n  if (fromClientContent != null) {\n    common.setValueByPath(\n      toObject,\n      ['clientContent'],\n      liveMusicClientContentFromMldev(apiClient, fromClientContent),\n    );\n  }\n\n  const fromMusicGenerationConfig = common.getValueByPath(fromObject, [\n    'musicGenerationConfig',\n  ]);\n  if (fromMusicGenerationConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['musicGenerationConfig'],\n      liveMusicGenerationConfigFromMldev(apiClient, fromMusicGenerationConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveMusicSourceMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicSourceMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromClientContent = common.getValueByPath(fromObject, [\n    'clientContent',\n  ]);\n  if (fromClientContent != null) {\n    common.setValueByPath(\n      toObject,\n      ['clientContent'],\n      liveMusicClientContentFromVertex(),\n    );\n  }\n\n  const fromMusicGenerationConfig = common.getValueByPath(fromObject, [\n    'musicGenerationConfig',\n  ]);\n  if (fromMusicGenerationConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['musicGenerationConfig'],\n      liveMusicGenerationConfigFromVertex(),\n    );\n  }\n\n  return toObject;\n}\n\nexport function audioChunkFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.AudioChunk,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  const fromSourceMetadata = common.getValueByPath(fromObject, [\n    'sourceMetadata',\n  ]);\n  if (fromSourceMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['sourceMetadata'],\n      liveMusicSourceMetadataFromMldev(apiClient, fromSourceMetadata),\n    );\n  }\n\n  return toObject;\n}\n\nexport function audioChunkFromVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function liveMusicServerContentFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicServerContent,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAudioChunks = common.getValueByPath(fromObject, ['audioChunks']);\n  if (fromAudioChunks != null) {\n    let transformedList = fromAudioChunks;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return audioChunkFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['audioChunks'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function liveMusicServerContentFromVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function liveMusicFilteredPromptFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicFilteredPrompt,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  const fromFilteredReason = common.getValueByPath(fromObject, [\n    'filteredReason',\n  ]);\n  if (fromFilteredReason != null) {\n    common.setValueByPath(toObject, ['filteredReason'], fromFilteredReason);\n  }\n\n  return toObject;\n}\n\nexport function liveMusicFilteredPromptFromVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function liveMusicServerMessageFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveMusicServerMessage,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSetupComplete = common.getValueByPath(fromObject, [\n    'setupComplete',\n  ]);\n  if (fromSetupComplete != null) {\n    common.setValueByPath(\n      toObject,\n      ['setupComplete'],\n      liveMusicServerSetupCompleteFromMldev(),\n    );\n  }\n\n  const fromServerContent = common.getValueByPath(fromObject, [\n    'serverContent',\n  ]);\n  if (fromServerContent != null) {\n    common.setValueByPath(\n      toObject,\n      ['serverContent'],\n      liveMusicServerContentFromMldev(apiClient, fromServerContent),\n    );\n  }\n\n  const fromFilteredPrompt = common.getValueByPath(fromObject, [\n    'filteredPrompt',\n  ]);\n  if (fromFilteredPrompt != null) {\n    common.setValueByPath(\n      toObject,\n      ['filteredPrompt'],\n      liveMusicFilteredPromptFromMldev(apiClient, fromFilteredPrompt),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveMusicServerMessageFromVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from '../_api_client.js';\nimport * as common from '../_common.js';\nimport * as _internal_types from '../_internal_types.js';\nimport * as t from '../_transformers.js';\nimport * as types from '../types.js';\n\nexport function videoMetadataToMldev(\n  apiClient: ApiClient,\n  fromObject: types.VideoMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (fromFps != null) {\n    common.setValueByPath(toObject, ['fps'], fromFps);\n  }\n\n  const fromEndOffset = common.getValueByPath(fromObject, ['endOffset']);\n  if (fromEndOffset != null) {\n    common.setValueByPath(toObject, ['endOffset'], fromEndOffset);\n  }\n\n  const fromStartOffset = common.getValueByPath(fromObject, ['startOffset']);\n  if (fromStartOffset != null) {\n    common.setValueByPath(toObject, ['startOffset'], fromStartOffset);\n  }\n\n  return toObject;\n}\n\nexport function blobToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Blob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['displayName']) !== undefined) {\n    throw new Error('displayName parameter is not supported in Gemini API.');\n  }\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function fileDataToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FileData,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['displayName']) !== undefined) {\n    throw new Error('displayName parameter is not supported in Gemini API.');\n  }\n\n  const fromFileUri = common.getValueByPath(fromObject, ['fileUri']);\n  if (fromFileUri != null) {\n    common.setValueByPath(toObject, ['fileUri'], fromFileUri);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function partToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoMetadata'],\n      videoMetadataToMldev(apiClient, fromVideoMetadata),\n    );\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(\n      toObject,\n      ['inlineData'],\n      blobToMldev(apiClient, fromInlineData),\n    );\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(\n      toObject,\n      ['fileData'],\n      fileDataToMldev(apiClient, fromFileData),\n    );\n  }\n\n  const fromThoughtSignature = common.getValueByPath(fromObject, [\n    'thoughtSignature',\n  ]);\n  if (fromThoughtSignature != null) {\n    common.setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    let transformedList = fromParts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return partToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['parts'], transformedList);\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function schemaToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Schema,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAnyOf = common.getValueByPath(fromObject, ['anyOf']);\n  if (fromAnyOf != null) {\n    common.setValueByPath(toObject, ['anyOf'], fromAnyOf);\n  }\n\n  const fromDefault = common.getValueByPath(fromObject, ['default']);\n  if (fromDefault != null) {\n    common.setValueByPath(toObject, ['default'], fromDefault);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromEnum = common.getValueByPath(fromObject, ['enum']);\n  if (fromEnum != null) {\n    common.setValueByPath(toObject, ['enum'], fromEnum);\n  }\n\n  const fromExample = common.getValueByPath(fromObject, ['example']);\n  if (fromExample != null) {\n    common.setValueByPath(toObject, ['example'], fromExample);\n  }\n\n  const fromFormat = common.getValueByPath(fromObject, ['format']);\n  if (fromFormat != null) {\n    common.setValueByPath(toObject, ['format'], fromFormat);\n  }\n\n  const fromItems = common.getValueByPath(fromObject, ['items']);\n  if (fromItems != null) {\n    common.setValueByPath(toObject, ['items'], fromItems);\n  }\n\n  const fromMaxItems = common.getValueByPath(fromObject, ['maxItems']);\n  if (fromMaxItems != null) {\n    common.setValueByPath(toObject, ['maxItems'], fromMaxItems);\n  }\n\n  const fromMaxLength = common.getValueByPath(fromObject, ['maxLength']);\n  if (fromMaxLength != null) {\n    common.setValueByPath(toObject, ['maxLength'], fromMaxLength);\n  }\n\n  const fromMaxProperties = common.getValueByPath(fromObject, [\n    'maxProperties',\n  ]);\n  if (fromMaxProperties != null) {\n    common.setValueByPath(toObject, ['maxProperties'], fromMaxProperties);\n  }\n\n  const fromMaximum = common.getValueByPath(fromObject, ['maximum']);\n  if (fromMaximum != null) {\n    common.setValueByPath(toObject, ['maximum'], fromMaximum);\n  }\n\n  const fromMinItems = common.getValueByPath(fromObject, ['minItems']);\n  if (fromMinItems != null) {\n    common.setValueByPath(toObject, ['minItems'], fromMinItems);\n  }\n\n  const fromMinLength = common.getValueByPath(fromObject, ['minLength']);\n  if (fromMinLength != null) {\n    common.setValueByPath(toObject, ['minLength'], fromMinLength);\n  }\n\n  const fromMinProperties = common.getValueByPath(fromObject, [\n    'minProperties',\n  ]);\n  if (fromMinProperties != null) {\n    common.setValueByPath(toObject, ['minProperties'], fromMinProperties);\n  }\n\n  const fromMinimum = common.getValueByPath(fromObject, ['minimum']);\n  if (fromMinimum != null) {\n    common.setValueByPath(toObject, ['minimum'], fromMinimum);\n  }\n\n  const fromNullable = common.getValueByPath(fromObject, ['nullable']);\n  if (fromNullable != null) {\n    common.setValueByPath(toObject, ['nullable'], fromNullable);\n  }\n\n  const fromPattern = common.getValueByPath(fromObject, ['pattern']);\n  if (fromPattern != null) {\n    common.setValueByPath(toObject, ['pattern'], fromPattern);\n  }\n\n  const fromProperties = common.getValueByPath(fromObject, ['properties']);\n  if (fromProperties != null) {\n    common.setValueByPath(toObject, ['properties'], fromProperties);\n  }\n\n  const fromPropertyOrdering = common.getValueByPath(fromObject, [\n    'propertyOrdering',\n  ]);\n  if (fromPropertyOrdering != null) {\n    common.setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n  }\n\n  const fromRequired = common.getValueByPath(fromObject, ['required']);\n  if (fromRequired != null) {\n    common.setValueByPath(toObject, ['required'], fromRequired);\n  }\n\n  const fromTitle = common.getValueByPath(fromObject, ['title']);\n  if (fromTitle != null) {\n    common.setValueByPath(toObject, ['title'], fromTitle);\n  }\n\n  const fromType = common.getValueByPath(fromObject, ['type']);\n  if (fromType != null) {\n    common.setValueByPath(toObject, ['type'], fromType);\n  }\n\n  return toObject;\n}\n\nexport function modelSelectionConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ModelSelectionConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (\n    common.getValueByPath(fromObject, ['featureSelectionPreference']) !==\n    undefined\n  ) {\n    throw new Error(\n      'featureSelectionPreference parameter is not supported in Gemini API.',\n    );\n  }\n\n  return toObject;\n}\n\nexport function safetySettingToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SafetySetting,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['method']) !== undefined) {\n    throw new Error('method parameter is not supported in Gemini API.');\n  }\n\n  const fromCategory = common.getValueByPath(fromObject, ['category']);\n  if (fromCategory != null) {\n    common.setValueByPath(toObject, ['category'], fromCategory);\n  }\n\n  const fromThreshold = common.getValueByPath(fromObject, ['threshold']);\n  if (fromThreshold != null) {\n    common.setValueByPath(toObject, ['threshold'], fromThreshold);\n  }\n\n  return toObject;\n}\n\nexport function functionDeclarationToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionDeclaration,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromBehavior = common.getValueByPath(fromObject, ['behavior']);\n  if (fromBehavior != null) {\n    common.setValueByPath(toObject, ['behavior'], fromBehavior);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromParameters = common.getValueByPath(fromObject, ['parameters']);\n  if (fromParameters != null) {\n    common.setValueByPath(toObject, ['parameters'], fromParameters);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(toObject, ['response'], fromResponse);\n  }\n\n  return toObject;\n}\n\nexport function intervalToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Interval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromStartTime = common.getValueByPath(fromObject, ['startTime']);\n  if (fromStartTime != null) {\n    common.setValueByPath(toObject, ['startTime'], fromStartTime);\n  }\n\n  const fromEndTime = common.getValueByPath(fromObject, ['endTime']);\n  if (fromEndTime != null) {\n    common.setValueByPath(toObject, ['endTime'], fromEndTime);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearch,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTimeRangeFilter = common.getValueByPath(fromObject, [\n    'timeRangeFilter',\n  ]);\n  if (fromTimeRangeFilter != null) {\n    common.setValueByPath(\n      toObject,\n      ['timeRangeFilter'],\n      intervalToMldev(apiClient, fromTimeRangeFilter),\n    );\n  }\n\n  return toObject;\n}\n\nexport function dynamicRetrievalConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.DynamicRetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromDynamicThreshold = common.getValueByPath(fromObject, [\n    'dynamicThreshold',\n  ]);\n  if (fromDynamicThreshold != null) {\n    common.setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchRetrievalToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearchRetrieval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDynamicRetrievalConfig = common.getValueByPath(fromObject, [\n    'dynamicRetrievalConfig',\n  ]);\n  if (fromDynamicRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['dynamicRetrievalConfig'],\n      dynamicRetrievalConfigToMldev(apiClient, fromDynamicRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function enterpriseWebSearchToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function apiKeyConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ApiKeyConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['apiKeyString']) !== undefined) {\n    throw new Error('apiKeyString parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function authConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.AuthConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['apiKeyConfig']) !== undefined) {\n    throw new Error('apiKeyConfig parameter is not supported in Gemini API.');\n  }\n\n  const fromAuthType = common.getValueByPath(fromObject, ['authType']);\n  if (fromAuthType != null) {\n    common.setValueByPath(toObject, ['authType'], fromAuthType);\n  }\n\n  const fromGoogleServiceAccountConfig = common.getValueByPath(fromObject, [\n    'googleServiceAccountConfig',\n  ]);\n  if (fromGoogleServiceAccountConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleServiceAccountConfig'],\n      fromGoogleServiceAccountConfig,\n    );\n  }\n\n  const fromHttpBasicAuthConfig = common.getValueByPath(fromObject, [\n    'httpBasicAuthConfig',\n  ]);\n  if (fromHttpBasicAuthConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['httpBasicAuthConfig'],\n      fromHttpBasicAuthConfig,\n    );\n  }\n\n  const fromOauthConfig = common.getValueByPath(fromObject, ['oauthConfig']);\n  if (fromOauthConfig != null) {\n    common.setValueByPath(toObject, ['oauthConfig'], fromOauthConfig);\n  }\n\n  const fromOidcConfig = common.getValueByPath(fromObject, ['oidcConfig']);\n  if (fromOidcConfig != null) {\n    common.setValueByPath(toObject, ['oidcConfig'], fromOidcConfig);\n  }\n\n  return toObject;\n}\n\nexport function googleMapsToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleMaps,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['authConfig']) !== undefined) {\n    throw new Error('authConfig parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function urlContextToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function toolToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Tool,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionDeclarations = common.getValueByPath(fromObject, [\n    'functionDeclarations',\n  ]);\n  if (fromFunctionDeclarations != null) {\n    let transformedList = fromFunctionDeclarations;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return functionDeclarationToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['functionDeclarations'], transformedList);\n  }\n\n  if (common.getValueByPath(fromObject, ['retrieval']) !== undefined) {\n    throw new Error('retrieval parameter is not supported in Gemini API.');\n  }\n\n  const fromGoogleSearch = common.getValueByPath(fromObject, ['googleSearch']);\n  if (fromGoogleSearch != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearch'],\n      googleSearchToMldev(apiClient, fromGoogleSearch),\n    );\n  }\n\n  const fromGoogleSearchRetrieval = common.getValueByPath(fromObject, [\n    'googleSearchRetrieval',\n  ]);\n  if (fromGoogleSearchRetrieval != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearchRetrieval'],\n      googleSearchRetrievalToMldev(apiClient, fromGoogleSearchRetrieval),\n    );\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['enterpriseWebSearch']) !== undefined\n  ) {\n    throw new Error(\n      'enterpriseWebSearch parameter is not supported in Gemini API.',\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['googleMaps']) !== undefined) {\n    throw new Error('googleMaps parameter is not supported in Gemini API.');\n  }\n\n  const fromUrlContext = common.getValueByPath(fromObject, ['urlContext']);\n  if (fromUrlContext != null) {\n    common.setValueByPath(toObject, ['urlContext'], urlContextToMldev());\n  }\n\n  const fromCodeExecution = common.getValueByPath(fromObject, [\n    'codeExecution',\n  ]);\n  if (fromCodeExecution != null) {\n    common.setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n  }\n\n  return toObject;\n}\n\nexport function functionCallingConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionCallingConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromAllowedFunctionNames = common.getValueByPath(fromObject, [\n    'allowedFunctionNames',\n  ]);\n  if (fromAllowedFunctionNames != null) {\n    common.setValueByPath(\n      toObject,\n      ['allowedFunctionNames'],\n      fromAllowedFunctionNames,\n    );\n  }\n\n  return toObject;\n}\n\nexport function latLngToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LatLng,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromLatitude = common.getValueByPath(fromObject, ['latitude']);\n  if (fromLatitude != null) {\n    common.setValueByPath(toObject, ['latitude'], fromLatitude);\n  }\n\n  const fromLongitude = common.getValueByPath(fromObject, ['longitude']);\n  if (fromLongitude != null) {\n    common.setValueByPath(toObject, ['longitude'], fromLongitude);\n  }\n\n  return toObject;\n}\n\nexport function retrievalConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.RetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromLatLng = common.getValueByPath(fromObject, ['latLng']);\n  if (fromLatLng != null) {\n    common.setValueByPath(\n      toObject,\n      ['latLng'],\n      latLngToMldev(apiClient, fromLatLng),\n    );\n  }\n\n  const fromLanguageCode = common.getValueByPath(fromObject, ['languageCode']);\n  if (fromLanguageCode != null) {\n    common.setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n  }\n\n  return toObject;\n}\n\nexport function toolConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ToolConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionCallingConfig = common.getValueByPath(fromObject, [\n    'functionCallingConfig',\n  ]);\n  if (fromFunctionCallingConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['functionCallingConfig'],\n      functionCallingConfigToMldev(apiClient, fromFunctionCallingConfig),\n    );\n  }\n\n  const fromRetrievalConfig = common.getValueByPath(fromObject, [\n    'retrievalConfig',\n  ]);\n  if (fromRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['retrievalConfig'],\n      retrievalConfigToMldev(apiClient, fromRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function prebuiltVoiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.PrebuiltVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceName = common.getValueByPath(fromObject, ['voiceName']);\n  if (fromVoiceName != null) {\n    common.setValueByPath(toObject, ['voiceName'], fromVoiceName);\n  }\n\n  return toObject;\n}\n\nexport function voiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.VoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPrebuiltVoiceConfig = common.getValueByPath(fromObject, [\n    'prebuiltVoiceConfig',\n  ]);\n  if (fromPrebuiltVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['prebuiltVoiceConfig'],\n      prebuiltVoiceConfigToMldev(apiClient, fromPrebuiltVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function speakerVoiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SpeakerVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSpeaker = common.getValueByPath(fromObject, ['speaker']);\n  if (fromSpeaker != null) {\n    common.setValueByPath(toObject, ['speaker'], fromSpeaker);\n  }\n\n  const fromVoiceConfig = common.getValueByPath(fromObject, ['voiceConfig']);\n  if (fromVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['voiceConfig'],\n      voiceConfigToMldev(apiClient, fromVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function multiSpeakerVoiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.MultiSpeakerVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSpeakerVoiceConfigs = common.getValueByPath(fromObject, [\n    'speakerVoiceConfigs',\n  ]);\n  if (fromSpeakerVoiceConfigs != null) {\n    let transformedList = fromSpeakerVoiceConfigs;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return speakerVoiceConfigToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['speakerVoiceConfigs'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function speechConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SpeechConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceConfig = common.getValueByPath(fromObject, ['voiceConfig']);\n  if (fromVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['voiceConfig'],\n      voiceConfigToMldev(apiClient, fromVoiceConfig),\n    );\n  }\n\n  const fromMultiSpeakerVoiceConfig = common.getValueByPath(fromObject, [\n    'multiSpeakerVoiceConfig',\n  ]);\n  if (fromMultiSpeakerVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['multiSpeakerVoiceConfig'],\n      multiSpeakerVoiceConfigToMldev(apiClient, fromMultiSpeakerVoiceConfig),\n    );\n  }\n\n  const fromLanguageCode = common.getValueByPath(fromObject, ['languageCode']);\n  if (fromLanguageCode != null) {\n    common.setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n  }\n\n  return toObject;\n}\n\nexport function thinkingConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ThinkingConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromIncludeThoughts = common.getValueByPath(fromObject, [\n    'includeThoughts',\n  ]);\n  if (fromIncludeThoughts != null) {\n    common.setValueByPath(toObject, ['includeThoughts'], fromIncludeThoughts);\n  }\n\n  const fromThinkingBudget = common.getValueByPath(fromObject, [\n    'thinkingBudget',\n  ]);\n  if (fromThinkingBudget != null) {\n    common.setValueByPath(toObject, ['thinkingBudget'], fromThinkingBudget);\n  }\n\n  return toObject;\n}\n\nexport function generateContentConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['systemInstruction'],\n      contentToMldev(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTemperature = common.getValueByPath(fromObject, ['temperature']);\n  if (fromTemperature != null) {\n    common.setValueByPath(toObject, ['temperature'], fromTemperature);\n  }\n\n  const fromTopP = common.getValueByPath(fromObject, ['topP']);\n  if (fromTopP != null) {\n    common.setValueByPath(toObject, ['topP'], fromTopP);\n  }\n\n  const fromTopK = common.getValueByPath(fromObject, ['topK']);\n  if (fromTopK != null) {\n    common.setValueByPath(toObject, ['topK'], fromTopK);\n  }\n\n  const fromCandidateCount = common.getValueByPath(fromObject, [\n    'candidateCount',\n  ]);\n  if (fromCandidateCount != null) {\n    common.setValueByPath(toObject, ['candidateCount'], fromCandidateCount);\n  }\n\n  const fromMaxOutputTokens = common.getValueByPath(fromObject, [\n    'maxOutputTokens',\n  ]);\n  if (fromMaxOutputTokens != null) {\n    common.setValueByPath(toObject, ['maxOutputTokens'], fromMaxOutputTokens);\n  }\n\n  const fromStopSequences = common.getValueByPath(fromObject, [\n    'stopSequences',\n  ]);\n  if (fromStopSequences != null) {\n    common.setValueByPath(toObject, ['stopSequences'], fromStopSequences);\n  }\n\n  const fromResponseLogprobs = common.getValueByPath(fromObject, [\n    'responseLogprobs',\n  ]);\n  if (fromResponseLogprobs != null) {\n    common.setValueByPath(toObject, ['responseLogprobs'], fromResponseLogprobs);\n  }\n\n  const fromLogprobs = common.getValueByPath(fromObject, ['logprobs']);\n  if (fromLogprobs != null) {\n    common.setValueByPath(toObject, ['logprobs'], fromLogprobs);\n  }\n\n  const fromPresencePenalty = common.getValueByPath(fromObject, [\n    'presencePenalty',\n  ]);\n  if (fromPresencePenalty != null) {\n    common.setValueByPath(toObject, ['presencePenalty'], fromPresencePenalty);\n  }\n\n  const fromFrequencyPenalty = common.getValueByPath(fromObject, [\n    'frequencyPenalty',\n  ]);\n  if (fromFrequencyPenalty != null) {\n    common.setValueByPath(toObject, ['frequencyPenalty'], fromFrequencyPenalty);\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (fromSeed != null) {\n    common.setValueByPath(toObject, ['seed'], fromSeed);\n  }\n\n  const fromResponseMimeType = common.getValueByPath(fromObject, [\n    'responseMimeType',\n  ]);\n  if (fromResponseMimeType != null) {\n    common.setValueByPath(toObject, ['responseMimeType'], fromResponseMimeType);\n  }\n\n  const fromResponseSchema = common.getValueByPath(fromObject, [\n    'responseSchema',\n  ]);\n  if (fromResponseSchema != null) {\n    common.setValueByPath(\n      toObject,\n      ['responseSchema'],\n      schemaToMldev(apiClient, t.tSchema(apiClient, fromResponseSchema)),\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['routingConfig']) !== undefined) {\n    throw new Error('routingConfig parameter is not supported in Gemini API.');\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['modelSelectionConfig']) !== undefined\n  ) {\n    throw new Error(\n      'modelSelectionConfig parameter is not supported in Gemini API.',\n    );\n  }\n\n  const fromSafetySettings = common.getValueByPath(fromObject, [\n    'safetySettings',\n  ]);\n  if (parentObject !== undefined && fromSafetySettings != null) {\n    let transformedList = fromSafetySettings;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return safetySettingToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(parentObject, ['safetySettings'], transformedList);\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    let transformedList = t.tTools(apiClient, fromTools);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return toolToMldev(apiClient, t.tTool(apiClient, item));\n      });\n    }\n    common.setValueByPath(parentObject, ['tools'], transformedList);\n  }\n\n  const fromToolConfig = common.getValueByPath(fromObject, ['toolConfig']);\n  if (parentObject !== undefined && fromToolConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['toolConfig'],\n      toolConfigToMldev(apiClient, fromToolConfig),\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['labels']) !== undefined) {\n    throw new Error('labels parameter is not supported in Gemini API.');\n  }\n\n  const fromCachedContent = common.getValueByPath(fromObject, [\n    'cachedContent',\n  ]);\n  if (parentObject !== undefined && fromCachedContent != null) {\n    common.setValueByPath(\n      parentObject,\n      ['cachedContent'],\n      t.tCachedContentName(apiClient, fromCachedContent),\n    );\n  }\n\n  const fromResponseModalities = common.getValueByPath(fromObject, [\n    'responseModalities',\n  ]);\n  if (fromResponseModalities != null) {\n    common.setValueByPath(\n      toObject,\n      ['responseModalities'],\n      fromResponseModalities,\n    );\n  }\n\n  const fromMediaResolution = common.getValueByPath(fromObject, [\n    'mediaResolution',\n  ]);\n  if (fromMediaResolution != null) {\n    common.setValueByPath(toObject, ['mediaResolution'], fromMediaResolution);\n  }\n\n  const fromSpeechConfig = common.getValueByPath(fromObject, ['speechConfig']);\n  if (fromSpeechConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['speechConfig'],\n      speechConfigToMldev(\n        apiClient,\n        t.tSpeechConfig(apiClient, fromSpeechConfig),\n      ),\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['audioTimestamp']) !== undefined) {\n    throw new Error('audioTimestamp parameter is not supported in Gemini API.');\n  }\n\n  const fromThinkingConfig = common.getValueByPath(fromObject, [\n    'thinkingConfig',\n  ]);\n  if (fromThinkingConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['thinkingConfig'],\n      thinkingConfigToMldev(apiClient, fromThinkingConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateContentParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    let transformedList = t.tContents(apiClient, fromContents);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return contentToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['contents'], transformedList);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['generationConfig'],\n      generateContentConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function embedContentConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTaskType = common.getValueByPath(fromObject, ['taskType']);\n  if (parentObject !== undefined && fromTaskType != null) {\n    common.setValueByPath(\n      parentObject,\n      ['requests[]', 'taskType'],\n      fromTaskType,\n    );\n  }\n\n  const fromTitle = common.getValueByPath(fromObject, ['title']);\n  if (parentObject !== undefined && fromTitle != null) {\n    common.setValueByPath(parentObject, ['requests[]', 'title'], fromTitle);\n  }\n\n  const fromOutputDimensionality = common.getValueByPath(fromObject, [\n    'outputDimensionality',\n  ]);\n  if (parentObject !== undefined && fromOutputDimensionality != null) {\n    common.setValueByPath(\n      parentObject,\n      ['requests[]', 'outputDimensionality'],\n      fromOutputDimensionality,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['mimeType']) !== undefined) {\n    throw new Error('mimeType parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['autoTruncate']) !== undefined) {\n    throw new Error('autoTruncate parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function embedContentParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    common.setValueByPath(\n      toObject,\n      ['requests[]', 'content'],\n      t.tContentsForEmbed(apiClient, fromContents),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      embedContentConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  const fromModelForEmbedContent = common.getValueByPath(fromObject, ['model']);\n  if (fromModelForEmbedContent !== undefined) {\n    common.setValueByPath(\n      toObject,\n      ['requests[]', 'model'],\n      t.tModel(apiClient, fromModelForEmbedContent),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateImagesConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateImagesConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['outputGcsUri']) !== undefined) {\n    throw new Error('outputGcsUri parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['negativePrompt']) !== undefined) {\n    throw new Error('negativePrompt parameter is not supported in Gemini API.');\n  }\n\n  const fromNumberOfImages = common.getValueByPath(fromObject, [\n    'numberOfImages',\n  ]);\n  if (parentObject !== undefined && fromNumberOfImages != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'sampleCount'],\n      fromNumberOfImages,\n    );\n  }\n\n  const fromAspectRatio = common.getValueByPath(fromObject, ['aspectRatio']);\n  if (parentObject !== undefined && fromAspectRatio != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'aspectRatio'],\n      fromAspectRatio,\n    );\n  }\n\n  const fromGuidanceScale = common.getValueByPath(fromObject, [\n    'guidanceScale',\n  ]);\n  if (parentObject !== undefined && fromGuidanceScale != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'guidanceScale'],\n      fromGuidanceScale,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['seed']) !== undefined) {\n    throw new Error('seed parameter is not supported in Gemini API.');\n  }\n\n  const fromSafetyFilterLevel = common.getValueByPath(fromObject, [\n    'safetyFilterLevel',\n  ]);\n  if (parentObject !== undefined && fromSafetyFilterLevel != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'safetySetting'],\n      fromSafetyFilterLevel,\n    );\n  }\n\n  const fromPersonGeneration = common.getValueByPath(fromObject, [\n    'personGeneration',\n  ]);\n  if (parentObject !== undefined && fromPersonGeneration != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'personGeneration'],\n      fromPersonGeneration,\n    );\n  }\n\n  const fromIncludeSafetyAttributes = common.getValueByPath(fromObject, [\n    'includeSafetyAttributes',\n  ]);\n  if (parentObject !== undefined && fromIncludeSafetyAttributes != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'includeSafetyAttributes'],\n      fromIncludeSafetyAttributes,\n    );\n  }\n\n  const fromIncludeRaiReason = common.getValueByPath(fromObject, [\n    'includeRaiReason',\n  ]);\n  if (parentObject !== undefined && fromIncludeRaiReason != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'includeRaiReason'],\n      fromIncludeRaiReason,\n    );\n  }\n\n  const fromLanguage = common.getValueByPath(fromObject, ['language']);\n  if (parentObject !== undefined && fromLanguage != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'language'],\n      fromLanguage,\n    );\n  }\n\n  const fromOutputMimeType = common.getValueByPath(fromObject, [\n    'outputMimeType',\n  ]);\n  if (parentObject !== undefined && fromOutputMimeType != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputOptions', 'mimeType'],\n      fromOutputMimeType,\n    );\n  }\n\n  const fromOutputCompressionQuality = common.getValueByPath(fromObject, [\n    'outputCompressionQuality',\n  ]);\n  if (parentObject !== undefined && fromOutputCompressionQuality != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputOptions', 'compressionQuality'],\n      fromOutputCompressionQuality,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['addWatermark']) !== undefined) {\n    throw new Error('addWatermark parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['enhancePrompt']) !== undefined) {\n    throw new Error('enhancePrompt parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function generateImagesParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateImagesParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromPrompt = common.getValueByPath(fromObject, ['prompt']);\n  if (fromPrompt != null) {\n    common.setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      generateImagesConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function getModelParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GetModelParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function listModelsConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListModelsConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPageSize = common.getValueByPath(fromObject, ['pageSize']);\n  if (parentObject !== undefined && fromPageSize != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n  }\n\n  const fromPageToken = common.getValueByPath(fromObject, ['pageToken']);\n  if (parentObject !== undefined && fromPageToken != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n  }\n\n  const fromFilter = common.getValueByPath(fromObject, ['filter']);\n  if (parentObject !== undefined && fromFilter != null) {\n    common.setValueByPath(parentObject, ['_query', 'filter'], fromFilter);\n  }\n\n  const fromQueryBase = common.getValueByPath(fromObject, ['queryBase']);\n  if (parentObject !== undefined && fromQueryBase != null) {\n    common.setValueByPath(\n      parentObject,\n      ['_url', 'models_url'],\n      t.tModelsUrl(apiClient, fromQueryBase),\n    );\n  }\n\n  return toObject;\n}\n\nexport function listModelsParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListModelsParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      listModelsConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function updateModelConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.UpdateModelConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (parentObject !== undefined && fromDisplayName != null) {\n    common.setValueByPath(parentObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (parentObject !== undefined && fromDescription != null) {\n    common.setValueByPath(parentObject, ['description'], fromDescription);\n  }\n\n  const fromDefaultCheckpointId = common.getValueByPath(fromObject, [\n    'defaultCheckpointId',\n  ]);\n  if (parentObject !== undefined && fromDefaultCheckpointId != null) {\n    common.setValueByPath(\n      parentObject,\n      ['defaultCheckpointId'],\n      fromDefaultCheckpointId,\n    );\n  }\n\n  return toObject;\n}\n\nexport function updateModelParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.UpdateModelParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      updateModelConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function deleteModelParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.DeleteModelParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function countTokensConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CountTokensConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['systemInstruction']) !== undefined) {\n    throw new Error(\n      'systemInstruction parameter is not supported in Gemini API.',\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['tools']) !== undefined) {\n    throw new Error('tools parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['generationConfig']) !== undefined) {\n    throw new Error(\n      'generationConfig parameter is not supported in Gemini API.',\n    );\n  }\n\n  return toObject;\n}\n\nexport function countTokensParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CountTokensParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    let transformedList = t.tContents(apiClient, fromContents);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return contentToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['contents'], transformedList);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      countTokensConfigToMldev(apiClient, fromConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function imageToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Image,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['gcsUri']) !== undefined) {\n    throw new Error('gcsUri parameter is not supported in Gemini API.');\n  }\n\n  const fromImageBytes = common.getValueByPath(fromObject, ['imageBytes']);\n  if (fromImageBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['bytesBase64Encoded'],\n      t.tBytes(apiClient, fromImageBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function generateVideosConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNumberOfVideos = common.getValueByPath(fromObject, [\n    'numberOfVideos',\n  ]);\n  if (parentObject !== undefined && fromNumberOfVideos != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'sampleCount'],\n      fromNumberOfVideos,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['outputGcsUri']) !== undefined) {\n    throw new Error('outputGcsUri parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['fps']) !== undefined) {\n    throw new Error('fps parameter is not supported in Gemini API.');\n  }\n\n  const fromDurationSeconds = common.getValueByPath(fromObject, [\n    'durationSeconds',\n  ]);\n  if (parentObject !== undefined && fromDurationSeconds != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'durationSeconds'],\n      fromDurationSeconds,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['seed']) !== undefined) {\n    throw new Error('seed parameter is not supported in Gemini API.');\n  }\n\n  const fromAspectRatio = common.getValueByPath(fromObject, ['aspectRatio']);\n  if (parentObject !== undefined && fromAspectRatio != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'aspectRatio'],\n      fromAspectRatio,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['resolution']) !== undefined) {\n    throw new Error('resolution parameter is not supported in Gemini API.');\n  }\n\n  const fromPersonGeneration = common.getValueByPath(fromObject, [\n    'personGeneration',\n  ]);\n  if (parentObject !== undefined && fromPersonGeneration != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'personGeneration'],\n      fromPersonGeneration,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['pubsubTopic']) !== undefined) {\n    throw new Error('pubsubTopic parameter is not supported in Gemini API.');\n  }\n\n  const fromNegativePrompt = common.getValueByPath(fromObject, [\n    'negativePrompt',\n  ]);\n  if (parentObject !== undefined && fromNegativePrompt != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'negativePrompt'],\n      fromNegativePrompt,\n    );\n  }\n\n  const fromEnhancePrompt = common.getValueByPath(fromObject, [\n    'enhancePrompt',\n  ]);\n  if (parentObject !== undefined && fromEnhancePrompt != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'enhancePrompt'],\n      fromEnhancePrompt,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['generateAudio']) !== undefined) {\n    throw new Error('generateAudio parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function generateVideosParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromPrompt = common.getValueByPath(fromObject, ['prompt']);\n  if (fromPrompt != null) {\n    common.setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n  }\n\n  const fromImage = common.getValueByPath(fromObject, ['image']);\n  if (fromImage != null) {\n    common.setValueByPath(\n      toObject,\n      ['instances[0]', 'image'],\n      imageToMldev(apiClient, fromImage),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      generateVideosConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function videoMetadataToVertex(\n  apiClient: ApiClient,\n  fromObject: types.VideoMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (fromFps != null) {\n    common.setValueByPath(toObject, ['fps'], fromFps);\n  }\n\n  const fromEndOffset = common.getValueByPath(fromObject, ['endOffset']);\n  if (fromEndOffset != null) {\n    common.setValueByPath(toObject, ['endOffset'], fromEndOffset);\n  }\n\n  const fromStartOffset = common.getValueByPath(fromObject, ['startOffset']);\n  if (fromStartOffset != null) {\n    common.setValueByPath(toObject, ['startOffset'], fromStartOffset);\n  }\n\n  return toObject;\n}\n\nexport function blobToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Blob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function fileDataToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FileData,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromFileUri = common.getValueByPath(fromObject, ['fileUri']);\n  if (fromFileUri != null) {\n    common.setValueByPath(toObject, ['fileUri'], fromFileUri);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function partToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoMetadata'],\n      videoMetadataToVertex(apiClient, fromVideoMetadata),\n    );\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(\n      toObject,\n      ['inlineData'],\n      blobToVertex(apiClient, fromInlineData),\n    );\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(\n      toObject,\n      ['fileData'],\n      fileDataToVertex(apiClient, fromFileData),\n    );\n  }\n\n  const fromThoughtSignature = common.getValueByPath(fromObject, [\n    'thoughtSignature',\n  ]);\n  if (fromThoughtSignature != null) {\n    common.setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    let transformedList = fromParts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return partToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['parts'], transformedList);\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function schemaToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Schema,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAnyOf = common.getValueByPath(fromObject, ['anyOf']);\n  if (fromAnyOf != null) {\n    common.setValueByPath(toObject, ['anyOf'], fromAnyOf);\n  }\n\n  const fromDefault = common.getValueByPath(fromObject, ['default']);\n  if (fromDefault != null) {\n    common.setValueByPath(toObject, ['default'], fromDefault);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromEnum = common.getValueByPath(fromObject, ['enum']);\n  if (fromEnum != null) {\n    common.setValueByPath(toObject, ['enum'], fromEnum);\n  }\n\n  const fromExample = common.getValueByPath(fromObject, ['example']);\n  if (fromExample != null) {\n    common.setValueByPath(toObject, ['example'], fromExample);\n  }\n\n  const fromFormat = common.getValueByPath(fromObject, ['format']);\n  if (fromFormat != null) {\n    common.setValueByPath(toObject, ['format'], fromFormat);\n  }\n\n  const fromItems = common.getValueByPath(fromObject, ['items']);\n  if (fromItems != null) {\n    common.setValueByPath(toObject, ['items'], fromItems);\n  }\n\n  const fromMaxItems = common.getValueByPath(fromObject, ['maxItems']);\n  if (fromMaxItems != null) {\n    common.setValueByPath(toObject, ['maxItems'], fromMaxItems);\n  }\n\n  const fromMaxLength = common.getValueByPath(fromObject, ['maxLength']);\n  if (fromMaxLength != null) {\n    common.setValueByPath(toObject, ['maxLength'], fromMaxLength);\n  }\n\n  const fromMaxProperties = common.getValueByPath(fromObject, [\n    'maxProperties',\n  ]);\n  if (fromMaxProperties != null) {\n    common.setValueByPath(toObject, ['maxProperties'], fromMaxProperties);\n  }\n\n  const fromMaximum = common.getValueByPath(fromObject, ['maximum']);\n  if (fromMaximum != null) {\n    common.setValueByPath(toObject, ['maximum'], fromMaximum);\n  }\n\n  const fromMinItems = common.getValueByPath(fromObject, ['minItems']);\n  if (fromMinItems != null) {\n    common.setValueByPath(toObject, ['minItems'], fromMinItems);\n  }\n\n  const fromMinLength = common.getValueByPath(fromObject, ['minLength']);\n  if (fromMinLength != null) {\n    common.setValueByPath(toObject, ['minLength'], fromMinLength);\n  }\n\n  const fromMinProperties = common.getValueByPath(fromObject, [\n    'minProperties',\n  ]);\n  if (fromMinProperties != null) {\n    common.setValueByPath(toObject, ['minProperties'], fromMinProperties);\n  }\n\n  const fromMinimum = common.getValueByPath(fromObject, ['minimum']);\n  if (fromMinimum != null) {\n    common.setValueByPath(toObject, ['minimum'], fromMinimum);\n  }\n\n  const fromNullable = common.getValueByPath(fromObject, ['nullable']);\n  if (fromNullable != null) {\n    common.setValueByPath(toObject, ['nullable'], fromNullable);\n  }\n\n  const fromPattern = common.getValueByPath(fromObject, ['pattern']);\n  if (fromPattern != null) {\n    common.setValueByPath(toObject, ['pattern'], fromPattern);\n  }\n\n  const fromProperties = common.getValueByPath(fromObject, ['properties']);\n  if (fromProperties != null) {\n    common.setValueByPath(toObject, ['properties'], fromProperties);\n  }\n\n  const fromPropertyOrdering = common.getValueByPath(fromObject, [\n    'propertyOrdering',\n  ]);\n  if (fromPropertyOrdering != null) {\n    common.setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n  }\n\n  const fromRequired = common.getValueByPath(fromObject, ['required']);\n  if (fromRequired != null) {\n    common.setValueByPath(toObject, ['required'], fromRequired);\n  }\n\n  const fromTitle = common.getValueByPath(fromObject, ['title']);\n  if (fromTitle != null) {\n    common.setValueByPath(toObject, ['title'], fromTitle);\n  }\n\n  const fromType = common.getValueByPath(fromObject, ['type']);\n  if (fromType != null) {\n    common.setValueByPath(toObject, ['type'], fromType);\n  }\n\n  return toObject;\n}\n\nexport function modelSelectionConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ModelSelectionConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFeatureSelectionPreference = common.getValueByPath(fromObject, [\n    'featureSelectionPreference',\n  ]);\n  if (fromFeatureSelectionPreference != null) {\n    common.setValueByPath(\n      toObject,\n      ['featureSelectionPreference'],\n      fromFeatureSelectionPreference,\n    );\n  }\n\n  return toObject;\n}\n\nexport function safetySettingToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SafetySetting,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMethod = common.getValueByPath(fromObject, ['method']);\n  if (fromMethod != null) {\n    common.setValueByPath(toObject, ['method'], fromMethod);\n  }\n\n  const fromCategory = common.getValueByPath(fromObject, ['category']);\n  if (fromCategory != null) {\n    common.setValueByPath(toObject, ['category'], fromCategory);\n  }\n\n  const fromThreshold = common.getValueByPath(fromObject, ['threshold']);\n  if (fromThreshold != null) {\n    common.setValueByPath(toObject, ['threshold'], fromThreshold);\n  }\n\n  return toObject;\n}\n\nexport function functionDeclarationToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionDeclaration,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['behavior']) !== undefined) {\n    throw new Error('behavior parameter is not supported in Vertex AI.');\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromParameters = common.getValueByPath(fromObject, ['parameters']);\n  if (fromParameters != null) {\n    common.setValueByPath(toObject, ['parameters'], fromParameters);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(toObject, ['response'], fromResponse);\n  }\n\n  return toObject;\n}\n\nexport function intervalToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Interval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromStartTime = common.getValueByPath(fromObject, ['startTime']);\n  if (fromStartTime != null) {\n    common.setValueByPath(toObject, ['startTime'], fromStartTime);\n  }\n\n  const fromEndTime = common.getValueByPath(fromObject, ['endTime']);\n  if (fromEndTime != null) {\n    common.setValueByPath(toObject, ['endTime'], fromEndTime);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearch,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTimeRangeFilter = common.getValueByPath(fromObject, [\n    'timeRangeFilter',\n  ]);\n  if (fromTimeRangeFilter != null) {\n    common.setValueByPath(\n      toObject,\n      ['timeRangeFilter'],\n      intervalToVertex(apiClient, fromTimeRangeFilter),\n    );\n  }\n\n  return toObject;\n}\n\nexport function dynamicRetrievalConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.DynamicRetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromDynamicThreshold = common.getValueByPath(fromObject, [\n    'dynamicThreshold',\n  ]);\n  if (fromDynamicThreshold != null) {\n    common.setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchRetrievalToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearchRetrieval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDynamicRetrievalConfig = common.getValueByPath(fromObject, [\n    'dynamicRetrievalConfig',\n  ]);\n  if (fromDynamicRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['dynamicRetrievalConfig'],\n      dynamicRetrievalConfigToVertex(apiClient, fromDynamicRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function enterpriseWebSearchToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function apiKeyConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ApiKeyConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromApiKeyString = common.getValueByPath(fromObject, ['apiKeyString']);\n  if (fromApiKeyString != null) {\n    common.setValueByPath(toObject, ['apiKeyString'], fromApiKeyString);\n  }\n\n  return toObject;\n}\n\nexport function authConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.AuthConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromApiKeyConfig = common.getValueByPath(fromObject, ['apiKeyConfig']);\n  if (fromApiKeyConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['apiKeyConfig'],\n      apiKeyConfigToVertex(apiClient, fromApiKeyConfig),\n    );\n  }\n\n  const fromAuthType = common.getValueByPath(fromObject, ['authType']);\n  if (fromAuthType != null) {\n    common.setValueByPath(toObject, ['authType'], fromAuthType);\n  }\n\n  const fromGoogleServiceAccountConfig = common.getValueByPath(fromObject, [\n    'googleServiceAccountConfig',\n  ]);\n  if (fromGoogleServiceAccountConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleServiceAccountConfig'],\n      fromGoogleServiceAccountConfig,\n    );\n  }\n\n  const fromHttpBasicAuthConfig = common.getValueByPath(fromObject, [\n    'httpBasicAuthConfig',\n  ]);\n  if (fromHttpBasicAuthConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['httpBasicAuthConfig'],\n      fromHttpBasicAuthConfig,\n    );\n  }\n\n  const fromOauthConfig = common.getValueByPath(fromObject, ['oauthConfig']);\n  if (fromOauthConfig != null) {\n    common.setValueByPath(toObject, ['oauthConfig'], fromOauthConfig);\n  }\n\n  const fromOidcConfig = common.getValueByPath(fromObject, ['oidcConfig']);\n  if (fromOidcConfig != null) {\n    common.setValueByPath(toObject, ['oidcConfig'], fromOidcConfig);\n  }\n\n  return toObject;\n}\n\nexport function googleMapsToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleMaps,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAuthConfig = common.getValueByPath(fromObject, ['authConfig']);\n  if (fromAuthConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['authConfig'],\n      authConfigToVertex(apiClient, fromAuthConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function urlContextToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function toolToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Tool,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionDeclarations = common.getValueByPath(fromObject, [\n    'functionDeclarations',\n  ]);\n  if (fromFunctionDeclarations != null) {\n    let transformedList = fromFunctionDeclarations;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return functionDeclarationToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['functionDeclarations'], transformedList);\n  }\n\n  const fromRetrieval = common.getValueByPath(fromObject, ['retrieval']);\n  if (fromRetrieval != null) {\n    common.setValueByPath(toObject, ['retrieval'], fromRetrieval);\n  }\n\n  const fromGoogleSearch = common.getValueByPath(fromObject, ['googleSearch']);\n  if (fromGoogleSearch != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearch'],\n      googleSearchToVertex(apiClient, fromGoogleSearch),\n    );\n  }\n\n  const fromGoogleSearchRetrieval = common.getValueByPath(fromObject, [\n    'googleSearchRetrieval',\n  ]);\n  if (fromGoogleSearchRetrieval != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearchRetrieval'],\n      googleSearchRetrievalToVertex(apiClient, fromGoogleSearchRetrieval),\n    );\n  }\n\n  const fromEnterpriseWebSearch = common.getValueByPath(fromObject, [\n    'enterpriseWebSearch',\n  ]);\n  if (fromEnterpriseWebSearch != null) {\n    common.setValueByPath(\n      toObject,\n      ['enterpriseWebSearch'],\n      enterpriseWebSearchToVertex(),\n    );\n  }\n\n  const fromGoogleMaps = common.getValueByPath(fromObject, ['googleMaps']);\n  if (fromGoogleMaps != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleMaps'],\n      googleMapsToVertex(apiClient, fromGoogleMaps),\n    );\n  }\n\n  const fromUrlContext = common.getValueByPath(fromObject, ['urlContext']);\n  if (fromUrlContext != null) {\n    common.setValueByPath(toObject, ['urlContext'], urlContextToVertex());\n  }\n\n  const fromCodeExecution = common.getValueByPath(fromObject, [\n    'codeExecution',\n  ]);\n  if (fromCodeExecution != null) {\n    common.setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n  }\n\n  return toObject;\n}\n\nexport function functionCallingConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionCallingConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromAllowedFunctionNames = common.getValueByPath(fromObject, [\n    'allowedFunctionNames',\n  ]);\n  if (fromAllowedFunctionNames != null) {\n    common.setValueByPath(\n      toObject,\n      ['allowedFunctionNames'],\n      fromAllowedFunctionNames,\n    );\n  }\n\n  return toObject;\n}\n\nexport function latLngToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LatLng,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromLatitude = common.getValueByPath(fromObject, ['latitude']);\n  if (fromLatitude != null) {\n    common.setValueByPath(toObject, ['latitude'], fromLatitude);\n  }\n\n  const fromLongitude = common.getValueByPath(fromObject, ['longitude']);\n  if (fromLongitude != null) {\n    common.setValueByPath(toObject, ['longitude'], fromLongitude);\n  }\n\n  return toObject;\n}\n\nexport function retrievalConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.RetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromLatLng = common.getValueByPath(fromObject, ['latLng']);\n  if (fromLatLng != null) {\n    common.setValueByPath(\n      toObject,\n      ['latLng'],\n      latLngToVertex(apiClient, fromLatLng),\n    );\n  }\n\n  const fromLanguageCode = common.getValueByPath(fromObject, ['languageCode']);\n  if (fromLanguageCode != null) {\n    common.setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n  }\n\n  return toObject;\n}\n\nexport function toolConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ToolConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionCallingConfig = common.getValueByPath(fromObject, [\n    'functionCallingConfig',\n  ]);\n  if (fromFunctionCallingConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['functionCallingConfig'],\n      functionCallingConfigToVertex(apiClient, fromFunctionCallingConfig),\n    );\n  }\n\n  const fromRetrievalConfig = common.getValueByPath(fromObject, [\n    'retrievalConfig',\n  ]);\n  if (fromRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['retrievalConfig'],\n      retrievalConfigToVertex(apiClient, fromRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function prebuiltVoiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.PrebuiltVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceName = common.getValueByPath(fromObject, ['voiceName']);\n  if (fromVoiceName != null) {\n    common.setValueByPath(toObject, ['voiceName'], fromVoiceName);\n  }\n\n  return toObject;\n}\n\nexport function voiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.VoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPrebuiltVoiceConfig = common.getValueByPath(fromObject, [\n    'prebuiltVoiceConfig',\n  ]);\n  if (fromPrebuiltVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['prebuiltVoiceConfig'],\n      prebuiltVoiceConfigToVertex(apiClient, fromPrebuiltVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function speakerVoiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SpeakerVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['speaker']) !== undefined) {\n    throw new Error('speaker parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['voiceConfig']) !== undefined) {\n    throw new Error('voiceConfig parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function multiSpeakerVoiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.MultiSpeakerVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (\n    common.getValueByPath(fromObject, ['speakerVoiceConfigs']) !== undefined\n  ) {\n    throw new Error(\n      'speakerVoiceConfigs parameter is not supported in Vertex AI.',\n    );\n  }\n\n  return toObject;\n}\n\nexport function speechConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SpeechConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceConfig = common.getValueByPath(fromObject, ['voiceConfig']);\n  if (fromVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['voiceConfig'],\n      voiceConfigToVertex(apiClient, fromVoiceConfig),\n    );\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['multiSpeakerVoiceConfig']) !== undefined\n  ) {\n    throw new Error(\n      'multiSpeakerVoiceConfig parameter is not supported in Vertex AI.',\n    );\n  }\n\n  const fromLanguageCode = common.getValueByPath(fromObject, ['languageCode']);\n  if (fromLanguageCode != null) {\n    common.setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n  }\n\n  return toObject;\n}\n\nexport function thinkingConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ThinkingConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromIncludeThoughts = common.getValueByPath(fromObject, [\n    'includeThoughts',\n  ]);\n  if (fromIncludeThoughts != null) {\n    common.setValueByPath(toObject, ['includeThoughts'], fromIncludeThoughts);\n  }\n\n  const fromThinkingBudget = common.getValueByPath(fromObject, [\n    'thinkingBudget',\n  ]);\n  if (fromThinkingBudget != null) {\n    common.setValueByPath(toObject, ['thinkingBudget'], fromThinkingBudget);\n  }\n\n  return toObject;\n}\n\nexport function generateContentConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['systemInstruction'],\n      contentToVertex(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTemperature = common.getValueByPath(fromObject, ['temperature']);\n  if (fromTemperature != null) {\n    common.setValueByPath(toObject, ['temperature'], fromTemperature);\n  }\n\n  const fromTopP = common.getValueByPath(fromObject, ['topP']);\n  if (fromTopP != null) {\n    common.setValueByPath(toObject, ['topP'], fromTopP);\n  }\n\n  const fromTopK = common.getValueByPath(fromObject, ['topK']);\n  if (fromTopK != null) {\n    common.setValueByPath(toObject, ['topK'], fromTopK);\n  }\n\n  const fromCandidateCount = common.getValueByPath(fromObject, [\n    'candidateCount',\n  ]);\n  if (fromCandidateCount != null) {\n    common.setValueByPath(toObject, ['candidateCount'], fromCandidateCount);\n  }\n\n  const fromMaxOutputTokens = common.getValueByPath(fromObject, [\n    'maxOutputTokens',\n  ]);\n  if (fromMaxOutputTokens != null) {\n    common.setValueByPath(toObject, ['maxOutputTokens'], fromMaxOutputTokens);\n  }\n\n  const fromStopSequences = common.getValueByPath(fromObject, [\n    'stopSequences',\n  ]);\n  if (fromStopSequences != null) {\n    common.setValueByPath(toObject, ['stopSequences'], fromStopSequences);\n  }\n\n  const fromResponseLogprobs = common.getValueByPath(fromObject, [\n    'responseLogprobs',\n  ]);\n  if (fromResponseLogprobs != null) {\n    common.setValueByPath(toObject, ['responseLogprobs'], fromResponseLogprobs);\n  }\n\n  const fromLogprobs = common.getValueByPath(fromObject, ['logprobs']);\n  if (fromLogprobs != null) {\n    common.setValueByPath(toObject, ['logprobs'], fromLogprobs);\n  }\n\n  const fromPresencePenalty = common.getValueByPath(fromObject, [\n    'presencePenalty',\n  ]);\n  if (fromPresencePenalty != null) {\n    common.setValueByPath(toObject, ['presencePenalty'], fromPresencePenalty);\n  }\n\n  const fromFrequencyPenalty = common.getValueByPath(fromObject, [\n    'frequencyPenalty',\n  ]);\n  if (fromFrequencyPenalty != null) {\n    common.setValueByPath(toObject, ['frequencyPenalty'], fromFrequencyPenalty);\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (fromSeed != null) {\n    common.setValueByPath(toObject, ['seed'], fromSeed);\n  }\n\n  const fromResponseMimeType = common.getValueByPath(fromObject, [\n    'responseMimeType',\n  ]);\n  if (fromResponseMimeType != null) {\n    common.setValueByPath(toObject, ['responseMimeType'], fromResponseMimeType);\n  }\n\n  const fromResponseSchema = common.getValueByPath(fromObject, [\n    'responseSchema',\n  ]);\n  if (fromResponseSchema != null) {\n    common.setValueByPath(\n      toObject,\n      ['responseSchema'],\n      schemaToVertex(apiClient, t.tSchema(apiClient, fromResponseSchema)),\n    );\n  }\n\n  const fromRoutingConfig = common.getValueByPath(fromObject, [\n    'routingConfig',\n  ]);\n  if (fromRoutingConfig != null) {\n    common.setValueByPath(toObject, ['routingConfig'], fromRoutingConfig);\n  }\n\n  const fromModelSelectionConfig = common.getValueByPath(fromObject, [\n    'modelSelectionConfig',\n  ]);\n  if (fromModelSelectionConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['modelConfig'],\n      modelSelectionConfigToVertex(apiClient, fromModelSelectionConfig),\n    );\n  }\n\n  const fromSafetySettings = common.getValueByPath(fromObject, [\n    'safetySettings',\n  ]);\n  if (parentObject !== undefined && fromSafetySettings != null) {\n    let transformedList = fromSafetySettings;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return safetySettingToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(parentObject, ['safetySettings'], transformedList);\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    let transformedList = t.tTools(apiClient, fromTools);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return toolToVertex(apiClient, t.tTool(apiClient, item));\n      });\n    }\n    common.setValueByPath(parentObject, ['tools'], transformedList);\n  }\n\n  const fromToolConfig = common.getValueByPath(fromObject, ['toolConfig']);\n  if (parentObject !== undefined && fromToolConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['toolConfig'],\n      toolConfigToVertex(apiClient, fromToolConfig),\n    );\n  }\n\n  const fromLabels = common.getValueByPath(fromObject, ['labels']);\n  if (parentObject !== undefined && fromLabels != null) {\n    common.setValueByPath(parentObject, ['labels'], fromLabels);\n  }\n\n  const fromCachedContent = common.getValueByPath(fromObject, [\n    'cachedContent',\n  ]);\n  if (parentObject !== undefined && fromCachedContent != null) {\n    common.setValueByPath(\n      parentObject,\n      ['cachedContent'],\n      t.tCachedContentName(apiClient, fromCachedContent),\n    );\n  }\n\n  const fromResponseModalities = common.getValueByPath(fromObject, [\n    'responseModalities',\n  ]);\n  if (fromResponseModalities != null) {\n    common.setValueByPath(\n      toObject,\n      ['responseModalities'],\n      fromResponseModalities,\n    );\n  }\n\n  const fromMediaResolution = common.getValueByPath(fromObject, [\n    'mediaResolution',\n  ]);\n  if (fromMediaResolution != null) {\n    common.setValueByPath(toObject, ['mediaResolution'], fromMediaResolution);\n  }\n\n  const fromSpeechConfig = common.getValueByPath(fromObject, ['speechConfig']);\n  if (fromSpeechConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['speechConfig'],\n      speechConfigToVertex(\n        apiClient,\n        t.tSpeechConfig(apiClient, fromSpeechConfig),\n      ),\n    );\n  }\n\n  const fromAudioTimestamp = common.getValueByPath(fromObject, [\n    'audioTimestamp',\n  ]);\n  if (fromAudioTimestamp != null) {\n    common.setValueByPath(toObject, ['audioTimestamp'], fromAudioTimestamp);\n  }\n\n  const fromThinkingConfig = common.getValueByPath(fromObject, [\n    'thinkingConfig',\n  ]);\n  if (fromThinkingConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['thinkingConfig'],\n      thinkingConfigToVertex(apiClient, fromThinkingConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateContentParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    let transformedList = t.tContents(apiClient, fromContents);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return contentToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['contents'], transformedList);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['generationConfig'],\n      generateContentConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function embedContentConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTaskType = common.getValueByPath(fromObject, ['taskType']);\n  if (parentObject !== undefined && fromTaskType != null) {\n    common.setValueByPath(\n      parentObject,\n      ['instances[]', 'task_type'],\n      fromTaskType,\n    );\n  }\n\n  const fromTitle = common.getValueByPath(fromObject, ['title']);\n  if (parentObject !== undefined && fromTitle != null) {\n    common.setValueByPath(parentObject, ['instances[]', 'title'], fromTitle);\n  }\n\n  const fromOutputDimensionality = common.getValueByPath(fromObject, [\n    'outputDimensionality',\n  ]);\n  if (parentObject !== undefined && fromOutputDimensionality != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputDimensionality'],\n      fromOutputDimensionality,\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (parentObject !== undefined && fromMimeType != null) {\n    common.setValueByPath(\n      parentObject,\n      ['instances[]', 'mimeType'],\n      fromMimeType,\n    );\n  }\n\n  const fromAutoTruncate = common.getValueByPath(fromObject, ['autoTruncate']);\n  if (parentObject !== undefined && fromAutoTruncate != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'autoTruncate'],\n      fromAutoTruncate,\n    );\n  }\n\n  return toObject;\n}\n\nexport function embedContentParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    common.setValueByPath(\n      toObject,\n      ['instances[]', 'content'],\n      t.tContentsForEmbed(apiClient, fromContents),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      embedContentConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateImagesConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateImagesConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromOutputGcsUri = common.getValueByPath(fromObject, ['outputGcsUri']);\n  if (parentObject !== undefined && fromOutputGcsUri != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'storageUri'],\n      fromOutputGcsUri,\n    );\n  }\n\n  const fromNegativePrompt = common.getValueByPath(fromObject, [\n    'negativePrompt',\n  ]);\n  if (parentObject !== undefined && fromNegativePrompt != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'negativePrompt'],\n      fromNegativePrompt,\n    );\n  }\n\n  const fromNumberOfImages = common.getValueByPath(fromObject, [\n    'numberOfImages',\n  ]);\n  if (parentObject !== undefined && fromNumberOfImages != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'sampleCount'],\n      fromNumberOfImages,\n    );\n  }\n\n  const fromAspectRatio = common.getValueByPath(fromObject, ['aspectRatio']);\n  if (parentObject !== undefined && fromAspectRatio != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'aspectRatio'],\n      fromAspectRatio,\n    );\n  }\n\n  const fromGuidanceScale = common.getValueByPath(fromObject, [\n    'guidanceScale',\n  ]);\n  if (parentObject !== undefined && fromGuidanceScale != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'guidanceScale'],\n      fromGuidanceScale,\n    );\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (parentObject !== undefined && fromSeed != null) {\n    common.setValueByPath(parentObject, ['parameters', 'seed'], fromSeed);\n  }\n\n  const fromSafetyFilterLevel = common.getValueByPath(fromObject, [\n    'safetyFilterLevel',\n  ]);\n  if (parentObject !== undefined && fromSafetyFilterLevel != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'safetySetting'],\n      fromSafetyFilterLevel,\n    );\n  }\n\n  const fromPersonGeneration = common.getValueByPath(fromObject, [\n    'personGeneration',\n  ]);\n  if (parentObject !== undefined && fromPersonGeneration != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'personGeneration'],\n      fromPersonGeneration,\n    );\n  }\n\n  const fromIncludeSafetyAttributes = common.getValueByPath(fromObject, [\n    'includeSafetyAttributes',\n  ]);\n  if (parentObject !== undefined && fromIncludeSafetyAttributes != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'includeSafetyAttributes'],\n      fromIncludeSafetyAttributes,\n    );\n  }\n\n  const fromIncludeRaiReason = common.getValueByPath(fromObject, [\n    'includeRaiReason',\n  ]);\n  if (parentObject !== undefined && fromIncludeRaiReason != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'includeRaiReason'],\n      fromIncludeRaiReason,\n    );\n  }\n\n  const fromLanguage = common.getValueByPath(fromObject, ['language']);\n  if (parentObject !== undefined && fromLanguage != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'language'],\n      fromLanguage,\n    );\n  }\n\n  const fromOutputMimeType = common.getValueByPath(fromObject, [\n    'outputMimeType',\n  ]);\n  if (parentObject !== undefined && fromOutputMimeType != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputOptions', 'mimeType'],\n      fromOutputMimeType,\n    );\n  }\n\n  const fromOutputCompressionQuality = common.getValueByPath(fromObject, [\n    'outputCompressionQuality',\n  ]);\n  if (parentObject !== undefined && fromOutputCompressionQuality != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputOptions', 'compressionQuality'],\n      fromOutputCompressionQuality,\n    );\n  }\n\n  const fromAddWatermark = common.getValueByPath(fromObject, ['addWatermark']);\n  if (parentObject !== undefined && fromAddWatermark != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'addWatermark'],\n      fromAddWatermark,\n    );\n  }\n\n  const fromEnhancePrompt = common.getValueByPath(fromObject, [\n    'enhancePrompt',\n  ]);\n  if (parentObject !== undefined && fromEnhancePrompt != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'enhancePrompt'],\n      fromEnhancePrompt,\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateImagesParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateImagesParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromPrompt = common.getValueByPath(fromObject, ['prompt']);\n  if (fromPrompt != null) {\n    common.setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      generateImagesConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function imageToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Image,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGcsUri = common.getValueByPath(fromObject, ['gcsUri']);\n  if (fromGcsUri != null) {\n    common.setValueByPath(toObject, ['gcsUri'], fromGcsUri);\n  }\n\n  const fromImageBytes = common.getValueByPath(fromObject, ['imageBytes']);\n  if (fromImageBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['bytesBase64Encoded'],\n      t.tBytes(apiClient, fromImageBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function maskReferenceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.MaskReferenceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMaskMode = common.getValueByPath(fromObject, ['maskMode']);\n  if (fromMaskMode != null) {\n    common.setValueByPath(toObject, ['maskMode'], fromMaskMode);\n  }\n\n  const fromSegmentationClasses = common.getValueByPath(fromObject, [\n    'segmentationClasses',\n  ]);\n  if (fromSegmentationClasses != null) {\n    common.setValueByPath(toObject, ['maskClasses'], fromSegmentationClasses);\n  }\n\n  const fromMaskDilation = common.getValueByPath(fromObject, ['maskDilation']);\n  if (fromMaskDilation != null) {\n    common.setValueByPath(toObject, ['dilation'], fromMaskDilation);\n  }\n\n  return toObject;\n}\n\nexport function controlReferenceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ControlReferenceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromControlType = common.getValueByPath(fromObject, ['controlType']);\n  if (fromControlType != null) {\n    common.setValueByPath(toObject, ['controlType'], fromControlType);\n  }\n\n  const fromEnableControlImageComputation = common.getValueByPath(fromObject, [\n    'enableControlImageComputation',\n  ]);\n  if (fromEnableControlImageComputation != null) {\n    common.setValueByPath(\n      toObject,\n      ['computeControl'],\n      fromEnableControlImageComputation,\n    );\n  }\n\n  return toObject;\n}\n\nexport function styleReferenceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.StyleReferenceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromStyleDescription = common.getValueByPath(fromObject, [\n    'styleDescription',\n  ]);\n  if (fromStyleDescription != null) {\n    common.setValueByPath(toObject, ['styleDescription'], fromStyleDescription);\n  }\n\n  return toObject;\n}\n\nexport function subjectReferenceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SubjectReferenceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSubjectType = common.getValueByPath(fromObject, ['subjectType']);\n  if (fromSubjectType != null) {\n    common.setValueByPath(toObject, ['subjectType'], fromSubjectType);\n  }\n\n  const fromSubjectDescription = common.getValueByPath(fromObject, [\n    'subjectDescription',\n  ]);\n  if (fromSubjectDescription != null) {\n    common.setValueByPath(\n      toObject,\n      ['subjectDescription'],\n      fromSubjectDescription,\n    );\n  }\n\n  return toObject;\n}\n\nexport function referenceImageAPIInternalToVertex(\n  apiClient: ApiClient,\n  fromObject: _internal_types.ReferenceImageAPIInternal,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromReferenceImage = common.getValueByPath(fromObject, [\n    'referenceImage',\n  ]);\n  if (fromReferenceImage != null) {\n    common.setValueByPath(\n      toObject,\n      ['referenceImage'],\n      imageToVertex(apiClient, fromReferenceImage),\n    );\n  }\n\n  const fromReferenceId = common.getValueByPath(fromObject, ['referenceId']);\n  if (fromReferenceId != null) {\n    common.setValueByPath(toObject, ['referenceId'], fromReferenceId);\n  }\n\n  const fromReferenceType = common.getValueByPath(fromObject, [\n    'referenceType',\n  ]);\n  if (fromReferenceType != null) {\n    common.setValueByPath(toObject, ['referenceType'], fromReferenceType);\n  }\n\n  const fromMaskImageConfig = common.getValueByPath(fromObject, [\n    'maskImageConfig',\n  ]);\n  if (fromMaskImageConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['maskImageConfig'],\n      maskReferenceConfigToVertex(apiClient, fromMaskImageConfig),\n    );\n  }\n\n  const fromControlImageConfig = common.getValueByPath(fromObject, [\n    'controlImageConfig',\n  ]);\n  if (fromControlImageConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['controlImageConfig'],\n      controlReferenceConfigToVertex(apiClient, fromControlImageConfig),\n    );\n  }\n\n  const fromStyleImageConfig = common.getValueByPath(fromObject, [\n    'styleImageConfig',\n  ]);\n  if (fromStyleImageConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['styleImageConfig'],\n      styleReferenceConfigToVertex(apiClient, fromStyleImageConfig),\n    );\n  }\n\n  const fromSubjectImageConfig = common.getValueByPath(fromObject, [\n    'subjectImageConfig',\n  ]);\n  if (fromSubjectImageConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['subjectImageConfig'],\n      subjectReferenceConfigToVertex(apiClient, fromSubjectImageConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function editImageConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.EditImageConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromOutputGcsUri = common.getValueByPath(fromObject, ['outputGcsUri']);\n  if (parentObject !== undefined && fromOutputGcsUri != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'storageUri'],\n      fromOutputGcsUri,\n    );\n  }\n\n  const fromNegativePrompt = common.getValueByPath(fromObject, [\n    'negativePrompt',\n  ]);\n  if (parentObject !== undefined && fromNegativePrompt != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'negativePrompt'],\n      fromNegativePrompt,\n    );\n  }\n\n  const fromNumberOfImages = common.getValueByPath(fromObject, [\n    'numberOfImages',\n  ]);\n  if (parentObject !== undefined && fromNumberOfImages != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'sampleCount'],\n      fromNumberOfImages,\n    );\n  }\n\n  const fromAspectRatio = common.getValueByPath(fromObject, ['aspectRatio']);\n  if (parentObject !== undefined && fromAspectRatio != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'aspectRatio'],\n      fromAspectRatio,\n    );\n  }\n\n  const fromGuidanceScale = common.getValueByPath(fromObject, [\n    'guidanceScale',\n  ]);\n  if (parentObject !== undefined && fromGuidanceScale != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'guidanceScale'],\n      fromGuidanceScale,\n    );\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (parentObject !== undefined && fromSeed != null) {\n    common.setValueByPath(parentObject, ['parameters', 'seed'], fromSeed);\n  }\n\n  const fromSafetyFilterLevel = common.getValueByPath(fromObject, [\n    'safetyFilterLevel',\n  ]);\n  if (parentObject !== undefined && fromSafetyFilterLevel != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'safetySetting'],\n      fromSafetyFilterLevel,\n    );\n  }\n\n  const fromPersonGeneration = common.getValueByPath(fromObject, [\n    'personGeneration',\n  ]);\n  if (parentObject !== undefined && fromPersonGeneration != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'personGeneration'],\n      fromPersonGeneration,\n    );\n  }\n\n  const fromIncludeSafetyAttributes = common.getValueByPath(fromObject, [\n    'includeSafetyAttributes',\n  ]);\n  if (parentObject !== undefined && fromIncludeSafetyAttributes != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'includeSafetyAttributes'],\n      fromIncludeSafetyAttributes,\n    );\n  }\n\n  const fromIncludeRaiReason = common.getValueByPath(fromObject, [\n    'includeRaiReason',\n  ]);\n  if (parentObject !== undefined && fromIncludeRaiReason != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'includeRaiReason'],\n      fromIncludeRaiReason,\n    );\n  }\n\n  const fromLanguage = common.getValueByPath(fromObject, ['language']);\n  if (parentObject !== undefined && fromLanguage != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'language'],\n      fromLanguage,\n    );\n  }\n\n  const fromOutputMimeType = common.getValueByPath(fromObject, [\n    'outputMimeType',\n  ]);\n  if (parentObject !== undefined && fromOutputMimeType != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputOptions', 'mimeType'],\n      fromOutputMimeType,\n    );\n  }\n\n  const fromOutputCompressionQuality = common.getValueByPath(fromObject, [\n    'outputCompressionQuality',\n  ]);\n  if (parentObject !== undefined && fromOutputCompressionQuality != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputOptions', 'compressionQuality'],\n      fromOutputCompressionQuality,\n    );\n  }\n\n  const fromEditMode = common.getValueByPath(fromObject, ['editMode']);\n  if (parentObject !== undefined && fromEditMode != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'editMode'],\n      fromEditMode,\n    );\n  }\n\n  const fromBaseSteps = common.getValueByPath(fromObject, ['baseSteps']);\n  if (parentObject !== undefined && fromBaseSteps != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'editConfig', 'baseSteps'],\n      fromBaseSteps,\n    );\n  }\n\n  return toObject;\n}\n\nexport function editImageParametersInternalToVertex(\n  apiClient: ApiClient,\n  fromObject: _internal_types.EditImageParametersInternal,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromPrompt = common.getValueByPath(fromObject, ['prompt']);\n  if (fromPrompt != null) {\n    common.setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n  }\n\n  const fromReferenceImages = common.getValueByPath(fromObject, [\n    'referenceImages',\n  ]);\n  if (fromReferenceImages != null) {\n    let transformedList = fromReferenceImages;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return referenceImageAPIInternalToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(\n      toObject,\n      ['instances[0]', 'referenceImages'],\n      transformedList,\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      editImageConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function upscaleImageAPIConfigInternalToVertex(\n  apiClient: ApiClient,\n  fromObject: _internal_types.UpscaleImageAPIConfigInternal,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromIncludeRaiReason = common.getValueByPath(fromObject, [\n    'includeRaiReason',\n  ]);\n  if (parentObject !== undefined && fromIncludeRaiReason != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'includeRaiReason'],\n      fromIncludeRaiReason,\n    );\n  }\n\n  const fromOutputMimeType = common.getValueByPath(fromObject, [\n    'outputMimeType',\n  ]);\n  if (parentObject !== undefined && fromOutputMimeType != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputOptions', 'mimeType'],\n      fromOutputMimeType,\n    );\n  }\n\n  const fromOutputCompressionQuality = common.getValueByPath(fromObject, [\n    'outputCompressionQuality',\n  ]);\n  if (parentObject !== undefined && fromOutputCompressionQuality != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputOptions', 'compressionQuality'],\n      fromOutputCompressionQuality,\n    );\n  }\n\n  const fromNumberOfImages = common.getValueByPath(fromObject, [\n    'numberOfImages',\n  ]);\n  if (parentObject !== undefined && fromNumberOfImages != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'sampleCount'],\n      fromNumberOfImages,\n    );\n  }\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (parentObject !== undefined && fromMode != null) {\n    common.setValueByPath(parentObject, ['parameters', 'mode'], fromMode);\n  }\n\n  return toObject;\n}\n\nexport function upscaleImageAPIParametersInternalToVertex(\n  apiClient: ApiClient,\n  fromObject: _internal_types.UpscaleImageAPIParametersInternal,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromImage = common.getValueByPath(fromObject, ['image']);\n  if (fromImage != null) {\n    common.setValueByPath(\n      toObject,\n      ['instances[0]', 'image'],\n      imageToVertex(apiClient, fromImage),\n    );\n  }\n\n  const fromUpscaleFactor = common.getValueByPath(fromObject, [\n    'upscaleFactor',\n  ]);\n  if (fromUpscaleFactor != null) {\n    common.setValueByPath(\n      toObject,\n      ['parameters', 'upscaleConfig', 'upscaleFactor'],\n      fromUpscaleFactor,\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      upscaleImageAPIConfigInternalToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function getModelParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GetModelParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function listModelsConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ListModelsConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPageSize = common.getValueByPath(fromObject, ['pageSize']);\n  if (parentObject !== undefined && fromPageSize != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n  }\n\n  const fromPageToken = common.getValueByPath(fromObject, ['pageToken']);\n  if (parentObject !== undefined && fromPageToken != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n  }\n\n  const fromFilter = common.getValueByPath(fromObject, ['filter']);\n  if (parentObject !== undefined && fromFilter != null) {\n    common.setValueByPath(parentObject, ['_query', 'filter'], fromFilter);\n  }\n\n  const fromQueryBase = common.getValueByPath(fromObject, ['queryBase']);\n  if (parentObject !== undefined && fromQueryBase != null) {\n    common.setValueByPath(\n      parentObject,\n      ['_url', 'models_url'],\n      t.tModelsUrl(apiClient, fromQueryBase),\n    );\n  }\n\n  return toObject;\n}\n\nexport function listModelsParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ListModelsParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      listModelsConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function updateModelConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.UpdateModelConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (parentObject !== undefined && fromDisplayName != null) {\n    common.setValueByPath(parentObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (parentObject !== undefined && fromDescription != null) {\n    common.setValueByPath(parentObject, ['description'], fromDescription);\n  }\n\n  const fromDefaultCheckpointId = common.getValueByPath(fromObject, [\n    'defaultCheckpointId',\n  ]);\n  if (parentObject !== undefined && fromDefaultCheckpointId != null) {\n    common.setValueByPath(\n      parentObject,\n      ['defaultCheckpointId'],\n      fromDefaultCheckpointId,\n    );\n  }\n\n  return toObject;\n}\n\nexport function updateModelParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.UpdateModelParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      updateModelConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function deleteModelParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.DeleteModelParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function countTokensConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.CountTokensConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['systemInstruction'],\n      contentToVertex(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    let transformedList = fromTools;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return toolToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(parentObject, ['tools'], transformedList);\n  }\n\n  const fromGenerationConfig = common.getValueByPath(fromObject, [\n    'generationConfig',\n  ]);\n  if (parentObject !== undefined && fromGenerationConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['generationConfig'],\n      fromGenerationConfig,\n    );\n  }\n\n  return toObject;\n}\n\nexport function countTokensParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.CountTokensParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    let transformedList = t.tContents(apiClient, fromContents);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return contentToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['contents'], transformedList);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      countTokensConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function computeTokensParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ComputeTokensParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    let transformedList = t.tContents(apiClient, fromContents);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return contentToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['contents'], transformedList);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function generateVideosConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNumberOfVideos = common.getValueByPath(fromObject, [\n    'numberOfVideos',\n  ]);\n  if (parentObject !== undefined && fromNumberOfVideos != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'sampleCount'],\n      fromNumberOfVideos,\n    );\n  }\n\n  const fromOutputGcsUri = common.getValueByPath(fromObject, ['outputGcsUri']);\n  if (parentObject !== undefined && fromOutputGcsUri != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'storageUri'],\n      fromOutputGcsUri,\n    );\n  }\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (parentObject !== undefined && fromFps != null) {\n    common.setValueByPath(parentObject, ['parameters', 'fps'], fromFps);\n  }\n\n  const fromDurationSeconds = common.getValueByPath(fromObject, [\n    'durationSeconds',\n  ]);\n  if (parentObject !== undefined && fromDurationSeconds != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'durationSeconds'],\n      fromDurationSeconds,\n    );\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (parentObject !== undefined && fromSeed != null) {\n    common.setValueByPath(parentObject, ['parameters', 'seed'], fromSeed);\n  }\n\n  const fromAspectRatio = common.getValueByPath(fromObject, ['aspectRatio']);\n  if (parentObject !== undefined && fromAspectRatio != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'aspectRatio'],\n      fromAspectRatio,\n    );\n  }\n\n  const fromResolution = common.getValueByPath(fromObject, ['resolution']);\n  if (parentObject !== undefined && fromResolution != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'resolution'],\n      fromResolution,\n    );\n  }\n\n  const fromPersonGeneration = common.getValueByPath(fromObject, [\n    'personGeneration',\n  ]);\n  if (parentObject !== undefined && fromPersonGeneration != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'personGeneration'],\n      fromPersonGeneration,\n    );\n  }\n\n  const fromPubsubTopic = common.getValueByPath(fromObject, ['pubsubTopic']);\n  if (parentObject !== undefined && fromPubsubTopic != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'pubsubTopic'],\n      fromPubsubTopic,\n    );\n  }\n\n  const fromNegativePrompt = common.getValueByPath(fromObject, [\n    'negativePrompt',\n  ]);\n  if (parentObject !== undefined && fromNegativePrompt != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'negativePrompt'],\n      fromNegativePrompt,\n    );\n  }\n\n  const fromEnhancePrompt = common.getValueByPath(fromObject, [\n    'enhancePrompt',\n  ]);\n  if (parentObject !== undefined && fromEnhancePrompt != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'enhancePrompt'],\n      fromEnhancePrompt,\n    );\n  }\n\n  const fromGenerateAudio = common.getValueByPath(fromObject, [\n    'generateAudio',\n  ]);\n  if (parentObject !== undefined && fromGenerateAudio != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'generateAudio'],\n      fromGenerateAudio,\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromPrompt = common.getValueByPath(fromObject, ['prompt']);\n  if (fromPrompt != null) {\n    common.setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n  }\n\n  const fromImage = common.getValueByPath(fromObject, ['image']);\n  if (fromImage != null) {\n    common.setValueByPath(\n      toObject,\n      ['instances[0]', 'image'],\n      imageToVertex(apiClient, fromImage),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      generateVideosConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function videoMetadataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.VideoMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (fromFps != null) {\n    common.setValueByPath(toObject, ['fps'], fromFps);\n  }\n\n  const fromEndOffset = common.getValueByPath(fromObject, ['endOffset']);\n  if (fromEndOffset != null) {\n    common.setValueByPath(toObject, ['endOffset'], fromEndOffset);\n  }\n\n  const fromStartOffset = common.getValueByPath(fromObject, ['startOffset']);\n  if (fromStartOffset != null) {\n    common.setValueByPath(toObject, ['startOffset'], fromStartOffset);\n  }\n\n  return toObject;\n}\n\nexport function blobFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Blob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function fileDataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.FileData,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFileUri = common.getValueByPath(fromObject, ['fileUri']);\n  if (fromFileUri != null) {\n    common.setValueByPath(toObject, ['fileUri'], fromFileUri);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function partFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoMetadata'],\n      videoMetadataFromMldev(apiClient, fromVideoMetadata),\n    );\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(\n      toObject,\n      ['inlineData'],\n      blobFromMldev(apiClient, fromInlineData),\n    );\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(\n      toObject,\n      ['fileData'],\n      fileDataFromMldev(apiClient, fromFileData),\n    );\n  }\n\n  const fromThoughtSignature = common.getValueByPath(fromObject, [\n    'thoughtSignature',\n  ]);\n  if (fromThoughtSignature != null) {\n    common.setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    let transformedList = fromParts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return partFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['parts'], transformedList);\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function citationMetadataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.CitationMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCitations = common.getValueByPath(fromObject, ['citationSources']);\n  if (fromCitations != null) {\n    common.setValueByPath(toObject, ['citations'], fromCitations);\n  }\n\n  return toObject;\n}\n\nexport function urlMetadataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.UrlMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromRetrievedUrl = common.getValueByPath(fromObject, ['retrievedUrl']);\n  if (fromRetrievedUrl != null) {\n    common.setValueByPath(toObject, ['retrievedUrl'], fromRetrievedUrl);\n  }\n\n  const fromUrlRetrievalStatus = common.getValueByPath(fromObject, [\n    'urlRetrievalStatus',\n  ]);\n  if (fromUrlRetrievalStatus != null) {\n    common.setValueByPath(\n      toObject,\n      ['urlRetrievalStatus'],\n      fromUrlRetrievalStatus,\n    );\n  }\n\n  return toObject;\n}\n\nexport function urlContextMetadataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.UrlContextMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromUrlMetadata = common.getValueByPath(fromObject, ['urlMetadata']);\n  if (fromUrlMetadata != null) {\n    let transformedList = fromUrlMetadata;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return urlMetadataFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['urlMetadata'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function candidateFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Candidate,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromContent = common.getValueByPath(fromObject, ['content']);\n  if (fromContent != null) {\n    common.setValueByPath(\n      toObject,\n      ['content'],\n      contentFromMldev(apiClient, fromContent),\n    );\n  }\n\n  const fromCitationMetadata = common.getValueByPath(fromObject, [\n    'citationMetadata',\n  ]);\n  if (fromCitationMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['citationMetadata'],\n      citationMetadataFromMldev(apiClient, fromCitationMetadata),\n    );\n  }\n\n  const fromTokenCount = common.getValueByPath(fromObject, ['tokenCount']);\n  if (fromTokenCount != null) {\n    common.setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n  }\n\n  const fromFinishReason = common.getValueByPath(fromObject, ['finishReason']);\n  if (fromFinishReason != null) {\n    common.setValueByPath(toObject, ['finishReason'], fromFinishReason);\n  }\n\n  const fromUrlContextMetadata = common.getValueByPath(fromObject, [\n    'urlContextMetadata',\n  ]);\n  if (fromUrlContextMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['urlContextMetadata'],\n      urlContextMetadataFromMldev(apiClient, fromUrlContextMetadata),\n    );\n  }\n\n  const fromAvgLogprobs = common.getValueByPath(fromObject, ['avgLogprobs']);\n  if (fromAvgLogprobs != null) {\n    common.setValueByPath(toObject, ['avgLogprobs'], fromAvgLogprobs);\n  }\n\n  const fromGroundingMetadata = common.getValueByPath(fromObject, [\n    'groundingMetadata',\n  ]);\n  if (fromGroundingMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['groundingMetadata'],\n      fromGroundingMetadata,\n    );\n  }\n\n  const fromIndex = common.getValueByPath(fromObject, ['index']);\n  if (fromIndex != null) {\n    common.setValueByPath(toObject, ['index'], fromIndex);\n  }\n\n  const fromLogprobsResult = common.getValueByPath(fromObject, [\n    'logprobsResult',\n  ]);\n  if (fromLogprobsResult != null) {\n    common.setValueByPath(toObject, ['logprobsResult'], fromLogprobsResult);\n  }\n\n  const fromSafetyRatings = common.getValueByPath(fromObject, [\n    'safetyRatings',\n  ]);\n  if (fromSafetyRatings != null) {\n    common.setValueByPath(toObject, ['safetyRatings'], fromSafetyRatings);\n  }\n\n  return toObject;\n}\n\nexport function generateContentResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateContentResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCandidates = common.getValueByPath(fromObject, ['candidates']);\n  if (fromCandidates != null) {\n    let transformedList = fromCandidates;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return candidateFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['candidates'], transformedList);\n  }\n\n  const fromModelVersion = common.getValueByPath(fromObject, ['modelVersion']);\n  if (fromModelVersion != null) {\n    common.setValueByPath(toObject, ['modelVersion'], fromModelVersion);\n  }\n\n  const fromPromptFeedback = common.getValueByPath(fromObject, [\n    'promptFeedback',\n  ]);\n  if (fromPromptFeedback != null) {\n    common.setValueByPath(toObject, ['promptFeedback'], fromPromptFeedback);\n  }\n\n  const fromUsageMetadata = common.getValueByPath(fromObject, [\n    'usageMetadata',\n  ]);\n  if (fromUsageMetadata != null) {\n    common.setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n  }\n\n  return toObject;\n}\n\nexport function contentEmbeddingStatisticsFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function contentEmbeddingFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.ContentEmbedding,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromValues = common.getValueByPath(fromObject, ['values']);\n  if (fromValues != null) {\n    common.setValueByPath(toObject, ['values'], fromValues);\n  }\n\n  return toObject;\n}\n\nexport function embedContentMetadataFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function embedContentResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromEmbeddings = common.getValueByPath(fromObject, ['embeddings']);\n  if (fromEmbeddings != null) {\n    let transformedList = fromEmbeddings;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return contentEmbeddingFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['embeddings'], transformedList);\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['metadata'],\n      embedContentMetadataFromMldev(),\n    );\n  }\n\n  return toObject;\n}\n\nexport function imageFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Image,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromImageBytes = common.getValueByPath(fromObject, [\n    'bytesBase64Encoded',\n  ]);\n  if (fromImageBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['imageBytes'],\n      t.tBytes(apiClient, fromImageBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function safetyAttributesFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.SafetyAttributes,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCategories = common.getValueByPath(fromObject, [\n    'safetyAttributes',\n    'categories',\n  ]);\n  if (fromCategories != null) {\n    common.setValueByPath(toObject, ['categories'], fromCategories);\n  }\n\n  const fromScores = common.getValueByPath(fromObject, [\n    'safetyAttributes',\n    'scores',\n  ]);\n  if (fromScores != null) {\n    common.setValueByPath(toObject, ['scores'], fromScores);\n  }\n\n  const fromContentType = common.getValueByPath(fromObject, ['contentType']);\n  if (fromContentType != null) {\n    common.setValueByPath(toObject, ['contentType'], fromContentType);\n  }\n\n  return toObject;\n}\n\nexport function generatedImageFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GeneratedImage,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromImage = common.getValueByPath(fromObject, ['_self']);\n  if (fromImage != null) {\n    common.setValueByPath(\n      toObject,\n      ['image'],\n      imageFromMldev(apiClient, fromImage),\n    );\n  }\n\n  const fromRaiFilteredReason = common.getValueByPath(fromObject, [\n    'raiFilteredReason',\n  ]);\n  if (fromRaiFilteredReason != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiFilteredReason'],\n      fromRaiFilteredReason,\n    );\n  }\n\n  const fromSafetyAttributes = common.getValueByPath(fromObject, ['_self']);\n  if (fromSafetyAttributes != null) {\n    common.setValueByPath(\n      toObject,\n      ['safetyAttributes'],\n      safetyAttributesFromMldev(apiClient, fromSafetyAttributes),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateImagesResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateImagesResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedImages = common.getValueByPath(fromObject, [\n    'predictions',\n  ]);\n  if (fromGeneratedImages != null) {\n    let transformedList = fromGeneratedImages;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return generatedImageFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['generatedImages'], transformedList);\n  }\n\n  const fromPositivePromptSafetyAttributes = common.getValueByPath(fromObject, [\n    'positivePromptSafetyAttributes',\n  ]);\n  if (fromPositivePromptSafetyAttributes != null) {\n    common.setValueByPath(\n      toObject,\n      ['positivePromptSafetyAttributes'],\n      safetyAttributesFromMldev(apiClient, fromPositivePromptSafetyAttributes),\n    );\n  }\n\n  return toObject;\n}\n\nexport function endpointFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function tunedModelInfoFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.TunedModelInfo,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromBaseModel = common.getValueByPath(fromObject, ['baseModel']);\n  if (fromBaseModel != null) {\n    common.setValueByPath(toObject, ['baseModel'], fromBaseModel);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  return toObject;\n}\n\nexport function checkpointFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function modelFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Model,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromVersion = common.getValueByPath(fromObject, ['version']);\n  if (fromVersion != null) {\n    common.setValueByPath(toObject, ['version'], fromVersion);\n  }\n\n  const fromTunedModelInfo = common.getValueByPath(fromObject, ['_self']);\n  if (fromTunedModelInfo != null) {\n    common.setValueByPath(\n      toObject,\n      ['tunedModelInfo'],\n      tunedModelInfoFromMldev(apiClient, fromTunedModelInfo),\n    );\n  }\n\n  const fromInputTokenLimit = common.getValueByPath(fromObject, [\n    'inputTokenLimit',\n  ]);\n  if (fromInputTokenLimit != null) {\n    common.setValueByPath(toObject, ['inputTokenLimit'], fromInputTokenLimit);\n  }\n\n  const fromOutputTokenLimit = common.getValueByPath(fromObject, [\n    'outputTokenLimit',\n  ]);\n  if (fromOutputTokenLimit != null) {\n    common.setValueByPath(toObject, ['outputTokenLimit'], fromOutputTokenLimit);\n  }\n\n  const fromSupportedActions = common.getValueByPath(fromObject, [\n    'supportedGenerationMethods',\n  ]);\n  if (fromSupportedActions != null) {\n    common.setValueByPath(toObject, ['supportedActions'], fromSupportedActions);\n  }\n\n  return toObject;\n}\n\nexport function listModelsResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListModelsResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNextPageToken = common.getValueByPath(fromObject, [\n    'nextPageToken',\n  ]);\n  if (fromNextPageToken != null) {\n    common.setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n  }\n\n  const fromModels = common.getValueByPath(fromObject, ['_self']);\n  if (fromModels != null) {\n    let transformedList = t.tExtractModels(apiClient, fromModels);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return modelFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['models'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function deleteModelResponseFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function countTokensResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.CountTokensResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTotalTokens = common.getValueByPath(fromObject, ['totalTokens']);\n  if (fromTotalTokens != null) {\n    common.setValueByPath(toObject, ['totalTokens'], fromTotalTokens);\n  }\n\n  const fromCachedContentTokenCount = common.getValueByPath(fromObject, [\n    'cachedContentTokenCount',\n  ]);\n  if (fromCachedContentTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['cachedContentTokenCount'],\n      fromCachedContentTokenCount,\n    );\n  }\n\n  return toObject;\n}\n\nexport function videoFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Video,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromUri = common.getValueByPath(fromObject, ['video', 'uri']);\n  if (fromUri != null) {\n    common.setValueByPath(toObject, ['uri'], fromUri);\n  }\n\n  const fromVideoBytes = common.getValueByPath(fromObject, [\n    'video',\n    'encodedVideo',\n  ]);\n  if (fromVideoBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoBytes'],\n      t.tBytes(apiClient, fromVideoBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['encoding']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function generatedVideoFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GeneratedVideo,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideo = common.getValueByPath(fromObject, ['_self']);\n  if (fromVideo != null) {\n    common.setValueByPath(\n      toObject,\n      ['video'],\n      videoFromMldev(apiClient, fromVideo),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedVideos = common.getValueByPath(fromObject, [\n    'generatedSamples',\n  ]);\n  if (fromGeneratedVideos != null) {\n    let transformedList = fromGeneratedVideos;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return generatedVideoFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['generatedVideos'], transformedList);\n  }\n\n  const fromRaiMediaFilteredCount = common.getValueByPath(fromObject, [\n    'raiMediaFilteredCount',\n  ]);\n  if (fromRaiMediaFilteredCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredCount'],\n      fromRaiMediaFilteredCount,\n    );\n  }\n\n  const fromRaiMediaFilteredReasons = common.getValueByPath(fromObject, [\n    'raiMediaFilteredReasons',\n  ]);\n  if (fromRaiMediaFilteredReasons != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredReasons'],\n      fromRaiMediaFilteredReasons,\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosOperationFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosOperation,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(toObject, ['metadata'], fromMetadata);\n  }\n\n  const fromDone = common.getValueByPath(fromObject, ['done']);\n  if (fromDone != null) {\n    common.setValueByPath(toObject, ['done'], fromDone);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(toObject, ['error'], fromError);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, [\n    'response',\n    'generateVideoResponse',\n  ]);\n  if (fromResponse != null) {\n    common.setValueByPath(\n      toObject,\n      ['response'],\n      generateVideosResponseFromMldev(apiClient, fromResponse),\n    );\n  }\n\n  return toObject;\n}\n\nexport function videoMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.VideoMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (fromFps != null) {\n    common.setValueByPath(toObject, ['fps'], fromFps);\n  }\n\n  const fromEndOffset = common.getValueByPath(fromObject, ['endOffset']);\n  if (fromEndOffset != null) {\n    common.setValueByPath(toObject, ['endOffset'], fromEndOffset);\n  }\n\n  const fromStartOffset = common.getValueByPath(fromObject, ['startOffset']);\n  if (fromStartOffset != null) {\n    common.setValueByPath(toObject, ['startOffset'], fromStartOffset);\n  }\n\n  return toObject;\n}\n\nexport function blobFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Blob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function fileDataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.FileData,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromFileUri = common.getValueByPath(fromObject, ['fileUri']);\n  if (fromFileUri != null) {\n    common.setValueByPath(toObject, ['fileUri'], fromFileUri);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function partFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoMetadata'],\n      videoMetadataFromVertex(apiClient, fromVideoMetadata),\n    );\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(\n      toObject,\n      ['inlineData'],\n      blobFromVertex(apiClient, fromInlineData),\n    );\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(\n      toObject,\n      ['fileData'],\n      fileDataFromVertex(apiClient, fromFileData),\n    );\n  }\n\n  const fromThoughtSignature = common.getValueByPath(fromObject, [\n    'thoughtSignature',\n  ]);\n  if (fromThoughtSignature != null) {\n    common.setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    let transformedList = fromParts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return partFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['parts'], transformedList);\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function citationMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.CitationMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCitations = common.getValueByPath(fromObject, ['citations']);\n  if (fromCitations != null) {\n    common.setValueByPath(toObject, ['citations'], fromCitations);\n  }\n\n  return toObject;\n}\n\nexport function urlMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.UrlMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromRetrievedUrl = common.getValueByPath(fromObject, ['retrievedUrl']);\n  if (fromRetrievedUrl != null) {\n    common.setValueByPath(toObject, ['retrievedUrl'], fromRetrievedUrl);\n  }\n\n  const fromUrlRetrievalStatus = common.getValueByPath(fromObject, [\n    'urlRetrievalStatus',\n  ]);\n  if (fromUrlRetrievalStatus != null) {\n    common.setValueByPath(\n      toObject,\n      ['urlRetrievalStatus'],\n      fromUrlRetrievalStatus,\n    );\n  }\n\n  return toObject;\n}\n\nexport function urlContextMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.UrlContextMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromUrlMetadata = common.getValueByPath(fromObject, ['urlMetadata']);\n  if (fromUrlMetadata != null) {\n    let transformedList = fromUrlMetadata;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return urlMetadataFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['urlMetadata'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function candidateFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Candidate,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromContent = common.getValueByPath(fromObject, ['content']);\n  if (fromContent != null) {\n    common.setValueByPath(\n      toObject,\n      ['content'],\n      contentFromVertex(apiClient, fromContent),\n    );\n  }\n\n  const fromCitationMetadata = common.getValueByPath(fromObject, [\n    'citationMetadata',\n  ]);\n  if (fromCitationMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['citationMetadata'],\n      citationMetadataFromVertex(apiClient, fromCitationMetadata),\n    );\n  }\n\n  const fromFinishMessage = common.getValueByPath(fromObject, [\n    'finishMessage',\n  ]);\n  if (fromFinishMessage != null) {\n    common.setValueByPath(toObject, ['finishMessage'], fromFinishMessage);\n  }\n\n  const fromFinishReason = common.getValueByPath(fromObject, ['finishReason']);\n  if (fromFinishReason != null) {\n    common.setValueByPath(toObject, ['finishReason'], fromFinishReason);\n  }\n\n  const fromUrlContextMetadata = common.getValueByPath(fromObject, [\n    'urlContextMetadata',\n  ]);\n  if (fromUrlContextMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['urlContextMetadata'],\n      urlContextMetadataFromVertex(apiClient, fromUrlContextMetadata),\n    );\n  }\n\n  const fromAvgLogprobs = common.getValueByPath(fromObject, ['avgLogprobs']);\n  if (fromAvgLogprobs != null) {\n    common.setValueByPath(toObject, ['avgLogprobs'], fromAvgLogprobs);\n  }\n\n  const fromGroundingMetadata = common.getValueByPath(fromObject, [\n    'groundingMetadata',\n  ]);\n  if (fromGroundingMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['groundingMetadata'],\n      fromGroundingMetadata,\n    );\n  }\n\n  const fromIndex = common.getValueByPath(fromObject, ['index']);\n  if (fromIndex != null) {\n    common.setValueByPath(toObject, ['index'], fromIndex);\n  }\n\n  const fromLogprobsResult = common.getValueByPath(fromObject, [\n    'logprobsResult',\n  ]);\n  if (fromLogprobsResult != null) {\n    common.setValueByPath(toObject, ['logprobsResult'], fromLogprobsResult);\n  }\n\n  const fromSafetyRatings = common.getValueByPath(fromObject, [\n    'safetyRatings',\n  ]);\n  if (fromSafetyRatings != null) {\n    common.setValueByPath(toObject, ['safetyRatings'], fromSafetyRatings);\n  }\n\n  return toObject;\n}\n\nexport function generateContentResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateContentResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCandidates = common.getValueByPath(fromObject, ['candidates']);\n  if (fromCandidates != null) {\n    let transformedList = fromCandidates;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return candidateFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['candidates'], transformedList);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromResponseId = common.getValueByPath(fromObject, ['responseId']);\n  if (fromResponseId != null) {\n    common.setValueByPath(toObject, ['responseId'], fromResponseId);\n  }\n\n  const fromModelVersion = common.getValueByPath(fromObject, ['modelVersion']);\n  if (fromModelVersion != null) {\n    common.setValueByPath(toObject, ['modelVersion'], fromModelVersion);\n  }\n\n  const fromPromptFeedback = common.getValueByPath(fromObject, [\n    'promptFeedback',\n  ]);\n  if (fromPromptFeedback != null) {\n    common.setValueByPath(toObject, ['promptFeedback'], fromPromptFeedback);\n  }\n\n  const fromUsageMetadata = common.getValueByPath(fromObject, [\n    'usageMetadata',\n  ]);\n  if (fromUsageMetadata != null) {\n    common.setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n  }\n\n  return toObject;\n}\n\nexport function contentEmbeddingStatisticsFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.ContentEmbeddingStatistics,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTruncated = common.getValueByPath(fromObject, ['truncated']);\n  if (fromTruncated != null) {\n    common.setValueByPath(toObject, ['truncated'], fromTruncated);\n  }\n\n  const fromTokenCount = common.getValueByPath(fromObject, ['token_count']);\n  if (fromTokenCount != null) {\n    common.setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n  }\n\n  return toObject;\n}\n\nexport function contentEmbeddingFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.ContentEmbedding,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromValues = common.getValueByPath(fromObject, ['values']);\n  if (fromValues != null) {\n    common.setValueByPath(toObject, ['values'], fromValues);\n  }\n\n  const fromStatistics = common.getValueByPath(fromObject, ['statistics']);\n  if (fromStatistics != null) {\n    common.setValueByPath(\n      toObject,\n      ['statistics'],\n      contentEmbeddingStatisticsFromVertex(apiClient, fromStatistics),\n    );\n  }\n\n  return toObject;\n}\n\nexport function embedContentMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromBillableCharacterCount = common.getValueByPath(fromObject, [\n    'billableCharacterCount',\n  ]);\n  if (fromBillableCharacterCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['billableCharacterCount'],\n      fromBillableCharacterCount,\n    );\n  }\n\n  return toObject;\n}\n\nexport function embedContentResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromEmbeddings = common.getValueByPath(fromObject, [\n    'predictions[]',\n    'embeddings',\n  ]);\n  if (fromEmbeddings != null) {\n    let transformedList = fromEmbeddings;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return contentEmbeddingFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['embeddings'], transformedList);\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['metadata'],\n      embedContentMetadataFromVertex(apiClient, fromMetadata),\n    );\n  }\n\n  return toObject;\n}\n\nexport function imageFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Image,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGcsUri = common.getValueByPath(fromObject, ['gcsUri']);\n  if (fromGcsUri != null) {\n    common.setValueByPath(toObject, ['gcsUri'], fromGcsUri);\n  }\n\n  const fromImageBytes = common.getValueByPath(fromObject, [\n    'bytesBase64Encoded',\n  ]);\n  if (fromImageBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['imageBytes'],\n      t.tBytes(apiClient, fromImageBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function safetyAttributesFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.SafetyAttributes,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCategories = common.getValueByPath(fromObject, [\n    'safetyAttributes',\n    'categories',\n  ]);\n  if (fromCategories != null) {\n    common.setValueByPath(toObject, ['categories'], fromCategories);\n  }\n\n  const fromScores = common.getValueByPath(fromObject, [\n    'safetyAttributes',\n    'scores',\n  ]);\n  if (fromScores != null) {\n    common.setValueByPath(toObject, ['scores'], fromScores);\n  }\n\n  const fromContentType = common.getValueByPath(fromObject, ['contentType']);\n  if (fromContentType != null) {\n    common.setValueByPath(toObject, ['contentType'], fromContentType);\n  }\n\n  return toObject;\n}\n\nexport function generatedImageFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GeneratedImage,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromImage = common.getValueByPath(fromObject, ['_self']);\n  if (fromImage != null) {\n    common.setValueByPath(\n      toObject,\n      ['image'],\n      imageFromVertex(apiClient, fromImage),\n    );\n  }\n\n  const fromRaiFilteredReason = common.getValueByPath(fromObject, [\n    'raiFilteredReason',\n  ]);\n  if (fromRaiFilteredReason != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiFilteredReason'],\n      fromRaiFilteredReason,\n    );\n  }\n\n  const fromSafetyAttributes = common.getValueByPath(fromObject, ['_self']);\n  if (fromSafetyAttributes != null) {\n    common.setValueByPath(\n      toObject,\n      ['safetyAttributes'],\n      safetyAttributesFromVertex(apiClient, fromSafetyAttributes),\n    );\n  }\n\n  const fromEnhancedPrompt = common.getValueByPath(fromObject, ['prompt']);\n  if (fromEnhancedPrompt != null) {\n    common.setValueByPath(toObject, ['enhancedPrompt'], fromEnhancedPrompt);\n  }\n\n  return toObject;\n}\n\nexport function generateImagesResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateImagesResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedImages = common.getValueByPath(fromObject, [\n    'predictions',\n  ]);\n  if (fromGeneratedImages != null) {\n    let transformedList = fromGeneratedImages;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return generatedImageFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['generatedImages'], transformedList);\n  }\n\n  const fromPositivePromptSafetyAttributes = common.getValueByPath(fromObject, [\n    'positivePromptSafetyAttributes',\n  ]);\n  if (fromPositivePromptSafetyAttributes != null) {\n    common.setValueByPath(\n      toObject,\n      ['positivePromptSafetyAttributes'],\n      safetyAttributesFromVertex(apiClient, fromPositivePromptSafetyAttributes),\n    );\n  }\n\n  return toObject;\n}\n\nexport function editImageResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.EditImageResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedImages = common.getValueByPath(fromObject, [\n    'predictions',\n  ]);\n  if (fromGeneratedImages != null) {\n    let transformedList = fromGeneratedImages;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return generatedImageFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['generatedImages'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function upscaleImageResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.UpscaleImageResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedImages = common.getValueByPath(fromObject, [\n    'predictions',\n  ]);\n  if (fromGeneratedImages != null) {\n    let transformedList = fromGeneratedImages;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return generatedImageFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['generatedImages'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function endpointFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Endpoint,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['endpoint']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDeployedModelId = common.getValueByPath(fromObject, [\n    'deployedModelId',\n  ]);\n  if (fromDeployedModelId != null) {\n    common.setValueByPath(toObject, ['deployedModelId'], fromDeployedModelId);\n  }\n\n  return toObject;\n}\n\nexport function tunedModelInfoFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.TunedModelInfo,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromBaseModel = common.getValueByPath(fromObject, [\n    'labels',\n    'google-vertex-llm-tuning-base-model-id',\n  ]);\n  if (fromBaseModel != null) {\n    common.setValueByPath(toObject, ['baseModel'], fromBaseModel);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  return toObject;\n}\n\nexport function checkpointFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Checkpoint,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCheckpointId = common.getValueByPath(fromObject, ['checkpointId']);\n  if (fromCheckpointId != null) {\n    common.setValueByPath(toObject, ['checkpointId'], fromCheckpointId);\n  }\n\n  const fromEpoch = common.getValueByPath(fromObject, ['epoch']);\n  if (fromEpoch != null) {\n    common.setValueByPath(toObject, ['epoch'], fromEpoch);\n  }\n\n  const fromStep = common.getValueByPath(fromObject, ['step']);\n  if (fromStep != null) {\n    common.setValueByPath(toObject, ['step'], fromStep);\n  }\n\n  return toObject;\n}\n\nexport function modelFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Model,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromVersion = common.getValueByPath(fromObject, ['versionId']);\n  if (fromVersion != null) {\n    common.setValueByPath(toObject, ['version'], fromVersion);\n  }\n\n  const fromEndpoints = common.getValueByPath(fromObject, ['deployedModels']);\n  if (fromEndpoints != null) {\n    let transformedList = fromEndpoints;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return endpointFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['endpoints'], transformedList);\n  }\n\n  const fromLabels = common.getValueByPath(fromObject, ['labels']);\n  if (fromLabels != null) {\n    common.setValueByPath(toObject, ['labels'], fromLabels);\n  }\n\n  const fromTunedModelInfo = common.getValueByPath(fromObject, ['_self']);\n  if (fromTunedModelInfo != null) {\n    common.setValueByPath(\n      toObject,\n      ['tunedModelInfo'],\n      tunedModelInfoFromVertex(apiClient, fromTunedModelInfo),\n    );\n  }\n\n  const fromDefaultCheckpointId = common.getValueByPath(fromObject, [\n    'defaultCheckpointId',\n  ]);\n  if (fromDefaultCheckpointId != null) {\n    common.setValueByPath(\n      toObject,\n      ['defaultCheckpointId'],\n      fromDefaultCheckpointId,\n    );\n  }\n\n  const fromCheckpoints = common.getValueByPath(fromObject, ['checkpoints']);\n  if (fromCheckpoints != null) {\n    let transformedList = fromCheckpoints;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return checkpointFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['checkpoints'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function listModelsResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.ListModelsResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNextPageToken = common.getValueByPath(fromObject, [\n    'nextPageToken',\n  ]);\n  if (fromNextPageToken != null) {\n    common.setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n  }\n\n  const fromModels = common.getValueByPath(fromObject, ['_self']);\n  if (fromModels != null) {\n    let transformedList = t.tExtractModels(apiClient, fromModels);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return modelFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['models'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function deleteModelResponseFromVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function countTokensResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.CountTokensResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTotalTokens = common.getValueByPath(fromObject, ['totalTokens']);\n  if (fromTotalTokens != null) {\n    common.setValueByPath(toObject, ['totalTokens'], fromTotalTokens);\n  }\n\n  return toObject;\n}\n\nexport function computeTokensResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.ComputeTokensResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTokensInfo = common.getValueByPath(fromObject, ['tokensInfo']);\n  if (fromTokensInfo != null) {\n    common.setValueByPath(toObject, ['tokensInfo'], fromTokensInfo);\n  }\n\n  return toObject;\n}\n\nexport function videoFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Video,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromUri = common.getValueByPath(fromObject, ['gcsUri']);\n  if (fromUri != null) {\n    common.setValueByPath(toObject, ['uri'], fromUri);\n  }\n\n  const fromVideoBytes = common.getValueByPath(fromObject, [\n    'bytesBase64Encoded',\n  ]);\n  if (fromVideoBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoBytes'],\n      t.tBytes(apiClient, fromVideoBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function generatedVideoFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GeneratedVideo,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideo = common.getValueByPath(fromObject, ['_self']);\n  if (fromVideo != null) {\n    common.setValueByPath(\n      toObject,\n      ['video'],\n      videoFromVertex(apiClient, fromVideo),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedVideos = common.getValueByPath(fromObject, ['videos']);\n  if (fromGeneratedVideos != null) {\n    let transformedList = fromGeneratedVideos;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return generatedVideoFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['generatedVideos'], transformedList);\n  }\n\n  const fromRaiMediaFilteredCount = common.getValueByPath(fromObject, [\n    'raiMediaFilteredCount',\n  ]);\n  if (fromRaiMediaFilteredCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredCount'],\n      fromRaiMediaFilteredCount,\n    );\n  }\n\n  const fromRaiMediaFilteredReasons = common.getValueByPath(fromObject, [\n    'raiMediaFilteredReasons',\n  ]);\n  if (fromRaiMediaFilteredReasons != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredReasons'],\n      fromRaiMediaFilteredReasons,\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosOperationFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosOperation,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(toObject, ['metadata'], fromMetadata);\n  }\n\n  const fromDone = common.getValueByPath(fromObject, ['done']);\n  if (fromDone != null) {\n    common.setValueByPath(toObject, ['done'], fromDone);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(toObject, ['error'], fromError);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(\n      toObject,\n      ['response'],\n      generateVideosResponseFromVertex(apiClient, fromResponse),\n    );\n  }\n\n  return toObject;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Auth} from './_auth.js';\nimport * as common from './_common.js';\nimport {Downloader} from './_downloader.js';\nimport {Uploader} from './_uploader.js';\nimport {\n  DownloadFileParameters,\n  File,\n  HttpOptions,\n  HttpResponse,\n  UploadFileConfig,\n} from './types.js';\n\nconst CONTENT_TYPE_HEADER = 'Content-Type';\nconst SERVER_TIMEOUT_HEADER = 'X-Server-Timeout';\nconst USER_AGENT_HEADER = 'User-Agent';\nexport const GOOGLE_API_CLIENT_HEADER = 'x-goog-api-client';\nexport const SDK_VERSION = '1.4.0'; // x-release-please-version\nconst LIBRARY_LABEL = `google-genai-sdk/${SDK_VERSION}`;\nconst VERTEX_AI_API_DEFAULT_VERSION = 'v1beta1';\nconst GOOGLE_AI_API_DEFAULT_VERSION = 'v1beta';\nconst responseLineRE = /^data: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n\n/**\n * Client errors raised by the GenAI API.\n */\nexport class ClientError extends Error {\n  constructor(message: string, stackTrace?: string) {\n    if (stackTrace) {\n      super(message, {cause: stackTrace});\n    } else {\n      super(message, {cause: new Error().stack});\n    }\n    this.message = message;\n    this.name = 'ClientError';\n  }\n}\n\n/**\n * Server errors raised by the GenAI API.\n */\nexport class ServerError extends Error {\n  constructor(message: string, stackTrace?: string) {\n    if (stackTrace) {\n      super(message, {cause: stackTrace});\n    } else {\n      super(message, {cause: new Error().stack});\n    }\n    this.message = message;\n    this.name = 'ServerError';\n  }\n}\n\n/**\n * Options for initializing the ApiClient. The ApiClient uses the parameters\n * for authentication purposes as well as to infer if SDK should send the\n * request to Vertex AI or Gemini API.\n */\nexport interface ApiClientInitOptions {\n  /**\n   * The object used for adding authentication headers to API requests.\n   */\n  auth: Auth;\n  /**\n   * The uploader to use for uploading files. This field is required for\n   * creating a client, will be set through the Node_client or Web_client.\n   */\n  uploader: Uploader;\n  /**\n   * Optional. The downloader to use for downloading files. This field is\n   * required for creating a client, will be set through the Node_client or\n   * Web_client.\n   */\n  downloader: Downloader;\n  /**\n   * Optional. The Google Cloud project ID for Vertex AI users.\n   * It is not the numeric project name.\n   * If not provided, SDK will try to resolve it from runtime environment.\n   */\n  project?: string;\n  /**\n   * Optional. The Google Cloud project location for Vertex AI users.\n   * If not provided, SDK will try to resolve it from runtime environment.\n   */\n  location?: string;\n  /**\n   * The API Key. This is required for Gemini API users.\n   */\n  apiKey?: string;\n  /**\n   * Optional. Set to true if you intend to call Vertex AI endpoints.\n   * If unset, default SDK behavior is to call Gemini API.\n   */\n  vertexai?: boolean;\n  /**\n   * Optional. The API version for the endpoint.\n   * If unset, SDK will choose a default api version.\n   */\n  apiVersion?: string;\n  /**\n   * Optional. A set of customizable configuration for HTTP requests.\n   */\n  httpOptions?: HttpOptions;\n  /**\n   * Optional. An extra string to append at the end of the User-Agent header.\n   *\n   * This can be used to e.g specify the runtime and its version.\n   */\n  userAgentExtra?: string;\n}\n\n/**\n * Represents the necessary information to send a request to an API endpoint.\n * This interface defines the structure for constructing and executing HTTP\n * requests.\n */\nexport interface HttpRequest {\n  /**\n   * URL path from the modules, this path is appended to the base API URL to\n   * form the complete request URL.\n   *\n   * If you wish to set full URL, use httpOptions.baseUrl instead. Example to\n   * set full URL in the request:\n   *\n   * const request: HttpRequest = {\n   *   path: '',\n   *   httpOptions: {\n   *     baseUrl: 'https://<custom-full-url>',\n   *     apiVersion: '',\n   *   },\n   *   httpMethod: 'GET',\n   * };\n   *\n   * The result URL will be: https://<custom-full-url>\n   *\n   */\n  path: string;\n  /**\n   * Optional query parameters to be appended to the request URL.\n   */\n  queryParams?: Record<string, string>;\n  /**\n   * Optional request body in json string or Blob format, GET request doesn't\n   * need a request body.\n   */\n  body?: string | Blob;\n  /**\n   * The HTTP method to be used for the request.\n   */\n  httpMethod: 'GET' | 'POST' | 'PATCH' | 'DELETE';\n  /**\n   * Optional set of customizable configuration for HTTP requests.\n   */\n  httpOptions?: HttpOptions;\n  /**\n   * Optional abort signal which can be used to cancel the request.\n   */\n  abortSignal?: AbortSignal;\n}\n\n/**\n * The ApiClient class is used to send requests to the Gemini API or Vertex AI\n * endpoints.\n */\nexport class ApiClient {\n  readonly clientOptions: ApiClientInitOptions;\n\n  constructor(opts: ApiClientInitOptions) {\n    this.clientOptions = {\n      ...opts,\n      project: opts.project,\n      location: opts.location,\n      apiKey: opts.apiKey,\n      vertexai: opts.vertexai,\n    };\n\n    const initHttpOptions: HttpOptions = {};\n\n    if (this.clientOptions.vertexai) {\n      initHttpOptions.apiVersion =\n        this.clientOptions.apiVersion ?? VERTEX_AI_API_DEFAULT_VERSION;\n      initHttpOptions.baseUrl = this.baseUrlFromProjectLocation();\n      this.normalizeAuthParameters();\n    } else {\n      // Gemini API\n      initHttpOptions.apiVersion =\n        this.clientOptions.apiVersion ?? GOOGLE_AI_API_DEFAULT_VERSION;\n      initHttpOptions.baseUrl = `https://generativelanguage.googleapis.com/`;\n    }\n\n    initHttpOptions.headers = this.getDefaultHeaders();\n\n    this.clientOptions.httpOptions = initHttpOptions;\n\n    if (opts.httpOptions) {\n      this.clientOptions.httpOptions = this.patchHttpOptions(\n        initHttpOptions,\n        opts.httpOptions,\n      );\n    }\n  }\n\n  /**\n   * Determines the base URL for Vertex AI based on project and location.\n   * Uses the global endpoint if location is 'global' or if project/location\n   * are not specified (implying API key usage).\n   * @private\n   */\n  private baseUrlFromProjectLocation(): string {\n    if (\n      this.clientOptions.project &&\n      this.clientOptions.location &&\n      this.clientOptions.location !== 'global'\n    ) {\n      // Regional endpoint\n      return `https://${this.clientOptions.location}-aiplatform.googleapis.com/`;\n    }\n    // Global endpoint (covers 'global' location and API key usage)\n    return `https://aiplatform.googleapis.com/`;\n  }\n\n  /**\n   * Normalizes authentication parameters for Vertex AI.\n   * If project and location are provided, API key is cleared.\n   * If project and location are not provided (implying API key usage),\n   * project and location are cleared.\n   * @private\n   */\n  private normalizeAuthParameters(): void {\n    if (this.clientOptions.project && this.clientOptions.location) {\n      // Using project/location for auth, clear potential API key\n      this.clientOptions.apiKey = undefined;\n      return;\n    }\n    // Using API key for auth (or no auth provided yet), clear project/location\n    this.clientOptions.project = undefined;\n    this.clientOptions.location = undefined;\n  }\n\n  isVertexAI(): boolean {\n    return this.clientOptions.vertexai ?? false;\n  }\n\n  getProject() {\n    return this.clientOptions.project;\n  }\n\n  getLocation() {\n    return this.clientOptions.location;\n  }\n\n  getApiVersion() {\n    if (\n      this.clientOptions.httpOptions &&\n      this.clientOptions.httpOptions.apiVersion !== undefined\n    ) {\n      return this.clientOptions.httpOptions.apiVersion;\n    }\n    throw new Error('API version is not set.');\n  }\n\n  getBaseUrl() {\n    if (\n      this.clientOptions.httpOptions &&\n      this.clientOptions.httpOptions.baseUrl !== undefined\n    ) {\n      return this.clientOptions.httpOptions.baseUrl;\n    }\n    throw new Error('Base URL is not set.');\n  }\n\n  getRequestUrl() {\n    return this.getRequestUrlInternal(this.clientOptions.httpOptions);\n  }\n\n  getHeaders() {\n    if (\n      this.clientOptions.httpOptions &&\n      this.clientOptions.httpOptions.headers !== undefined\n    ) {\n      return this.clientOptions.httpOptions.headers;\n    } else {\n      throw new Error('Headers are not set.');\n    }\n  }\n\n  private getRequestUrlInternal(httpOptions?: HttpOptions) {\n    if (\n      !httpOptions ||\n      httpOptions.baseUrl === undefined ||\n      httpOptions.apiVersion === undefined\n    ) {\n      throw new Error('HTTP options are not correctly set.');\n    }\n    const baseUrl = httpOptions.baseUrl.endsWith('/')\n      ? httpOptions.baseUrl.slice(0, -1)\n      : httpOptions.baseUrl;\n    const urlElement: Array<string> = [baseUrl];\n    if (httpOptions.apiVersion && httpOptions.apiVersion !== '') {\n      urlElement.push(httpOptions.apiVersion);\n    }\n    return urlElement.join('/');\n  }\n\n  getBaseResourcePath() {\n    return `projects/${this.clientOptions.project}/locations/${\n      this.clientOptions.location\n    }`;\n  }\n\n  getApiKey() {\n    return this.clientOptions.apiKey;\n  }\n\n  getWebsocketBaseUrl() {\n    const baseUrl = this.getBaseUrl();\n    const urlParts = new URL(baseUrl);\n    urlParts.protocol = urlParts.protocol == 'http:' ? 'ws' : 'wss';\n    return urlParts.toString();\n  }\n\n  setBaseUrl(url: string) {\n    if (this.clientOptions.httpOptions) {\n      this.clientOptions.httpOptions.baseUrl = url;\n    } else {\n      throw new Error('HTTP options are not correctly set.');\n    }\n  }\n\n  private constructUrl(\n    path: string,\n    httpOptions: HttpOptions,\n    prependProjectLocation: boolean,\n  ): URL {\n    const urlElement: Array<string> = [this.getRequestUrlInternal(httpOptions)];\n    if (prependProjectLocation) {\n      urlElement.push(this.getBaseResourcePath());\n    }\n    if (path !== '') {\n      urlElement.push(path);\n    }\n    const url = new URL(`${urlElement.join('/')}`);\n\n    return url;\n  }\n\n  private shouldPrependVertexProjectPath(request: HttpRequest): boolean {\n    if (this.clientOptions.apiKey) {\n      return false;\n    }\n    if (!this.clientOptions.vertexai) {\n      return false;\n    }\n    if (request.path.startsWith('projects/')) {\n      // Assume the path already starts with\n      // `projects/<project>/location/<location>`.\n      return false;\n    }\n    if (\n      request.httpMethod === 'GET' &&\n      request.path.startsWith('publishers/google/models')\n    ) {\n      // These paths are used by Vertex's models.get and models.list\n      // calls. For base models Vertex does not accept a project/location\n      // prefix (for tuned model the prefix is required).\n      return false;\n    }\n    return true;\n  }\n\n  async request(request: HttpRequest): Promise<HttpResponse> {\n    let patchedHttpOptions = this.clientOptions.httpOptions!;\n    if (request.httpOptions) {\n      patchedHttpOptions = this.patchHttpOptions(\n        this.clientOptions.httpOptions!,\n        request.httpOptions,\n      );\n    }\n\n    const prependProjectLocation = this.shouldPrependVertexProjectPath(request);\n    const url = this.constructUrl(\n      request.path,\n      patchedHttpOptions,\n      prependProjectLocation,\n    );\n    if (request.queryParams) {\n      for (const [key, value] of Object.entries(request.queryParams)) {\n        url.searchParams.append(key, String(value));\n      }\n    }\n    let requestInit: RequestInit = {};\n    if (request.httpMethod === 'GET') {\n      if (request.body && request.body !== '{}') {\n        throw new Error(\n          'Request body should be empty for GET request, but got non empty request body',\n        );\n      }\n    } else {\n      requestInit.body = request.body;\n    }\n    requestInit = await this.includeExtraHttpOptionsToRequestInit(\n      requestInit,\n      patchedHttpOptions,\n      request.abortSignal,\n    );\n    return this.unaryApiCall(url, requestInit, request.httpMethod);\n  }\n\n  private patchHttpOptions(\n    baseHttpOptions: HttpOptions,\n    requestHttpOptions: HttpOptions,\n  ): HttpOptions {\n    const patchedHttpOptions = JSON.parse(\n      JSON.stringify(baseHttpOptions),\n    ) as HttpOptions;\n\n    for (const [key, value] of Object.entries(requestHttpOptions)) {\n      // Records compile to objects.\n      if (typeof value === 'object') {\n        // @ts-expect-error TS2345TS7053: Element implicitly has an 'any' type\n        // because expression of type 'string' can't be used to index type\n        // 'HttpOptions'.\n        patchedHttpOptions[key] = {...patchedHttpOptions[key], ...value};\n      } else if (value !== undefined) {\n        // @ts-expect-error TS2345TS7053: Element implicitly has an 'any' type\n        // because expression of type 'string' can't be used to index type\n        // 'HttpOptions'.\n        patchedHttpOptions[key] = value;\n      }\n    }\n    return patchedHttpOptions;\n  }\n\n  async requestStream(\n    request: HttpRequest,\n  ): Promise<AsyncGenerator<HttpResponse>> {\n    let patchedHttpOptions = this.clientOptions.httpOptions!;\n    if (request.httpOptions) {\n      patchedHttpOptions = this.patchHttpOptions(\n        this.clientOptions.httpOptions!,\n        request.httpOptions,\n      );\n    }\n\n    const prependProjectLocation = this.shouldPrependVertexProjectPath(request);\n    const url = this.constructUrl(\n      request.path,\n      patchedHttpOptions,\n      prependProjectLocation,\n    );\n    if (!url.searchParams.has('alt') || url.searchParams.get('alt') !== 'sse') {\n      url.searchParams.set('alt', 'sse');\n    }\n    let requestInit: RequestInit = {};\n    requestInit.body = request.body;\n    requestInit = await this.includeExtraHttpOptionsToRequestInit(\n      requestInit,\n      patchedHttpOptions,\n      request.abortSignal,\n    );\n    return this.streamApiCall(url, requestInit, request.httpMethod);\n  }\n\n  private async includeExtraHttpOptionsToRequestInit(\n    requestInit: RequestInit,\n    httpOptions: HttpOptions,\n    abortSignal?: AbortSignal,\n  ): Promise<RequestInit> {\n    if ((httpOptions && httpOptions.timeout) || abortSignal) {\n      const abortController = new AbortController();\n      const signal = abortController.signal;\n      if (httpOptions.timeout && httpOptions?.timeout > 0) {\n        setTimeout(() => abortController.abort(), httpOptions.timeout);\n      }\n      if (abortSignal) {\n        abortSignal.addEventListener('abort', () => {\n          abortController.abort();\n        });\n      }\n      requestInit.signal = signal;\n    }\n    requestInit.headers = await this.getHeadersInternal(httpOptions);\n    return requestInit;\n  }\n\n  private async unaryApiCall(\n    url: URL,\n    requestInit: RequestInit,\n    httpMethod: 'GET' | 'POST' | 'PATCH' | 'DELETE',\n  ): Promise<HttpResponse> {\n    return this.apiCall(url.toString(), {\n      ...requestInit,\n      method: httpMethod,\n    })\n      .then(async (response) => {\n        await throwErrorIfNotOK(response);\n        return new HttpResponse(response);\n      })\n      .catch((e) => {\n        if (e instanceof Error) {\n          throw e;\n        } else {\n          throw new Error(JSON.stringify(e));\n        }\n      });\n  }\n\n  private async streamApiCall(\n    url: URL,\n    requestInit: RequestInit,\n    httpMethod: 'GET' | 'POST' | 'PATCH' | 'DELETE',\n  ): Promise<AsyncGenerator<HttpResponse>> {\n    return this.apiCall(url.toString(), {\n      ...requestInit,\n      method: httpMethod,\n    })\n      .then(async (response) => {\n        await throwErrorIfNotOK(response);\n        return this.processStreamResponse(response);\n      })\n      .catch((e) => {\n        if (e instanceof Error) {\n          throw e;\n        } else {\n          throw new Error(JSON.stringify(e));\n        }\n      });\n  }\n\n  async *processStreamResponse(\n    response: Response,\n  ): AsyncGenerator<HttpResponse> {\n    const reader = response?.body?.getReader();\n    const decoder = new TextDecoder('utf-8');\n    if (!reader) {\n      throw new Error('Response body is empty');\n    }\n\n    try {\n      let buffer = '';\n      while (true) {\n        const {done, value} = await reader.read();\n        if (done) {\n          if (buffer.trim().length > 0) {\n            throw new Error('Incomplete JSON segment at the end');\n          }\n          break;\n        }\n        const chunkString = decoder.decode(value);\n\n        // Parse and throw an error if the chunk contains an error.\n        try {\n          const chunkJson = JSON.parse(chunkString) as Record<string, unknown>;\n          if ('error' in chunkJson) {\n            const errorJson = JSON.parse(\n              JSON.stringify(chunkJson['error']),\n            ) as Record<string, unknown>;\n            const status = errorJson['status'] as string;\n            const code = errorJson['code'] as number;\n            const errorMessage = `got status: ${status}. ${JSON.stringify(\n              chunkJson,\n            )}`;\n            if (code >= 400 && code < 500) {\n              const clientError = new ClientError(errorMessage);\n              throw clientError;\n            } else if (code >= 500 && code < 600) {\n              const serverError = new ServerError(errorMessage);\n              throw serverError;\n            }\n          }\n        } catch (e: unknown) {\n          const error = e as Error;\n          if (error.name === 'ClientError' || error.name === 'ServerError') {\n            throw e;\n          }\n        }\n        buffer += chunkString;\n        let match = buffer.match(responseLineRE);\n        while (match) {\n          const processedChunkString = match[1];\n          try {\n            const partialResponse = new Response(processedChunkString, {\n              headers: response?.headers,\n              status: response?.status,\n              statusText: response?.statusText,\n            });\n            yield new HttpResponse(partialResponse);\n            buffer = buffer.slice(match[0].length);\n            match = buffer.match(responseLineRE);\n          } catch (e) {\n            throw new Error(\n              `exception parsing stream chunk ${processedChunkString}. ${e}`,\n            );\n          }\n        }\n      }\n    } finally {\n      reader.releaseLock();\n    }\n  }\n  private async apiCall(\n    url: string,\n    requestInit: RequestInit,\n  ): Promise<Response> {\n    return fetch(url, requestInit).catch((e) => {\n      throw new Error(`exception ${e} sending request`);\n    });\n  }\n\n  getDefaultHeaders(): Record<string, string> {\n    const headers: Record<string, string> = {};\n\n    const versionHeaderValue =\n      LIBRARY_LABEL + ' ' + this.clientOptions.userAgentExtra;\n\n    headers[USER_AGENT_HEADER] = versionHeaderValue;\n    headers[GOOGLE_API_CLIENT_HEADER] = versionHeaderValue;\n    headers[CONTENT_TYPE_HEADER] = 'application/json';\n\n    return headers;\n  }\n\n  private async getHeadersInternal(\n    httpOptions: HttpOptions | undefined,\n  ): Promise<Headers> {\n    const headers = new Headers();\n    if (httpOptions && httpOptions.headers) {\n      for (const [key, value] of Object.entries(httpOptions.headers)) {\n        headers.append(key, value);\n      }\n      // Append a timeout header if it is set, note that the timeout option is\n      // in milliseconds but the header is in seconds.\n      if (httpOptions.timeout && httpOptions.timeout > 0) {\n        headers.append(\n          SERVER_TIMEOUT_HEADER,\n          String(Math.ceil(httpOptions.timeout / 1000)),\n        );\n      }\n    }\n    await this.clientOptions.auth.addAuthHeaders(headers);\n    return headers;\n  }\n\n  /**\n   * Uploads a file asynchronously using Gemini API only, this is not supported\n   * in Vertex AI.\n   *\n   * @param file The string path to the file to be uploaded or a Blob object.\n   * @param config Optional parameters specified in the `UploadFileConfig`\n   *     interface. @see {@link UploadFileConfig}\n   * @return A promise that resolves to a `File` object.\n   * @throws An error if called on a Vertex AI client.\n   * @throws An error if the `mimeType` is not provided and can not be inferred,\n   */\n  async uploadFile(\n    file: string | Blob,\n    config?: UploadFileConfig,\n  ): Promise<File> {\n    const fileToUpload: File = {};\n    if (config != null) {\n      fileToUpload.mimeType = config.mimeType;\n      fileToUpload.name = config.name;\n      fileToUpload.displayName = config.displayName;\n    }\n\n    if (fileToUpload.name && !fileToUpload.name.startsWith('files/')) {\n      fileToUpload.name = `files/${fileToUpload.name}`;\n    }\n\n    const uploader = this.clientOptions.uploader;\n    const fileStat = await uploader.stat(file);\n    fileToUpload.sizeBytes = String(fileStat.size);\n    const mimeType = config?.mimeType ?? fileStat.type;\n    if (mimeType === undefined || mimeType === '') {\n      throw new Error(\n        'Can not determine mimeType. Please provide mimeType in the config.',\n      );\n    }\n    fileToUpload.mimeType = mimeType;\n\n    const uploadUrl = await this.fetchUploadUrl(fileToUpload, config);\n    return uploader.upload(file, uploadUrl, this);\n  }\n\n  /**\n   * Downloads a file asynchronously to the specified path.\n   *\n   * @params params - The parameters for the download request, see {@link\n   * DownloadFileParameters}\n   */\n  async downloadFile(params: DownloadFileParameters): Promise<void> {\n    const downloader = this.clientOptions.downloader;\n    await downloader.download(params, this);\n  }\n\n  private async fetchUploadUrl(\n    file: File,\n    config?: UploadFileConfig,\n  ): Promise<string> {\n    let httpOptions: HttpOptions = {};\n    if (config?.httpOptions) {\n      httpOptions = config.httpOptions;\n    } else {\n      httpOptions = {\n        apiVersion: '', // api-version is set in the path.\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Goog-Upload-Protocol': 'resumable',\n          'X-Goog-Upload-Command': 'start',\n          'X-Goog-Upload-Header-Content-Length': `${file.sizeBytes}`,\n          'X-Goog-Upload-Header-Content-Type': `${file.mimeType}`,\n        },\n      };\n    }\n\n    const body: Record<string, File> = {\n      'file': file,\n    };\n    const httpResponse = await this.request({\n      path: common.formatMap(\n        'upload/v1beta/files',\n        body['_url'] as Record<string, unknown>,\n      ),\n      body: JSON.stringify(body),\n      httpMethod: 'POST',\n      httpOptions,\n    });\n\n    if (!httpResponse || !httpResponse?.headers) {\n      throw new Error(\n        'Server did not return an HttpResponse or the returned HttpResponse did not have headers.',\n      );\n    }\n\n    const uploadUrl: string | undefined =\n      httpResponse?.headers?.['x-goog-upload-url'];\n    if (uploadUrl === undefined) {\n      throw new Error(\n        'Failed to get upload url. Server did not return the x-google-upload-url in the headers',\n      );\n    }\n    return uploadUrl;\n  }\n}\n\nasync function throwErrorIfNotOK(response: Response | undefined) {\n  if (response === undefined) {\n    throw new ServerError('response is undefined');\n  }\n  if (!response.ok) {\n    const status: number = response.status;\n    const statusText: string = response.statusText;\n    let errorBody: Record<string, unknown>;\n    if (response.headers.get('content-type')?.includes('application/json')) {\n      errorBody = await response.json();\n    } else {\n      errorBody = {\n        error: {\n          message: await response.text(),\n          code: response.status,\n          status: response.statusText,\n        },\n      };\n    }\n    const errorMessage = `got status: ${status} ${statusText}. ${JSON.stringify(\n      errorBody,\n    )}`;\n    if (status >= 400 && status < 500) {\n      const clientError = new ClientError(errorMessage);\n      throw clientError;\n    } else if (status >= 500 && status < 600) {\n      const serverError = new ServerError(errorMessage);\n      throw serverError;\n    }\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Client as McpClient} from '@modelcontextprotocol/sdk/client/index.js';\nimport type {Tool as McpTool} from '@modelcontextprotocol/sdk/types.js';\n\nimport {GOOGLE_API_CLIENT_HEADER} from '../_api_client.js';\nimport {mcpToolsToGeminiTool} from '../_transformers.js';\nimport {\n  CallableTool,\n  CallableToolConfig,\n  FunctionCall,\n  GenerateContentParameters,\n  Part,\n  Tool,\n  ToolListUnion,\n} from '../types.js';\n\n// TODO: b/416041229 - Determine how to retrieve the MCP package version.\nexport const MCP_LABEL = 'mcp_used/unknown';\n\n// Checks whether the list of tools contains any MCP tools.\nexport function hasMcpToolUsage(tools: ToolListUnion): boolean {\n  for (const tool of tools) {\n    if (isMcpCallableTool(tool)) {\n      return true;\n    }\n    if (typeof tool === 'object' && 'inputSchema' in tool) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Sets the MCP version label in the Google API client header.\nexport function setMcpUsageHeader(headers: Record<string, string>) {\n  const existingHeader = headers[GOOGLE_API_CLIENT_HEADER] ?? '';\n  headers[GOOGLE_API_CLIENT_HEADER] = (\n    existingHeader + ` ${MCP_LABEL}`\n  ).trimStart();\n}\n\n// Checks whether the list of tools contains any MCP clients. Will return true\n// if there is at least one MCP client.\nexport function hasMcpClientTools(params: GenerateContentParameters): boolean {\n  return params.config?.tools?.some((tool) => isMcpCallableTool(tool)) ?? false;\n}\n\n// Checks whether the list of tools contains any non-MCP tools. Will return true\n// if there is at least one non-MCP tool.\nexport function hasNonMcpTools(params: GenerateContentParameters): boolean {\n  return (\n    params.config?.tools?.some((tool) => !isMcpCallableTool(tool)) ?? false\n  );\n}\n\n// Returns true if the object is a MCP CallableTool, otherwise false.\nfunction isMcpCallableTool(object: unknown): boolean {\n  return (\n    object !== null &&\n    typeof object === 'object' &&\n    object instanceof McpCallableTool\n  );\n}\n\n// List all tools from the MCP client.\nasync function* listAllTools(\n  mcpClient: McpClient,\n  maxTools: number = 100,\n): AsyncGenerator<McpTool> {\n  let cursor: string | undefined = undefined;\n  let numTools = 0;\n  while (numTools < maxTools) {\n    const t = await mcpClient.listTools({cursor});\n    for (const tool of t.tools) {\n      yield tool;\n      numTools++;\n    }\n    if (!t.nextCursor) {\n      break;\n    }\n    cursor = t.nextCursor;\n  }\n}\n\n/**\n * McpCallableTool can be used for model inference and invoking MCP clients with\n * given function call arguments.\n *\n * @experimental Built-in MCP support is an experimental feature, may change in future\n * versions.\n */\nexport class McpCallableTool implements CallableTool {\n  private readonly mcpClients;\n  private mcpTools: McpTool[] = [];\n  private functionNameToMcpClient: Record<string, McpClient> = {};\n  private readonly config: CallableToolConfig;\n\n  private constructor(\n    mcpClients: McpClient[] = [],\n    config: CallableToolConfig,\n  ) {\n    this.mcpClients = mcpClients;\n    this.config = config;\n  }\n\n  /**\n   * Creates a McpCallableTool.\n   */\n  public static create(\n    mcpClients: McpClient[],\n    config: CallableToolConfig,\n  ): McpCallableTool {\n    return new McpCallableTool(mcpClients, config);\n  }\n\n  /**\n   * Validates the function names are not duplicate and initialize the function\n   * name to MCP client mapping.\n   *\n   * @throws {Error} if the MCP tools from the MCP clients have duplicate tool\n   *     names.\n   */\n  async initialize() {\n    if (this.mcpTools.length > 0) {\n      return;\n    }\n\n    const functionMap: Record<string, McpClient> = {};\n    const mcpTools: McpTool[] = [];\n    for (const mcpClient of this.mcpClients) {\n      for await (const mcpTool of listAllTools(mcpClient)) {\n        mcpTools.push(mcpTool);\n        const mcpToolName = mcpTool.name as string;\n        if (functionMap[mcpToolName]) {\n          throw new Error(\n            `Duplicate function name ${\n              mcpToolName\n            } found in MCP tools. Please ensure function names are unique.`,\n          );\n        }\n        functionMap[mcpToolName] = mcpClient;\n      }\n    }\n    this.mcpTools = mcpTools;\n    this.functionNameToMcpClient = functionMap;\n  }\n\n  public async tool(): Promise<Tool> {\n    await this.initialize();\n    return mcpToolsToGeminiTool(this.mcpTools, this.config);\n  }\n\n  public async callTool(functionCalls: FunctionCall[]): Promise<Part[]> {\n    await this.initialize();\n    const functionCallResponseParts: Part[] = [];\n    for (const functionCall of functionCalls) {\n      if (functionCall.name! in this.functionNameToMcpClient) {\n        const mcpClient = this.functionNameToMcpClient[functionCall.name!];\n        const callToolResponse = await mcpClient.callTool({\n          name: functionCall.name!,\n          arguments: functionCall.args,\n        });\n        functionCallResponseParts.push({\n          functionResponse: {\n            name: functionCall.name,\n            response: callToolResponse.isError\n              ? {error: callToolResponse}\n              : (callToolResponse as Record<string, unknown>),\n          },\n        });\n      }\n    }\n    return functionCallResponseParts;\n  }\n}\n\nfunction isMcpClient(client: unknown): client is McpClient {\n  return (\n    client !== null &&\n    typeof client === 'object' &&\n    'listTools' in client &&\n    typeof client.listTools === 'function'\n  );\n}\n\n/**\n * Creates a McpCallableTool from MCP clients and an optional config.\n *\n * The callable tool can invoke the MCP clients with given function call\n * arguments. (often for automatic function calling).\n * Use the config to modify tool parameters such as behavior.\n *\n * @experimental Built-in MCP support is an experimental feature, may change in future\n * versions.\n */\nexport function mcpToTool(\n  ...args: [...McpClient[], CallableToolConfig | McpClient]\n): CallableTool {\n  if (args.length === 0) {\n    throw new Error('No MCP clients provided');\n  }\n  const maybeConfig = args[args.length - 1];\n  if (isMcpClient(maybeConfig)) {\n    return McpCallableTool.create(args as McpClient[], {});\n  }\n  return McpCallableTool.create(\n    args.slice(0, args.length - 1) as McpClient[],\n    maybeConfig,\n  );\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Live music client.\n *\n * @experimental\n */\n\nimport {ApiClient} from './_api_client.js';\nimport {Auth} from './_auth.js';\nimport * as t from './_transformers.js';\nimport {WebSocket, WebSocketCallbacks, WebSocketFactory} from './_websocket.js';\nimport * as converters from './converters/_live_converters.js';\nimport * as types from './types.js';\n\n/**\n * Handles incoming messages from the WebSocket.\n *\n * @remarks\n * This function is responsible for parsing incoming messages, transforming them\n * into LiveMusicServerMessage, and then calling the onmessage callback.\n * Note that the first message which is received from the server is a\n * setupComplete message.\n *\n * @param apiClient The ApiClient instance.\n * @param onmessage The user-provided onmessage callback (if any).\n * @param event The MessageEvent from the WebSocket.\n */\nasync function handleWebSocketMessage(\n  apiClient: ApiClient,\n  onmessage: (msg: types.LiveMusicServerMessage) => void,\n  event: MessageEvent,\n): Promise<void> {\n  const serverMessage: types.LiveMusicServerMessage =\n    new types.LiveMusicServerMessage();\n  let data: types.LiveMusicServerMessage;\n  if (event.data instanceof Blob) {\n    data = JSON.parse(await event.data.text()) as types.LiveMusicServerMessage;\n  } else {\n    data = JSON.parse(event.data) as types.LiveMusicServerMessage;\n  }\n  const response = converters.liveMusicServerMessageFromMldev(apiClient, data);\n  Object.assign(serverMessage, response);\n  onmessage(serverMessage);\n}\n\n/**\n   LiveMusic class encapsulates the configuration for live music\n   generation via Lyria Live models.\n\n   @experimental\n  */\nexport class LiveMusic {\n  constructor(\n    private readonly apiClient: ApiClient,\n    private readonly auth: Auth,\n    private readonly webSocketFactory: WebSocketFactory,\n  ) {}\n\n  /**\n     Establishes a connection to the specified model and returns a\n     LiveMusicSession object representing that connection.\n\n     @experimental\n\n     @remarks\n\n     @param params - The parameters for establishing a connection to the model.\n     @return A live session.\n\n     @example\n     ```ts\n     let model = 'models/lyria-realtime-exp';\n     const session = await ai.live.music.connect({\n       model: model,\n       callbacks: {\n         onmessage: (e: MessageEvent) => {\n           console.log('Received message from the server: %s\\n', debug(e.data));\n         },\n         onerror: (e: ErrorEvent) => {\n           console.log('Error occurred: %s\\n', debug(e.error));\n         },\n         onclose: (e: CloseEvent) => {\n           console.log('Connection closed.');\n         },\n       },\n     });\n     ```\n    */\n  async connect(\n    params: types.LiveMusicConnectParameters,\n  ): Promise<LiveMusicSession> {\n    if (this.apiClient.isVertexAI()) {\n      throw new Error('Live music is not supported for Vertex AI.');\n    }\n    console.warn(\n      'Live music generation is experimental and may change in future versions.',\n    );\n\n    const websocketBaseUrl = this.apiClient.getWebsocketBaseUrl();\n    const apiVersion = this.apiClient.getApiVersion();\n    const headers = mapToHeaders(this.apiClient.getDefaultHeaders());\n    const apiKey = this.apiClient.getApiKey();\n    const url = `${websocketBaseUrl}/ws/google.ai.generativelanguage.${\n      apiVersion\n    }.GenerativeService.BidiGenerateMusic?key=${apiKey}`;\n\n    let onopenResolve: (value: unknown) => void = () => {};\n    const onopenPromise = new Promise((resolve: (value: unknown) => void) => {\n      onopenResolve = resolve;\n    });\n\n    const callbacks: types.LiveMusicCallbacks = params.callbacks;\n\n    const onopenAwaitedCallback = function () {\n      onopenResolve({});\n    };\n\n    const apiClient = this.apiClient;\n    const websocketCallbacks: WebSocketCallbacks = {\n      onopen: onopenAwaitedCallback,\n      onmessage: (event: MessageEvent) => {\n        void handleWebSocketMessage(apiClient, callbacks.onmessage, event);\n      },\n      onerror:\n        callbacks?.onerror ??\n        function (e: ErrorEvent) {\n          void e;\n        },\n      onclose:\n        callbacks?.onclose ??\n        function (e: CloseEvent) {\n          void e;\n        },\n    };\n\n    const conn = this.webSocketFactory.create(\n      url,\n      headersToMap(headers),\n      websocketCallbacks,\n    );\n    conn.connect();\n    // Wait for the websocket to open before sending requests.\n    await onopenPromise;\n\n    const model = t.tModel(this.apiClient, params.model);\n    const setup = converters.liveMusicClientSetupToMldev(this.apiClient, {\n      model,\n    });\n    const clientMessage = converters.liveMusicClientMessageToMldev(\n      this.apiClient,\n      {setup},\n    );\n    conn.send(JSON.stringify(clientMessage));\n\n    return new LiveMusicSession(conn, this.apiClient);\n  }\n}\n\n/**\n   Represents a connection to the API.\n\n   @experimental\n  */\nexport class LiveMusicSession {\n  constructor(\n    readonly conn: WebSocket,\n    private readonly apiClient: ApiClient,\n  ) {}\n\n  /**\n    Sets inputs to steer music generation. Updates the session's current\n    weighted prompts.\n\n    @param params - Contains one property, `weightedPrompts`.\n\n      - `weightedPrompts` to send to the model; weights are normalized to\n        sum to 1.0.\n\n    @experimental\n   */\n  async setWeightedPrompts(\n    params: types.LiveMusicSetWeightedPromptsParameters,\n  ) {\n    if (\n      !params.weightedPrompts ||\n      Object.keys(params.weightedPrompts).length === 0\n    ) {\n      throw new Error(\n        'Weighted prompts must be set and contain at least one entry.',\n      );\n    }\n    const setWeightedPromptsParameters =\n      converters.liveMusicSetWeightedPromptsParametersToMldev(\n        this.apiClient,\n        params,\n      );\n    const clientContent = converters.liveMusicClientContentToMldev(\n      this.apiClient,\n      setWeightedPromptsParameters,\n    );\n    this.conn.send(JSON.stringify({clientContent}));\n  }\n\n  /**\n    Sets a configuration to the model. Updates the session's current\n    music generation config.\n\n    @param params - Contains one property, `musicGenerationConfig`.\n\n      - `musicGenerationConfig` to set in the model. Passing an empty or\n    undefined config to the model will reset the config to defaults.\n\n    @experimental\n   */\n  async setMusicGenerationConfig(params: types.LiveMusicSetConfigParameters) {\n    if (!params.musicGenerationConfig) {\n      params.musicGenerationConfig = {};\n    }\n    const setConfigParameters = converters.liveMusicSetConfigParametersToMldev(\n      this.apiClient,\n      params,\n    );\n    const clientMessage = converters.liveMusicClientMessageToMldev(\n      this.apiClient,\n      setConfigParameters,\n    );\n    this.conn.send(JSON.stringify(clientMessage));\n  }\n\n  private sendPlaybackControl(playbackControl: types.LiveMusicPlaybackControl) {\n    const clientMessage = converters.liveMusicClientMessageToMldev(\n      this.apiClient,\n      {\n        playbackControl,\n      },\n    );\n    this.conn.send(JSON.stringify(clientMessage));\n  }\n\n  /**\n   * Start the music stream.\n   *\n   * @experimental\n   */\n  play() {\n    this.sendPlaybackControl(types.LiveMusicPlaybackControl.PLAY);\n  }\n\n  /**\n   * Temporarily halt the music stream. Use `play` to resume from the current\n   * position.\n   *\n   * @experimental\n   */\n  pause() {\n    this.sendPlaybackControl(types.LiveMusicPlaybackControl.PAUSE);\n  }\n\n  /**\n   * Stop the music stream and reset the state. Retains the current prompts\n   * and config.\n   *\n   * @experimental\n   */\n  stop() {\n    this.sendPlaybackControl(types.LiveMusicPlaybackControl.STOP);\n  }\n\n  /**\n   * Resets the context of the music generation without stopping it.\n   * Retains the current prompts and config.\n   *\n   * @experimental\n   */\n  resetContext() {\n    this.sendPlaybackControl(types.LiveMusicPlaybackControl.RESET_CONTEXT);\n  }\n\n  /**\n     Terminates the WebSocket connection.\n\n     @experimental\n   */\n  close() {\n    this.conn.close();\n  }\n}\n\n// Converts an headers object to a \"map\" object as expected by the WebSocket\n// constructor. We use this as the Auth interface works with Headers objects\n// while the WebSocket constructor takes a map.\nfunction headersToMap(headers: Headers): Record<string, string> {\n  const headerMap: Record<string, string> = {};\n  headers.forEach((value, key) => {\n    headerMap[key] = value;\n  });\n  return headerMap;\n}\n\n// Converts a \"map\" object to a headers object. We use this as the Auth\n// interface works with Headers objects while the API client default headers\n// returns a map.\nfunction mapToHeaders(map: Record<string, string>): Headers {\n  const headers = new Headers();\n  for (const [key, value] of Object.entries(map)) {\n    headers.append(key, value);\n  }\n  return headers;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Live client.\n *\n * @experimental\n */\n\nimport {ApiClient} from './_api_client.js';\nimport {Auth} from './_auth.js';\nimport * as t from './_transformers.js';\nimport {WebSocket, WebSocketCallbacks, WebSocketFactory} from './_websocket.js';\nimport * as converters from './converters/_live_converters.js';\nimport {\n  contentToMldev,\n  contentToVertex,\n} from './converters/_models_converters.js';\nimport {hasMcpToolUsage, setMcpUsageHeader} from './mcp/_mcp.js';\nimport {LiveMusic} from './music.js';\nimport * as types from './types.js';\n\nconst FUNCTION_RESPONSE_REQUIRES_ID =\n  'FunctionResponse request must have an `id` field from the response of a ToolCall.FunctionalCalls in Google AI.';\n\n/**\n * Handles incoming messages from the WebSocket.\n *\n * @remarks\n * This function is responsible for parsing incoming messages, transforming them\n * into LiveServerMessages, and then calling the onmessage callback. Note that\n * the first message which is received from the server is a setupComplete\n * message.\n *\n * @param apiClient The ApiClient instance.\n * @param onmessage The user-provided onmessage callback (if any).\n * @param event The MessageEvent from the WebSocket.\n */\nasync function handleWebSocketMessage(\n  apiClient: ApiClient,\n  onmessage: (msg: types.LiveServerMessage) => void,\n  event: MessageEvent,\n): Promise<void> {\n  const serverMessage: types.LiveServerMessage = new types.LiveServerMessage();\n  let data: types.LiveServerMessage;\n  if (event.data instanceof Blob) {\n    data = JSON.parse(await event.data.text()) as types.LiveServerMessage;\n  } else {\n    data = JSON.parse(event.data) as types.LiveServerMessage;\n  }\n  if (apiClient.isVertexAI()) {\n    const resp = converters.liveServerMessageFromVertex(apiClient, data);\n    Object.assign(serverMessage, resp);\n  } else {\n    const resp = converters.liveServerMessageFromMldev(apiClient, data);\n    Object.assign(serverMessage, resp);\n  }\n\n  onmessage(serverMessage);\n}\n\n/**\n   Live class encapsulates the configuration for live interaction with the\n   Generative Language API. It embeds ApiClient for general API settings.\n\n   @experimental\n  */\nexport class Live {\n  public readonly music: LiveMusic;\n\n  constructor(\n    private readonly apiClient: ApiClient,\n    private readonly auth: Auth,\n    private readonly webSocketFactory: WebSocketFactory,\n  ) {\n    this.music = new LiveMusic(\n      this.apiClient,\n      this.auth,\n      this.webSocketFactory,\n    );\n  }\n\n  /**\n     Establishes a connection to the specified model with the given\n     configuration and returns a Session object representing that connection.\n\n     @experimental Built-in MCP support is an experimental feature, may change in\n     future versions.\n\n     @remarks\n\n     @param params - The parameters for establishing a connection to the model.\n     @return A live session.\n\n     @example\n     ```ts\n     let model: string;\n     if (GOOGLE_GENAI_USE_VERTEXAI) {\n       model = 'gemini-2.0-flash-live-preview-04-09';\n     } else {\n       model = 'gemini-2.0-flash-live-001';\n     }\n     const session = await ai.live.connect({\n       model: model,\n       config: {\n         responseModalities: [Modality.AUDIO],\n       },\n       callbacks: {\n         onopen: () => {\n           console.log('Connected to the socket.');\n         },\n         onmessage: (e: MessageEvent) => {\n           console.log('Received message from the server: %s\\n', debug(e.data));\n         },\n         onerror: (e: ErrorEvent) => {\n           console.log('Error occurred: %s\\n', debug(e.error));\n         },\n         onclose: (e: CloseEvent) => {\n           console.log('Connection closed.');\n         },\n       },\n     });\n     ```\n    */\n  async connect(params: types.LiveConnectParameters): Promise<Session> {\n    const websocketBaseUrl = this.apiClient.getWebsocketBaseUrl();\n    const apiVersion = this.apiClient.getApiVersion();\n    let url: string;\n    const defaultHeaders = this.apiClient.getDefaultHeaders();\n    if (\n      params.config &&\n      params.config.tools &&\n      hasMcpToolUsage(params.config.tools)\n    ) {\n      setMcpUsageHeader(defaultHeaders);\n    }\n    const headers = mapToHeaders(defaultHeaders);\n    if (this.apiClient.isVertexAI()) {\n      url = `${websocketBaseUrl}/ws/google.cloud.aiplatform.${\n        apiVersion\n      }.LlmBidiService/BidiGenerateContent`;\n      await this.auth.addAuthHeaders(headers);\n    } else {\n      const apiKey = this.apiClient.getApiKey();\n\n      let method = 'BidiGenerateContent';\n      let keyName = 'key';\n      if (apiKey?.startsWith('auth_tokens/')) {\n        console.warn(\n          'Warning: Ephemeral token support is experimental and may change in future versions.',\n        );\n        method = 'BidiGenerateContentConstrained';\n        keyName = 'access_token';\n      }\n\n      url = `${websocketBaseUrl}/ws/google.ai.generativelanguage.${\n        apiVersion\n      }.GenerativeService.${method}?${keyName}=${apiKey}`;\n    }\n\n    let onopenResolve: (value: unknown) => void = () => {};\n    const onopenPromise = new Promise((resolve: (value: unknown) => void) => {\n      onopenResolve = resolve;\n    });\n\n    const callbacks: types.LiveCallbacks = params.callbacks;\n\n    const onopenAwaitedCallback = function () {\n      callbacks?.onopen?.();\n      onopenResolve({});\n    };\n\n    const apiClient = this.apiClient;\n\n    const websocketCallbacks: WebSocketCallbacks = {\n      onopen: onopenAwaitedCallback,\n      onmessage: (event: MessageEvent) => {\n        void handleWebSocketMessage(apiClient, callbacks.onmessage, event);\n      },\n      onerror:\n        callbacks?.onerror ??\n        function (e: ErrorEvent) {\n          void e;\n        },\n      onclose:\n        callbacks?.onclose ??\n        function (e: CloseEvent) {\n          void e;\n        },\n    };\n\n    const conn = this.webSocketFactory.create(\n      url,\n      headersToMap(headers),\n      websocketCallbacks,\n    );\n    conn.connect();\n    // Wait for the websocket to open before sending requests.\n    await onopenPromise;\n\n    let transformedModel = t.tModel(this.apiClient, params.model);\n    if (\n      this.apiClient.isVertexAI() &&\n      transformedModel.startsWith('publishers/')\n    ) {\n      const project = this.apiClient.getProject();\n      const location = this.apiClient.getLocation();\n      transformedModel =\n        `projects/${project}/locations/${location}/` + transformedModel;\n    }\n\n    let clientMessage: Record<string, unknown> = {};\n\n    if (\n      this.apiClient.isVertexAI() &&\n      params.config?.responseModalities === undefined\n    ) {\n      // Set default to AUDIO to align with MLDev API.\n      if (params.config === undefined) {\n        params.config = {responseModalities: [types.Modality.AUDIO]};\n      } else {\n        params.config.responseModalities = [types.Modality.AUDIO];\n      }\n    }\n    if (params.config?.generationConfig) {\n      // Raise deprecation warning for generationConfig.\n      console.warn(\n        'Setting `LiveConnectConfig.generation_config` is deprecated, please set the fields on `LiveConnectConfig` directly. This will become an error in a future version (not before Q3 2025).',\n      );\n    }\n    const inputTools = params.config?.tools ?? [];\n    const convertedTools: types.Tool[] = [];\n    for (const tool of inputTools) {\n      if (this.isCallableTool(tool)) {\n        const callableTool = tool as types.CallableTool;\n        convertedTools.push(await callableTool.tool());\n      } else {\n        convertedTools.push(tool as types.Tool);\n      }\n    }\n    if (convertedTools.length > 0) {\n      params.config!.tools = convertedTools;\n    }\n    const liveConnectParameters: types.LiveConnectParameters = {\n      model: transformedModel,\n      config: params.config,\n      callbacks: params.callbacks,\n    };\n    if (this.apiClient.isVertexAI()) {\n      clientMessage = converters.liveConnectParametersToVertex(\n        this.apiClient,\n        liveConnectParameters,\n      );\n    } else {\n      clientMessage = converters.liveConnectParametersToMldev(\n        this.apiClient,\n        liveConnectParameters,\n      );\n    }\n    delete clientMessage['config'];\n    conn.send(JSON.stringify(clientMessage));\n    return new Session(conn, this.apiClient);\n  }\n\n  // TODO: b/416041229 - Abstract this method to a common place.\n  private isCallableTool(tool: types.ToolUnion): boolean {\n    return 'callTool' in tool && typeof tool.callTool === 'function';\n  }\n}\n\nconst defaultLiveSendClientContentParamerters: types.LiveSendClientContentParameters =\n  {\n    turnComplete: true,\n  };\n\n/**\n   Represents a connection to the API.\n\n   @experimental\n  */\nexport class Session {\n  constructor(\n    readonly conn: WebSocket,\n    private readonly apiClient: ApiClient,\n  ) {}\n\n  private tLiveClientContent(\n    apiClient: ApiClient,\n    params: types.LiveSendClientContentParameters,\n  ): types.LiveClientMessage {\n    if (params.turns !== null && params.turns !== undefined) {\n      let contents: types.Content[] = [];\n      try {\n        contents = t.tContents(\n          apiClient,\n          params.turns as types.ContentListUnion,\n        );\n        if (apiClient.isVertexAI()) {\n          contents = contents.map((item) => contentToVertex(apiClient, item));\n        } else {\n          contents = contents.map((item) => contentToMldev(apiClient, item));\n        }\n      } catch {\n        throw new Error(\n          `Failed to parse client content \"turns\", type: '${typeof params.turns}'`,\n        );\n      }\n      return {\n        clientContent: {turns: contents, turnComplete: params.turnComplete},\n      };\n    }\n\n    return {\n      clientContent: {turnComplete: params.turnComplete},\n    };\n  }\n\n  private tLiveClienttToolResponse(\n    apiClient: ApiClient,\n    params: types.LiveSendToolResponseParameters,\n  ): types.LiveClientMessage {\n    let functionResponses: types.FunctionResponse[] = [];\n\n    if (params.functionResponses == null) {\n      throw new Error('functionResponses is required.');\n    }\n\n    if (!Array.isArray(params.functionResponses)) {\n      functionResponses = [params.functionResponses];\n    } else {\n      functionResponses = params.functionResponses;\n    }\n\n    if (functionResponses.length === 0) {\n      throw new Error('functionResponses is required.');\n    }\n\n    for (const functionResponse of functionResponses) {\n      if (\n        typeof functionResponse !== 'object' ||\n        functionResponse === null ||\n        !('name' in functionResponse) ||\n        !('response' in functionResponse)\n      ) {\n        throw new Error(\n          `Could not parse function response, type '${typeof functionResponse}'.`,\n        );\n      }\n      if (!apiClient.isVertexAI() && !('id' in functionResponse)) {\n        throw new Error(FUNCTION_RESPONSE_REQUIRES_ID);\n      }\n    }\n\n    const clientMessage: types.LiveClientMessage = {\n      toolResponse: {functionResponses: functionResponses},\n    };\n    return clientMessage;\n  }\n\n  /**\n    Send a message over the established connection.\n\n    @param params - Contains two **optional** properties, `turns` and\n        `turnComplete`.\n\n      - `turns` will be converted to a `Content[]`\n      - `turnComplete: true` [default] indicates that you are done sending\n        content and expect a response. If `turnComplete: false`, the server\n        will wait for additional messages before starting generation.\n\n    @experimental\n\n    @remarks\n    There are two ways to send messages to the live API:\n    `sendClientContent` and `sendRealtimeInput`.\n\n    `sendClientContent` messages are added to the model context **in order**.\n    Having a conversation using `sendClientContent` messages is roughly\n    equivalent to using the `Chat.sendMessageStream`, except that the state of\n    the `chat` history is stored on the API server instead of locally.\n\n    Because of `sendClientContent`'s order guarantee, the model cannot respons\n    as quickly to `sendClientContent` messages as to `sendRealtimeInput`\n    messages. This makes the biggest difference when sending objects that have\n    significant preprocessing time (typically images).\n\n    The `sendClientContent` message sends a `Content[]`\n    which has more options than the `Blob` sent by `sendRealtimeInput`.\n\n    So the main use-cases for `sendClientContent` over `sendRealtimeInput` are:\n\n    - Sending anything that can't be represented as a `Blob` (text,\n    `sendClientContent({turns=\"Hello?\"}`)).\n    - Managing turns when not using audio input and voice activity detection.\n      (`sendClientContent({turnComplete:true})` or the short form\n    `sendClientContent()`)\n    - Prefilling a conversation context\n      ```\n      sendClientContent({\n          turns: [\n            Content({role:user, parts:...}),\n            Content({role:user, parts:...}),\n            ...\n          ]\n      })\n      ```\n    @experimental\n   */\n  sendClientContent(params: types.LiveSendClientContentParameters) {\n    params = {\n      ...defaultLiveSendClientContentParamerters,\n      ...params,\n    };\n\n    const clientMessage: types.LiveClientMessage = this.tLiveClientContent(\n      this.apiClient,\n      params,\n    );\n    this.conn.send(JSON.stringify(clientMessage));\n  }\n\n  /**\n    Send a realtime message over the established connection.\n\n    @param params - Contains one property, `media`.\n\n      - `media` will be converted to a `Blob`\n\n    @experimental\n\n    @remarks\n    Use `sendRealtimeInput` for realtime audio chunks and video frames (images).\n\n    With `sendRealtimeInput` the api will respond to audio automatically\n    based on voice activity detection (VAD).\n\n    `sendRealtimeInput` is optimized for responsivness at the expense of\n    deterministic ordering guarantees. Audio and video tokens are to the\n    context when they become available.\n\n    Note: The Call signature expects a `Blob` object, but only a subset\n    of audio and image mimetypes are allowed.\n   */\n  sendRealtimeInput(params: types.LiveSendRealtimeInputParameters) {\n    let clientMessage: types.LiveClientMessage = {};\n\n    if (this.apiClient.isVertexAI()) {\n      clientMessage = {\n        'realtimeInput': converters.liveSendRealtimeInputParametersToVertex(\n          this.apiClient,\n          params,\n        ),\n      };\n    } else {\n      clientMessage = {\n        'realtimeInput': converters.liveSendRealtimeInputParametersToMldev(\n          this.apiClient,\n          params,\n        ),\n      };\n    }\n    this.conn.send(JSON.stringify(clientMessage));\n  }\n\n  /**\n    Send a function response message over the established connection.\n\n    @param params - Contains property `functionResponses`.\n\n      - `functionResponses` will be converted to a `functionResponses[]`\n\n    @remarks\n    Use `sendFunctionResponse` to reply to `LiveServerToolCall` from the server.\n\n    Use {@link types.LiveConnectConfig#tools} to configure the callable functions.\n\n    @experimental\n   */\n  sendToolResponse(params: types.LiveSendToolResponseParameters) {\n    if (params.functionResponses == null) {\n      throw new Error('Tool response parameters are required.');\n    }\n\n    const clientMessage: types.LiveClientMessage =\n      this.tLiveClienttToolResponse(this.apiClient, params);\n    this.conn.send(JSON.stringify(clientMessage));\n  }\n\n  /**\n     Terminates the WebSocket connection.\n\n     @experimental\n\n     @example\n     ```ts\n     let model: string;\n     if (GOOGLE_GENAI_USE_VERTEXAI) {\n       model = 'gemini-2.0-flash-live-preview-04-09';\n     } else {\n       model = 'gemini-2.0-flash-live-001';\n     }\n     const session = await ai.live.connect({\n       model: model,\n       config: {\n         responseModalities: [Modality.AUDIO],\n       }\n     });\n\n     session.close();\n     ```\n   */\n  close() {\n    this.conn.close();\n  }\n}\n\n// Converts an headers object to a \"map\" object as expected by the WebSocket\n// constructor. We use this as the Auth interface works with Headers objects\n// while the WebSocket constructor takes a map.\nfunction headersToMap(headers: Headers): Record<string, string> {\n  const headerMap: Record<string, string> = {};\n  headers.forEach((value, key) => {\n    headerMap[key] = value;\n  });\n  return headerMap;\n}\n\n// Converts a \"map\" object to a headers object. We use this as the Auth\n// interface works with Headers objects while the API client default headers\n// returns a map.\nfunction mapToHeaders(map: Record<string, string>): Headers {\n  const headers = new Headers();\n  for (const [key, value] of Object.entries(map)) {\n    headers.append(key, value);\n  }\n  return headers;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as types from './types.js';\n\nexport const DEFAULT_MAX_REMOTE_CALLS = 10;\n\n/** Returns whether automatic function calling is disabled. */\nexport function shouldDisableAfc(\n  config: types.GenerateContentConfig | undefined,\n): boolean {\n  if (config?.automaticFunctionCalling?.disable) {\n    return true;\n  }\n\n  let callableToolsPresent = false;\n  for (const tool of config?.tools ?? []) {\n    if (isCallableTool(tool)) {\n      callableToolsPresent = true;\n      break;\n    }\n  }\n  if (!callableToolsPresent) {\n    return true;\n  }\n\n  const maxCalls = config?.automaticFunctionCalling?.maximumRemoteCalls;\n  if (\n    (maxCalls && (maxCalls < 0 || !Number.isInteger(maxCalls))) ||\n    maxCalls == 0\n  ) {\n    console.warn(\n      'Invalid maximumRemoteCalls value provided for automatic function calling. Disabled automatic function calling. Please provide a valid integer value greater than 0. maximumRemoteCalls provided:',\n      maxCalls,\n    );\n    return true;\n  }\n  return false;\n}\n\nexport function isCallableTool(tool: types.ToolUnion): boolean {\n  return 'callTool' in tool && typeof tool.callTool === 'function';\n}\n\n/**\n * Returns whether to append automatic function calling history to the\n * response.\n */\nexport function shouldAppendAfcHistory(\n  config: types.GenerateContentConfig | undefined,\n): boolean {\n  return !config?.automaticFunctionCalling?.ignoreCallHistory;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {\n  DEFAULT_MAX_REMOTE_CALLS,\n  isCallableTool,\n  shouldAppendAfcHistory,\n  shouldDisableAfc,\n} from './_afc.js';\nimport {ApiClient} from './_api_client.js';\nimport * as common from './_common.js';\nimport {BaseModule} from './_common.js';\nimport * as _internal_types from './_internal_types.js';\nimport {tContents} from './_transformers.js';\nimport * as converters from './converters/_models_converters.js';\nimport {\n  hasMcpClientTools,\n  hasMcpToolUsage,\n  hasNonMcpTools,\n  setMcpUsageHeader,\n} from './mcp/_mcp.js';\nimport {PagedItem, Pager} from './pagers.js';\nimport * as types from './types.js';\n\nexport class Models extends BaseModule {\n  constructor(private readonly apiClient: ApiClient) {\n    super();\n  }\n\n  /**\n   * Makes an API request to generate content with a given model.\n   *\n   * For the `model` parameter, supported formats for Vertex AI API include:\n   * - The Gemini model ID, for example: 'gemini-2.0-flash'\n   * - The full resource name starts with 'projects/', for example:\n   *  'projects/my-project-id/locations/us-central1/publishers/google/models/gemini-2.0-flash'\n   * - The partial resource name with 'publishers/', for example:\n   *  'publishers/google/models/gemini-2.0-flash' or\n   *  'publishers/meta/models/llama-3.1-405b-instruct-maas'\n   * - `/` separated publisher and model name, for example:\n   * 'google/gemini-2.0-flash' or 'meta/llama-3.1-405b-instruct-maas'\n   *\n   * For the `model` parameter, supported formats for Gemini API include:\n   * - The Gemini model ID, for example: 'gemini-2.0-flash'\n   * - The model name starts with 'models/', for example:\n   *  'models/gemini-2.0-flash'\n   * - For tuned models, the model name starts with 'tunedModels/',\n   * for example:\n   * 'tunedModels/1234567890123456789'\n   *\n   * Some models support multimodal input and output.\n   *\n   * @param params - The parameters for generating content.\n   * @return The response from generating content.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.generateContent({\n   *   model: 'gemini-2.0-flash',\n   *   contents: 'why is the sky blue?',\n   *   config: {\n   *     candidateCount: 2,\n   *   }\n   * });\n   * console.log(response);\n   * ```\n   */\n  generateContent = async (\n    params: types.GenerateContentParameters,\n  ): Promise<types.GenerateContentResponse> => {\n    const transformedParams = await this.processParamsForMcpUsage(params);\n    if (!hasMcpClientTools(params) || shouldDisableAfc(params.config)) {\n      return await this.generateContentInternal(transformedParams);\n    }\n\n    if (hasNonMcpTools(params)) {\n      throw new Error(\n        'Automatic function calling with CallableTools and Tools is not yet supported.',\n      );\n    }\n\n    let response: types.GenerateContentResponse;\n    let functionResponseContent: types.Content;\n    const automaticFunctionCallingHistory: types.Content[] = tContents(\n      this.apiClient,\n      transformedParams.contents,\n    );\n    const maxRemoteCalls =\n      transformedParams.config?.automaticFunctionCalling?.maximumRemoteCalls ??\n      DEFAULT_MAX_REMOTE_CALLS;\n    let remoteCalls = 0;\n    while (remoteCalls < maxRemoteCalls) {\n      response = await this.generateContentInternal(transformedParams);\n      if (!response.functionCalls || response.functionCalls!.length === 0) {\n        break;\n      }\n\n      const responseContent: types.Content = response.candidates![0].content!;\n      const functionResponseParts: types.Part[] = [];\n      for (const tool of params.config?.tools ?? []) {\n        if (isCallableTool(tool)) {\n          const callableTool = tool as types.CallableTool;\n          const parts = await callableTool.callTool(response.functionCalls!);\n          functionResponseParts.push(...parts);\n        }\n      }\n\n      remoteCalls++;\n\n      functionResponseContent = {\n        role: 'user',\n        parts: functionResponseParts,\n      };\n\n      transformedParams.contents = tContents(\n        this.apiClient,\n        transformedParams.contents,\n      );\n      (transformedParams.contents as types.Content[]).push(responseContent);\n      (transformedParams.contents as types.Content[]).push(\n        functionResponseContent,\n      );\n\n      if (shouldAppendAfcHistory(transformedParams.config)) {\n        automaticFunctionCallingHistory.push(responseContent);\n        automaticFunctionCallingHistory.push(functionResponseContent);\n      }\n    }\n    if (shouldAppendAfcHistory(transformedParams.config)) {\n      response!.automaticFunctionCallingHistory =\n        automaticFunctionCallingHistory;\n    }\n    return response!;\n  };\n\n  /**\n   * Makes an API request to generate content with a given model and yields the\n   * response in chunks.\n   *\n   * For the `model` parameter, supported formats for Vertex AI API include:\n   * - The Gemini model ID, for example: 'gemini-2.0-flash'\n   * - The full resource name starts with 'projects/', for example:\n   *  'projects/my-project-id/locations/us-central1/publishers/google/models/gemini-2.0-flash'\n   * - The partial resource name with 'publishers/', for example:\n   *  'publishers/google/models/gemini-2.0-flash' or\n   *  'publishers/meta/models/llama-3.1-405b-instruct-maas'\n   * - `/` separated publisher and model name, for example:\n   * 'google/gemini-2.0-flash' or 'meta/llama-3.1-405b-instruct-maas'\n   *\n   * For the `model` parameter, supported formats for Gemini API include:\n   * - The Gemini model ID, for example: 'gemini-2.0-flash'\n   * - The model name starts with 'models/', for example:\n   *  'models/gemini-2.0-flash'\n   * - For tuned models, the model name starts with 'tunedModels/',\n   * for example:\n   *  'tunedModels/1234567890123456789'\n   *\n   * Some models support multimodal input and output.\n   *\n   * @param params - The parameters for generating content with streaming response.\n   * @return The response from generating content.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.generateContentStream({\n   *   model: 'gemini-2.0-flash',\n   *   contents: 'why is the sky blue?',\n   *   config: {\n   *     maxOutputTokens: 200,\n   *   }\n   * });\n   * for await (const chunk of response) {\n   *   console.log(chunk);\n   * }\n   * ```\n   */\n  generateContentStream = async (\n    params: types.GenerateContentParameters,\n  ): Promise<AsyncGenerator<types.GenerateContentResponse>> => {\n    if (shouldDisableAfc(params.config)) {\n      const transformedParams = await this.processParamsForMcpUsage(params);\n      return await this.generateContentStreamInternal(transformedParams);\n    } else {\n      return await this.processAfcStream(params);\n    }\n  };\n\n  /**\n   * Transforms the CallableTools in the parameters to be simply Tools, it\n   * copies the params into a new object and replaces the tools, it does not\n   * modify the original params. Also sets the MCP usage header if there are\n   * MCP tools in the parameters.\n   */\n  private async processParamsForMcpUsage(\n    params: types.GenerateContentParameters,\n  ): Promise<types.GenerateContentParameters> {\n    const tools = params.config?.tools;\n    if (!tools) {\n      return params;\n    }\n    const transformedTools = await Promise.all(\n      tools.map(async (tool) => {\n        if (isCallableTool(tool)) {\n          const callableTool = tool as types.CallableTool;\n          return await callableTool.tool();\n        }\n        return tool;\n      }),\n    );\n    const newParams: types.GenerateContentParameters = {\n      model: params.model,\n      contents: params.contents,\n      config: {\n        ...params.config,\n        tools: transformedTools,\n      },\n    };\n    newParams.config!.tools = transformedTools;\n\n    if (\n      params.config &&\n      params.config.tools &&\n      hasMcpToolUsage(params.config.tools)\n    ) {\n      const headers = params.config.httpOptions?.headers ?? {};\n      let newHeaders = {...headers};\n      if (Object.keys(newHeaders).length === 0) {\n        newHeaders = this.apiClient.getDefaultHeaders();\n      }\n      setMcpUsageHeader(newHeaders);\n      newParams.config!.httpOptions = {\n        ...params.config.httpOptions,\n        headers: newHeaders,\n      };\n    }\n    return newParams;\n  }\n\n  private async initAfcToolsMap(\n    params: types.GenerateContentParameters,\n  ): Promise<Map<string, types.CallableTool>> {\n    const afcTools: Map<string, types.CallableTool> = new Map();\n    for (const tool of params.config?.tools ?? []) {\n      if (isCallableTool(tool)) {\n        const callableTool = tool as types.CallableTool;\n        const toolDeclaration = await callableTool.tool();\n        for (const declaration of toolDeclaration.functionDeclarations ?? []) {\n          if (!declaration.name) {\n            throw new Error('Function declaration name is required.');\n          }\n          if (afcTools.has(declaration.name)) {\n            throw new Error(\n              `Duplicate tool declaration name: ${declaration.name}`,\n            );\n          }\n          afcTools.set(declaration.name, callableTool);\n        }\n      }\n    }\n    return afcTools;\n  }\n\n  private async processAfcStream(\n    params: types.GenerateContentParameters,\n  ): Promise<AsyncGenerator<types.GenerateContentResponse>> {\n    const maxRemoteCalls =\n      params.config?.automaticFunctionCalling?.maximumRemoteCalls ??\n      DEFAULT_MAX_REMOTE_CALLS;\n    let wereFunctionsCalled = false;\n    let remoteCallCount = 0;\n    const afcToolsMap = await this.initAfcToolsMap(params);\n    return (async function* (\n      models: Models,\n      afcTools: Map<string, types.CallableTool>,\n      params: types.GenerateContentParameters,\n    ) {\n      while (remoteCallCount < maxRemoteCalls) {\n        if (wereFunctionsCalled) {\n          remoteCallCount++;\n          wereFunctionsCalled = false;\n        }\n        const transformedParams = await models.processParamsForMcpUsage(params);\n        const response =\n          await models.generateContentStreamInternal(transformedParams);\n\n        const functionResponses: types.Part[] = [];\n        const responseContents: types.Content[] = [];\n\n        for await (const chunk of response) {\n          yield chunk;\n          if (chunk.candidates && chunk.candidates[0]?.content) {\n            responseContents.push(chunk.candidates[0].content);\n            for (const part of chunk.candidates[0].content.parts ?? []) {\n              if (remoteCallCount < maxRemoteCalls && part.functionCall) {\n                if (!part.functionCall.name) {\n                  throw new Error(\n                    'Function call name was not returned by the model.',\n                  );\n                }\n                if (!afcTools.has(part.functionCall.name)) {\n                  throw new Error(\n                    `Automatic function calling was requested, but not all the tools the model used implement the CallableTool interface. Available tools: ${afcTools.keys()}, mising tool: ${\n                      part.functionCall.name\n                    }`,\n                  );\n                } else {\n                  const responseParts = await afcTools\n                    .get(part.functionCall.name)!\n                    .callTool([part.functionCall]);\n                  functionResponses.push(...responseParts);\n                }\n              }\n            }\n          }\n        }\n\n        if (functionResponses.length > 0) {\n          wereFunctionsCalled = true;\n          const typedResponseChunk = new types.GenerateContentResponse();\n          typedResponseChunk.candidates = [\n            {\n              content: {\n                role: 'user',\n                parts: functionResponses,\n              },\n            },\n          ];\n\n          yield typedResponseChunk;\n\n          const newContents: types.Content[] = [];\n          newContents.push(...responseContents);\n          newContents.push({\n            role: 'user',\n            parts: functionResponses,\n          });\n          const updatedContents = tContents(\n            models.apiClient,\n            params.contents,\n          ).concat(newContents);\n\n          params.contents = updatedContents;\n        } else {\n          break;\n        }\n      }\n    })(this, afcToolsMap, params);\n  }\n\n  /**\n   * Generates an image based on a text description and configuration.\n   *\n   * @param params - The parameters for generating images.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await client.models.generateImages({\n   *  model: 'imagen-3.0-generate-002',\n   *  prompt: 'Robot holding a red skateboard',\n   *  config: {\n   *    numberOfImages: 1,\n   *    includeRaiReason: true,\n   *  },\n   * });\n   * console.log(response?.generatedImages?.[0]?.image?.imageBytes);\n   * ```\n   */\n  generateImages = async (\n    params: types.GenerateImagesParameters,\n  ): Promise<types.GenerateImagesResponse> => {\n    return await this.generateImagesInternal(params).then((apiResponse) => {\n      let positivePromptSafetyAttributes;\n      const generatedImages = [];\n\n      if (apiResponse?.generatedImages) {\n        for (const generatedImage of apiResponse.generatedImages) {\n          if (\n            generatedImage &&\n            generatedImage?.safetyAttributes &&\n            generatedImage?.safetyAttributes?.contentType === 'Positive Prompt'\n          ) {\n            positivePromptSafetyAttributes = generatedImage?.safetyAttributes;\n          } else {\n            generatedImages.push(generatedImage);\n          }\n        }\n      }\n      let response: types.GenerateImagesResponse;\n\n      if (positivePromptSafetyAttributes) {\n        response = {\n          generatedImages: generatedImages,\n          positivePromptSafetyAttributes: positivePromptSafetyAttributes,\n        };\n      } else {\n        response = {\n          generatedImages: generatedImages,\n        };\n      }\n      return response;\n    });\n  };\n\n  list = async (\n    params?: types.ListModelsParameters,\n  ): Promise<Pager<types.Model>> => {\n    const defaultConfig: types.ListModelsConfig = {\n      queryBase: true,\n    };\n    const actualConfig: types.ListModelsConfig = {\n      ...defaultConfig,\n      ...params?.config,\n    };\n    const actualParams: types.ListModelsParameters = {\n      config: actualConfig,\n    };\n\n    if (this.apiClient.isVertexAI()) {\n      if (!actualParams.config!.queryBase) {\n        if (actualParams.config?.filter) {\n          throw new Error(\n            'Filtering tuned models list for Vertex AI is not currently supported',\n          );\n        } else {\n          actualParams.config!.filter = 'labels.tune-type:*';\n        }\n      }\n    }\n\n    return new Pager<types.Model>(\n      PagedItem.PAGED_ITEM_MODELS,\n      (x: types.ListModelsParameters) => this.listInternal(x),\n      await this.listInternal(actualParams),\n      actualParams,\n    );\n  };\n\n  /**\n   * Edits an image based on a prompt, list of reference images, and configuration.\n   *\n   * @param params - The parameters for editing an image.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await client.models.editImage({\n   *  model: 'imagen-3.0-capability-001',\n   *  prompt: 'Generate an image containing a mug with the product logo [1] visible on the side of the mug.',\n   *  referenceImages: [subjectReferenceImage]\n   *  config: {\n   *    numberOfImages: 1,\n   *    includeRaiReason: true,\n   *  },\n   * });\n   * console.log(response?.generatedImages?.[0]?.image?.imageBytes);\n   * ```\n   */\n  editImage = async (\n    params: types.EditImageParameters,\n  ): Promise<types.EditImageResponse> => {\n    const paramsInternal: _internal_types.EditImageParametersInternal = {\n      model: params.model,\n      prompt: params.prompt,\n      referenceImages: [],\n      config: params.config,\n    };\n    if (params.referenceImages) {\n      if (params.referenceImages) {\n        paramsInternal.referenceImages = params.referenceImages.map((img) =>\n          img.toReferenceImageAPI(),\n        );\n      }\n    }\n    return await this.editImageInternal(paramsInternal);\n  };\n\n  /**\n   * Upscales an image based on an image, upscale factor, and configuration.\n   * Only supported in Vertex AI currently.\n   *\n   * @param params - The parameters for upscaling an image.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await client.models.upscaleImage({\n   *  model: 'imagen-3.0-generate-002',\n   *  image: image,\n   *  upscaleFactor: 'x2',\n   *  config: {\n   *    includeRaiReason: true,\n   *  },\n   * });\n   * console.log(response?.generatedImages?.[0]?.image?.imageBytes);\n   * ```\n   */\n  upscaleImage = async (\n    params: types.UpscaleImageParameters,\n  ): Promise<types.UpscaleImageResponse> => {\n    let apiConfig: _internal_types.UpscaleImageAPIConfigInternal = {\n      numberOfImages: 1,\n      mode: 'upscale',\n    };\n\n    if (params.config) {\n      apiConfig = {...apiConfig, ...params.config};\n    }\n\n    const apiParams: _internal_types.UpscaleImageAPIParametersInternal = {\n      model: params.model,\n      image: params.image,\n      upscaleFactor: params.upscaleFactor,\n      config: apiConfig,\n    };\n    return await this.upscaleImageInternal(apiParams);\n  };\n\n  private async generateContentInternal(\n    params: types.GenerateContentParameters,\n  ): Promise<types.GenerateContentResponse> {\n    let response: Promise<types.GenerateContentResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.generateContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:generateContent',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateContentResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateContentResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.GenerateContentResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.generateContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:generateContent',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateContentResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateContentResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.GenerateContentResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  private async generateContentStreamInternal(\n    params: types.GenerateContentParameters,\n  ): Promise<AsyncGenerator<types.GenerateContentResponse>> {\n    let response: Promise<AsyncGenerator<types.HttpResponse>>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.generateContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:streamGenerateContent?alt=sse',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      const apiClient = this.apiClient;\n      response = apiClient.requestStream({\n        path: path,\n        queryParams: queryParams,\n        body: JSON.stringify(body),\n        httpMethod: 'POST',\n        httpOptions: params.config?.httpOptions,\n        abortSignal: params.config?.abortSignal,\n      }) as Promise<AsyncGenerator<types.HttpResponse>>;\n\n      return response.then(async function* (\n        apiResponse: AsyncGenerator<types.HttpResponse>,\n      ) {\n        for await (const chunk of apiResponse) {\n          const resp = converters.generateContentResponseFromVertex(\n            apiClient,\n            (await chunk.json()) as types.GenerateContentResponse,\n          );\n          const typedResp = new types.GenerateContentResponse();\n          Object.assign(typedResp, resp);\n          yield typedResp;\n        }\n      });\n    } else {\n      const body = converters.generateContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:streamGenerateContent?alt=sse',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      const apiClient = this.apiClient;\n      response = apiClient.requestStream({\n        path: path,\n        queryParams: queryParams,\n        body: JSON.stringify(body),\n        httpMethod: 'POST',\n        httpOptions: params.config?.httpOptions,\n        abortSignal: params.config?.abortSignal,\n      }) as Promise<AsyncGenerator<types.HttpResponse>>;\n\n      return response.then(async function* (\n        apiResponse: AsyncGenerator<types.HttpResponse>,\n      ) {\n        for await (const chunk of apiResponse) {\n          const resp = converters.generateContentResponseFromMldev(\n            apiClient,\n            (await chunk.json()) as types.GenerateContentResponse,\n          );\n          const typedResp = new types.GenerateContentResponse();\n          Object.assign(typedResp, resp);\n          yield typedResp;\n        }\n      });\n    }\n  }\n\n  /**\n   * Calculates embeddings for the given contents. Only text is supported.\n   *\n   * @param params - The parameters for embedding contents.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.embedContent({\n   *  model: 'text-embedding-004',\n   *  contents: [\n   *    'What is your name?',\n   *    'What is your favorite color?',\n   *  ],\n   *  config: {\n   *    outputDimensionality: 64,\n   *  },\n   * });\n   * console.log(response);\n   * ```\n   */\n  async embedContent(\n    params: types.EmbedContentParameters,\n  ): Promise<types.EmbedContentResponse> {\n    let response: Promise<types.EmbedContentResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.embedContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:predict',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.EmbedContentResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.embedContentResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.EmbedContentResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.embedContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:batchEmbedContents',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.EmbedContentResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.embedContentResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.EmbedContentResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  /**\n   * Generates an image based on a text description and configuration.\n   *\n   * @param params - The parameters for generating images.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.generateImages({\n   *  model: 'imagen-3.0-generate-002',\n   *  prompt: 'Robot holding a red skateboard',\n   *  config: {\n   *    numberOfImages: 1,\n   *    includeRaiReason: true,\n   *  },\n   * });\n   * console.log(response?.generatedImages?.[0]?.image?.imageBytes);\n   * ```\n   */\n  private async generateImagesInternal(\n    params: types.GenerateImagesParameters,\n  ): Promise<types.GenerateImagesResponse> {\n    let response: Promise<types.GenerateImagesResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.generateImagesParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:predict',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateImagesResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateImagesResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.GenerateImagesResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.generateImagesParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:predict',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateImagesResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateImagesResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.GenerateImagesResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  private async editImageInternal(\n    params: _internal_types.EditImageParametersInternal,\n  ): Promise<types.EditImageResponse> {\n    let response: Promise<types.EditImageResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.editImageParametersInternalToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:predict',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.EditImageResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.editImageResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.EditImageResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      throw new Error('This method is only supported by the Vertex AI.');\n    }\n  }\n\n  private async upscaleImageInternal(\n    params: _internal_types.UpscaleImageAPIParametersInternal,\n  ): Promise<types.UpscaleImageResponse> {\n    let response: Promise<types.UpscaleImageResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.upscaleImageAPIParametersInternalToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:predict',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.UpscaleImageResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.upscaleImageResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.UpscaleImageResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      throw new Error('This method is only supported by the Vertex AI.');\n    }\n  }\n\n  /**\n   * Fetches information about a model by name.\n   *\n   * @example\n   * ```ts\n   * const modelInfo = await ai.models.get({model: 'gemini-2.0-flash'});\n   * ```\n   */\n  async get(params: types.GetModelParameters): Promise<types.Model> {\n    let response: Promise<types.Model>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.getModelParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.Model>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.modelFromVertex(this.apiClient, apiResponse);\n\n        return resp as types.Model;\n      });\n    } else {\n      const body = converters.getModelParametersToMldev(this.apiClient, params);\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.Model>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.modelFromMldev(this.apiClient, apiResponse);\n\n        return resp as types.Model;\n      });\n    }\n  }\n\n  private async listInternal(\n    params: types.ListModelsParameters,\n  ): Promise<types.ListModelsResponse> {\n    let response: Promise<types.ListModelsResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.listModelsParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{models_url}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.ListModelsResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.listModelsResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.ListModelsResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.listModelsParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{models_url}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.ListModelsResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.listModelsResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.ListModelsResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  /**\n   * Updates a tuned model by its name.\n   *\n   * @param params - The parameters for updating the model.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.update({\n   *   model: 'tuned-model-name',\n   *   config: {\n   *     displayName: 'New display name',\n   *     description: 'New description',\n   *   },\n   * });\n   * ```\n   */\n  async update(params: types.UpdateModelParameters): Promise<types.Model> {\n    let response: Promise<types.Model>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.updateModelParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'PATCH',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.Model>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.modelFromVertex(this.apiClient, apiResponse);\n\n        return resp as types.Model;\n      });\n    } else {\n      const body = converters.updateModelParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'PATCH',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.Model>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.modelFromMldev(this.apiClient, apiResponse);\n\n        return resp as types.Model;\n      });\n    }\n  }\n\n  /**\n   * Deletes a tuned model by its name.\n   *\n   * @param params - The parameters for deleting the model.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.delete({model: 'tuned-model-name'});\n   * ```\n   */\n  async delete(\n    params: types.DeleteModelParameters,\n  ): Promise<types.DeleteModelResponse> {\n    let response: Promise<types.DeleteModelResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.deleteModelParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'DELETE',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.DeleteModelResponse>;\n\n      return response.then(() => {\n        const resp = converters.deleteModelResponseFromVertex();\n        const typedResp = new types.DeleteModelResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.deleteModelParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'DELETE',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.DeleteModelResponse>;\n\n      return response.then(() => {\n        const resp = converters.deleteModelResponseFromMldev();\n        const typedResp = new types.DeleteModelResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  /**\n   * Counts the number of tokens in the given contents. Multimodal input is\n   * supported for Gemini models.\n   *\n   * @param params - The parameters for counting tokens.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.countTokens({\n   *  model: 'gemini-2.0-flash',\n   *  contents: 'The quick brown fox jumps over the lazy dog.'\n   * });\n   * console.log(response);\n   * ```\n   */\n  async countTokens(\n    params: types.CountTokensParameters,\n  ): Promise<types.CountTokensResponse> {\n    let response: Promise<types.CountTokensResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.countTokensParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:countTokens',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CountTokensResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.countTokensResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.CountTokensResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.countTokensParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:countTokens',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CountTokensResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.countTokensResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.CountTokensResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  /**\n   * Given a list of contents, returns a corresponding TokensInfo containing\n   * the list of tokens and list of token ids.\n   *\n   * This method is not supported by the Gemini Developer API.\n   *\n   * @param params - The parameters for computing tokens.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.computeTokens({\n   *  model: 'gemini-2.0-flash',\n   *  contents: 'What is your name?'\n   * });\n   * console.log(response);\n   * ```\n   */\n  async computeTokens(\n    params: types.ComputeTokensParameters,\n  ): Promise<types.ComputeTokensResponse> {\n    let response: Promise<types.ComputeTokensResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.computeTokensParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:computeTokens',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.ComputeTokensResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.computeTokensResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.ComputeTokensResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      throw new Error('This method is only supported by the Vertex AI.');\n    }\n  }\n\n  /**\n   *  Generates videos based on a text description and configuration.\n   *\n   * @param params - The parameters for generating videos.\n   * @return A Promise<GenerateVideosOperation> which allows you to track the progress and eventually retrieve the generated videos using the operations.get method.\n   *\n   * @example\n   * ```ts\n   * const operation = await ai.models.generateVideos({\n   *  model: 'veo-2.0-generate-001',\n   *  prompt: 'A neon hologram of a cat driving at top speed',\n   *  config: {\n   *    numberOfVideos: 1\n   * });\n   *\n   * while (!operation.done) {\n   *   await new Promise(resolve => setTimeout(resolve, 10000));\n   *   operation = await ai.operations.getVideosOperation({operation: operation});\n   * }\n   *\n   * console.log(operation.response?.generatedVideos?.[0]?.video?.uri);\n   * ```\n   */\n\n  async generateVideos(\n    params: types.GenerateVideosParameters,\n  ): Promise<types.GenerateVideosOperation> {\n    let response: Promise<types.GenerateVideosOperation>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.generateVideosParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:predictLongRunning',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateVideosOperation>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateVideosOperationFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.GenerateVideosOperation;\n      });\n    } else {\n      const body = converters.generateVideosParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:predictLongRunning',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateVideosOperation>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateVideosOperationFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.GenerateVideosOperation;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from '../_api_client.js';\nimport * as common from '../_common.js';\nimport * as t from '../_transformers.js';\nimport * as types from '../types.js';\n\nexport function getOperationParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GetOperationParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromOperationName = common.getValueByPath(fromObject, [\n    'operationName',\n  ]);\n  if (fromOperationName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'operationName'],\n      fromOperationName,\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function getOperationParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GetOperationParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromOperationName = common.getValueByPath(fromObject, [\n    'operationName',\n  ]);\n  if (fromOperationName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'operationName'],\n      fromOperationName,\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function fetchPredictOperationParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FetchPredictOperationParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromOperationName = common.getValueByPath(fromObject, [\n    'operationName',\n  ]);\n  if (fromOperationName != null) {\n    common.setValueByPath(toObject, ['operationName'], fromOperationName);\n  }\n\n  const fromResourceName = common.getValueByPath(fromObject, ['resourceName']);\n  if (fromResourceName != null) {\n    common.setValueByPath(toObject, ['_url', 'resourceName'], fromResourceName);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function videoFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Video,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromUri = common.getValueByPath(fromObject, ['video', 'uri']);\n  if (fromUri != null) {\n    common.setValueByPath(toObject, ['uri'], fromUri);\n  }\n\n  const fromVideoBytes = common.getValueByPath(fromObject, [\n    'video',\n    'encodedVideo',\n  ]);\n  if (fromVideoBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoBytes'],\n      t.tBytes(apiClient, fromVideoBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['encoding']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function generatedVideoFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GeneratedVideo,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideo = common.getValueByPath(fromObject, ['_self']);\n  if (fromVideo != null) {\n    common.setValueByPath(\n      toObject,\n      ['video'],\n      videoFromMldev(apiClient, fromVideo),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedVideos = common.getValueByPath(fromObject, [\n    'generatedSamples',\n  ]);\n  if (fromGeneratedVideos != null) {\n    let transformedList = fromGeneratedVideos;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return generatedVideoFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['generatedVideos'], transformedList);\n  }\n\n  const fromRaiMediaFilteredCount = common.getValueByPath(fromObject, [\n    'raiMediaFilteredCount',\n  ]);\n  if (fromRaiMediaFilteredCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredCount'],\n      fromRaiMediaFilteredCount,\n    );\n  }\n\n  const fromRaiMediaFilteredReasons = common.getValueByPath(fromObject, [\n    'raiMediaFilteredReasons',\n  ]);\n  if (fromRaiMediaFilteredReasons != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredReasons'],\n      fromRaiMediaFilteredReasons,\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosOperationFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosOperation,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(toObject, ['metadata'], fromMetadata);\n  }\n\n  const fromDone = common.getValueByPath(fromObject, ['done']);\n  if (fromDone != null) {\n    common.setValueByPath(toObject, ['done'], fromDone);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(toObject, ['error'], fromError);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, [\n    'response',\n    'generateVideoResponse',\n  ]);\n  if (fromResponse != null) {\n    common.setValueByPath(\n      toObject,\n      ['response'],\n      generateVideosResponseFromMldev(apiClient, fromResponse),\n    );\n  }\n\n  return toObject;\n}\n\nexport function videoFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Video,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromUri = common.getValueByPath(fromObject, ['gcsUri']);\n  if (fromUri != null) {\n    common.setValueByPath(toObject, ['uri'], fromUri);\n  }\n\n  const fromVideoBytes = common.getValueByPath(fromObject, [\n    'bytesBase64Encoded',\n  ]);\n  if (fromVideoBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoBytes'],\n      t.tBytes(apiClient, fromVideoBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function generatedVideoFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GeneratedVideo,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideo = common.getValueByPath(fromObject, ['_self']);\n  if (fromVideo != null) {\n    common.setValueByPath(\n      toObject,\n      ['video'],\n      videoFromVertex(apiClient, fromVideo),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedVideos = common.getValueByPath(fromObject, ['videos']);\n  if (fromGeneratedVideos != null) {\n    let transformedList = fromGeneratedVideos;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return generatedVideoFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['generatedVideos'], transformedList);\n  }\n\n  const fromRaiMediaFilteredCount = common.getValueByPath(fromObject, [\n    'raiMediaFilteredCount',\n  ]);\n  if (fromRaiMediaFilteredCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredCount'],\n      fromRaiMediaFilteredCount,\n    );\n  }\n\n  const fromRaiMediaFilteredReasons = common.getValueByPath(fromObject, [\n    'raiMediaFilteredReasons',\n  ]);\n  if (fromRaiMediaFilteredReasons != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredReasons'],\n      fromRaiMediaFilteredReasons,\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosOperationFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosOperation,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(toObject, ['metadata'], fromMetadata);\n  }\n\n  const fromDone = common.getValueByPath(fromObject, ['done']);\n  if (fromDone != null) {\n    common.setValueByPath(toObject, ['done'], fromDone);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(toObject, ['error'], fromError);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(\n      toObject,\n      ['response'],\n      generateVideosResponseFromVertex(apiClient, fromResponse),\n    );\n  }\n\n  return toObject;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from './_api_client.js';\nimport * as common from './_common.js';\nimport {BaseModule} from './_common.js';\nimport * as converters from './converters/_operations_converters.js';\nimport * as types from './types.js';\n\nexport class Operations extends BaseModule {\n  constructor(private readonly apiClient: ApiClient) {\n    super();\n  }\n\n  /**\n   * Gets the status of a long-running operation.\n   *\n   * @param parameters The parameters for the get operation request.\n   * @return The updated Operation object, with the latest status or result.\n   */\n  async getVideosOperation(\n    parameters: types.OperationGetParameters,\n  ): Promise<types.GenerateVideosOperation> {\n    const operation = parameters.operation;\n    const config = parameters.config;\n\n    if (operation.name === undefined || operation.name === '') {\n      throw new Error('Operation name is required.');\n    }\n\n    if (this.apiClient.isVertexAI()) {\n      const resourceName = operation.name.split('/operations/')[0];\n      let httpOptions: types.HttpOptions | undefined = undefined;\n\n      if (config && 'httpOptions' in config) {\n        httpOptions = config.httpOptions;\n      }\n\n      return this.fetchPredictVideosOperationInternal({\n        operationName: operation.name,\n        resourceName: resourceName,\n        config: {httpOptions: httpOptions},\n      });\n    } else {\n      return this.getVideosOperationInternal({\n        operationName: operation.name,\n        config: config,\n      });\n    }\n  }\n\n  private async getVideosOperationInternal(\n    params: types.GetOperationParameters,\n  ): Promise<types.GenerateVideosOperation> {\n    let response: Promise<types.GenerateVideosOperation>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.getOperationParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{operationName}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateVideosOperation>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateVideosOperationFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.GenerateVideosOperation;\n      });\n    } else {\n      const body = converters.getOperationParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{operationName}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateVideosOperation>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateVideosOperationFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.GenerateVideosOperation;\n      });\n    }\n  }\n\n  private async fetchPredictVideosOperationInternal(\n    params: types.FetchPredictOperationParameters,\n  ): Promise<types.GenerateVideosOperation> {\n    let response: Promise<types.GenerateVideosOperation>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.fetchPredictOperationParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{resourceName}:fetchPredictOperation',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateVideosOperation>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateVideosOperationFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.GenerateVideosOperation;\n      });\n    } else {\n      throw new Error('This method is only supported by the Vertex AI.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from '../_api_client.js';\nimport * as common from '../_common.js';\nimport * as t from '../_transformers.js';\nimport * as types from '../types.js';\n\nexport function prebuiltVoiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.PrebuiltVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceName = common.getValueByPath(fromObject, ['voiceName']);\n  if (fromVoiceName != null) {\n    common.setValueByPath(toObject, ['voiceName'], fromVoiceName);\n  }\n\n  return toObject;\n}\n\nexport function prebuiltVoiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.PrebuiltVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceName = common.getValueByPath(fromObject, ['voiceName']);\n  if (fromVoiceName != null) {\n    common.setValueByPath(toObject, ['voiceName'], fromVoiceName);\n  }\n\n  return toObject;\n}\n\nexport function voiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.VoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPrebuiltVoiceConfig = common.getValueByPath(fromObject, [\n    'prebuiltVoiceConfig',\n  ]);\n  if (fromPrebuiltVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['prebuiltVoiceConfig'],\n      prebuiltVoiceConfigToMldev(apiClient, fromPrebuiltVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function voiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.VoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPrebuiltVoiceConfig = common.getValueByPath(fromObject, [\n    'prebuiltVoiceConfig',\n  ]);\n  if (fromPrebuiltVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['prebuiltVoiceConfig'],\n      prebuiltVoiceConfigToVertex(apiClient, fromPrebuiltVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function speakerVoiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SpeakerVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSpeaker = common.getValueByPath(fromObject, ['speaker']);\n  if (fromSpeaker != null) {\n    common.setValueByPath(toObject, ['speaker'], fromSpeaker);\n  }\n\n  const fromVoiceConfig = common.getValueByPath(fromObject, ['voiceConfig']);\n  if (fromVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['voiceConfig'],\n      voiceConfigToMldev(apiClient, fromVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function speakerVoiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SpeakerVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['speaker']) !== undefined) {\n    throw new Error('speaker parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['voiceConfig']) !== undefined) {\n    throw new Error('voiceConfig parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function multiSpeakerVoiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.MultiSpeakerVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSpeakerVoiceConfigs = common.getValueByPath(fromObject, [\n    'speakerVoiceConfigs',\n  ]);\n  if (fromSpeakerVoiceConfigs != null) {\n    let transformedList = fromSpeakerVoiceConfigs;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return speakerVoiceConfigToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['speakerVoiceConfigs'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function multiSpeakerVoiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.MultiSpeakerVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (\n    common.getValueByPath(fromObject, ['speakerVoiceConfigs']) !== undefined\n  ) {\n    throw new Error(\n      'speakerVoiceConfigs parameter is not supported in Vertex AI.',\n    );\n  }\n\n  return toObject;\n}\n\nexport function speechConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SpeechConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceConfig = common.getValueByPath(fromObject, ['voiceConfig']);\n  if (fromVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['voiceConfig'],\n      voiceConfigToMldev(apiClient, fromVoiceConfig),\n    );\n  }\n\n  const fromMultiSpeakerVoiceConfig = common.getValueByPath(fromObject, [\n    'multiSpeakerVoiceConfig',\n  ]);\n  if (fromMultiSpeakerVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['multiSpeakerVoiceConfig'],\n      multiSpeakerVoiceConfigToMldev(apiClient, fromMultiSpeakerVoiceConfig),\n    );\n  }\n\n  const fromLanguageCode = common.getValueByPath(fromObject, ['languageCode']);\n  if (fromLanguageCode != null) {\n    common.setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n  }\n\n  return toObject;\n}\n\nexport function speechConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SpeechConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceConfig = common.getValueByPath(fromObject, ['voiceConfig']);\n  if (fromVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['voiceConfig'],\n      voiceConfigToVertex(apiClient, fromVoiceConfig),\n    );\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['multiSpeakerVoiceConfig']) !== undefined\n  ) {\n    throw new Error(\n      'multiSpeakerVoiceConfig parameter is not supported in Vertex AI.',\n    );\n  }\n\n  const fromLanguageCode = common.getValueByPath(fromObject, ['languageCode']);\n  if (fromLanguageCode != null) {\n    common.setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n  }\n\n  return toObject;\n}\n\nexport function videoMetadataToMldev(\n  apiClient: ApiClient,\n  fromObject: types.VideoMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (fromFps != null) {\n    common.setValueByPath(toObject, ['fps'], fromFps);\n  }\n\n  const fromEndOffset = common.getValueByPath(fromObject, ['endOffset']);\n  if (fromEndOffset != null) {\n    common.setValueByPath(toObject, ['endOffset'], fromEndOffset);\n  }\n\n  const fromStartOffset = common.getValueByPath(fromObject, ['startOffset']);\n  if (fromStartOffset != null) {\n    common.setValueByPath(toObject, ['startOffset'], fromStartOffset);\n  }\n\n  return toObject;\n}\n\nexport function videoMetadataToVertex(\n  apiClient: ApiClient,\n  fromObject: types.VideoMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (fromFps != null) {\n    common.setValueByPath(toObject, ['fps'], fromFps);\n  }\n\n  const fromEndOffset = common.getValueByPath(fromObject, ['endOffset']);\n  if (fromEndOffset != null) {\n    common.setValueByPath(toObject, ['endOffset'], fromEndOffset);\n  }\n\n  const fromStartOffset = common.getValueByPath(fromObject, ['startOffset']);\n  if (fromStartOffset != null) {\n    common.setValueByPath(toObject, ['startOffset'], fromStartOffset);\n  }\n\n  return toObject;\n}\n\nexport function blobToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Blob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['displayName']) !== undefined) {\n    throw new Error('displayName parameter is not supported in Gemini API.');\n  }\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function blobToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Blob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromData = common.getValueByPath(fromObject, ['data']);\n  if (fromData != null) {\n    common.setValueByPath(toObject, ['data'], fromData);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function fileDataToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FileData,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['displayName']) !== undefined) {\n    throw new Error('displayName parameter is not supported in Gemini API.');\n  }\n\n  const fromFileUri = common.getValueByPath(fromObject, ['fileUri']);\n  if (fromFileUri != null) {\n    common.setValueByPath(toObject, ['fileUri'], fromFileUri);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function fileDataToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FileData,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromFileUri = common.getValueByPath(fromObject, ['fileUri']);\n  if (fromFileUri != null) {\n    common.setValueByPath(toObject, ['fileUri'], fromFileUri);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function partToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoMetadata'],\n      videoMetadataToMldev(apiClient, fromVideoMetadata),\n    );\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(\n      toObject,\n      ['inlineData'],\n      blobToMldev(apiClient, fromInlineData),\n    );\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(\n      toObject,\n      ['fileData'],\n      fileDataToMldev(apiClient, fromFileData),\n    );\n  }\n\n  const fromThoughtSignature = common.getValueByPath(fromObject, [\n    'thoughtSignature',\n  ]);\n  if (fromThoughtSignature != null) {\n    common.setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function partToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoMetadata'],\n      videoMetadataToVertex(apiClient, fromVideoMetadata),\n    );\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(\n      toObject,\n      ['inlineData'],\n      blobToVertex(apiClient, fromInlineData),\n    );\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(\n      toObject,\n      ['fileData'],\n      fileDataToVertex(apiClient, fromFileData),\n    );\n  }\n\n  const fromThoughtSignature = common.getValueByPath(fromObject, [\n    'thoughtSignature',\n  ]);\n  if (fromThoughtSignature != null) {\n    common.setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    let transformedList = fromParts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return partToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['parts'], transformedList);\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function contentToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    let transformedList = fromParts;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return partToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['parts'], transformedList);\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function functionDeclarationToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionDeclaration,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromBehavior = common.getValueByPath(fromObject, ['behavior']);\n  if (fromBehavior != null) {\n    common.setValueByPath(toObject, ['behavior'], fromBehavior);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromParameters = common.getValueByPath(fromObject, ['parameters']);\n  if (fromParameters != null) {\n    common.setValueByPath(toObject, ['parameters'], fromParameters);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(toObject, ['response'], fromResponse);\n  }\n\n  return toObject;\n}\n\nexport function functionDeclarationToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionDeclaration,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['behavior']) !== undefined) {\n    throw new Error('behavior parameter is not supported in Vertex AI.');\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromParameters = common.getValueByPath(fromObject, ['parameters']);\n  if (fromParameters != null) {\n    common.setValueByPath(toObject, ['parameters'], fromParameters);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(toObject, ['response'], fromResponse);\n  }\n\n  return toObject;\n}\n\nexport function intervalToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Interval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromStartTime = common.getValueByPath(fromObject, ['startTime']);\n  if (fromStartTime != null) {\n    common.setValueByPath(toObject, ['startTime'], fromStartTime);\n  }\n\n  const fromEndTime = common.getValueByPath(fromObject, ['endTime']);\n  if (fromEndTime != null) {\n    common.setValueByPath(toObject, ['endTime'], fromEndTime);\n  }\n\n  return toObject;\n}\n\nexport function intervalToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Interval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromStartTime = common.getValueByPath(fromObject, ['startTime']);\n  if (fromStartTime != null) {\n    common.setValueByPath(toObject, ['startTime'], fromStartTime);\n  }\n\n  const fromEndTime = common.getValueByPath(fromObject, ['endTime']);\n  if (fromEndTime != null) {\n    common.setValueByPath(toObject, ['endTime'], fromEndTime);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearch,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTimeRangeFilter = common.getValueByPath(fromObject, [\n    'timeRangeFilter',\n  ]);\n  if (fromTimeRangeFilter != null) {\n    common.setValueByPath(\n      toObject,\n      ['timeRangeFilter'],\n      intervalToMldev(apiClient, fromTimeRangeFilter),\n    );\n  }\n\n  return toObject;\n}\n\nexport function googleSearchToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearch,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTimeRangeFilter = common.getValueByPath(fromObject, [\n    'timeRangeFilter',\n  ]);\n  if (fromTimeRangeFilter != null) {\n    common.setValueByPath(\n      toObject,\n      ['timeRangeFilter'],\n      intervalToVertex(apiClient, fromTimeRangeFilter),\n    );\n  }\n\n  return toObject;\n}\n\nexport function dynamicRetrievalConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.DynamicRetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromDynamicThreshold = common.getValueByPath(fromObject, [\n    'dynamicThreshold',\n  ]);\n  if (fromDynamicThreshold != null) {\n    common.setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n  }\n\n  return toObject;\n}\n\nexport function dynamicRetrievalConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.DynamicRetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromDynamicThreshold = common.getValueByPath(fromObject, [\n    'dynamicThreshold',\n  ]);\n  if (fromDynamicThreshold != null) {\n    common.setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchRetrievalToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearchRetrieval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDynamicRetrievalConfig = common.getValueByPath(fromObject, [\n    'dynamicRetrievalConfig',\n  ]);\n  if (fromDynamicRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['dynamicRetrievalConfig'],\n      dynamicRetrievalConfigToMldev(apiClient, fromDynamicRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function googleSearchRetrievalToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearchRetrieval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDynamicRetrievalConfig = common.getValueByPath(fromObject, [\n    'dynamicRetrievalConfig',\n  ]);\n  if (fromDynamicRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['dynamicRetrievalConfig'],\n      dynamicRetrievalConfigToVertex(apiClient, fromDynamicRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function enterpriseWebSearchToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function enterpriseWebSearchToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function apiKeyConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ApiKeyConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['apiKeyString']) !== undefined) {\n    throw new Error('apiKeyString parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function apiKeyConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ApiKeyConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromApiKeyString = common.getValueByPath(fromObject, ['apiKeyString']);\n  if (fromApiKeyString != null) {\n    common.setValueByPath(toObject, ['apiKeyString'], fromApiKeyString);\n  }\n\n  return toObject;\n}\n\nexport function authConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.AuthConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['apiKeyConfig']) !== undefined) {\n    throw new Error('apiKeyConfig parameter is not supported in Gemini API.');\n  }\n\n  const fromAuthType = common.getValueByPath(fromObject, ['authType']);\n  if (fromAuthType != null) {\n    common.setValueByPath(toObject, ['authType'], fromAuthType);\n  }\n\n  const fromGoogleServiceAccountConfig = common.getValueByPath(fromObject, [\n    'googleServiceAccountConfig',\n  ]);\n  if (fromGoogleServiceAccountConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleServiceAccountConfig'],\n      fromGoogleServiceAccountConfig,\n    );\n  }\n\n  const fromHttpBasicAuthConfig = common.getValueByPath(fromObject, [\n    'httpBasicAuthConfig',\n  ]);\n  if (fromHttpBasicAuthConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['httpBasicAuthConfig'],\n      fromHttpBasicAuthConfig,\n    );\n  }\n\n  const fromOauthConfig = common.getValueByPath(fromObject, ['oauthConfig']);\n  if (fromOauthConfig != null) {\n    common.setValueByPath(toObject, ['oauthConfig'], fromOauthConfig);\n  }\n\n  const fromOidcConfig = common.getValueByPath(fromObject, ['oidcConfig']);\n  if (fromOidcConfig != null) {\n    common.setValueByPath(toObject, ['oidcConfig'], fromOidcConfig);\n  }\n\n  return toObject;\n}\n\nexport function authConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.AuthConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromApiKeyConfig = common.getValueByPath(fromObject, ['apiKeyConfig']);\n  if (fromApiKeyConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['apiKeyConfig'],\n      apiKeyConfigToVertex(apiClient, fromApiKeyConfig),\n    );\n  }\n\n  const fromAuthType = common.getValueByPath(fromObject, ['authType']);\n  if (fromAuthType != null) {\n    common.setValueByPath(toObject, ['authType'], fromAuthType);\n  }\n\n  const fromGoogleServiceAccountConfig = common.getValueByPath(fromObject, [\n    'googleServiceAccountConfig',\n  ]);\n  if (fromGoogleServiceAccountConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleServiceAccountConfig'],\n      fromGoogleServiceAccountConfig,\n    );\n  }\n\n  const fromHttpBasicAuthConfig = common.getValueByPath(fromObject, [\n    'httpBasicAuthConfig',\n  ]);\n  if (fromHttpBasicAuthConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['httpBasicAuthConfig'],\n      fromHttpBasicAuthConfig,\n    );\n  }\n\n  const fromOauthConfig = common.getValueByPath(fromObject, ['oauthConfig']);\n  if (fromOauthConfig != null) {\n    common.setValueByPath(toObject, ['oauthConfig'], fromOauthConfig);\n  }\n\n  const fromOidcConfig = common.getValueByPath(fromObject, ['oidcConfig']);\n  if (fromOidcConfig != null) {\n    common.setValueByPath(toObject, ['oidcConfig'], fromOidcConfig);\n  }\n\n  return toObject;\n}\n\nexport function googleMapsToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleMaps,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['authConfig']) !== undefined) {\n    throw new Error('authConfig parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function googleMapsToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleMaps,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAuthConfig = common.getValueByPath(fromObject, ['authConfig']);\n  if (fromAuthConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['authConfig'],\n      authConfigToVertex(apiClient, fromAuthConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function urlContextToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function urlContextToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function toolToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Tool,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionDeclarations = common.getValueByPath(fromObject, [\n    'functionDeclarations',\n  ]);\n  if (fromFunctionDeclarations != null) {\n    let transformedList = fromFunctionDeclarations;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return functionDeclarationToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['functionDeclarations'], transformedList);\n  }\n\n  if (common.getValueByPath(fromObject, ['retrieval']) !== undefined) {\n    throw new Error('retrieval parameter is not supported in Gemini API.');\n  }\n\n  const fromGoogleSearch = common.getValueByPath(fromObject, ['googleSearch']);\n  if (fromGoogleSearch != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearch'],\n      googleSearchToMldev(apiClient, fromGoogleSearch),\n    );\n  }\n\n  const fromGoogleSearchRetrieval = common.getValueByPath(fromObject, [\n    'googleSearchRetrieval',\n  ]);\n  if (fromGoogleSearchRetrieval != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearchRetrieval'],\n      googleSearchRetrievalToMldev(apiClient, fromGoogleSearchRetrieval),\n    );\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['enterpriseWebSearch']) !== undefined\n  ) {\n    throw new Error(\n      'enterpriseWebSearch parameter is not supported in Gemini API.',\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['googleMaps']) !== undefined) {\n    throw new Error('googleMaps parameter is not supported in Gemini API.');\n  }\n\n  const fromUrlContext = common.getValueByPath(fromObject, ['urlContext']);\n  if (fromUrlContext != null) {\n    common.setValueByPath(toObject, ['urlContext'], urlContextToMldev());\n  }\n\n  const fromCodeExecution = common.getValueByPath(fromObject, [\n    'codeExecution',\n  ]);\n  if (fromCodeExecution != null) {\n    common.setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n  }\n\n  return toObject;\n}\n\nexport function toolToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Tool,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionDeclarations = common.getValueByPath(fromObject, [\n    'functionDeclarations',\n  ]);\n  if (fromFunctionDeclarations != null) {\n    let transformedList = fromFunctionDeclarations;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return functionDeclarationToVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['functionDeclarations'], transformedList);\n  }\n\n  const fromRetrieval = common.getValueByPath(fromObject, ['retrieval']);\n  if (fromRetrieval != null) {\n    common.setValueByPath(toObject, ['retrieval'], fromRetrieval);\n  }\n\n  const fromGoogleSearch = common.getValueByPath(fromObject, ['googleSearch']);\n  if (fromGoogleSearch != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearch'],\n      googleSearchToVertex(apiClient, fromGoogleSearch),\n    );\n  }\n\n  const fromGoogleSearchRetrieval = common.getValueByPath(fromObject, [\n    'googleSearchRetrieval',\n  ]);\n  if (fromGoogleSearchRetrieval != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearchRetrieval'],\n      googleSearchRetrievalToVertex(apiClient, fromGoogleSearchRetrieval),\n    );\n  }\n\n  const fromEnterpriseWebSearch = common.getValueByPath(fromObject, [\n    'enterpriseWebSearch',\n  ]);\n  if (fromEnterpriseWebSearch != null) {\n    common.setValueByPath(\n      toObject,\n      ['enterpriseWebSearch'],\n      enterpriseWebSearchToVertex(),\n    );\n  }\n\n  const fromGoogleMaps = common.getValueByPath(fromObject, ['googleMaps']);\n  if (fromGoogleMaps != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleMaps'],\n      googleMapsToVertex(apiClient, fromGoogleMaps),\n    );\n  }\n\n  const fromUrlContext = common.getValueByPath(fromObject, ['urlContext']);\n  if (fromUrlContext != null) {\n    common.setValueByPath(toObject, ['urlContext'], urlContextToVertex());\n  }\n\n  const fromCodeExecution = common.getValueByPath(fromObject, [\n    'codeExecution',\n  ]);\n  if (fromCodeExecution != null) {\n    common.setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n  }\n\n  return toObject;\n}\n\nexport function sessionResumptionConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SessionResumptionConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromHandle = common.getValueByPath(fromObject, ['handle']);\n  if (fromHandle != null) {\n    common.setValueByPath(toObject, ['handle'], fromHandle);\n  }\n\n  if (common.getValueByPath(fromObject, ['transparent']) !== undefined) {\n    throw new Error('transparent parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function sessionResumptionConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SessionResumptionConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromHandle = common.getValueByPath(fromObject, ['handle']);\n  if (fromHandle != null) {\n    common.setValueByPath(toObject, ['handle'], fromHandle);\n  }\n\n  const fromTransparent = common.getValueByPath(fromObject, ['transparent']);\n  if (fromTransparent != null) {\n    common.setValueByPath(toObject, ['transparent'], fromTransparent);\n  }\n\n  return toObject;\n}\n\nexport function audioTranscriptionConfigToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function audioTranscriptionConfigToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function automaticActivityDetectionToMldev(\n  apiClient: ApiClient,\n  fromObject: types.AutomaticActivityDetection,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisabled = common.getValueByPath(fromObject, ['disabled']);\n  if (fromDisabled != null) {\n    common.setValueByPath(toObject, ['disabled'], fromDisabled);\n  }\n\n  const fromStartOfSpeechSensitivity = common.getValueByPath(fromObject, [\n    'startOfSpeechSensitivity',\n  ]);\n  if (fromStartOfSpeechSensitivity != null) {\n    common.setValueByPath(\n      toObject,\n      ['startOfSpeechSensitivity'],\n      fromStartOfSpeechSensitivity,\n    );\n  }\n\n  const fromEndOfSpeechSensitivity = common.getValueByPath(fromObject, [\n    'endOfSpeechSensitivity',\n  ]);\n  if (fromEndOfSpeechSensitivity != null) {\n    common.setValueByPath(\n      toObject,\n      ['endOfSpeechSensitivity'],\n      fromEndOfSpeechSensitivity,\n    );\n  }\n\n  const fromPrefixPaddingMs = common.getValueByPath(fromObject, [\n    'prefixPaddingMs',\n  ]);\n  if (fromPrefixPaddingMs != null) {\n    common.setValueByPath(toObject, ['prefixPaddingMs'], fromPrefixPaddingMs);\n  }\n\n  const fromSilenceDurationMs = common.getValueByPath(fromObject, [\n    'silenceDurationMs',\n  ]);\n  if (fromSilenceDurationMs != null) {\n    common.setValueByPath(\n      toObject,\n      ['silenceDurationMs'],\n      fromSilenceDurationMs,\n    );\n  }\n\n  return toObject;\n}\n\nexport function automaticActivityDetectionToVertex(\n  apiClient: ApiClient,\n  fromObject: types.AutomaticActivityDetection,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisabled = common.getValueByPath(fromObject, ['disabled']);\n  if (fromDisabled != null) {\n    common.setValueByPath(toObject, ['disabled'], fromDisabled);\n  }\n\n  const fromStartOfSpeechSensitivity = common.getValueByPath(fromObject, [\n    'startOfSpeechSensitivity',\n  ]);\n  if (fromStartOfSpeechSensitivity != null) {\n    common.setValueByPath(\n      toObject,\n      ['startOfSpeechSensitivity'],\n      fromStartOfSpeechSensitivity,\n    );\n  }\n\n  const fromEndOfSpeechSensitivity = common.getValueByPath(fromObject, [\n    'endOfSpeechSensitivity',\n  ]);\n  if (fromEndOfSpeechSensitivity != null) {\n    common.setValueByPath(\n      toObject,\n      ['endOfSpeechSensitivity'],\n      fromEndOfSpeechSensitivity,\n    );\n  }\n\n  const fromPrefixPaddingMs = common.getValueByPath(fromObject, [\n    'prefixPaddingMs',\n  ]);\n  if (fromPrefixPaddingMs != null) {\n    common.setValueByPath(toObject, ['prefixPaddingMs'], fromPrefixPaddingMs);\n  }\n\n  const fromSilenceDurationMs = common.getValueByPath(fromObject, [\n    'silenceDurationMs',\n  ]);\n  if (fromSilenceDurationMs != null) {\n    common.setValueByPath(\n      toObject,\n      ['silenceDurationMs'],\n      fromSilenceDurationMs,\n    );\n  }\n\n  return toObject;\n}\n\nexport function realtimeInputConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.RealtimeInputConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAutomaticActivityDetection = common.getValueByPath(fromObject, [\n    'automaticActivityDetection',\n  ]);\n  if (fromAutomaticActivityDetection != null) {\n    common.setValueByPath(\n      toObject,\n      ['automaticActivityDetection'],\n      automaticActivityDetectionToMldev(\n        apiClient,\n        fromAutomaticActivityDetection,\n      ),\n    );\n  }\n\n  const fromActivityHandling = common.getValueByPath(fromObject, [\n    'activityHandling',\n  ]);\n  if (fromActivityHandling != null) {\n    common.setValueByPath(toObject, ['activityHandling'], fromActivityHandling);\n  }\n\n  const fromTurnCoverage = common.getValueByPath(fromObject, ['turnCoverage']);\n  if (fromTurnCoverage != null) {\n    common.setValueByPath(toObject, ['turnCoverage'], fromTurnCoverage);\n  }\n\n  return toObject;\n}\n\nexport function realtimeInputConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.RealtimeInputConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAutomaticActivityDetection = common.getValueByPath(fromObject, [\n    'automaticActivityDetection',\n  ]);\n  if (fromAutomaticActivityDetection != null) {\n    common.setValueByPath(\n      toObject,\n      ['automaticActivityDetection'],\n      automaticActivityDetectionToVertex(\n        apiClient,\n        fromAutomaticActivityDetection,\n      ),\n    );\n  }\n\n  const fromActivityHandling = common.getValueByPath(fromObject, [\n    'activityHandling',\n  ]);\n  if (fromActivityHandling != null) {\n    common.setValueByPath(toObject, ['activityHandling'], fromActivityHandling);\n  }\n\n  const fromTurnCoverage = common.getValueByPath(fromObject, ['turnCoverage']);\n  if (fromTurnCoverage != null) {\n    common.setValueByPath(toObject, ['turnCoverage'], fromTurnCoverage);\n  }\n\n  return toObject;\n}\n\nexport function slidingWindowToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SlidingWindow,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTargetTokens = common.getValueByPath(fromObject, ['targetTokens']);\n  if (fromTargetTokens != null) {\n    common.setValueByPath(toObject, ['targetTokens'], fromTargetTokens);\n  }\n\n  return toObject;\n}\n\nexport function slidingWindowToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SlidingWindow,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTargetTokens = common.getValueByPath(fromObject, ['targetTokens']);\n  if (fromTargetTokens != null) {\n    common.setValueByPath(toObject, ['targetTokens'], fromTargetTokens);\n  }\n\n  return toObject;\n}\n\nexport function contextWindowCompressionConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ContextWindowCompressionConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTriggerTokens = common.getValueByPath(fromObject, [\n    'triggerTokens',\n  ]);\n  if (fromTriggerTokens != null) {\n    common.setValueByPath(toObject, ['triggerTokens'], fromTriggerTokens);\n  }\n\n  const fromSlidingWindow = common.getValueByPath(fromObject, [\n    'slidingWindow',\n  ]);\n  if (fromSlidingWindow != null) {\n    common.setValueByPath(\n      toObject,\n      ['slidingWindow'],\n      slidingWindowToMldev(apiClient, fromSlidingWindow),\n    );\n  }\n\n  return toObject;\n}\n\nexport function contextWindowCompressionConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ContextWindowCompressionConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTriggerTokens = common.getValueByPath(fromObject, [\n    'triggerTokens',\n  ]);\n  if (fromTriggerTokens != null) {\n    common.setValueByPath(toObject, ['triggerTokens'], fromTriggerTokens);\n  }\n\n  const fromSlidingWindow = common.getValueByPath(fromObject, [\n    'slidingWindow',\n  ]);\n  if (fromSlidingWindow != null) {\n    common.setValueByPath(\n      toObject,\n      ['slidingWindow'],\n      slidingWindowToVertex(apiClient, fromSlidingWindow),\n    );\n  }\n\n  return toObject;\n}\n\nexport function proactivityConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ProactivityConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromProactiveAudio = common.getValueByPath(fromObject, [\n    'proactiveAudio',\n  ]);\n  if (fromProactiveAudio != null) {\n    common.setValueByPath(toObject, ['proactiveAudio'], fromProactiveAudio);\n  }\n\n  return toObject;\n}\n\nexport function proactivityConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ProactivityConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromProactiveAudio = common.getValueByPath(fromObject, [\n    'proactiveAudio',\n  ]);\n  if (fromProactiveAudio != null) {\n    common.setValueByPath(toObject, ['proactiveAudio'], fromProactiveAudio);\n  }\n\n  return toObject;\n}\n\nexport function liveConnectConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveConnectConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGenerationConfig = common.getValueByPath(fromObject, [\n    'generationConfig',\n  ]);\n  if (parentObject !== undefined && fromGenerationConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig'],\n      fromGenerationConfig,\n    );\n  }\n\n  const fromResponseModalities = common.getValueByPath(fromObject, [\n    'responseModalities',\n  ]);\n  if (parentObject !== undefined && fromResponseModalities != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'responseModalities'],\n      fromResponseModalities,\n    );\n  }\n\n  const fromTemperature = common.getValueByPath(fromObject, ['temperature']);\n  if (parentObject !== undefined && fromTemperature != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'temperature'],\n      fromTemperature,\n    );\n  }\n\n  const fromTopP = common.getValueByPath(fromObject, ['topP']);\n  if (parentObject !== undefined && fromTopP != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'topP'],\n      fromTopP,\n    );\n  }\n\n  const fromTopK = common.getValueByPath(fromObject, ['topK']);\n  if (parentObject !== undefined && fromTopK != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'topK'],\n      fromTopK,\n    );\n  }\n\n  const fromMaxOutputTokens = common.getValueByPath(fromObject, [\n    'maxOutputTokens',\n  ]);\n  if (parentObject !== undefined && fromMaxOutputTokens != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'maxOutputTokens'],\n      fromMaxOutputTokens,\n    );\n  }\n\n  const fromMediaResolution = common.getValueByPath(fromObject, [\n    'mediaResolution',\n  ]);\n  if (parentObject !== undefined && fromMediaResolution != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'mediaResolution'],\n      fromMediaResolution,\n    );\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (parentObject !== undefined && fromSeed != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'seed'],\n      fromSeed,\n    );\n  }\n\n  const fromSpeechConfig = common.getValueByPath(fromObject, ['speechConfig']);\n  if (parentObject !== undefined && fromSpeechConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'speechConfig'],\n      speechConfigToMldev(\n        apiClient,\n        t.tLiveSpeechConfig(apiClient, fromSpeechConfig),\n      ),\n    );\n  }\n\n  const fromEnableAffectiveDialog = common.getValueByPath(fromObject, [\n    'enableAffectiveDialog',\n  ]);\n  if (parentObject !== undefined && fromEnableAffectiveDialog != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'enableAffectiveDialog'],\n      fromEnableAffectiveDialog,\n    );\n  }\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'systemInstruction'],\n      contentToMldev(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    let transformedList = t.tTools(apiClient, fromTools);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return toolToMldev(apiClient, t.tTool(apiClient, item));\n      });\n    }\n    common.setValueByPath(parentObject, ['setup', 'tools'], transformedList);\n  }\n\n  const fromSessionResumption = common.getValueByPath(fromObject, [\n    'sessionResumption',\n  ]);\n  if (parentObject !== undefined && fromSessionResumption != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'sessionResumption'],\n      sessionResumptionConfigToMldev(apiClient, fromSessionResumption),\n    );\n  }\n\n  const fromInputAudioTranscription = common.getValueByPath(fromObject, [\n    'inputAudioTranscription',\n  ]);\n  if (parentObject !== undefined && fromInputAudioTranscription != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'inputAudioTranscription'],\n      audioTranscriptionConfigToMldev(),\n    );\n  }\n\n  const fromOutputAudioTranscription = common.getValueByPath(fromObject, [\n    'outputAudioTranscription',\n  ]);\n  if (parentObject !== undefined && fromOutputAudioTranscription != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'outputAudioTranscription'],\n      audioTranscriptionConfigToMldev(),\n    );\n  }\n\n  const fromRealtimeInputConfig = common.getValueByPath(fromObject, [\n    'realtimeInputConfig',\n  ]);\n  if (parentObject !== undefined && fromRealtimeInputConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'realtimeInputConfig'],\n      realtimeInputConfigToMldev(apiClient, fromRealtimeInputConfig),\n    );\n  }\n\n  const fromContextWindowCompression = common.getValueByPath(fromObject, [\n    'contextWindowCompression',\n  ]);\n  if (parentObject !== undefined && fromContextWindowCompression != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'contextWindowCompression'],\n      contextWindowCompressionConfigToMldev(\n        apiClient,\n        fromContextWindowCompression,\n      ),\n    );\n  }\n\n  const fromProactivity = common.getValueByPath(fromObject, ['proactivity']);\n  if (parentObject !== undefined && fromProactivity != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'proactivity'],\n      proactivityConfigToMldev(apiClient, fromProactivity),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveConnectConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveConnectConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGenerationConfig = common.getValueByPath(fromObject, [\n    'generationConfig',\n  ]);\n  if (parentObject !== undefined && fromGenerationConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig'],\n      fromGenerationConfig,\n    );\n  }\n\n  const fromResponseModalities = common.getValueByPath(fromObject, [\n    'responseModalities',\n  ]);\n  if (parentObject !== undefined && fromResponseModalities != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'responseModalities'],\n      fromResponseModalities,\n    );\n  }\n\n  const fromTemperature = common.getValueByPath(fromObject, ['temperature']);\n  if (parentObject !== undefined && fromTemperature != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'temperature'],\n      fromTemperature,\n    );\n  }\n\n  const fromTopP = common.getValueByPath(fromObject, ['topP']);\n  if (parentObject !== undefined && fromTopP != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'topP'],\n      fromTopP,\n    );\n  }\n\n  const fromTopK = common.getValueByPath(fromObject, ['topK']);\n  if (parentObject !== undefined && fromTopK != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'topK'],\n      fromTopK,\n    );\n  }\n\n  const fromMaxOutputTokens = common.getValueByPath(fromObject, [\n    'maxOutputTokens',\n  ]);\n  if (parentObject !== undefined && fromMaxOutputTokens != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'maxOutputTokens'],\n      fromMaxOutputTokens,\n    );\n  }\n\n  const fromMediaResolution = common.getValueByPath(fromObject, [\n    'mediaResolution',\n  ]);\n  if (parentObject !== undefined && fromMediaResolution != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'mediaResolution'],\n      fromMediaResolution,\n    );\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (parentObject !== undefined && fromSeed != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'seed'],\n      fromSeed,\n    );\n  }\n\n  const fromSpeechConfig = common.getValueByPath(fromObject, ['speechConfig']);\n  if (parentObject !== undefined && fromSpeechConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'speechConfig'],\n      speechConfigToVertex(\n        apiClient,\n        t.tLiveSpeechConfig(apiClient, fromSpeechConfig),\n      ),\n    );\n  }\n\n  const fromEnableAffectiveDialog = common.getValueByPath(fromObject, [\n    'enableAffectiveDialog',\n  ]);\n  if (parentObject !== undefined && fromEnableAffectiveDialog != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'generationConfig', 'enableAffectiveDialog'],\n      fromEnableAffectiveDialog,\n    );\n  }\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'systemInstruction'],\n      contentToVertex(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    let transformedList = t.tTools(apiClient, fromTools);\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return toolToVertex(apiClient, t.tTool(apiClient, item));\n      });\n    }\n    common.setValueByPath(parentObject, ['setup', 'tools'], transformedList);\n  }\n\n  const fromSessionResumption = common.getValueByPath(fromObject, [\n    'sessionResumption',\n  ]);\n  if (parentObject !== undefined && fromSessionResumption != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'sessionResumption'],\n      sessionResumptionConfigToVertex(apiClient, fromSessionResumption),\n    );\n  }\n\n  const fromInputAudioTranscription = common.getValueByPath(fromObject, [\n    'inputAudioTranscription',\n  ]);\n  if (parentObject !== undefined && fromInputAudioTranscription != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'inputAudioTranscription'],\n      audioTranscriptionConfigToVertex(),\n    );\n  }\n\n  const fromOutputAudioTranscription = common.getValueByPath(fromObject, [\n    'outputAudioTranscription',\n  ]);\n  if (parentObject !== undefined && fromOutputAudioTranscription != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'outputAudioTranscription'],\n      audioTranscriptionConfigToVertex(),\n    );\n  }\n\n  const fromRealtimeInputConfig = common.getValueByPath(fromObject, [\n    'realtimeInputConfig',\n  ]);\n  if (parentObject !== undefined && fromRealtimeInputConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'realtimeInputConfig'],\n      realtimeInputConfigToVertex(apiClient, fromRealtimeInputConfig),\n    );\n  }\n\n  const fromContextWindowCompression = common.getValueByPath(fromObject, [\n    'contextWindowCompression',\n  ]);\n  if (parentObject !== undefined && fromContextWindowCompression != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'contextWindowCompression'],\n      contextWindowCompressionConfigToVertex(\n        apiClient,\n        fromContextWindowCompression,\n      ),\n    );\n  }\n\n  const fromProactivity = common.getValueByPath(fromObject, ['proactivity']);\n  if (parentObject !== undefined && fromProactivity != null) {\n    common.setValueByPath(\n      parentObject,\n      ['setup', 'proactivity'],\n      proactivityConfigToVertex(apiClient, fromProactivity),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveConnectConstraintsToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveConnectConstraints,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['setup', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      liveConnectConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveConnectConstraintsToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveConnectConstraints,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['model']) !== undefined) {\n    throw new Error('model parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['config']) !== undefined) {\n    throw new Error('config parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function createAuthTokenConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CreateAuthTokenConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (parentObject !== undefined && fromExpireTime != null) {\n    common.setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n  }\n\n  const fromNewSessionExpireTime = common.getValueByPath(fromObject, [\n    'newSessionExpireTime',\n  ]);\n  if (parentObject !== undefined && fromNewSessionExpireTime != null) {\n    common.setValueByPath(\n      parentObject,\n      ['newSessionExpireTime'],\n      fromNewSessionExpireTime,\n    );\n  }\n\n  const fromUses = common.getValueByPath(fromObject, ['uses']);\n  if (parentObject !== undefined && fromUses != null) {\n    common.setValueByPath(parentObject, ['uses'], fromUses);\n  }\n\n  const fromLiveConnectConstraints = common.getValueByPath(fromObject, [\n    'liveConnectConstraints',\n  ]);\n  if (parentObject !== undefined && fromLiveConnectConstraints != null) {\n    common.setValueByPath(\n      parentObject,\n      ['bidiGenerateContentSetup'],\n      liveConnectConstraintsToMldev(apiClient, fromLiveConnectConstraints),\n    );\n  }\n\n  const fromLockAdditionalFields = common.getValueByPath(fromObject, [\n    'lockAdditionalFields',\n  ]);\n  if (parentObject !== undefined && fromLockAdditionalFields != null) {\n    common.setValueByPath(\n      parentObject,\n      ['fieldMask'],\n      fromLockAdditionalFields,\n    );\n  }\n\n  return toObject;\n}\n\nexport function createAuthTokenConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.CreateAuthTokenConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['expireTime']) !== undefined) {\n    throw new Error('expireTime parameter is not supported in Vertex AI.');\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['newSessionExpireTime']) !== undefined\n  ) {\n    throw new Error(\n      'newSessionExpireTime parameter is not supported in Vertex AI.',\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['uses']) !== undefined) {\n    throw new Error('uses parameter is not supported in Vertex AI.');\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['liveConnectConstraints']) !== undefined\n  ) {\n    throw new Error(\n      'liveConnectConstraints parameter is not supported in Vertex AI.',\n    );\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['lockAdditionalFields']) !== undefined\n  ) {\n    throw new Error(\n      'lockAdditionalFields parameter is not supported in Vertex AI.',\n    );\n  }\n\n  return toObject;\n}\n\nexport function createAuthTokenParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CreateAuthTokenParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      createAuthTokenConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function createAuthTokenParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.CreateAuthTokenParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['config']) !== undefined) {\n    throw new Error('config parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function authTokenFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.AuthToken,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  return toObject;\n}\n\nexport function authTokenFromVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ApiClient} from './_api_client.js';\nimport * as common from './_common.js';\nimport {BaseModule} from './_common.js';\nimport * as converters from './converters/_tokens_converters.js';\nimport * as types from './types.js';\n\n/**\n * Returns a comma-separated list of field masks from a given object.\n *\n * @param setup The object to extract field masks from.\n * @return A comma-separated list of field masks.\n */\nfunction getFieldMasks(setup: Record<string, unknown>): string {\n  const fields: string[] = [];\n\n  for (const key in setup) {\n    if (Object.prototype.hasOwnProperty.call(setup, key)) {\n      const value = setup[key];\n      // 2nd layer, recursively get field masks see TODO(b/418290100)\n      if (\n        typeof value === 'object' &&\n        value != null &&\n        Object.keys(value).length > 0\n      ) {\n        const field = Object.keys(value).map((kk) => `${key}.${kk}`);\n        fields.push(...field);\n      } else {\n        fields.push(key); // 1st layer\n      }\n    }\n  }\n\n  return fields.join(',');\n}\n\n/**\n * Converts bidiGenerateContentSetup.\n * @param requestDict - The request dictionary.\n * @param config - The configuration object.\n * @return - The modified request dictionary.\n */\nfunction convertBidiSetupToTokenSetup(\n  requestDict: Record<string, unknown>,\n  config?: {lockAdditionalFields?: string[]},\n): Record<string, unknown> {\n  // Convert bidiGenerateContentSetup from bidiGenerateContentSetup.setup.\n  let setupForMaskGeneration: Record<string, unknown> | null = null;\n  const bidiGenerateContentSetupValue = requestDict['bidiGenerateContentSetup'];\n  if (\n    typeof bidiGenerateContentSetupValue === 'object' &&\n    bidiGenerateContentSetupValue !== null &&\n    'setup' in bidiGenerateContentSetupValue\n  ) {\n    // Now we know bidiGenerateContentSetupValue is an object and has a 'setup'\n    // property.\n    const innerSetup = (bidiGenerateContentSetupValue as {setup: unknown})\n      .setup;\n\n    if (typeof innerSetup === 'object' && innerSetup !== null) {\n      // Valid inner setup found.\n      requestDict['bidiGenerateContentSetup'] = innerSetup;\n      setupForMaskGeneration = innerSetup as Record<string, unknown>;\n    } else {\n      // `bidiGenerateContentSetupValue.setup` is not a valid object; treat as\n      // if bidiGenerateContentSetup is invalid.\n      delete requestDict['bidiGenerateContentSetup'];\n    }\n  } else if (bidiGenerateContentSetupValue !== undefined) {\n    // `bidiGenerateContentSetup` exists but not in the expected\n    // shape {setup: {...}}; treat as invalid.\n    delete requestDict['bidiGenerateContentSetup'];\n  }\n\n  const preExistingFieldMask = requestDict['fieldMask'];\n  // Handle mask generation setup.\n  if (setupForMaskGeneration) {\n    const generatedMaskFromBidi = getFieldMasks(setupForMaskGeneration);\n\n    if (\n      Array.isArray(config?.lockAdditionalFields) &&\n      config?.lockAdditionalFields.length === 0\n    ) {\n      // Case 1: lockAdditionalFields is an empty array. Lock only fields from\n      // bidi setup.\n      if (generatedMaskFromBidi) {\n        // Only assign if mask is not empty\n        requestDict['fieldMask'] = generatedMaskFromBidi;\n      } else {\n        delete requestDict['fieldMask']; // If mask is empty, effectively no\n        // specific fields locked by bidi\n      }\n    } else if (\n      config?.lockAdditionalFields &&\n      config.lockAdditionalFields.length > 0 &&\n      preExistingFieldMask !== null &&\n      Array.isArray(preExistingFieldMask) &&\n      preExistingFieldMask.length > 0\n    ) {\n      // Case 2: Lock fields from bidi setup + additional fields\n      // (preExistingFieldMask).\n\n      const generationConfigFields = [\n        'temperature',\n        'topK',\n        'topP',\n        'maxOutputTokens',\n        'responseModalities',\n        'seed',\n        'speechConfig',\n      ];\n\n      let mappedFieldsFromPreExisting: string[] = [];\n      if (preExistingFieldMask.length > 0) {\n        mappedFieldsFromPreExisting = preExistingFieldMask.map((field) => {\n          if (generationConfigFields.includes(field)) {\n            return `generationConfig.${field}`;\n          }\n          return field; // Keep original field name if not in\n          // generationConfigFields\n        });\n      }\n\n      const finalMaskParts: string[] = [];\n      if (generatedMaskFromBidi) {\n        finalMaskParts.push(generatedMaskFromBidi);\n      }\n      if (mappedFieldsFromPreExisting.length > 0) {\n        finalMaskParts.push(...mappedFieldsFromPreExisting);\n      }\n\n      if (finalMaskParts.length > 0) {\n        requestDict['fieldMask'] = finalMaskParts.join(',');\n      } else {\n        // If no fields from bidi and no valid additional fields from\n        // pre-existing mask.\n        delete requestDict['fieldMask'];\n      }\n    } else {\n      // Case 3: \"Lock all fields\" (meaning, don't send a field_mask, let server\n      // defaults apply or all are mutable). This is hit if:\n      //  - `config.lockAdditionalFields` is undefined.\n      //  - `config.lockAdditionalFields` is non-empty, BUT\n      //  `preExistingFieldMask` is null, not a string, or an empty string.\n      delete requestDict['fieldMask'];\n    }\n  } else {\n    // No valid `bidiGenerateContentSetup` was found or extracted.\n    // \"Lock additional null fields if any\".\n    if (\n      preExistingFieldMask !== null &&\n      Array.isArray(preExistingFieldMask) &&\n      preExistingFieldMask.length > 0\n    ) {\n      // If there's a pre-existing field mask, it's a string, and it's not\n      // empty, then we should lock all fields.\n      requestDict['fieldMask'] = preExistingFieldMask.join(',');\n    } else {\n      delete requestDict['fieldMask'];\n    }\n  }\n\n  return requestDict;\n}\n\nexport class Tokens extends BaseModule {\n  constructor(private readonly apiClient: ApiClient) {\n    super();\n  }\n  /**\n   * Creates an ephemeral auth token resource.\n   *\n   * @experimental\n   *\n   * @remarks\n   * Ephermeral auth tokens is only supported in the Gemini Developer API.\n   * It can be used for the session connection to the Live constrained API.\n   *\n   * @param params - The parameters for the create request.\n   * @return The created auth token.\n   *\n   * @example\n   * ```ts\n   * // Case 1: If LiveEphemeralParameters is unset, unlock LiveConnectConfig\n   * // when using the token in Live API sessions. Each session connection can\n   * // use a different configuration.\n   * const config: CreateAuthTokenConfig = {\n   *     uses: 3,\n   *     expireTime: '2025-05-01T00:00:00Z',\n   * }\n   * const token = await ai.tokens.create(config);\n   *\n   * // Case 2: If LiveEphemeralParameters is set, lock all fields in\n   * // LiveConnectConfig when using the token in Live API sessions. For\n   * // example, changing `outputAudioTranscription` in the Live API\n   * // connection will be ignored by the API.\n   * const config: CreateAuthTokenConfig =\n   *     uses: 3,\n   *     expireTime: '2025-05-01T00:00:00Z',\n   *     LiveEphemeralParameters: {\n   *        model: 'gemini-2.0-flash-001',\n   *        config: {\n   *           'responseModalities': ['AUDIO'],\n   *           'systemInstruction': 'Always answer in English.',\n   *        }\n   *     }\n   * }\n   * const token = await ai.tokens.create(config);\n   *\n   * // Case 3: If LiveEphemeralParameters is set and lockAdditionalFields is\n   * // set, lock LiveConnectConfig with set and additional fields (e.g.\n   * // responseModalities, systemInstruction, temperature in this example) when\n   * // using the token in Live API sessions.\n   * const config: CreateAuthTokenConfig =\n   *     uses: 3,\n   *     expireTime: '2025-05-01T00:00:00Z',\n   *     LiveEphemeralParameters: {\n   *        model: 'gemini-2.0-flash-001',\n   *        config: {\n   *           'responseModalities': ['AUDIO'],\n   *           'systemInstruction': 'Always answer in English.',\n   *        }\n   *     },\n   *     lockAdditionalFields: ['temperature'],\n   * }\n   * const token = await ai.tokens.create(config);\n   *\n   * // Case 4: If LiveEphemeralParameters is set and lockAdditionalFields is\n   * // empty array, lock LiveConnectConfig with set fields (e.g.\n   * // responseModalities, systemInstruction in this example) when using the\n   * // token in Live API sessions.\n   * const config: CreateAuthTokenConfig =\n   *     uses: 3,\n   *     expireTime: '2025-05-01T00:00:00Z',\n   *     LiveEphemeralParameters: {\n   *        model: 'gemini-2.0-flash-001',\n   *        config: {\n   *           'responseModalities': ['AUDIO'],\n   *           'systemInstruction': 'Always answer in English.',\n   *        }\n   *     },\n   *     lockAdditionalFields: [],\n   * }\n   * const token = await ai.tokens.create(config);\n   * ```\n   */\n\n  async create(\n    params: types.CreateAuthTokenParameters,\n  ): Promise<types.AuthToken> {\n    let response: Promise<types.AuthToken>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      throw new Error(\n        'The client.tokens.create method is only supported by the Gemini Developer API.',\n      );\n    } else {\n      const body = converters.createAuthTokenParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'auth_tokens',\n        body['_url'] as Record<string, unknown>,\n      );\n\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      const transformedBody = convertBidiSetupToTokenSetup(body, params.config);\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(transformedBody),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.AuthToken>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.authTokenFromMldev(this.apiClient, apiResponse);\n\n        return resp as types.AuthToken;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from '../_api_client.js';\nimport * as common from '../_common.js';\nimport * as t from '../_transformers.js';\nimport * as types from '../types.js';\n\nexport function getTuningJobParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GetTuningJobParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['_url', 'name'], fromName);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function listTuningJobsConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListTuningJobsConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPageSize = common.getValueByPath(fromObject, ['pageSize']);\n  if (parentObject !== undefined && fromPageSize != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n  }\n\n  const fromPageToken = common.getValueByPath(fromObject, ['pageToken']);\n  if (parentObject !== undefined && fromPageToken != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n  }\n\n  const fromFilter = common.getValueByPath(fromObject, ['filter']);\n  if (parentObject !== undefined && fromFilter != null) {\n    common.setValueByPath(parentObject, ['_query', 'filter'], fromFilter);\n  }\n\n  return toObject;\n}\n\nexport function listTuningJobsParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListTuningJobsParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      listTuningJobsConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function tuningExampleToMldev(\n  apiClient: ApiClient,\n  fromObject: types.TuningExample,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTextInput = common.getValueByPath(fromObject, ['textInput']);\n  if (fromTextInput != null) {\n    common.setValueByPath(toObject, ['textInput'], fromTextInput);\n  }\n\n  const fromOutput = common.getValueByPath(fromObject, ['output']);\n  if (fromOutput != null) {\n    common.setValueByPath(toObject, ['output'], fromOutput);\n  }\n\n  return toObject;\n}\n\nexport function tuningDatasetToMldev(\n  apiClient: ApiClient,\n  fromObject: types.TuningDataset,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['gcsUri']) !== undefined) {\n    throw new Error('gcsUri parameter is not supported in Gemini API.');\n  }\n\n  const fromExamples = common.getValueByPath(fromObject, ['examples']);\n  if (fromExamples != null) {\n    let transformedList = fromExamples;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return tuningExampleToMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['examples', 'examples'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function tuningValidationDatasetToMldev(\n  apiClient: ApiClient,\n  fromObject: types.TuningValidationDataset,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['gcsUri']) !== undefined) {\n    throw new Error('gcsUri parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function createTuningJobConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CreateTuningJobConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['validationDataset']) !== undefined) {\n    throw new Error(\n      'validationDataset parameter is not supported in Gemini API.',\n    );\n  }\n\n  const fromTunedModelDisplayName = common.getValueByPath(fromObject, [\n    'tunedModelDisplayName',\n  ]);\n  if (parentObject !== undefined && fromTunedModelDisplayName != null) {\n    common.setValueByPath(\n      parentObject,\n      ['displayName'],\n      fromTunedModelDisplayName,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['description']) !== undefined) {\n    throw new Error('description parameter is not supported in Gemini API.');\n  }\n\n  const fromEpochCount = common.getValueByPath(fromObject, ['epochCount']);\n  if (parentObject !== undefined && fromEpochCount != null) {\n    common.setValueByPath(\n      parentObject,\n      ['tuningTask', 'hyperparameters', 'epochCount'],\n      fromEpochCount,\n    );\n  }\n\n  const fromLearningRateMultiplier = common.getValueByPath(fromObject, [\n    'learningRateMultiplier',\n  ]);\n  if (fromLearningRateMultiplier != null) {\n    common.setValueByPath(\n      toObject,\n      ['tuningTask', 'hyperparameters', 'learningRateMultiplier'],\n      fromLearningRateMultiplier,\n    );\n  }\n\n  if (\n    common.getValueByPath(fromObject, ['exportLastCheckpointOnly']) !==\n    undefined\n  ) {\n    throw new Error(\n      'exportLastCheckpointOnly parameter is not supported in Gemini API.',\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['adapterSize']) !== undefined) {\n    throw new Error('adapterSize parameter is not supported in Gemini API.');\n  }\n\n  const fromBatchSize = common.getValueByPath(fromObject, ['batchSize']);\n  if (parentObject !== undefined && fromBatchSize != null) {\n    common.setValueByPath(\n      parentObject,\n      ['tuningTask', 'hyperparameters', 'batchSize'],\n      fromBatchSize,\n    );\n  }\n\n  const fromLearningRate = common.getValueByPath(fromObject, ['learningRate']);\n  if (parentObject !== undefined && fromLearningRate != null) {\n    common.setValueByPath(\n      parentObject,\n      ['tuningTask', 'hyperparameters', 'learningRate'],\n      fromLearningRate,\n    );\n  }\n\n  return toObject;\n}\n\nexport function createTuningJobParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CreateTuningJobParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromBaseModel = common.getValueByPath(fromObject, ['baseModel']);\n  if (fromBaseModel != null) {\n    common.setValueByPath(toObject, ['baseModel'], fromBaseModel);\n  }\n\n  const fromTrainingDataset = common.getValueByPath(fromObject, [\n    'trainingDataset',\n  ]);\n  if (fromTrainingDataset != null) {\n    common.setValueByPath(\n      toObject,\n      ['tuningTask', 'trainingData'],\n      tuningDatasetToMldev(apiClient, fromTrainingDataset),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      createTuningJobConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function getTuningJobParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GetTuningJobParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['_url', 'name'], fromName);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function listTuningJobsConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ListTuningJobsConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPageSize = common.getValueByPath(fromObject, ['pageSize']);\n  if (parentObject !== undefined && fromPageSize != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n  }\n\n  const fromPageToken = common.getValueByPath(fromObject, ['pageToken']);\n  if (parentObject !== undefined && fromPageToken != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n  }\n\n  const fromFilter = common.getValueByPath(fromObject, ['filter']);\n  if (parentObject !== undefined && fromFilter != null) {\n    common.setValueByPath(parentObject, ['_query', 'filter'], fromFilter);\n  }\n\n  return toObject;\n}\n\nexport function listTuningJobsParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ListTuningJobsParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      listTuningJobsConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function tuningExampleToVertex(\n  apiClient: ApiClient,\n  fromObject: types.TuningExample,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['textInput']) !== undefined) {\n    throw new Error('textInput parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['output']) !== undefined) {\n    throw new Error('output parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function tuningDatasetToVertex(\n  apiClient: ApiClient,\n  fromObject: types.TuningDataset,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGcsUri = common.getValueByPath(fromObject, ['gcsUri']);\n  if (parentObject !== undefined && fromGcsUri != null) {\n    common.setValueByPath(\n      parentObject,\n      ['supervisedTuningSpec', 'trainingDatasetUri'],\n      fromGcsUri,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['examples']) !== undefined) {\n    throw new Error('examples parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function tuningValidationDatasetToVertex(\n  apiClient: ApiClient,\n  fromObject: types.TuningValidationDataset,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGcsUri = common.getValueByPath(fromObject, ['gcsUri']);\n  if (fromGcsUri != null) {\n    common.setValueByPath(toObject, ['validationDatasetUri'], fromGcsUri);\n  }\n\n  return toObject;\n}\n\nexport function createTuningJobConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.CreateTuningJobConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromValidationDataset = common.getValueByPath(fromObject, [\n    'validationDataset',\n  ]);\n  if (parentObject !== undefined && fromValidationDataset != null) {\n    common.setValueByPath(\n      parentObject,\n      ['supervisedTuningSpec'],\n      tuningValidationDatasetToVertex(apiClient, fromValidationDataset),\n    );\n  }\n\n  const fromTunedModelDisplayName = common.getValueByPath(fromObject, [\n    'tunedModelDisplayName',\n  ]);\n  if (parentObject !== undefined && fromTunedModelDisplayName != null) {\n    common.setValueByPath(\n      parentObject,\n      ['tunedModelDisplayName'],\n      fromTunedModelDisplayName,\n    );\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (parentObject !== undefined && fromDescription != null) {\n    common.setValueByPath(parentObject, ['description'], fromDescription);\n  }\n\n  const fromEpochCount = common.getValueByPath(fromObject, ['epochCount']);\n  if (parentObject !== undefined && fromEpochCount != null) {\n    common.setValueByPath(\n      parentObject,\n      ['supervisedTuningSpec', 'hyperParameters', 'epochCount'],\n      fromEpochCount,\n    );\n  }\n\n  const fromLearningRateMultiplier = common.getValueByPath(fromObject, [\n    'learningRateMultiplier',\n  ]);\n  if (parentObject !== undefined && fromLearningRateMultiplier != null) {\n    common.setValueByPath(\n      parentObject,\n      ['supervisedTuningSpec', 'hyperParameters', 'learningRateMultiplier'],\n      fromLearningRateMultiplier,\n    );\n  }\n\n  const fromExportLastCheckpointOnly = common.getValueByPath(fromObject, [\n    'exportLastCheckpointOnly',\n  ]);\n  if (parentObject !== undefined && fromExportLastCheckpointOnly != null) {\n    common.setValueByPath(\n      parentObject,\n      ['supervisedTuningSpec', 'exportLastCheckpointOnly'],\n      fromExportLastCheckpointOnly,\n    );\n  }\n\n  const fromAdapterSize = common.getValueByPath(fromObject, ['adapterSize']);\n  if (parentObject !== undefined && fromAdapterSize != null) {\n    common.setValueByPath(\n      parentObject,\n      ['supervisedTuningSpec', 'hyperParameters', 'adapterSize'],\n      fromAdapterSize,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['batchSize']) !== undefined) {\n    throw new Error('batchSize parameter is not supported in Vertex AI.');\n  }\n\n  if (common.getValueByPath(fromObject, ['learningRate']) !== undefined) {\n    throw new Error('learningRate parameter is not supported in Vertex AI.');\n  }\n\n  return toObject;\n}\n\nexport function createTuningJobParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.CreateTuningJobParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromBaseModel = common.getValueByPath(fromObject, ['baseModel']);\n  if (fromBaseModel != null) {\n    common.setValueByPath(toObject, ['baseModel'], fromBaseModel);\n  }\n\n  const fromTrainingDataset = common.getValueByPath(fromObject, [\n    'trainingDataset',\n  ]);\n  if (fromTrainingDataset != null) {\n    common.setValueByPath(\n      toObject,\n      ['supervisedTuningSpec', 'trainingDatasetUri'],\n      tuningDatasetToVertex(apiClient, fromTrainingDataset, toObject),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      createTuningJobConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function tunedModelCheckpointFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function tunedModelFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.TunedModel,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['name']);\n  if (fromModel != null) {\n    common.setValueByPath(toObject, ['model'], fromModel);\n  }\n\n  const fromEndpoint = common.getValueByPath(fromObject, ['name']);\n  if (fromEndpoint != null) {\n    common.setValueByPath(toObject, ['endpoint'], fromEndpoint);\n  }\n\n  return toObject;\n}\n\nexport function tuningJobFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.TuningJob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromState = common.getValueByPath(fromObject, ['state']);\n  if (fromState != null) {\n    common.setValueByPath(\n      toObject,\n      ['state'],\n      t.tTuningJobStatus(apiClient, fromState),\n    );\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromStartTime = common.getValueByPath(fromObject, [\n    'tuningTask',\n    'startTime',\n  ]);\n  if (fromStartTime != null) {\n    common.setValueByPath(toObject, ['startTime'], fromStartTime);\n  }\n\n  const fromEndTime = common.getValueByPath(fromObject, [\n    'tuningTask',\n    'completeTime',\n  ]);\n  if (fromEndTime != null) {\n    common.setValueByPath(toObject, ['endTime'], fromEndTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromBaseModel = common.getValueByPath(fromObject, ['baseModel']);\n  if (fromBaseModel != null) {\n    common.setValueByPath(toObject, ['baseModel'], fromBaseModel);\n  }\n\n  const fromTunedModel = common.getValueByPath(fromObject, ['_self']);\n  if (fromTunedModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['tunedModel'],\n      tunedModelFromMldev(apiClient, fromTunedModel),\n    );\n  }\n\n  const fromDistillationSpec = common.getValueByPath(fromObject, [\n    'distillationSpec',\n  ]);\n  if (fromDistillationSpec != null) {\n    common.setValueByPath(toObject, ['distillationSpec'], fromDistillationSpec);\n  }\n\n  const fromExperiment = common.getValueByPath(fromObject, ['experiment']);\n  if (fromExperiment != null) {\n    common.setValueByPath(toObject, ['experiment'], fromExperiment);\n  }\n\n  const fromLabels = common.getValueByPath(fromObject, ['labels']);\n  if (fromLabels != null) {\n    common.setValueByPath(toObject, ['labels'], fromLabels);\n  }\n\n  const fromPipelineJob = common.getValueByPath(fromObject, ['pipelineJob']);\n  if (fromPipelineJob != null) {\n    common.setValueByPath(toObject, ['pipelineJob'], fromPipelineJob);\n  }\n\n  const fromServiceAccount = common.getValueByPath(fromObject, [\n    'serviceAccount',\n  ]);\n  if (fromServiceAccount != null) {\n    common.setValueByPath(toObject, ['serviceAccount'], fromServiceAccount);\n  }\n\n  const fromTunedModelDisplayName = common.getValueByPath(fromObject, [\n    'tunedModelDisplayName',\n  ]);\n  if (fromTunedModelDisplayName != null) {\n    common.setValueByPath(\n      toObject,\n      ['tunedModelDisplayName'],\n      fromTunedModelDisplayName,\n    );\n  }\n\n  return toObject;\n}\n\nexport function listTuningJobsResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListTuningJobsResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNextPageToken = common.getValueByPath(fromObject, [\n    'nextPageToken',\n  ]);\n  if (fromNextPageToken != null) {\n    common.setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n  }\n\n  const fromTuningJobs = common.getValueByPath(fromObject, ['tunedModels']);\n  if (fromTuningJobs != null) {\n    let transformedList = fromTuningJobs;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return tuningJobFromMldev(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['tuningJobs'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function operationFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Operation,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(toObject, ['metadata'], fromMetadata);\n  }\n\n  const fromDone = common.getValueByPath(fromObject, ['done']);\n  if (fromDone != null) {\n    common.setValueByPath(toObject, ['done'], fromDone);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(toObject, ['error'], fromError);\n  }\n\n  return toObject;\n}\n\nexport function tunedModelCheckpointFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.TunedModelCheckpoint,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCheckpointId = common.getValueByPath(fromObject, ['checkpointId']);\n  if (fromCheckpointId != null) {\n    common.setValueByPath(toObject, ['checkpointId'], fromCheckpointId);\n  }\n\n  const fromEpoch = common.getValueByPath(fromObject, ['epoch']);\n  if (fromEpoch != null) {\n    common.setValueByPath(toObject, ['epoch'], fromEpoch);\n  }\n\n  const fromStep = common.getValueByPath(fromObject, ['step']);\n  if (fromStep != null) {\n    common.setValueByPath(toObject, ['step'], fromStep);\n  }\n\n  const fromEndpoint = common.getValueByPath(fromObject, ['endpoint']);\n  if (fromEndpoint != null) {\n    common.setValueByPath(toObject, ['endpoint'], fromEndpoint);\n  }\n\n  return toObject;\n}\n\nexport function tunedModelFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.TunedModel,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(toObject, ['model'], fromModel);\n  }\n\n  const fromEndpoint = common.getValueByPath(fromObject, ['endpoint']);\n  if (fromEndpoint != null) {\n    common.setValueByPath(toObject, ['endpoint'], fromEndpoint);\n  }\n\n  const fromCheckpoints = common.getValueByPath(fromObject, ['checkpoints']);\n  if (fromCheckpoints != null) {\n    let transformedList = fromCheckpoints;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return tunedModelCheckpointFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['checkpoints'], transformedList);\n  }\n\n  return toObject;\n}\n\nexport function tuningJobFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.TuningJob,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromState = common.getValueByPath(fromObject, ['state']);\n  if (fromState != null) {\n    common.setValueByPath(\n      toObject,\n      ['state'],\n      t.tTuningJobStatus(apiClient, fromState),\n    );\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromStartTime = common.getValueByPath(fromObject, ['startTime']);\n  if (fromStartTime != null) {\n    common.setValueByPath(toObject, ['startTime'], fromStartTime);\n  }\n\n  const fromEndTime = common.getValueByPath(fromObject, ['endTime']);\n  if (fromEndTime != null) {\n    common.setValueByPath(toObject, ['endTime'], fromEndTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(toObject, ['error'], fromError);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromBaseModel = common.getValueByPath(fromObject, ['baseModel']);\n  if (fromBaseModel != null) {\n    common.setValueByPath(toObject, ['baseModel'], fromBaseModel);\n  }\n\n  const fromTunedModel = common.getValueByPath(fromObject, ['tunedModel']);\n  if (fromTunedModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['tunedModel'],\n      tunedModelFromVertex(apiClient, fromTunedModel),\n    );\n  }\n\n  const fromSupervisedTuningSpec = common.getValueByPath(fromObject, [\n    'supervisedTuningSpec',\n  ]);\n  if (fromSupervisedTuningSpec != null) {\n    common.setValueByPath(\n      toObject,\n      ['supervisedTuningSpec'],\n      fromSupervisedTuningSpec,\n    );\n  }\n\n  const fromTuningDataStats = common.getValueByPath(fromObject, [\n    'tuningDataStats',\n  ]);\n  if (fromTuningDataStats != null) {\n    common.setValueByPath(toObject, ['tuningDataStats'], fromTuningDataStats);\n  }\n\n  const fromEncryptionSpec = common.getValueByPath(fromObject, [\n    'encryptionSpec',\n  ]);\n  if (fromEncryptionSpec != null) {\n    common.setValueByPath(toObject, ['encryptionSpec'], fromEncryptionSpec);\n  }\n\n  const fromPartnerModelTuningSpec = common.getValueByPath(fromObject, [\n    'partnerModelTuningSpec',\n  ]);\n  if (fromPartnerModelTuningSpec != null) {\n    common.setValueByPath(\n      toObject,\n      ['partnerModelTuningSpec'],\n      fromPartnerModelTuningSpec,\n    );\n  }\n\n  const fromDistillationSpec = common.getValueByPath(fromObject, [\n    'distillationSpec',\n  ]);\n  if (fromDistillationSpec != null) {\n    common.setValueByPath(toObject, ['distillationSpec'], fromDistillationSpec);\n  }\n\n  const fromExperiment = common.getValueByPath(fromObject, ['experiment']);\n  if (fromExperiment != null) {\n    common.setValueByPath(toObject, ['experiment'], fromExperiment);\n  }\n\n  const fromLabels = common.getValueByPath(fromObject, ['labels']);\n  if (fromLabels != null) {\n    common.setValueByPath(toObject, ['labels'], fromLabels);\n  }\n\n  const fromPipelineJob = common.getValueByPath(fromObject, ['pipelineJob']);\n  if (fromPipelineJob != null) {\n    common.setValueByPath(toObject, ['pipelineJob'], fromPipelineJob);\n  }\n\n  const fromServiceAccount = common.getValueByPath(fromObject, [\n    'serviceAccount',\n  ]);\n  if (fromServiceAccount != null) {\n    common.setValueByPath(toObject, ['serviceAccount'], fromServiceAccount);\n  }\n\n  const fromTunedModelDisplayName = common.getValueByPath(fromObject, [\n    'tunedModelDisplayName',\n  ]);\n  if (fromTunedModelDisplayName != null) {\n    common.setValueByPath(\n      toObject,\n      ['tunedModelDisplayName'],\n      fromTunedModelDisplayName,\n    );\n  }\n\n  return toObject;\n}\n\nexport function listTuningJobsResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.ListTuningJobsResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNextPageToken = common.getValueByPath(fromObject, [\n    'nextPageToken',\n  ]);\n  if (fromNextPageToken != null) {\n    common.setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n  }\n\n  const fromTuningJobs = common.getValueByPath(fromObject, ['tuningJobs']);\n  if (fromTuningJobs != null) {\n    let transformedList = fromTuningJobs;\n    if (Array.isArray(transformedList)) {\n      transformedList = transformedList.map((item) => {\n        return tuningJobFromVertex(apiClient, item);\n      });\n    }\n    common.setValueByPath(toObject, ['tuningJobs'], transformedList);\n  }\n\n  return toObject;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from './_api_client.js';\nimport * as common from './_common.js';\nimport {BaseModule} from './_common.js';\nimport * as converters from './converters/_tunings_converters.js';\nimport {PagedItem, Pager} from './pagers.js';\nimport * as types from './types.js';\n\nexport class Tunings extends BaseModule {\n  constructor(private readonly apiClient: ApiClient) {\n    super();\n  }\n\n  /**\n   * Gets a TuningJob.\n   *\n   * @param name - The resource name of the tuning job.\n   * @return - A TuningJob object.\n   *\n   * @experimental - The SDK's tuning implementation is experimental, and may\n   * change in future versions.\n   */\n  get = async (\n    params: types.GetTuningJobParameters,\n  ): Promise<types.TuningJob> => {\n    return await this.getInternal(params);\n  };\n\n  /**\n   * Lists tuning jobs.\n   *\n   * @param config - The configuration for the list request.\n   * @return - A list of tuning jobs.\n   *\n   * @experimental - The SDK's tuning implementation is experimental, and may\n   * change in future versions.\n   */\n  list = async (\n    params: types.ListTuningJobsParameters = {},\n  ): Promise<Pager<types.TuningJob>> => {\n    return new Pager<types.TuningJob>(\n      PagedItem.PAGED_ITEM_TUNING_JOBS,\n      (x: types.ListTuningJobsParameters) => this.listInternal(x),\n      await this.listInternal(params),\n      params,\n    );\n  };\n\n  /**\n   * Creates a supervised fine-tuning job.\n   *\n   * @param params - The parameters for the tuning job.\n   * @return - A TuningJob operation.\n   *\n   * @experimental - The SDK's tuning implementation is experimental, and may\n   * change in future versions.\n   */\n  tune = async (\n    params: types.CreateTuningJobParameters,\n  ): Promise<types.TuningJob> => {\n    if (this.apiClient.isVertexAI()) {\n      return await this.tuneInternal(params);\n    } else {\n      const operation = await this.tuneMldevInternal(params);\n      let tunedModelName = '';\n      if (\n        operation['metadata'] !== undefined &&\n        operation['metadata']['tunedModel'] !== undefined\n      ) {\n        tunedModelName = operation['metadata']['tunedModel'] as string;\n      } else if (\n        operation['name'] !== undefined &&\n        operation['name'].includes('/operations/')\n      ) {\n        tunedModelName = operation['name'].split('/operations/')[0];\n      }\n      const tuningJob: types.TuningJob = {\n        name: tunedModelName,\n        state: types.JobState.JOB_STATE_QUEUED,\n      };\n\n      return tuningJob;\n    }\n  };\n\n  private async getInternal(\n    params: types.GetTuningJobParameters,\n  ): Promise<types.TuningJob> {\n    let response: Promise<types.TuningJob>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.getTuningJobParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.TuningJob>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.tuningJobFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.TuningJob;\n      });\n    } else {\n      const body = converters.getTuningJobParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.TuningJob>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.tuningJobFromMldev(this.apiClient, apiResponse);\n\n        return resp as types.TuningJob;\n      });\n    }\n  }\n\n  private async listInternal(\n    params: types.ListTuningJobsParameters,\n  ): Promise<types.ListTuningJobsResponse> {\n    let response: Promise<types.ListTuningJobsResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.listTuningJobsParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'tuningJobs',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.ListTuningJobsResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.listTuningJobsResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.ListTuningJobsResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.listTuningJobsParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'tunedModels',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.ListTuningJobsResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.listTuningJobsResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.ListTuningJobsResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  private async tuneInternal(\n    params: types.CreateTuningJobParameters,\n  ): Promise<types.TuningJob> {\n    let response: Promise<types.TuningJob>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.createTuningJobParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'tuningJobs',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.TuningJob>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.tuningJobFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.TuningJob;\n      });\n    } else {\n      throw new Error('This method is only supported by the Vertex AI.');\n    }\n  }\n\n  private async tuneMldevInternal(\n    params: types.CreateTuningJobParameters,\n  ): Promise<types.Operation> {\n    let response: Promise<types.Operation>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      throw new Error(\n        'This method is only supported by the Gemini Developer API.',\n      );\n    } else {\n      const body = converters.createTuningJobParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'tunedModels',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n          abortSignal: params.config?.abortSignal,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.Operation>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.operationFromMldev(this.apiClient, apiResponse);\n\n        return resp as types.Operation;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ApiClient} from '../_api_client.js';\nimport {Downloader} from '../_downloader.js';\nimport {DownloadFileParameters} from '../types.js';\n\nexport class BrowserDownloader implements Downloader {\n  async download(\n    _params: DownloadFileParameters,\n    _apiClient: ApiClient,\n  ): Promise<void> {\n    throw new Error(\n      'Download to file is not supported in the browser, please use a browser compliant download like an <a> tag.',\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {ApiClient} from '../_api_client.js';\nimport {FileStat, Uploader} from '../_uploader.js';\nimport {File, HttpResponse} from '../types.js';\n\nimport {crossError} from './_cross_error.js';\n\nexport const MAX_CHUNK_SIZE = 1024 * 1024 * 8; // bytes\nexport const MAX_RETRY_COUNT = 3;\nexport const INITIAL_RETRY_DELAY_MS = 1000;\nexport const DELAY_MULTIPLIER = 2;\nexport const X_GOOG_UPLOAD_STATUS_HEADER_FIELD = 'x-goog-upload-status';\n\nexport class CrossUploader implements Uploader {\n  async upload(\n    file: string | Blob,\n    uploadUrl: string,\n    apiClient: ApiClient,\n  ): Promise<File> {\n    if (typeof file === 'string') {\n      throw crossError();\n    } else {\n      return uploadBlob(file, uploadUrl, apiClient);\n    }\n  }\n\n  async stat(file: string | Blob): Promise<FileStat> {\n    if (typeof file === 'string') {\n      throw crossError();\n    } else {\n      return getBlobStat(file);\n    }\n  }\n}\n\nexport async function uploadBlob(\n  file: Blob,\n  uploadUrl: string,\n  apiClient: ApiClient,\n): Promise<File> {\n  let fileSize = 0;\n  let offset = 0;\n  let response: HttpResponse = new HttpResponse(new Response());\n  let uploadCommand = 'upload';\n  fileSize = file.size;\n  while (offset < fileSize) {\n    const chunkSize = Math.min(MAX_CHUNK_SIZE, fileSize - offset);\n    const chunk = file.slice(offset, offset + chunkSize);\n    if (offset + chunkSize >= fileSize) {\n      uploadCommand += ', finalize';\n    }\n    let retryCount = 0;\n    let currentDelayMs = INITIAL_RETRY_DELAY_MS;\n    while (retryCount < MAX_RETRY_COUNT) {\n      response = await apiClient.request({\n        path: '',\n        body: chunk,\n        httpMethod: 'POST',\n        httpOptions: {\n          apiVersion: '',\n          baseUrl: uploadUrl,\n          headers: {\n            'X-Goog-Upload-Command': uploadCommand,\n            'X-Goog-Upload-Offset': String(offset),\n            'Content-Length': String(chunkSize),\n          },\n        },\n      });\n      if (response?.headers?.[X_GOOG_UPLOAD_STATUS_HEADER_FIELD]) {\n        break;\n      }\n      retryCount++;\n      await sleep(currentDelayMs);\n      currentDelayMs = currentDelayMs * DELAY_MULTIPLIER;\n    }\n    offset += chunkSize;\n    // The `x-goog-upload-status` header field can be `active`, `final` and\n    //`cancelled` in resposne.\n    if (response?.headers?.[X_GOOG_UPLOAD_STATUS_HEADER_FIELD] !== 'active') {\n      break;\n    }\n    // TODO(b/401391430) Investigate why the upload status is not finalized\n    // even though all content has been uploaded.\n    if (fileSize <= offset) {\n      throw new Error(\n        'All content has been uploaded, but the upload status is not finalized.',\n      );\n    }\n  }\n  const responseJson = (await response?.json()) as Record<\n    string,\n    File | unknown\n  >;\n  if (response?.headers?.[X_GOOG_UPLOAD_STATUS_HEADER_FIELD] !== 'final') {\n    throw new Error('Failed to upload file: Upload status is not finalized.');\n  }\n  return responseJson['file'] as File;\n}\n\nexport async function getBlobStat(file: Blob): Promise<FileStat> {\n  const fileStat: FileStat = {size: file.size, type: file.type};\n  return fileStat;\n}\n\nexport function sleep(ms: number): Promise<void> {\n  return new Promise((resolvePromise) => setTimeout(resolvePromise, ms));\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {ApiClient} from '../_api_client.js';\nimport {FileStat, Uploader} from '../_uploader.js';\nimport {getBlobStat, uploadBlob} from '../cross/_cross_uploader.js';\nimport {File} from '../types.js';\n\nexport class BrowserUploader implements Uploader {\n  async upload(\n    file: string | Blob,\n    uploadUrl: string,\n    apiClient: ApiClient,\n  ): Promise<File> {\n    if (typeof file === 'string') {\n      throw new Error('File path is not supported in browser uploader.');\n    }\n\n    return await uploadBlob(file, uploadUrl, apiClient);\n  }\n\n  async stat(file: string | Blob): Promise<FileStat> {\n    if (typeof file === 'string') {\n      throw new Error('File path is not supported in browser uploader.');\n    } else {\n      return await getBlobStat(file);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  WebSocketCallbacks,\n  WebSocketFactory,\n  WebSocket as Ws,\n} from '../_websocket.js';\n\n// TODO((b/401271082): re-enable lint once BrowserWebSocketFactory is\n// implemented.\n/*  eslint-disable @typescript-eslint/no-unused-vars */\nexport class BrowserWebSocketFactory implements WebSocketFactory {\n  create(\n    url: string,\n    headers: Record<string, string>,\n    callbacks: WebSocketCallbacks,\n  ): Ws {\n    return new BrowserWebSocket(url, headers, callbacks);\n  }\n}\n\nexport class BrowserWebSocket implements Ws {\n  private ws?: WebSocket;\n\n  constructor(\n    private readonly url: string,\n    private readonly headers: Record<string, string>,\n    private readonly callbacks: WebSocketCallbacks,\n  ) {}\n\n  connect(): void {\n    this.ws = new WebSocket(this.url);\n\n    this.ws.onopen = this.callbacks.onopen;\n    this.ws.onerror = this.callbacks.onerror;\n    this.ws.onclose = this.callbacks.onclose;\n    this.ws.onmessage = this.callbacks.onmessage;\n  }\n\n  send(message: string) {\n    if (this.ws === undefined) {\n      throw new Error('WebSocket is not connected');\n    }\n\n    this.ws.send(message);\n  }\n\n  close() {\n    if (this.ws === undefined) {\n      throw new Error('WebSocket is not connected');\n    }\n\n    this.ws.close();\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Auth} from '../_auth.js';\n\nexport const GOOGLE_API_KEY_HEADER = 'x-goog-api-key';\n// TODO(b/395122533): We need a secure client side authentication mechanism.\nexport class WebAuth implements Auth {\n  constructor(private readonly apiKey: string) {}\n\n  async addAuthHeaders(headers: Headers): Promise<void> {\n    if (headers.get(GOOGLE_API_KEY_HEADER) !== null) {\n      return;\n    }\n\n    if (this.apiKey.startsWith('auth_tokens/')) {\n      throw new Error('Ephemeral tokens are only supported by the live API.');\n    }\n\n    // Check if API key is empty or null\n    if (!this.apiKey) {\n      throw new Error('API key is missing. Please provide a valid API key.');\n    }\n    headers.append(GOOGLE_API_KEY_HEADER, this.apiKey);\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ApiClient} from '../_api_client.js';\nimport {getBaseUrl} from '../_base_url.js';\nimport {Caches} from '../caches.js';\nimport {Chats} from '../chats.js';\nimport {GoogleGenAIOptions} from '../client.js';\nimport {Files} from '../files.js';\nimport {Live} from '../live.js';\nimport {Models} from '../models.js';\nimport {Operations} from '../operations.js';\nimport {Tokens} from '../tokens.js';\nimport {Tunings} from '../tunings.js';\n\nimport {BrowserDownloader} from './_browser_downloader.js';\nimport {BrowserUploader} from './_browser_uploader.js';\nimport {BrowserWebSocketFactory} from './_browser_websocket.js';\nimport {WebAuth} from './_web_auth.js';\n\nconst LANGUAGE_LABEL_PREFIX = 'gl-node/';\n\n/**\n * The Google GenAI SDK.\n *\n * @remarks\n * Provides access to the GenAI features through either the {@link\n * https://cloud.google.com/vertex-ai/docs/reference/rest | Gemini API} or\n * the {@link https://cloud.google.com/vertex-ai/docs/reference/rest | Vertex AI\n * API}.\n *\n * The {@link GoogleGenAIOptions.vertexai} value determines which of the API\n * services to use.\n *\n * When using the Gemini API, a {@link GoogleGenAIOptions.apiKey} must also be\n * set. When using Vertex AI, currently only {@link GoogleGenAIOptions.apiKey}\n * is supported via Express mode. {@link GoogleGenAIOptions.project} and {@link\n * GoogleGenAIOptions.location} should not be set.\n *\n * @example\n * Initializing the SDK for using the Gemini API:\n * ```ts\n * import {GoogleGenAI} from '@google/genai';\n * const ai = new GoogleGenAI({apiKey: 'GEMINI_API_KEY'});\n * ```\n *\n * @example\n * Initializing the SDK for using the Vertex AI API:\n * ```ts\n * import {GoogleGenAI} from '@google/genai';\n * const ai = new GoogleGenAI({\n *   vertexai: true,\n *   project: 'PROJECT_ID',\n *   location: 'PROJECT_LOCATION'\n * });\n * ```\n *\n */\nexport class GoogleGenAI {\n  protected readonly apiClient: ApiClient;\n  private readonly apiKey?: string;\n  public readonly vertexai: boolean;\n  private readonly apiVersion?: string;\n  readonly models: Models;\n  readonly live: Live;\n  readonly chats: Chats;\n  readonly caches: Caches;\n  readonly files: Files;\n  readonly operations: Operations;\n  readonly authTokens: Tokens;\n  readonly tunings: Tunings;\n\n  constructor(options: GoogleGenAIOptions) {\n    if (options.apiKey == null) {\n      throw new Error('An API Key must be set when running in a browser');\n    }\n    // Web client only supports API key mode for Vertex AI.\n    if (options.project || options.location) {\n      throw new Error(\n        'Vertex AI project based authentication is not supported on browser runtimes. Please do not provide a project or location.',\n      );\n    }\n    this.vertexai = options.vertexai ?? false;\n\n    this.apiKey = options.apiKey;\n\n    const baseUrl = getBaseUrl(\n      options,\n      /*vertexBaseUrlFromEnv*/ undefined,\n      /*geminiBaseUrlFromEnv*/ undefined,\n    );\n    if (baseUrl) {\n      if (options.httpOptions) {\n        options.httpOptions.baseUrl = baseUrl;\n      } else {\n        options.httpOptions = {baseUrl: baseUrl};\n      }\n    }\n\n    this.apiVersion = options.apiVersion;\n    const auth = new WebAuth(this.apiKey);\n    this.apiClient = new ApiClient({\n      auth: auth,\n      apiVersion: this.apiVersion,\n      apiKey: this.apiKey,\n      vertexai: this.vertexai,\n      httpOptions: options.httpOptions,\n      userAgentExtra: LANGUAGE_LABEL_PREFIX + 'web',\n      uploader: new BrowserUploader(),\n      downloader: new BrowserDownloader(),\n    });\n    this.models = new Models(this.apiClient);\n    this.live = new Live(this.apiClient, auth, new BrowserWebSocketFactory());\n    this.chats = new Chats(this.models, this.apiClient);\n    this.caches = new Caches(this.apiClient);\n    this.files = new Files(this.apiClient);\n    this.operations = new Operations(this.apiClient);\n    this.authTokens = new Tokens(this.apiClient);\n    this.tunings = new Tunings(this.apiClient);\n  }\n}\n","import Groq from 'groq-sdk'\r\nimport { GoogleGenAI } from '@google/genai'\r\nimport { ConversationBlock, IMemoryProvider, ProviderConfiguration } from './MemoryProviders'\r\n\r\nexport default class GeminiProvider implements IMemoryProvider {\r\n\tprivate api: GoogleGenAI\r\n\tprivate lastToken: string = ''\r\n\r\n\tconstructor() {\r\n\t\tthis.api = new GoogleGenAI({ apiKey: \"YOUR_API_KEY\" })\r\n\t}\r\n\r\n\tasync init() {\r\n\r\n\t}\r\n\r\n\tasync send(setting: Record<string, any>, history: ConversationBlock[], onUpdate: (conversation: ConversationBlock) => void, playerName: string): Promise<void> {\r\n\t\ttry {\r\n\t\t\tif (this.lastToken !== setting.Token) {\r\n\t\t\t\tthis.lastToken = setting.Token\r\n\t\t\t\tthis.api = new GoogleGenAI({ apiKey: setting.Token })\r\n\t\t\t}\r\n\r\n\t\t\thistory = [...history]\r\n\r\n\t\t\tfor (const index in history) {\r\n\t\t\t\tif (history[index].meta) {\r\n\t\t\t\t\tdelete history[index].meta\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst start = Date.now()\r\n\t\t\tconst system = history.shift()?.content\r\n\r\n\t\t\tconst chatCompletion = await this.api.models.generateContentStream({\r\n\t\t\t\tmodel: setting.Model,\r\n\t\t\t\tcontents: history.map(h => ({\r\n\t\t\t\t\trole: h.role,\r\n\t\t\t\t\tparts: [{ text: h.content }]\r\n\t\t\t\t})),\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tmaxOutputTokens: setting['Max Tokens'],\r\n\t\t\t\t\ttemperature: setting.Temperature,\r\n\t\t\t\t\tsystemInstruction: system\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlet target = ''\r\n\t\t\t\r\n\t\t\tfor await (const chunk of chatCompletion) {\r\n\t\t\t\ttarget += chunk.text\r\n\t\t\t\tconst usage = chunk.usageMetadata\r\n\t\t\t\tonUpdate({\r\n\t\t\t\t\trole: 'assistant',\r\n\t\t\t\t\tcontent: target,\r\n\t\t\t\t\tmeta: usage ? {\r\n\t\t\t\t\t\tcompletionTokens: usage.totalTokenCount ?? 0 - (usage.promptTokenCount ?? 0),\r\n\t\t\t\t\t\tcontextTokens: usage.promptTokenCount ?? 0,\r\n\t\t\t\t\t\tdelay: (Date.now() - start) / 1000\r\n\t\t\t\t\t} : undefined\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tconsole.log('error', e)\r\n\t\t\tconsole.log(e instanceof Groq.APIError)\r\n\t\t\tif (e instanceof Groq.APIError) {\r\n\t\t\t\tthrow new Error(`${e.error.error.code}: ${e.error.error.message}`)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow e\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trenderControls(): Record<string, ProviderConfiguration> {\r\n\t\treturn {\r\n\t\t\tToken: {\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\t// description: 'This is never saved for security reasons.'\r\n\t\t\t},\r\n\t\t\tModel: {\r\n\t\t\t\ttype: 'select',\r\n\t\t\t\tdefault: 'gemini-2.0-flash',\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t'gemini-2.5-flash-preview-05-20', \r\n\t\t\t\t\t'gemini-2.5-pro-preview-06-05',\r\n\t\t\t\t\t'gemini-2.0-flash', \r\n\t\t\t\t\t'gemini-2.0-flash-lite'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t'Max Tokens': {\r\n\t\t\t\ttype: 'number',\r\n\t\t\t\tdefault: 512,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 4096\r\n\t\t\t},\r\n\t\t\tTemperature: {\r\n\t\t\t\ttype: 'range',\r\n\t\t\t\tdefault: 1,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 2,\r\n\t\t\t\tstep: 0.1\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","function __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\")\n        throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? (f.value = value) : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nexport { __classPrivateFieldSet, __classPrivateFieldGet };\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n/**\n * https://stackoverflow.com/a/2117523\n */\nexport let uuid4 = function () {\n  const { crypto } = globalThis as any;\n  if (crypto?.randomUUID) {\n    uuid4 = crypto.randomUUID.bind(crypto);\n    return crypto.randomUUID();\n  }\n  const u8 = new Uint8Array(1);\n  const randomByte = crypto ? () => crypto.getRandomValues(u8)[0]! : () => (Math.random() * 0xff) & 0xff;\n  return '10000000-1000-4000-8000-100000000000'.replace(/[018]/g, (c) =>\n    (+c ^ (randomByte() & (15 >> (+c / 4)))).toString(16),\n  );\n};\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nexport function isAbortError(err: unknown) {\n  return (\n    typeof err === 'object' &&\n    err !== null &&\n    // Spec-compliant fetch implementations\n    (('name' in err && (err as any).name === 'AbortError') ||\n      // Expo fetch\n      ('message' in err && String((err as any).message).includes('FetchRequestCanceledException')))\n  );\n}\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      if (Object.prototype.toString.call(err) === '[object Error]') {\n        // @ts-ignore - not all envs have native support for cause yet\n        const error = new Error(err.message, err.cause ? { cause: err.cause } : {});\n        if (err.stack) error.stack = err.stack;\n        // @ts-ignore - not all envs have native support for cause yet\n        if (err.cause && !error.cause) error.cause = err.cause;\n        if (err.name) error.name = err.name;\n        return error;\n      }\n    } catch {}\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(err);\n};\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { castToError } from '../internal/errors';\n\nexport class OpenAIError extends Error {}\n\nexport class APIError<\n  TStatus extends number | undefined = number | undefined,\n  THeaders extends Headers | undefined = Headers | undefined,\n  TError extends Object | undefined = Object | undefined,\n> extends OpenAIError {\n  /** HTTP status for the response that caused the error */\n  readonly status: TStatus;\n  /** HTTP headers for the response that caused the error */\n  readonly headers: THeaders;\n  /** JSON body of the response that caused the error */\n  readonly error: TError;\n\n  readonly code: string | null | undefined;\n  readonly param: string | null | undefined;\n  readonly type: string | undefined;\n\n  readonly requestID: string | null | undefined;\n\n  constructor(status: TStatus, error: TError, message: string | undefined, headers: THeaders) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.requestID = headers?.get('x-request-id');\n    this.error = error;\n\n    const data = error as Record<string, any>;\n    this.code = data?.['code'];\n    this.param = data?.['param'];\n    this.type = data?.['type'];\n  }\n\n  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {\n    const msg =\n      error?.message ?\n        typeof error.message === 'string' ?\n          error.message\n        : JSON.stringify(error.message)\n      : error ? JSON.stringify(error)\n      : message;\n\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    if (!status || !headers) {\n      return new APIConnectionError({ message, cause: castToError(errorResponse) });\n    }\n\n    const error = (errorResponse as Record<string, any>)?.['error'];\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIUserAbortError extends APIError<undefined, undefined, undefined> {\n  constructor({ message }: { message?: string } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\n\nexport class APIConnectionError extends APIError<undefined, undefined, undefined> {\n  constructor({ message, cause }: { message?: string | undefined; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({ message }: { message?: string } = {}) {\n    super({ message: message ?? 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError<400, Headers> {}\n\nexport class AuthenticationError extends APIError<401, Headers> {}\n\nexport class PermissionDeniedError extends APIError<403, Headers> {}\n\nexport class NotFoundError extends APIError<404, Headers> {}\n\nexport class ConflictError extends APIError<409, Headers> {}\n\nexport class UnprocessableEntityError extends APIError<422, Headers> {}\n\nexport class RateLimitError extends APIError<429, Headers> {}\n\nexport class InternalServerError extends APIError<number, Headers> {}\n\nexport class LengthFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the length limit was reached`);\n  }\n}\n\nexport class ContentFilterFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the request was rejected by the content filter`);\n  }\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { OpenAIError } from '../../core/error';\n\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\n\nexport const isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nexport let isArray = (val: unknown): val is unknown[] => ((isArray = Array.isArray), isArray(val));\nexport let isReadonlyArray = isArray as (val: unknown) => val is readonly unknown[];\n\n/** Returns an object if the given value isn't an object, otherwise returns as-is */\nexport function maybeObj(x: unknown): object {\n  if (typeof x !== 'object') {\n    return {};\n  }\n\n  return x ?? {};\n}\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn<T extends object = object>(obj: T, key: PropertyKey): key is keyof T {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) {\n    throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n  }\n\n  return value;\n};\n\nexport const validatePositiveInteger = (name: string, n: unknown): number => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new OpenAIError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new OpenAIError(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\n\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\n\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nexport const sleep = (ms: number) => new Promise<void>((resolve) => setTimeout(resolve, ms));\n","export const VERSION = '5.5.0'; // x-release-please-version\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { VERSION } from '../version';\n\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\n\ntype DetectedPlatform = 'deno' | 'node' | 'edge' | 'unknown';\n\n/**\n * Note this does not detect 'browser'; for that, use getBrowserInfo().\n */\nfunction getDetectedPlatform(): DetectedPlatform {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return 'deno';\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return 'edge';\n  }\n  if (\n    Object.prototype.toString.call(\n      typeof (globalThis as any).process !== 'undefined' ? (globalThis as any).process : 0,\n    ) === '[object process]'\n  ) {\n    return 'node';\n  }\n  return 'unknown';\n}\n\ndeclare const Deno: any;\ndeclare const EdgeRuntime: any;\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\ntype PlatformName =\n  | 'MacOS'\n  | 'Linux'\n  | 'Windows'\n  | 'FreeBSD'\n  | 'OpenBSD'\n  | 'iOS'\n  | 'Android'\n  | `Other:${string}`\n  | 'Unknown';\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\ntype PlatformProperties = {\n  'X-Stainless-Lang': 'js';\n  'X-Stainless-Package-Version': string;\n  'X-Stainless-OS': PlatformName;\n  'X-Stainless-Arch': Arch;\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\n  'X-Stainless-Runtime-Version': string;\n};\nconst getPlatformProperties = (): PlatformProperties => {\n  const detectedPlatform = getDetectedPlatform();\n  if (detectedPlatform === 'deno') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version':\n        typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': (globalThis as any).process.version,\n    };\n  }\n  // Check if Node.js\n  if (detectedPlatform === 'node') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform((globalThis as any).process.platform ?? 'unknown'),\n      'X-Stainless-Arch': normalizeArch((globalThis as any).process.arch ?? 'unknown'),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': (globalThis as any).process.version ?? 'unknown',\n    };\n  }\n\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version,\n    };\n  }\n\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown',\n  };\n};\n\ntype BrowserInfo = {\n  browser: Browser;\n  version: string;\n};\n\ndeclare const navigator: { userAgent: string } | undefined;\n\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo(): BrowserInfo | null {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n\n  // NOTE: The order matters here!\n  const browserPatterns = [\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n  ];\n\n  // Find the FIRST matching browser\n  for (const { key, pattern } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n\n      return { browser: key, version: `${major}.${minor}.${patch}` };\n    }\n  }\n\n  return null;\n}\n\nconst normalizeArch = (arch: string): Arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\n\nconst normalizePlatform = (platform: string): PlatformName => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n\n  platform = platform.toLowerCase();\n\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\n\nlet _platformHeaders: PlatformProperties;\nexport const getPlatformHeaders = () => {\n  return (_platformHeaders ??= getPlatformProperties());\n};\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n/**\n * This module provides internal shims and utility functions for environments where certain Node.js or global types may not be available.\n *\n * These are used to ensure we can provide a consistent behaviour between different JavaScript environments and good error\n * messages in cases where an environment isn't fully supported.\n */\n\nimport type { Fetch } from './builtin-types';\nimport type { ReadableStream } from './shim-types';\n\nexport function getDefaultFetch(): Fetch {\n  if (typeof fetch !== 'undefined') {\n    return fetch as any;\n  }\n\n  throw new Error(\n    '`fetch` is not defined as a global; Either pass `fetch` to the client, `new OpenAI({ fetch })` or polyfill the global, `globalThis.fetch = fetch`',\n  );\n}\n\ntype ReadableStreamArgs = ConstructorParameters<typeof ReadableStream>;\n\nexport function makeReadableStream(...args: ReadableStreamArgs): ReadableStream {\n  const ReadableStream = (globalThis as any).ReadableStream;\n  if (typeof ReadableStream === 'undefined') {\n    // Note: All of the platforms / runtimes we officially support already define\n    // `ReadableStream` as a global, so this should only ever be hit on unsupported runtimes.\n    throw new Error(\n      '`ReadableStream` is not defined as a global; You will need to polyfill it, `globalThis.ReadableStream = ReadableStream`',\n    );\n  }\n\n  return new ReadableStream(...args);\n}\n\nexport function ReadableStreamFrom<T>(iterable: Iterable<T> | AsyncIterable<T>): ReadableStream<T> {\n  let iter: AsyncIterator<T> | Iterator<T> =\n    Symbol.asyncIterator in iterable ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n\n  return makeReadableStream({\n    start() {},\n    async pull(controller: any) {\n      const { done, value } = await iter.next();\n      if (done) {\n        controller.close();\n      } else {\n        controller.enqueue(value);\n      }\n    },\n    async cancel() {\n      await iter.return?.();\n    },\n  });\n}\n\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable<T>(stream: any): AsyncIterableIterator<T> {\n  if (stream[Symbol.asyncIterator]) return stream;\n\n  const reader = stream.getReader();\n  return {\n    async next() {\n      try {\n        const result = await reader.read();\n        if (result?.done) reader.releaseLock(); // release lock when stream becomes closed\n        return result;\n      } catch (e) {\n        reader.releaseLock(); // release lock when stream becomes errored\n        throw e;\n      }\n    },\n    async return() {\n      const cancelPromise = reader.cancel();\n      reader.releaseLock();\n      await cancelPromise;\n      return { done: true, value: undefined };\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n\n/**\n * Cancels a ReadableStream we don't need to consume.\n * See https://undici.nodejs.org/#/?id=garbage-collection\n */\nexport async function CancelReadableStream(stream: any): Promise<void> {\n  if (stream === null || typeof stream !== 'object') return;\n\n  if (stream[Symbol.asyncIterator]) {\n    await stream[Symbol.asyncIterator]().return?.();\n    return;\n  }\n\n  const reader = stream.getReader();\n  const cancelPromise = reader.cancel();\n  reader.releaseLock();\n  await cancelPromise;\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { NullableHeaders } from './headers';\n\nimport type { BodyInit } from './builtin-types';\nimport { Stream } from '../core/streaming';\nimport type { HTTPMethod, MergedRequestInit } from './types';\nimport { type HeadersLike } from './headers';\n\nexport type FinalRequestOptions = RequestOptions & { method: HTTPMethod; path: string };\n\nexport type RequestOptions = {\n  method?: HTTPMethod;\n  path?: string;\n  query?: object | undefined | null;\n  body?: unknown;\n  headers?: HeadersLike;\n  maxRetries?: number;\n  stream?: boolean | undefined;\n  timeout?: number;\n  fetchOptions?: MergedRequestInit;\n  signal?: AbortSignal | undefined | null;\n  idempotencyKey?: string;\n  defaultBaseURL?: string | undefined;\n\n  __metadata?: Record<string, unknown>;\n  __binaryResponse?: boolean | undefined;\n  __streamClass?: typeof Stream;\n};\n\nexport type EncodedContent = { bodyHeaders: HeadersLike; body: BodyInit };\nexport type RequestEncoder = (request: { headers: NullableHeaders; body: unknown }) => EncodedContent;\n\nexport const FallbackEncoder: RequestEncoder = ({ headers, body }) => {\n  return {\n    bodyHeaders: {\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify(body),\n  };\n};\n","import type { Format } from './types';\n\nexport const default_format: Format = 'RFC3986';\nexport const default_formatter = (v: PropertyKey) => String(v);\nexport const formatters: Record<Format, (str: PropertyKey) => string> = {\n  RFC1738: (v: PropertyKey) => String(v).replace(/%20/g, '+'),\n  RFC3986: default_formatter,\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n","import { RFC1738 } from './formats';\nimport type { DefaultEncoder, Format } from './types';\nimport { isArray } from '../utils/values';\n\nexport let has = (obj: object, key: PropertyKey): boolean => (\n  (has = (Object as any).hasOwn ?? Function.prototype.call.bind(Object.prototype.hasOwnProperty)),\n  has(obj, key)\n);\n\nconst hex_table = /* @__PURE__ */ (() => {\n  const array = [];\n  for (let i = 0; i < 256; ++i) {\n    array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n  }\n\n  return array;\n})();\n\nfunction compact_queue<T extends Record<string, any>>(queue: Array<{ obj: T; prop: string }>) {\n  while (queue.length > 1) {\n    const item = queue.pop();\n    if (!item) continue;\n\n    const obj = item.obj[item.prop];\n\n    if (isArray(obj)) {\n      const compacted: unknown[] = [];\n\n      for (let j = 0; j < obj.length; ++j) {\n        if (typeof obj[j] !== 'undefined') {\n          compacted.push(obj[j]);\n        }\n      }\n\n      // @ts-ignore\n      item.obj[item.prop] = compacted;\n    }\n  }\n}\n\nfunction array_to_object(source: any[], options: { plainObjects: boolean }) {\n  const obj = options && options.plainObjects ? Object.create(null) : {};\n  for (let i = 0; i < source.length; ++i) {\n    if (typeof source[i] !== 'undefined') {\n      obj[i] = source[i];\n    }\n  }\n\n  return obj;\n}\n\nexport function merge(\n  target: any,\n  source: any,\n  options: { plainObjects?: boolean; allowPrototypes?: boolean } = {},\n) {\n  if (!source) {\n    return target;\n  }\n\n  if (typeof source !== 'object') {\n    if (isArray(target)) {\n      target.push(source);\n    } else if (target && typeof target === 'object') {\n      if ((options && (options.plainObjects || options.allowPrototypes)) || !has(Object.prototype, source)) {\n        target[source] = true;\n      }\n    } else {\n      return [target, source];\n    }\n\n    return target;\n  }\n\n  if (!target || typeof target !== 'object') {\n    return [target].concat(source);\n  }\n\n  let mergeTarget = target;\n  if (isArray(target) && !isArray(source)) {\n    // @ts-ignore\n    mergeTarget = array_to_object(target, options);\n  }\n\n  if (isArray(target) && isArray(source)) {\n    source.forEach(function (item, i) {\n      if (has(target, i)) {\n        const targetItem = target[i];\n        if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n          target[i] = merge(targetItem, item, options);\n        } else {\n          target.push(item);\n        }\n      } else {\n        target[i] = item;\n      }\n    });\n    return target;\n  }\n\n  return Object.keys(source).reduce(function (acc, key) {\n    const value = source[key];\n\n    if (has(acc, key)) {\n      acc[key] = merge(acc[key], value, options);\n    } else {\n      acc[key] = value;\n    }\n    return acc;\n  }, mergeTarget);\n}\n\nexport function assign_single_source(target: any, source: any) {\n  return Object.keys(source).reduce(function (acc, key) {\n    acc[key] = source[key];\n    return acc;\n  }, target);\n}\n\nexport function decode(str: string, _: any, charset: string) {\n  const strWithoutPlus = str.replace(/\\+/g, ' ');\n  if (charset === 'iso-8859-1') {\n    // unescape never throws, no try...catch needed:\n    return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n  }\n  // utf-8\n  try {\n    return decodeURIComponent(strWithoutPlus);\n  } catch (e) {\n    return strWithoutPlus;\n  }\n}\n\nconst limit = 1024;\n\nexport const encode: (\n  str: any,\n  defaultEncoder: DefaultEncoder,\n  charset: string,\n  type: 'key' | 'value',\n  format: Format,\n) => string = (str, _defaultEncoder, charset, _kind, format: Format) => {\n  // This code was originally written by Brian White for the io.js core querystring library.\n  // It has been adapted here for stricter adherence to RFC 3986\n  if (str.length === 0) {\n    return str;\n  }\n\n  let string = str;\n  if (typeof str === 'symbol') {\n    string = Symbol.prototype.toString.call(str);\n  } else if (typeof str !== 'string') {\n    string = String(str);\n  }\n\n  if (charset === 'iso-8859-1') {\n    return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n      return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n    });\n  }\n\n  let out = '';\n  for (let j = 0; j < string.length; j += limit) {\n    const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n    const arr = [];\n\n    for (let i = 0; i < segment.length; ++i) {\n      let c = segment.charCodeAt(i);\n      if (\n        c === 0x2d || // -\n        c === 0x2e || // .\n        c === 0x5f || // _\n        c === 0x7e || // ~\n        (c >= 0x30 && c <= 0x39) || // 0-9\n        (c >= 0x41 && c <= 0x5a) || // a-z\n        (c >= 0x61 && c <= 0x7a) || // A-Z\n        (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n      ) {\n        arr[arr.length] = segment.charAt(i);\n        continue;\n      }\n\n      if (c < 0x80) {\n        arr[arr.length] = hex_table[c];\n        continue;\n      }\n\n      if (c < 0x800) {\n        arr[arr.length] = hex_table[0xc0 | (c >> 6)]! + hex_table[0x80 | (c & 0x3f)];\n        continue;\n      }\n\n      if (c < 0xd800 || c >= 0xe000) {\n        arr[arr.length] =\n          hex_table[0xe0 | (c >> 12)]! + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n        continue;\n      }\n\n      i += 1;\n      c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n\n      arr[arr.length] =\n        hex_table[0xf0 | (c >> 18)]! +\n        hex_table[0x80 | ((c >> 12) & 0x3f)] +\n        hex_table[0x80 | ((c >> 6) & 0x3f)] +\n        hex_table[0x80 | (c & 0x3f)];\n    }\n\n    out += arr.join('');\n  }\n\n  return out;\n};\n\nexport function compact(value: any) {\n  const queue = [{ obj: { o: value }, prop: 'o' }];\n  const refs = [];\n\n  for (let i = 0; i < queue.length; ++i) {\n    const item = queue[i];\n    // @ts-ignore\n    const obj = item.obj[item.prop];\n\n    const keys = Object.keys(obj);\n    for (let j = 0; j < keys.length; ++j) {\n      const key = keys[j]!;\n      const val = obj[key];\n      if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n        queue.push({ obj: obj, prop: key });\n        refs.push(val);\n      }\n    }\n  }\n\n  compact_queue(queue);\n\n  return value;\n}\n\nexport function is_regexp(obj: any) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nexport function is_buffer(obj: any) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\n\nexport function combine(a: any, b: any) {\n  return [].concat(a, b);\n}\n\nexport function maybe_map<T>(val: T[], fn: (v: T) => T) {\n  if (isArray(val)) {\n    const mapped = [];\n    for (let i = 0; i < val.length; i += 1) {\n      mapped.push(fn(val[i]!));\n    }\n    return mapped;\n  }\n  return fn(val);\n}\n","import { encode, is_buffer, maybe_map, has } from './utils';\nimport { default_format, default_formatter, formatters } from './formats';\nimport type { NonNullableProperties, StringifyOptions } from './types';\nimport { isArray } from '../utils/values';\n\nconst array_prefix_generators = {\n  brackets(prefix: PropertyKey) {\n    return String(prefix) + '[]';\n  },\n  comma: 'comma',\n  indices(prefix: PropertyKey, key: string) {\n    return String(prefix) + '[' + key + ']';\n  },\n  repeat(prefix: PropertyKey) {\n    return String(prefix);\n  },\n};\n\nconst push_to_array = function (arr: any[], value_or_array: any) {\n  Array.prototype.push.apply(arr, isArray(value_or_array) ? value_or_array : [value_or_array]);\n};\n\nlet toISOString;\n\nconst defaults = {\n  addQueryPrefix: false,\n  allowDots: false,\n  allowEmptyArrays: false,\n  arrayFormat: 'indices',\n  charset: 'utf-8',\n  charsetSentinel: false,\n  delimiter: '&',\n  encode: true,\n  encodeDotInKeys: false,\n  encoder: encode,\n  encodeValuesOnly: false,\n  format: default_format,\n  formatter: default_formatter,\n  /** @deprecated */\n  indices: false,\n  serializeDate(date) {\n    return (toISOString ??= Function.prototype.call.bind(Date.prototype.toISOString))(date);\n  },\n  skipNulls: false,\n  strictNullHandling: false,\n} as NonNullableProperties<StringifyOptions & { formatter: (typeof formatters)['RFC1738'] }>;\n\nfunction is_non_nullish_primitive(v: unknown): v is string | number | boolean | symbol | bigint {\n  return (\n    typeof v === 'string' ||\n    typeof v === 'number' ||\n    typeof v === 'boolean' ||\n    typeof v === 'symbol' ||\n    typeof v === 'bigint'\n  );\n}\n\nconst sentinel = {};\n\nfunction inner_stringify(\n  object: any,\n  prefix: PropertyKey,\n  generateArrayPrefix: StringifyOptions['arrayFormat'] | ((prefix: string, key: string) => string),\n  commaRoundTrip: boolean,\n  allowEmptyArrays: boolean,\n  strictNullHandling: boolean,\n  skipNulls: boolean,\n  encodeDotInKeys: boolean,\n  encoder: StringifyOptions['encoder'],\n  filter: StringifyOptions['filter'],\n  sort: StringifyOptions['sort'],\n  allowDots: StringifyOptions['allowDots'],\n  serializeDate: StringifyOptions['serializeDate'],\n  format: StringifyOptions['format'],\n  formatter: StringifyOptions['formatter'],\n  encodeValuesOnly: boolean,\n  charset: StringifyOptions['charset'],\n  sideChannel: WeakMap<any, any>,\n) {\n  let obj = object;\n\n  let tmp_sc = sideChannel;\n  let step = 0;\n  let find_flag = false;\n  while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n    // Where object last appeared in the ref tree\n    const pos = tmp_sc.get(object);\n    step += 1;\n    if (typeof pos !== 'undefined') {\n      if (pos === step) {\n        throw new RangeError('Cyclic object value');\n      } else {\n        find_flag = true; // Break while\n      }\n    }\n    if (typeof tmp_sc.get(sentinel) === 'undefined') {\n      step = 0;\n    }\n  }\n\n  if (typeof filter === 'function') {\n    obj = filter(prefix, obj);\n  } else if (obj instanceof Date) {\n    obj = serializeDate?.(obj);\n  } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n    obj = maybe_map(obj, function (value) {\n      if (value instanceof Date) {\n        return serializeDate?.(value);\n      }\n      return value;\n    });\n  }\n\n  if (obj === null) {\n    if (strictNullHandling) {\n      return encoder && !encodeValuesOnly ?\n          // @ts-expect-error\n          encoder(prefix, defaults.encoder, charset, 'key', format)\n        : prefix;\n    }\n\n    obj = '';\n  }\n\n  if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n    if (encoder) {\n      const key_value =\n        encodeValuesOnly ? prefix\n          // @ts-expect-error\n        : encoder(prefix, defaults.encoder, charset, 'key', format);\n      return [\n        formatter?.(key_value) +\n          '=' +\n          // @ts-expect-error\n          formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n      ];\n    }\n    return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n  }\n\n  const values: string[] = [];\n\n  if (typeof obj === 'undefined') {\n    return values;\n  }\n\n  let obj_keys;\n  if (generateArrayPrefix === 'comma' && isArray(obj)) {\n    // we need to join elements in\n    if (encodeValuesOnly && encoder) {\n      // @ts-expect-error values only\n      obj = maybe_map(obj, encoder);\n    }\n    obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n  } else if (isArray(filter)) {\n    obj_keys = filter;\n  } else {\n    const keys = Object.keys(obj);\n    obj_keys = sort ? keys.sort(sort) : keys;\n  }\n\n  const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n\n  const adjusted_prefix =\n    commaRoundTrip && isArray(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n\n  if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n    return adjusted_prefix + '[]';\n  }\n\n  for (let j = 0; j < obj_keys.length; ++j) {\n    const key = obj_keys[j];\n    const value =\n      // @ts-ignore\n      typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key as any];\n\n    if (skipNulls && value === null) {\n      continue;\n    }\n\n    // @ts-ignore\n    const encoded_key = allowDots && encodeDotInKeys ? (key as any).replace(/\\./g, '%2E') : key;\n    const key_prefix =\n      isArray(obj) ?\n        typeof generateArrayPrefix === 'function' ?\n          generateArrayPrefix(adjusted_prefix, encoded_key)\n        : adjusted_prefix\n      : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n\n    sideChannel.set(object, step);\n    const valueSideChannel = new WeakMap();\n    valueSideChannel.set(sentinel, sideChannel);\n    push_to_array(\n      values,\n      inner_stringify(\n        value,\n        key_prefix,\n        generateArrayPrefix,\n        commaRoundTrip,\n        allowEmptyArrays,\n        strictNullHandling,\n        skipNulls,\n        encodeDotInKeys,\n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n        filter,\n        sort,\n        allowDots,\n        serializeDate,\n        format,\n        formatter,\n        encodeValuesOnly,\n        charset,\n        valueSideChannel,\n      ),\n    );\n  }\n\n  return values;\n}\n\nfunction normalize_stringify_options(\n  opts: StringifyOptions = defaults,\n): NonNullableProperties<Omit<StringifyOptions, 'indices'>> & { indices?: boolean } {\n  if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n    throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n  }\n\n  if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n    throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n  }\n\n  if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n    throw new TypeError('Encoder has to be a function.');\n  }\n\n  const charset = opts.charset || defaults.charset;\n  if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n    throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n  }\n\n  let format = default_format;\n  if (typeof opts.format !== 'undefined') {\n    if (!has(formatters, opts.format)) {\n      throw new TypeError('Unknown format option provided.');\n    }\n    format = opts.format;\n  }\n  const formatter = formatters[format];\n\n  let filter = defaults.filter;\n  if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n    filter = opts.filter;\n  }\n\n  let arrayFormat: StringifyOptions['arrayFormat'];\n  if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n    arrayFormat = opts.arrayFormat;\n  } else if ('indices' in opts) {\n    arrayFormat = opts.indices ? 'indices' : 'repeat';\n  } else {\n    arrayFormat = defaults.arrayFormat;\n  }\n\n  if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n    throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n  }\n\n  const allowDots =\n    typeof opts.allowDots === 'undefined' ?\n      !!opts.encodeDotInKeys === true ?\n        true\n      : defaults.allowDots\n    : !!opts.allowDots;\n\n  return {\n    addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n    // @ts-ignore\n    allowDots: allowDots,\n    allowEmptyArrays:\n      typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n    arrayFormat: arrayFormat,\n    charset: charset,\n    charsetSentinel:\n      typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n    commaRoundTrip: !!opts.commaRoundTrip,\n    delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n    encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n    encodeDotInKeys:\n      typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n    encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n    encodeValuesOnly:\n      typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n    filter: filter,\n    format: format,\n    formatter: formatter,\n    serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n    skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n    // @ts-ignore\n    sort: typeof opts.sort === 'function' ? opts.sort : null,\n    strictNullHandling:\n      typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n  };\n}\n\nexport function stringify(object: any, opts: StringifyOptions = {}) {\n  let obj = object;\n  const options = normalize_stringify_options(opts);\n\n  let obj_keys: PropertyKey[] | undefined;\n  let filter;\n\n  if (typeof options.filter === 'function') {\n    filter = options.filter;\n    obj = filter('', obj);\n  } else if (isArray(options.filter)) {\n    filter = options.filter;\n    obj_keys = filter;\n  }\n\n  const keys: string[] = [];\n\n  if (typeof obj !== 'object' || obj === null) {\n    return '';\n  }\n\n  const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n  const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n  if (!obj_keys) {\n    obj_keys = Object.keys(obj);\n  }\n\n  if (options.sort) {\n    obj_keys.sort(options.sort);\n  }\n\n  const sideChannel = new WeakMap();\n  for (let i = 0; i < obj_keys.length; ++i) {\n    const key = obj_keys[i]!;\n\n    if (options.skipNulls && obj[key] === null) {\n      continue;\n    }\n    push_to_array(\n      keys,\n      inner_stringify(\n        obj[key],\n        key,\n        // @ts-expect-error\n        generateArrayPrefix,\n        commaRoundTrip,\n        options.allowEmptyArrays,\n        options.strictNullHandling,\n        options.skipNulls,\n        options.encodeDotInKeys,\n        options.encode ? options.encoder : null,\n        options.filter,\n        options.sort,\n        options.allowDots,\n        options.serializeDate,\n        options.format,\n        options.formatter,\n        options.encodeValuesOnly,\n        options.charset,\n        sideChannel,\n      ),\n    );\n  }\n\n  const joined = keys.join(options.delimiter);\n  let prefix = options.addQueryPrefix === true ? '?' : '';\n\n  if (options.charsetSentinel) {\n    if (options.charset === 'iso-8859-1') {\n      // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n      prefix += 'utf8=%26%2310003%3B&';\n    } else {\n      // encodeURIComponent('✓')\n      prefix += 'utf8=%E2%9C%93&';\n    }\n  }\n\n  return joined.length > 0 ? prefix + joined : '';\n}\n","export function concatBytes(buffers: Uint8Array[]): Uint8Array {\n  let length = 0;\n  for (const buffer of buffers) {\n    length += buffer.length;\n  }\n  const output = new Uint8Array(length);\n  let index = 0;\n  for (const buffer of buffers) {\n    output.set(buffer, index);\n    index += buffer.length;\n  }\n\n  return output;\n}\n\nlet encodeUTF8_: (str: string) => Uint8Array;\nexport function encodeUTF8(str: string) {\n  let encoder;\n  return (\n    encodeUTF8_ ??\n    ((encoder = new (globalThis as any).TextEncoder()), (encodeUTF8_ = encoder.encode.bind(encoder)))\n  )(str);\n}\n\nlet decodeUTF8_: (bytes: Uint8Array) => string;\nexport function decodeUTF8(bytes: Uint8Array) {\n  let decoder;\n  return (\n    decodeUTF8_ ??\n    ((decoder = new (globalThis as any).TextDecoder()), (decodeUTF8_ = decoder.decode.bind(decoder)))\n  )(bytes);\n}\n","import { concatBytes, decodeUTF8, encodeUTF8 } from '../utils/bytes';\n\nexport type Bytes = string | ArrayBuffer | Uint8Array | null | undefined;\n\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n  // prettier-ignore\n  static NEWLINE_CHARS = new Set(['\\n', '\\r']);\n  static NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n\n  #buffer: Uint8Array;\n  #carriageReturnIndex: number | null;\n\n  constructor() {\n    this.#buffer = new Uint8Array();\n    this.#carriageReturnIndex = null;\n  }\n\n  decode(chunk: Bytes): string[] {\n    if (chunk == null) {\n      return [];\n    }\n\n    const binaryChunk =\n      chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n      : typeof chunk === 'string' ? encodeUTF8(chunk)\n      : chunk;\n\n    this.#buffer = concatBytes([this.#buffer, binaryChunk]);\n\n    const lines: string[] = [];\n    let patternIndex;\n    while ((patternIndex = findNewlineIndex(this.#buffer, this.#carriageReturnIndex)) != null) {\n      if (patternIndex.carriage && this.#carriageReturnIndex == null) {\n        // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n        this.#carriageReturnIndex = patternIndex.index;\n        continue;\n      }\n\n      // we got double \\r or \\rtext\\n\n      if (\n        this.#carriageReturnIndex != null &&\n        (patternIndex.index !== this.#carriageReturnIndex + 1 || patternIndex.carriage)\n      ) {\n        lines.push(decodeUTF8(this.#buffer.subarray(0, this.#carriageReturnIndex - 1)));\n        this.#buffer = this.#buffer.subarray(this.#carriageReturnIndex);\n        this.#carriageReturnIndex = null;\n        continue;\n      }\n\n      const endIndex =\n        this.#carriageReturnIndex !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n\n      const line = decodeUTF8(this.#buffer.subarray(0, endIndex));\n      lines.push(line);\n\n      this.#buffer = this.#buffer.subarray(patternIndex.index);\n      this.#carriageReturnIndex = null;\n    }\n\n    return lines;\n  }\n\n  flush(): string[] {\n    if (!this.#buffer.length) {\n      return [];\n    }\n    return this.decode('\\n');\n  }\n}\n\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(\n  buffer: Uint8Array,\n  startIndex: number | null,\n): { preceding: number; index: number; carriage: boolean } | null {\n  const newline = 0x0a; // \\n\n  const carriage = 0x0d; // \\r\n\n  for (let i = startIndex ?? 0; i < buffer.length; i++) {\n    if (buffer[i] === newline) {\n      return { preceding: i, index: i + 1, carriage: false };\n    }\n\n    if (buffer[i] === carriage) {\n      return { preceding: i, index: i + 1, carriage: true };\n    }\n  }\n\n  return null;\n}\n\nexport function findDoubleNewlineIndex(buffer: Uint8Array): number {\n  // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n  // and returns the index right after the first occurrence of any pattern,\n  // or -1 if none of the patterns are found.\n  const newline = 0x0a; // \\n\n  const carriage = 0x0d; // \\r\n\n  for (let i = 0; i < buffer.length - 1; i++) {\n    if (buffer[i] === newline && buffer[i + 1] === newline) {\n      // \\n\\n\n      return i + 2;\n    }\n    if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n      // \\r\\r\n      return i + 2;\n    }\n    if (\n      buffer[i] === carriage &&\n      buffer[i + 1] === newline &&\n      i + 3 < buffer.length &&\n      buffer[i + 2] === carriage &&\n      buffer[i + 3] === newline\n    ) {\n      // \\r\\n\\r\\n\n      return i + 4;\n    }\n  }\n\n  return -1;\n}\n","import { OpenAIError } from './error';\nimport { type ReadableStream } from '../internal/shim-types';\nimport { makeReadableStream } from '../internal/shims';\nimport { findDoubleNewlineIndex, LineDecoder } from '../internal/decoders/line';\nimport { ReadableStreamToAsyncIterable } from '../internal/shims';\nimport { isAbortError } from '../internal/errors';\nimport { encodeUTF8 } from '../internal/utils/bytes';\n\nimport { APIError } from './error';\n\ntype Bytes = string | ArrayBuffer | Uint8Array | null | undefined;\n\nexport type ServerSentEvent = {\n  event: string | null;\n  data: string;\n  raw: string[];\n};\n\nexport class Stream<Item> implements AsyncIterable<Item> {\n  controller: AbortController;\n\n  constructor(\n    private iterator: () => AsyncIterator<Item>,\n    controller: AbortController,\n  ) {\n    this.controller = controller;\n  }\n\n  static fromSSEResponse<Item>(response: Response, controller: AbortController): Stream<Item> {\n    let consumed = false;\n\n    async function* iterator(): AsyncIterator<Item, any, undefined> {\n      if (consumed) {\n        throw new OpenAIError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n      }\n      consumed = true;\n      let done = false;\n      try {\n        for await (const sse of _iterSSEMessages(response, controller)) {\n          if (done) continue;\n\n          if (sse.data.startsWith('[DONE]')) {\n            done = true;\n            continue;\n          }\n\n          if (\n            sse.event === null ||\n            sse.event.startsWith('response.') ||\n            sse.event.startsWith('transcript.')\n          ) {\n            let data;\n\n            try {\n              data = JSON.parse(sse.data);\n            } catch (e) {\n              console.error(`Could not parse message into JSON:`, sse.data);\n              console.error(`From chunk:`, sse.raw);\n              throw e;\n            }\n\n            if (data && data.error) {\n              throw new APIError(undefined, data.error, undefined, response.headers);\n            }\n\n            yield data;\n          } else {\n            let data;\n            try {\n              data = JSON.parse(sse.data);\n            } catch (e) {\n              console.error(`Could not parse message into JSON:`, sse.data);\n              console.error(`From chunk:`, sse.raw);\n              throw e;\n            }\n            // TODO: Is this where the error should be thrown?\n            if (sse.event == 'error') {\n              throw new APIError(undefined, data.error, data.message, undefined);\n            }\n            yield { event: sse.event, data: data } as any;\n          }\n        }\n        done = true;\n      } catch (e) {\n        // If the user calls `stream.controller.abort()`, we should exit without throwing.\n        if (isAbortError(e)) return;\n        throw e;\n      } finally {\n        // If the user `break`s, abort the ongoing request.\n        if (!done) controller.abort();\n      }\n    }\n\n    return new Stream(iterator, controller);\n  }\n\n  /**\n   * Generates a Stream from a newline-separated ReadableStream\n   * where each item is a JSON value.\n   */\n  static fromReadableStream<Item>(readableStream: ReadableStream, controller: AbortController): Stream<Item> {\n    let consumed = false;\n\n    async function* iterLines(): AsyncGenerator<string, void, unknown> {\n      const lineDecoder = new LineDecoder();\n\n      const iter = ReadableStreamToAsyncIterable<Bytes>(readableStream);\n      for await (const chunk of iter) {\n        for (const line of lineDecoder.decode(chunk)) {\n          yield line;\n        }\n      }\n\n      for (const line of lineDecoder.flush()) {\n        yield line;\n      }\n    }\n\n    async function* iterator(): AsyncIterator<Item, any, undefined> {\n      if (consumed) {\n        throw new OpenAIError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n      }\n      consumed = true;\n      let done = false;\n      try {\n        for await (const line of iterLines()) {\n          if (done) continue;\n          if (line) yield JSON.parse(line);\n        }\n        done = true;\n      } catch (e) {\n        // If the user calls `stream.controller.abort()`, we should exit without throwing.\n        if (isAbortError(e)) return;\n        throw e;\n      } finally {\n        // If the user `break`s, abort the ongoing request.\n        if (!done) controller.abort();\n      }\n    }\n\n    return new Stream(iterator, controller);\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<Item> {\n    return this.iterator();\n  }\n\n  /**\n   * Splits the stream into two streams which can be\n   * independently read from at different speeds.\n   */\n  tee(): [Stream<Item>, Stream<Item>] {\n    const left: Array<Promise<IteratorResult<Item>>> = [];\n    const right: Array<Promise<IteratorResult<Item>>> = [];\n    const iterator = this.iterator();\n\n    const teeIterator = (queue: Array<Promise<IteratorResult<Item>>>): AsyncIterator<Item> => {\n      return {\n        next: () => {\n          if (queue.length === 0) {\n            const result = iterator.next();\n            left.push(result);\n            right.push(result);\n          }\n          return queue.shift()!;\n        },\n      };\n    };\n\n    return [\n      new Stream(() => teeIterator(left), this.controller),\n      new Stream(() => teeIterator(right), this.controller),\n    ];\n  }\n\n  /**\n   * Converts this stream to a newline-separated ReadableStream of\n   * JSON stringified values in the stream\n   * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n   */\n  toReadableStream(): ReadableStream {\n    const self = this;\n    let iter: AsyncIterator<Item>;\n\n    return makeReadableStream({\n      async start() {\n        iter = self[Symbol.asyncIterator]();\n      },\n      async pull(ctrl: any) {\n        try {\n          const { value, done } = await iter.next();\n          if (done) return ctrl.close();\n\n          const bytes = encodeUTF8(JSON.stringify(value) + '\\n');\n\n          ctrl.enqueue(bytes);\n        } catch (err) {\n          ctrl.error(err);\n        }\n      },\n      async cancel() {\n        await iter.return?.();\n      },\n    });\n  }\n}\n\nexport async function* _iterSSEMessages(\n  response: Response,\n  controller: AbortController,\n): AsyncGenerator<ServerSentEvent, void, unknown> {\n  if (!response.body) {\n    controller.abort();\n    if (\n      typeof (globalThis as any).navigator !== 'undefined' &&\n      (globalThis as any).navigator.product === 'ReactNative'\n    ) {\n      throw new OpenAIError(\n        `The default react-native fetch implementation does not support streaming. Please use expo/fetch: https://docs.expo.dev/versions/latest/sdk/expo/#expofetch-api`,\n      );\n    }\n    throw new OpenAIError(`Attempted to iterate over a response with no body`);\n  }\n\n  const sseDecoder = new SSEDecoder();\n  const lineDecoder = new LineDecoder();\n\n  const iter = ReadableStreamToAsyncIterable<Bytes>(response.body);\n  for await (const sseChunk of iterSSEChunks(iter)) {\n    for (const line of lineDecoder.decode(sseChunk)) {\n      const sse = sseDecoder.decode(line);\n      if (sse) yield sse;\n    }\n  }\n\n  for (const line of lineDecoder.flush()) {\n    const sse = sseDecoder.decode(line);\n    if (sse) yield sse;\n  }\n}\n\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator: AsyncIterableIterator<Bytes>): AsyncGenerator<Uint8Array> {\n  let data = new Uint8Array();\n\n  for await (const chunk of iterator) {\n    if (chunk == null) {\n      continue;\n    }\n\n    const binaryChunk =\n      chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n      : typeof chunk === 'string' ? encodeUTF8(chunk)\n      : chunk;\n\n    let newData = new Uint8Array(data.length + binaryChunk.length);\n    newData.set(data);\n    newData.set(binaryChunk, data.length);\n    data = newData;\n\n    let patternIndex;\n    while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n      yield data.slice(0, patternIndex);\n      data = data.slice(patternIndex);\n    }\n  }\n\n  if (data.length > 0) {\n    yield data;\n  }\n}\n\nclass SSEDecoder {\n  private data: string[];\n  private event: string | null;\n  private chunks: string[];\n\n  constructor() {\n    this.event = null;\n    this.data = [];\n    this.chunks = [];\n  }\n\n  decode(line: string) {\n    if (line.endsWith('\\r')) {\n      line = line.substring(0, line.length - 1);\n    }\n\n    if (!line) {\n      // empty line and we didn't previously encounter any messages\n      if (!this.event && !this.data.length) return null;\n\n      const sse: ServerSentEvent = {\n        event: this.event,\n        data: this.data.join('\\n'),\n        raw: this.chunks,\n      };\n\n      this.event = null;\n      this.data = [];\n      this.chunks = [];\n\n      return sse;\n    }\n\n    this.chunks.push(line);\n\n    if (line.startsWith(':')) {\n      return null;\n    }\n\n    let [fieldname, _, value] = partition(line, ':');\n\n    if (value.startsWith(' ')) {\n      value = value.substring(1);\n    }\n\n    if (fieldname === 'event') {\n      this.event = value;\n    } else if (fieldname === 'data') {\n      this.data.push(value);\n    }\n\n    return null;\n  }\n}\n\nfunction partition(str: string, delimiter: string): [string, string, string] {\n  const index = str.indexOf(delimiter);\n  if (index !== -1) {\n    return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n  }\n\n  return [str, '', ''];\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { hasOwn } from './values';\nimport { type OpenAI } from '../../client';\nimport { RequestOptions } from '../request-options';\n\ntype LogFn = (message: string, ...rest: unknown[]) => void;\nexport type Logger = {\n  error: LogFn;\n  warn: LogFn;\n  info: LogFn;\n  debug: LogFn;\n};\nexport type LogLevel = 'off' | 'error' | 'warn' | 'info' | 'debug';\n\nconst levelNumbers = {\n  off: 0,\n  error: 200,\n  warn: 300,\n  info: 400,\n  debug: 500,\n};\n\nexport const parseLogLevel = (\n  maybeLevel: string | undefined,\n  sourceName: string,\n  client: OpenAI,\n): LogLevel | undefined => {\n  if (!maybeLevel) {\n    return undefined;\n  }\n  if (hasOwn(levelNumbers, maybeLevel)) {\n    return maybeLevel;\n  }\n  loggerFor(client).warn(\n    `${sourceName} was set to ${JSON.stringify(maybeLevel)}, expected one of ${JSON.stringify(\n      Object.keys(levelNumbers),\n    )}`,\n  );\n  return undefined;\n};\n\nfunction noop() {}\n\nfunction makeLogFn(fnLevel: keyof Logger, logger: Logger | undefined, logLevel: LogLevel) {\n  if (!logger || levelNumbers[fnLevel] > levelNumbers[logLevel]) {\n    return noop;\n  } else {\n    // Don't wrap logger functions, we want the stacktrace intact!\n    return logger[fnLevel].bind(logger);\n  }\n}\n\nconst noopLogger = {\n  error: noop,\n  warn: noop,\n  info: noop,\n  debug: noop,\n};\n\nlet cachedLoggers = /** @__PURE__ */ new WeakMap<Logger, [LogLevel, Logger]>();\n\nexport function loggerFor(client: OpenAI): Logger {\n  const logger = client.logger;\n  const logLevel = client.logLevel ?? 'off';\n  if (!logger) {\n    return noopLogger;\n  }\n\n  const cachedLogger = cachedLoggers.get(logger);\n  if (cachedLogger && cachedLogger[0] === logLevel) {\n    return cachedLogger[1];\n  }\n\n  const levelLogger = {\n    error: makeLogFn('error', logger, logLevel),\n    warn: makeLogFn('warn', logger, logLevel),\n    info: makeLogFn('info', logger, logLevel),\n    debug: makeLogFn('debug', logger, logLevel),\n  };\n\n  cachedLoggers.set(logger, [logLevel, levelLogger]);\n\n  return levelLogger;\n}\n\nexport const formatRequestDetails = (details: {\n  options?: RequestOptions | undefined;\n  headers?: Headers | Record<string, string> | undefined;\n  retryOfRequestLogID?: string | undefined;\n  retryOf?: string | undefined;\n  url?: string | undefined;\n  status?: number | undefined;\n  method?: string | undefined;\n  durationMs?: number | undefined;\n  message?: unknown;\n  body?: unknown;\n}) => {\n  if (details.options) {\n    details.options = { ...details.options };\n    delete details.options['headers']; // redundant + leaks internals\n  }\n  if (details.headers) {\n    details.headers = Object.fromEntries(\n      (details.headers instanceof Headers ? [...details.headers] : Object.entries(details.headers)).map(\n        ([name, value]) => [\n          name,\n          (\n            name.toLowerCase() === 'authorization' ||\n            name.toLowerCase() === 'cookie' ||\n            name.toLowerCase() === 'set-cookie'\n          ) ?\n            '***'\n          : value,\n        ],\n      ),\n    );\n  }\n  if ('retryOfRequestLogID' in details) {\n    if (details.retryOfRequestLogID) {\n      details.retryOf = details.retryOfRequestLogID;\n    }\n    delete details.retryOfRequestLogID;\n  }\n  return details;\n};\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport type { FinalRequestOptions } from './request-options';\nimport { Stream } from '../core/streaming';\nimport { type OpenAI } from '../client';\nimport { formatRequestDetails, loggerFor } from './utils/log';\nimport type { AbstractPage } from '../pagination';\n\nexport type APIResponseProps = {\n  response: Response;\n  options: FinalRequestOptions;\n  controller: AbortController;\n  requestLogID: string;\n  retryOfRequestLogID: string | undefined;\n  startTime: number;\n};\n\nexport async function defaultParseResponse<T>(\n  client: OpenAI,\n  props: APIResponseProps,\n): Promise<WithRequestID<T>> {\n  const { response, requestLogID, retryOfRequestLogID, startTime } = props;\n  const body = await (async () => {\n    if (props.options.stream) {\n      loggerFor(client).debug('response', response.status, response.url, response.headers, response.body);\n\n      // Note: there is an invariant here that isn't represented in the type system\n      // that if you set `stream: true` the response type must also be `Stream<T>`\n\n      if (props.options.__streamClass) {\n        return props.options.__streamClass.fromSSEResponse(response, props.controller) as any;\n      }\n\n      return Stream.fromSSEResponse(response, props.controller) as any;\n    }\n\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n      return null as T;\n    }\n\n    if (props.options.__binaryResponse) {\n      return response as unknown as T;\n    }\n\n    const contentType = response.headers.get('content-type');\n    const mediaType = contentType?.split(';')[0]?.trim();\n    const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n    if (isJSON) {\n      const json = await response.json();\n      return addRequestID(json as T, response);\n    }\n\n    const text = await response.text();\n    return text as unknown as T;\n  })();\n  loggerFor(client).debug(\n    `[${requestLogID}] response parsed`,\n    formatRequestDetails({\n      retryOfRequestLogID,\n      url: response.url,\n      status: response.status,\n      body,\n      durationMs: Date.now() - startTime,\n    }),\n  );\n  return body;\n}\n\nexport type WithRequestID<T> =\n  T extends Array<any> | Response | AbstractPage<any> ? T\n  : T extends Record<string, any> ? T & { _request_id?: string | null }\n  : T;\n\nexport function addRequestID<T>(value: T, response: Response): WithRequestID<T> {\n  if (!value || typeof value !== 'object' || Array.isArray(value)) {\n    return value as WithRequestID<T>;\n  }\n\n  return Object.defineProperty(value, '_request_id', {\n    value: response.headers.get('x-request-id'),\n    enumerable: false,\n  }) as WithRequestID<T>;\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { type OpenAI } from '../client';\n\nimport { type PromiseOrValue } from '../internal/types';\nimport {\n  type APIResponseProps,\n  defaultParseResponse,\n  type WithRequestID,\n  addRequestID,\n} from '../internal/parse';\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise<T> extends Promise<WithRequestID<T>> {\n  private parsedPromise: Promise<WithRequestID<T>> | undefined;\n  #client: OpenAI;\n\n  constructor(\n    client: OpenAI,\n    private responsePromise: Promise<APIResponseProps>,\n    private parseResponse: (\n      client: OpenAI,\n      props: APIResponseProps,\n    ) => PromiseOrValue<WithRequestID<T>> = defaultParseResponse,\n  ) {\n    super((resolve) => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null as any);\n    });\n    this.#client = client;\n  }\n\n  _thenUnwrap<U>(transform: (data: T, props: APIResponseProps) => U): APIPromise<U> {\n    return new APIPromise(this.#client, this.responsePromise, async (client, props) =>\n      addRequestID(transform(await this.parseResponse(client, props), props), props.response),\n    );\n  }\n\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * 👋 Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n   * to your `tsconfig.json`.\n   */\n  asResponse(): Promise<Response> {\n    return this.responsePromise.then((p) => p.response);\n  }\n\n  /**\n   * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n   * returned via the X-Request-ID header which is useful for debugging requests and reporting\n   * issues to OpenAI.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   * 👋 Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n   * to your `tsconfig.json`.\n   */\n  async withResponse(): Promise<{ data: T; response: Response; request_id: string | null }> {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return { data, response, request_id: response.headers.get('x-request-id') };\n  }\n\n  private parse(): Promise<WithRequestID<T>> {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then((data) =>\n        this.parseResponse(this.#client, data),\n      ) as any as Promise<WithRequestID<T>>;\n    }\n    return this.parsedPromise;\n  }\n\n  override then<TResult1 = WithRequestID<T>, TResult2 = never>(\n    onfulfilled?: ((value: WithRequestID<T>) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n\n  override catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<WithRequestID<T> | TResult> {\n    return this.parse().catch(onrejected);\n  }\n\n  override finally(onfinally?: (() => void) | undefined | null): Promise<WithRequestID<T>> {\n    return this.parse().finally(onfinally);\n  }\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { OpenAIError } from './error';\nimport { FinalRequestOptions } from '../internal/request-options';\nimport { defaultParseResponse, WithRequestID } from '../internal/parse';\nimport { APIPromise } from './api-promise';\nimport { type OpenAI } from '../client';\nimport { type APIResponseProps } from '../internal/parse';\nimport { maybeObj } from '../internal/utils/values';\n\nexport type PageRequestOptions = Pick<FinalRequestOptions, 'query' | 'headers' | 'body' | 'path' | 'method'>;\n\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\n  #client: OpenAI;\n  protected options: FinalRequestOptions;\n\n  protected response: Response;\n  protected body: unknown;\n\n  constructor(client: OpenAI, response: Response, body: unknown, options: FinalRequestOptions) {\n    this.#client = client;\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n\n  abstract nextPageRequestOptions(): PageRequestOptions | null;\n\n  abstract getPaginatedItems(): Item[];\n\n  hasNextPage(): boolean {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageRequestOptions() != null;\n  }\n\n  async getNextPage(): Promise<this> {\n    const nextOptions = this.nextPageRequestOptions();\n    if (!nextOptions) {\n      throw new OpenAIError(\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\n      );\n    }\n\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\n  }\n\n  async *iterPages(): AsyncGenerator<this> {\n    let page: this = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise<\n    PageClass extends AbstractPage<Item>,\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\n  >\n  extends APIPromise<PageClass>\n  implements AsyncIterable<Item>\n{\n  constructor(\n    client: OpenAI,\n    request: Promise<APIResponseProps>,\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n  ) {\n    super(\n      client,\n      request,\n      async (client, props) =>\n        new Page(\n          client,\n          props.response,\n          await defaultParseResponse(client, props),\n          props.options,\n        ) as WithRequestID<PageClass>,\n    );\n  }\n\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\n\nexport interface PageResponse<Item> {\n  data: Array<Item>;\n\n  object: string;\n}\n\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page<Item> extends AbstractPage<Item> implements PageResponse<Item> {\n  data: Array<Item>;\n\n  object: string;\n\n  constructor(client: OpenAI, response: Response, body: PageResponse<Item>, options: FinalRequestOptions) {\n    super(client, response, body, options);\n\n    this.data = body.data || [];\n    this.object = body.object;\n  }\n\n  getPaginatedItems(): Item[] {\n    return this.data ?? [];\n  }\n\n  nextPageRequestOptions(): PageRequestOptions | null {\n    return null;\n  }\n}\n\nexport interface CursorPageResponse<Item> {\n  data: Array<Item>;\n\n  has_more: boolean;\n}\n\nexport interface CursorPageParams {\n  after?: string;\n\n  limit?: number;\n}\n\nexport class CursorPage<Item extends { id: string }>\n  extends AbstractPage<Item>\n  implements CursorPageResponse<Item>\n{\n  data: Array<Item>;\n\n  has_more: boolean;\n\n  constructor(\n    client: OpenAI,\n    response: Response,\n    body: CursorPageResponse<Item>,\n    options: FinalRequestOptions,\n  ) {\n    super(client, response, body, options);\n\n    this.data = body.data || [];\n    this.has_more = body.has_more || false;\n  }\n\n  getPaginatedItems(): Item[] {\n    return this.data ?? [];\n  }\n\n  override hasNextPage(): boolean {\n    if (this.has_more === false) {\n      return false;\n    }\n\n    return super.hasNextPage();\n  }\n\n  nextPageRequestOptions(): PageRequestOptions | null {\n    const data = this.getPaginatedItems();\n    const id = data[data.length - 1]?.id;\n    if (!id) {\n      return null;\n    }\n\n    return {\n      ...this.options,\n      query: {\n        ...maybeObj(this.options.query),\n        after: id,\n      },\n    };\n  }\n}\n","import { type RequestOptions } from './request-options';\nimport type { FilePropertyBag, Fetch } from './builtin-types';\nimport type { OpenAI } from '../client';\nimport { ReadableStreamFrom } from './shims';\n\nexport type BlobPart = string | ArrayBuffer | ArrayBufferView | Blob | DataView;\ntype FsReadStream = AsyncIterable<Uint8Array> & { path: string | { toString(): string } };\n\n// https://github.com/oven-sh/bun/issues/5980\ninterface BunFile extends Blob {\n  readonly name?: string | undefined;\n}\n\nexport const checkFileSupport = () => {\n  if (typeof File === 'undefined') {\n    const { process } = globalThis as any;\n    const isOldNode =\n      typeof process?.versions?.node === 'string' && parseInt(process.versions.node.split('.')) < 20;\n    throw new Error(\n      '`File` is not defined as a global, which is required for file uploads.' +\n        (isOldNode ?\n          \" Update to Node 20 LTS or newer, or set `globalThis.File` to `import('node:buffer').File`.\"\n        : ''),\n    );\n  }\n};\n\n/**\n * Typically, this is a native \"File\" class.\n *\n * We provide the {@link toFile} utility to convert a variety of objects\n * into the File class.\n *\n * For convenience, you can also pass a fetch Response, or in Node,\n * the result of fs.createReadStream().\n */\nexport type Uploadable = File | Response | FsReadStream | BunFile;\n\n/**\n * Construct a `File` instance. This is used to ensure a helpful error is thrown\n * for environments that don't define a global `File` yet.\n */\nexport function makeFile(\n  fileBits: BlobPart[],\n  fileName: string | undefined,\n  options?: FilePropertyBag,\n): File {\n  checkFileSupport();\n  return new File(fileBits as any, fileName ?? 'unknown_file', options);\n}\n\nexport function getName(value: any): string | undefined {\n  return (\n    (\n      (typeof value === 'object' &&\n        value !== null &&\n        (('name' in value && value.name && String(value.name)) ||\n          ('url' in value && value.url && String(value.url)) ||\n          ('filename' in value && value.filename && String(value.filename)) ||\n          ('path' in value && value.path && String(value.path)))) ||\n      ''\n    )\n      .split(/[\\\\/]/)\n      .pop() || undefined\n  );\n}\n\nexport const isAsyncIterable = (value: any): value is AsyncIterable<any> =>\n  value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\n\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (\n  opts: RequestOptions,\n  fetch: OpenAI | Fetch,\n): Promise<RequestOptions> => {\n  if (!hasUploadableValue(opts.body)) return opts;\n\n  return { ...opts, body: await createForm(opts.body, fetch) };\n};\n\ntype MultipartFormRequestOptions = Omit<RequestOptions, 'body'> & { body: unknown };\n\nexport const multipartFormRequestOptions = async (\n  opts: MultipartFormRequestOptions,\n  fetch: OpenAI | Fetch,\n): Promise<RequestOptions> => {\n  return { ...opts, body: await createForm(opts.body, fetch) };\n};\n\nconst supportsFormDataMap = /** @__PURE__ */ new WeakMap<Fetch, Promise<boolean>>();\n\n/**\n * node-fetch doesn't support the global FormData object in recent node versions. Instead of sending\n * properly-encoded form data, it just stringifies the object, resulting in a request body of \"[object FormData]\".\n * This function detects if the fetch function provided supports the global FormData object to avoid\n * confusing error messages later on.\n */\nfunction supportsFormData(fetchObject: OpenAI | Fetch): Promise<boolean> {\n  const fetch: Fetch = typeof fetchObject === 'function' ? fetchObject : (fetchObject as any).fetch;\n  const cached = supportsFormDataMap.get(fetch);\n  if (cached) return cached;\n  const promise = (async () => {\n    try {\n      const FetchResponse = (\n        'Response' in fetch ?\n          fetch.Response\n        : (await fetch('data:,')).constructor) as typeof Response;\n      const data = new FormData();\n      if (data.toString() === (await new FetchResponse(data).text())) {\n        return false;\n      }\n      return true;\n    } catch {\n      // avoid false negatives\n      return true;\n    }\n  })();\n  supportsFormDataMap.set(fetch, promise);\n  return promise;\n}\n\nexport const createForm = async <T = Record<string, unknown>>(\n  body: T | undefined,\n  fetch: OpenAI | Fetch,\n): Promise<FormData> => {\n  if (!(await supportsFormData(fetch))) {\n    throw new TypeError(\n      'The provided fetch function does not support file uploads with the current global FormData class.',\n    );\n  }\n  const form = new FormData();\n  await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n  return form;\n};\n\n// We check for Blob not File because Bun.File doesn't inherit from File,\n// but they both inherit from Blob and have a `name` property at runtime.\nconst isNamedBlob = (value: unknown) => value instanceof Blob && 'name' in value;\n\nconst isUploadable = (value: unknown) =>\n  typeof value === 'object' &&\n  value !== null &&\n  (value instanceof Response || isAsyncIterable(value) || isNamedBlob(value));\n\nconst hasUploadableValue = (value: unknown): boolean => {\n  if (isUploadable(value)) return true;\n  if (Array.isArray(value)) return value.some(hasUploadableValue);\n  if (value && typeof value === 'object') {\n    for (const k in value) {\n      if (hasUploadableValue((value as any)[k])) return true;\n    }\n  }\n  return false;\n};\n\nconst addFormValue = async (form: FormData, key: string, value: unknown): Promise<void> => {\n  if (value === undefined) return;\n  if (value == null) {\n    throw new TypeError(\n      `Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`,\n    );\n  }\n\n  // TODO: make nested formats configurable\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n    form.append(key, String(value));\n  } else if (value instanceof Response) {\n    form.append(key, makeFile([await value.blob()], getName(value)));\n  } else if (isAsyncIterable(value)) {\n    form.append(key, makeFile([await new Response(ReadableStreamFrom(value)).blob()], getName(value)));\n  } else if (isNamedBlob(value)) {\n    form.append(key, value, getName(value));\n  } else if (Array.isArray(value)) {\n    await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n  } else if (typeof value === 'object') {\n    await Promise.all(\n      Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)),\n    );\n  } else {\n    throw new TypeError(\n      `Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`,\n    );\n  }\n};\n","import { BlobPart, getName, makeFile, isAsyncIterable } from './uploads';\nimport type { FilePropertyBag } from './builtin-types';\nimport { checkFileSupport } from './uploads';\n\ntype BlobLikePart = string | ArrayBuffer | ArrayBufferView | BlobLike | DataView;\n\n/**\n * Intended to match DOM Blob, node-fetch Blob, node:buffer Blob, etc.\n * Don't add arrayBuffer here, node-fetch doesn't have it\n */\ninterface BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size) */\n  readonly size: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type) */\n  readonly type: string;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/text) */\n  text(): Promise<string>;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/slice) */\n  slice(start?: number, end?: number): BlobLike;\n}\n\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isBlobLike = (value: any): value is BlobLike & { arrayBuffer(): Promise<ArrayBuffer> } =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.size === 'number' &&\n  typeof value.type === 'string' &&\n  typeof value.text === 'function' &&\n  typeof value.slice === 'function' &&\n  typeof value.arrayBuffer === 'function';\n\n/**\n * Intended to match DOM File, node:buffer File, undici File, etc.\n */\ninterface FileLike extends BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/lastModified) */\n  readonly lastModified: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/name) */\n  readonly name?: string | undefined;\n}\n\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isFileLike = (value: any): value is FileLike & { arrayBuffer(): Promise<ArrayBuffer> } =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.name === 'string' &&\n  typeof value.lastModified === 'number' &&\n  isBlobLike(value);\n\n/**\n * Intended to match DOM Response, node-fetch Response, undici Response, etc.\n */\nexport interface ResponseLike {\n  url: string;\n  blob(): Promise<BlobLike>;\n}\n\nconst isResponseLike = (value: any): value is ResponseLike =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.url === 'string' &&\n  typeof value.blob === 'function';\n\nexport type ToFileInput =\n  | FileLike\n  | ResponseLike\n  | Exclude<BlobLikePart, string>\n  | AsyncIterable<BlobLikePart>;\n\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(\n  value: ToFileInput | PromiseLike<ToFileInput>,\n  name?: string | null | undefined,\n  options?: FilePropertyBag | undefined,\n): Promise<File> {\n  checkFileSupport();\n\n  // If it's a promise, resolve it.\n  value = await value;\n\n  // If we've been given a `File` we don't need to do anything\n  if (isFileLike(value)) {\n    if (value instanceof File) {\n      return value;\n    }\n    return makeFile([await value.arrayBuffer()], value.name);\n  }\n\n  if (isResponseLike(value)) {\n    const blob = await value.blob();\n    name ||= new URL(value.url).pathname.split(/[\\\\/]/).pop();\n\n    return makeFile(await getBytes(blob), name, options);\n  }\n\n  const parts = await getBytes(value);\n\n  name ||= getName(value);\n\n  if (!options?.type) {\n    const type = parts.find((part) => typeof part === 'object' && 'type' in part && part.type);\n    if (typeof type === 'string') {\n      options = { ...options, type };\n    }\n  }\n\n  return makeFile(parts, name, options);\n}\n\nasync function getBytes(value: BlobLikePart | AsyncIterable<BlobLikePart>): Promise<Array<BlobPart>> {\n  let parts: Array<BlobPart> = [];\n  if (\n    typeof value === 'string' ||\n    ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n    value instanceof ArrayBuffer\n  ) {\n    parts.push(value);\n  } else if (isBlobLike(value)) {\n    parts.push(value instanceof Blob ? value : await value.arrayBuffer());\n  } else if (\n    isAsyncIterable(value) // includes Readable, ReadableStream, etc.\n  ) {\n    for await (const chunk of value) {\n      parts.push(...(await getBytes(chunk as BlobLikePart))); // TODO, consider validating?\n    }\n  } else {\n    const constructor = value?.constructor?.name;\n    throw new Error(\n      `Unexpected data type: ${typeof value}${\n        constructor ? `; constructor: ${constructor}` : ''\n      }${propsForError(value)}`,\n    );\n  }\n\n  return parts;\n}\n\nfunction propsForError(value: unknown): string {\n  if (typeof value !== 'object' || value === null) return '';\n  const props = Object.getOwnPropertyNames(value);\n  return `; props: [${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport type { OpenAI } from '../client';\n\nexport abstract class APIResource {\n  protected _client: OpenAI;\n\n  constructor(client: OpenAI) {\n    this._client = client;\n  }\n}\n","import { OpenAIError } from '../../core/error';\n\n/**\n * Percent-encode everything that isn't safe to have in a path without encoding safe chars.\n *\n * Taken from https://datatracker.ietf.org/doc/html/rfc3986#section-3.3:\n * > unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n * > sub-delims  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * > pchar       = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n */\nexport function encodeURIPath(str: string) {\n  return str.replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]+/g, encodeURIComponent);\n}\n\nexport const createPathTagFunction = (pathEncoder = encodeURIPath) =>\n  function path(statics: readonly string[], ...params: readonly unknown[]): string {\n    // If there are no params, no processing is needed.\n    if (statics.length === 1) return statics[0]!;\n\n    let postPath = false;\n    const path = statics.reduce((previousValue, currentValue, index) => {\n      if (/[?#]/.test(currentValue)) {\n        postPath = true;\n      }\n      return (\n        previousValue +\n        currentValue +\n        (index === params.length ? '' : (postPath ? encodeURIComponent : pathEncoder)(String(params[index])))\n      );\n    }, '');\n\n    const pathOnly = path.split(/[?#]/, 1)[0]!;\n    const invalidSegments = [];\n    const invalidSegmentPattern = /(?<=^|\\/)(?:\\.|%2e){1,2}(?=\\/|$)/gi;\n    let match;\n\n    // Find all invalid segments\n    while ((match = invalidSegmentPattern.exec(pathOnly)) !== null) {\n      invalidSegments.push({\n        start: match.index,\n        length: match[0].length,\n      });\n    }\n\n    if (invalidSegments.length > 0) {\n      let lastEnd = 0;\n      const underline = invalidSegments.reduce((acc, segment) => {\n        const spaces = ' '.repeat(segment.start - lastEnd);\n        const arrows = '^'.repeat(segment.length);\n        lastEnd = segment.start + segment.length;\n        return acc + spaces + arrows;\n      }, '');\n\n      throw new OpenAIError(`Path parameters result in path with invalid segments:\\n${path}\\n${underline}`);\n    }\n\n    return path;\n  };\n\n/**\n * URI-encodes path params and ensures no unsafe /./ or /../ path segments are introduced.\n */\nexport const path = /* @__PURE__ */ createPathTagFunction(encodeURIPath);\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as CompletionsAPI from './completions';\nimport { ChatCompletionStoreMessagesPage } from './completions';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../../core/pagination';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { path } from '../../../internal/utils/path';\n\nexport class Messages extends APIResource {\n  /**\n   * Get the messages in a stored chat completion. Only Chat Completions that have\n   * been created with the `store` parameter set to `true` will be returned.\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const chatCompletionStoreMessage of client.chat.completions.messages.list(\n   *   'completion_id',\n   * )) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    completionID: string,\n    query: MessageListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<ChatCompletionStoreMessagesPage, CompletionsAPI.ChatCompletionStoreMessage> {\n    return this._client.getAPIList(\n      path`/chat/completions/${completionID}/messages`,\n      CursorPage<CompletionsAPI.ChatCompletionStoreMessage>,\n      { query, ...options },\n    );\n  }\n}\n\nexport interface MessageListParams extends CursorPageParams {\n  /**\n   * Sort order for messages by timestamp. Use `asc` for ascending order or `desc`\n   * for descending order. Defaults to `asc`.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport declare namespace Messages {\n  export { type MessageListParams as MessageListParams };\n}\n\nexport { type ChatCompletionStoreMessagesPage };\n","import { type ChatCompletionRunner } from './ChatCompletionRunner';\nimport { type ChatCompletionStreamingRunner } from './ChatCompletionStreamingRunner';\nimport { JSONSchema } from './jsonschema';\n\ntype PromiseOrValue<T> = T | Promise<T>;\n\nexport type RunnableFunctionWithParse<Args extends object> = {\n  /**\n   * @param args the return value from `parse`.\n   * @param runner the runner evaluating this callback.\n   * @returns a string to send back to OpenAI.\n   */\n  function: (\n    args: Args,\n    runner: ChatCompletionRunner<unknown> | ChatCompletionStreamingRunner<unknown>,\n  ) => PromiseOrValue<unknown>;\n  /**\n   * @param input the raw args from the OpenAI function call.\n   * @returns the parsed arguments to pass to `function`\n   */\n  parse: (input: string) => PromiseOrValue<Args>;\n  /**\n   * The parameters the function accepts, describes as a JSON Schema object.\n   */\n  parameters: JSONSchema;\n  /**\n   * A description of what the function does, used by the model to choose when and how to call the function.\n   */\n  description: string;\n  /**\n   * The name of the function to be called. Will default to function.name if omitted.\n   */\n  name?: string | undefined;\n  strict?: boolean | undefined;\n};\n\nexport type RunnableFunctionWithoutParse = {\n  /**\n   * @param args the raw args from the OpenAI function call.\n   * @returns a string to send back to OpenAI\n   */\n  function: (\n    args: string,\n    runner: ChatCompletionRunner<unknown> | ChatCompletionStreamingRunner<unknown>,\n  ) => PromiseOrValue<unknown>;\n  /**\n   * The parameters the function accepts, describes as a JSON Schema object.\n   */\n  parameters: JSONSchema;\n  /**\n   * A description of what the function does, used by the model to choose when and how to call the function.\n   */\n  description: string;\n  /**\n   * The name of the function to be called. Will default to function.name if omitted.\n   */\n  name?: string | undefined;\n  strict?: boolean | undefined;\n};\n\nexport type RunnableFunction<Args extends object | string> =\n  Args extends string ? RunnableFunctionWithoutParse\n  : Args extends object ? RunnableFunctionWithParse<Args>\n  : never;\n\nexport type RunnableToolFunction<Args extends object | string> =\n  Args extends string ? RunnableToolFunctionWithoutParse\n  : Args extends object ? RunnableToolFunctionWithParse<Args>\n  : never;\n\nexport type RunnableToolFunctionWithoutParse = {\n  type: 'function';\n  function: RunnableFunctionWithoutParse;\n};\nexport type RunnableToolFunctionWithParse<Args extends object> = {\n  type: 'function';\n  function: RunnableFunctionWithParse<Args>;\n};\n\nexport function isRunnableFunctionWithParse<Args extends object>(\n  fn: any,\n): fn is RunnableFunctionWithParse<Args> {\n  return typeof (fn as any).parse === 'function';\n}\n\nexport type BaseFunctionsArgs = readonly (object | string)[];\n\nexport type RunnableFunctions<FunctionsArgs extends BaseFunctionsArgs> =\n  [any[]] extends [FunctionsArgs] ? readonly RunnableFunction<any>[]\n  : {\n      [Index in keyof FunctionsArgs]: Index extends number ? RunnableFunction<FunctionsArgs[Index]>\n      : FunctionsArgs[Index];\n    };\n\nexport type RunnableTools<FunctionsArgs extends BaseFunctionsArgs> =\n  [any[]] extends [FunctionsArgs] ? readonly RunnableToolFunction<any>[]\n  : {\n      [Index in keyof FunctionsArgs]: Index extends number ? RunnableToolFunction<FunctionsArgs[Index]>\n      : FunctionsArgs[Index];\n    };\n\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction<Args extends object> {\n  type: 'function';\n  function: RunnableFunctionWithParse<Args>;\n\n  constructor(input: RunnableFunctionWithParse<Args>) {\n    this.type = 'function';\n    this.function = input;\n  }\n}\n","import {\n  type ChatCompletionAssistantMessageParam,\n  type ChatCompletionMessageParam,\n  type ChatCompletionToolMessageParam,\n} from '../resources';\n\nexport const isAssistantMessage = (\n  message: ChatCompletionMessageParam | null | undefined,\n): message is ChatCompletionAssistantMessageParam => {\n  return message?.role === 'assistant';\n};\n\nexport const isToolMessage = (\n  message: ChatCompletionMessageParam | null | undefined,\n): message is ChatCompletionToolMessageParam => {\n  return message?.role === 'tool';\n};\n\nexport function isPresent<T>(obj: T | null | undefined): obj is T {\n  return obj != null;\n}\n","import { APIUserAbortError, OpenAIError } from '../error';\n\nexport class EventStream<EventTypes extends BaseEvents> {\n  controller: AbortController = new AbortController();\n\n  #connectedPromise: Promise<void>;\n  #resolveConnectedPromise: () => void = () => {};\n  #rejectConnectedPromise: (error: OpenAIError) => void = () => {};\n\n  #endPromise: Promise<void>;\n  #resolveEndPromise: () => void = () => {};\n  #rejectEndPromise: (error: OpenAIError) => void = () => {};\n\n  #listeners: {\n    [Event in keyof EventTypes]?: EventListeners<EventTypes, Event>;\n  } = {};\n\n  #ended = false;\n  #errored = false;\n  #aborted = false;\n  #catchingPromiseCreated = false;\n\n  constructor() {\n    this.#connectedPromise = new Promise<void>((resolve, reject) => {\n      this.#resolveConnectedPromise = resolve;\n      this.#rejectConnectedPromise = reject;\n    });\n\n    this.#endPromise = new Promise<void>((resolve, reject) => {\n      this.#resolveEndPromise = resolve;\n      this.#rejectEndPromise = reject;\n    });\n\n    // Don't let these promises cause unhandled rejection errors.\n    // we will manually cause an unhandled rejection error later\n    // if the user hasn't registered any error listener or called\n    // any promise-returning method.\n    this.#connectedPromise.catch(() => {});\n    this.#endPromise.catch(() => {});\n  }\n\n  protected _run(this: EventStream<EventTypes>, executor: () => Promise<any>) {\n    // Unfortunately if we call `executor()` immediately we get runtime errors about\n    // references to `this` before the `super()` constructor call returns.\n    setTimeout(() => {\n      executor().then(() => {\n        this._emitFinal();\n        this._emit('end');\n      }, this.#handleError.bind(this));\n    }, 0);\n  }\n\n  protected _connected(this: EventStream<EventTypes>) {\n    if (this.ended) return;\n    this.#resolveConnectedPromise();\n    this._emit('connect');\n  }\n\n  get ended(): boolean {\n    return this.#ended;\n  }\n\n  get errored(): boolean {\n    return this.#errored;\n  }\n\n  get aborted(): boolean {\n    return this.#aborted;\n  }\n\n  abort() {\n    this.controller.abort();\n  }\n\n  /**\n   * Adds the listener function to the end of the listeners array for the event.\n   * No checks are made to see if the listener has already been added. Multiple calls passing\n   * the same combination of event and listener will result in the listener being added, and\n   * called, multiple times.\n   * @returns this ChatCompletionStream, so that calls can be chained\n   */\n  on<Event extends keyof EventTypes>(event: Event, listener: EventListener<EventTypes, Event>): this {\n    const listeners: EventListeners<EventTypes, Event> =\n      this.#listeners[event] || (this.#listeners[event] = []);\n    listeners.push({ listener });\n    return this;\n  }\n\n  /**\n   * Removes the specified listener from the listener array for the event.\n   * off() will remove, at most, one instance of a listener from the listener array. If any single\n   * listener has been added multiple times to the listener array for the specified event, then\n   * off() must be called multiple times to remove each instance.\n   * @returns this ChatCompletionStream, so that calls can be chained\n   */\n  off<Event extends keyof EventTypes>(event: Event, listener: EventListener<EventTypes, Event>): this {\n    const listeners = this.#listeners[event];\n    if (!listeners) return this;\n    const index = listeners.findIndex((l) => l.listener === listener);\n    if (index >= 0) listeners.splice(index, 1);\n    return this;\n  }\n\n  /**\n   * Adds a one-time listener function for the event. The next time the event is triggered,\n   * this listener is removed and then invoked.\n   * @returns this ChatCompletionStream, so that calls can be chained\n   */\n  once<Event extends keyof EventTypes>(event: Event, listener: EventListener<EventTypes, Event>): this {\n    const listeners: EventListeners<EventTypes, Event> =\n      this.#listeners[event] || (this.#listeners[event] = []);\n    listeners.push({ listener, once: true });\n    return this;\n  }\n\n  /**\n   * This is similar to `.once()`, but returns a Promise that resolves the next time\n   * the event is triggered, instead of calling a listener callback.\n   * @returns a Promise that resolves the next time given event is triggered,\n   * or rejects if an error is emitted.  (If you request the 'error' event,\n   * returns a promise that resolves with the error).\n   *\n   * Example:\n   *\n   *   const message = await stream.emitted('message') // rejects if the stream errors\n   */\n  emitted<Event extends keyof EventTypes>(\n    event: Event,\n  ): Promise<\n    EventParameters<EventTypes, Event> extends [infer Param] ? Param\n    : EventParameters<EventTypes, Event> extends [] ? void\n    : EventParameters<EventTypes, Event>\n  > {\n    return new Promise((resolve, reject) => {\n      this.#catchingPromiseCreated = true;\n      if (event !== 'error') this.once('error', reject);\n      this.once(event, resolve as any);\n    });\n  }\n\n  async done(): Promise<void> {\n    this.#catchingPromiseCreated = true;\n    await this.#endPromise;\n  }\n\n  #handleError(this: EventStream<EventTypes>, error: unknown) {\n    this.#errored = true;\n    if (error instanceof Error && error.name === 'AbortError') {\n      error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n      this.#aborted = true;\n      return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n      return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n      const openAIError: OpenAIError = new OpenAIError(error.message);\n      // @ts-ignore\n      openAIError.cause = error;\n      return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n  }\n\n  _emit<Event extends keyof BaseEvents>(event: Event, ...args: EventParameters<BaseEvents, Event>): void;\n  _emit<Event extends keyof EventTypes>(event: Event, ...args: EventParameters<EventTypes, Event>): void;\n  _emit<Event extends keyof EventTypes>(\n    this: EventStream<EventTypes>,\n    event: Event,\n    ...args: EventParameters<EventTypes, Event>\n  ) {\n    // make sure we don't emit any events after end\n    if (this.#ended) {\n      return;\n    }\n\n    if (event === 'end') {\n      this.#ended = true;\n      this.#resolveEndPromise();\n    }\n\n    const listeners: EventListeners<EventTypes, Event> | undefined = this.#listeners[event];\n    if (listeners) {\n      this.#listeners[event] = listeners.filter((l) => !l.once) as any;\n      listeners.forEach(({ listener }: any) => listener(...(args as any)));\n    }\n\n    if (event === 'abort') {\n      const error = args[0] as APIUserAbortError;\n      if (!this.#catchingPromiseCreated && !listeners?.length) {\n        Promise.reject(error);\n      }\n      this.#rejectConnectedPromise(error);\n      this.#rejectEndPromise(error);\n      this._emit('end');\n      return;\n    }\n\n    if (event === 'error') {\n      // NOTE: _emit('error', error) should only be called from #handleError().\n\n      const error = args[0] as OpenAIError;\n      if (!this.#catchingPromiseCreated && !listeners?.length) {\n        // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n        // If you are seeing stack traces here, make sure to handle errors via either:\n        // - runner.on('error', () => ...)\n        // - await runner.done()\n        // - await runner.finalChatCompletion()\n        // - etc.\n        Promise.reject(error);\n      }\n      this.#rejectConnectedPromise(error);\n      this.#rejectEndPromise(error);\n      this._emit('end');\n    }\n  }\n\n  protected _emitFinal(): void {}\n}\n\ntype EventListener<Events, EventType extends keyof Events> = Events[EventType];\n\ntype EventListeners<Events, EventType extends keyof Events> = Array<{\n  listener: EventListener<Events, EventType>;\n  once?: boolean;\n}>;\n\nexport type EventParameters<Events, EventType extends keyof Events> = {\n  [Event in EventType]: EventListener<Events, EventType> extends (...args: infer P) => any ? P : never;\n}[EventType];\n\nexport interface BaseEvents {\n  connect: () => void;\n  error: (error: OpenAIError) => void;\n  abort: (error: APIUserAbortError) => void;\n  end: () => void;\n}\n","import {\n  ChatCompletion,\n  ChatCompletionCreateParams,\n  ChatCompletionMessageToolCall,\n  ChatCompletionTool,\n} from '../resources/chat/completions';\nimport {\n  ChatCompletionStreamingToolRunnerParams,\n  ChatCompletionStreamParams,\n  ChatCompletionToolRunnerParams,\n  ParsedChatCompletion,\n  ParsedChoice,\n  ParsedFunctionToolCall,\n} from '../resources/chat/completions';\nimport { ResponseFormatJSONSchema } from '../resources/shared';\nimport { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from '../error';\nimport { type ResponseFormatTextJSONSchemaConfig } from '../resources/responses/responses';\n\ntype AnyChatCompletionCreateParams =\n  | ChatCompletionCreateParams\n  | ChatCompletionToolRunnerParams<any>\n  | ChatCompletionStreamingToolRunnerParams<any>\n  | ChatCompletionStreamParams;\n\nexport type ExtractParsedContentFromParams<Params extends AnyChatCompletionCreateParams> =\n  Params['response_format'] extends AutoParseableResponseFormat<infer P> ? P : null;\n\nexport type AutoParseableResponseFormat<ParsedT> = ResponseFormatJSONSchema & {\n  __output: ParsedT; // type-level only\n\n  $brand: 'auto-parseable-response-format';\n  $parseRaw(content: string): ParsedT;\n};\n\nexport function makeParseableResponseFormat<ParsedT>(\n  response_format: ResponseFormatJSONSchema,\n  parser: (content: string) => ParsedT,\n): AutoParseableResponseFormat<ParsedT> {\n  const obj = { ...response_format };\n\n  Object.defineProperties(obj, {\n    $brand: {\n      value: 'auto-parseable-response-format',\n      enumerable: false,\n    },\n    $parseRaw: {\n      value: parser,\n      enumerable: false,\n    },\n  });\n\n  return obj as AutoParseableResponseFormat<ParsedT>;\n}\n\nexport type AutoParseableTextFormat<ParsedT> = ResponseFormatTextJSONSchemaConfig & {\n  __output: ParsedT; // type-level only\n\n  $brand: 'auto-parseable-response-format';\n  $parseRaw(content: string): ParsedT;\n};\n\nexport function makeParseableTextFormat<ParsedT>(\n  response_format: ResponseFormatTextJSONSchemaConfig,\n  parser: (content: string) => ParsedT,\n): AutoParseableTextFormat<ParsedT> {\n  const obj = { ...response_format };\n\n  Object.defineProperties(obj, {\n    $brand: {\n      value: 'auto-parseable-response-format',\n      enumerable: false,\n    },\n    $parseRaw: {\n      value: parser,\n      enumerable: false,\n    },\n  });\n\n  return obj as AutoParseableTextFormat<ParsedT>;\n}\n\nexport function isAutoParsableResponseFormat<ParsedT>(\n  response_format: any,\n): response_format is AutoParseableResponseFormat<ParsedT> {\n  return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\n\ntype ToolOptions = {\n  name: string;\n  arguments: any;\n  function?: ((args: any) => any) | undefined;\n};\n\nexport type AutoParseableTool<\n  OptionsT extends ToolOptions,\n  HasFunction = OptionsT['function'] extends Function ? true : false,\n> = ChatCompletionTool & {\n  __arguments: OptionsT['arguments']; // type-level only\n  __name: OptionsT['name']; // type-level only\n  __hasFunction: HasFunction; // type-level only\n\n  $brand: 'auto-parseable-tool';\n  $callback: ((args: OptionsT['arguments']) => any) | undefined;\n  $parseRaw(args: string): OptionsT['arguments'];\n};\n\nexport function makeParseableTool<OptionsT extends ToolOptions>(\n  tool: ChatCompletionTool,\n  {\n    parser,\n    callback,\n  }: {\n    parser: (content: string) => OptionsT['arguments'];\n    callback: ((args: any) => any) | undefined;\n  },\n): AutoParseableTool<OptionsT['arguments']> {\n  const obj = { ...tool };\n\n  Object.defineProperties(obj, {\n    $brand: {\n      value: 'auto-parseable-tool',\n      enumerable: false,\n    },\n    $parseRaw: {\n      value: parser,\n      enumerable: false,\n    },\n    $callback: {\n      value: callback,\n      enumerable: false,\n    },\n  });\n\n  return obj as AutoParseableTool<OptionsT['arguments']>;\n}\n\nexport function isAutoParsableTool(tool: any): tool is AutoParseableTool<any> {\n  return tool?.['$brand'] === 'auto-parseable-tool';\n}\n\nexport function maybeParseChatCompletion<\n  Params extends ChatCompletionCreateParams | null,\n  ParsedT = Params extends null ? null : ExtractParsedContentFromParams<NonNullable<Params>>,\n>(completion: ChatCompletion, params: Params): ParsedChatCompletion<ParsedT> {\n  if (!params || !hasAutoParseableInput(params)) {\n    return {\n      ...completion,\n      choices: completion.choices.map((choice) => ({\n        ...choice,\n        message: {\n          ...choice.message,\n          parsed: null,\n          ...(choice.message.tool_calls ?\n            {\n              tool_calls: choice.message.tool_calls,\n            }\n          : undefined),\n        },\n      })),\n    };\n  }\n\n  return parseChatCompletion(completion, params);\n}\n\nexport function parseChatCompletion<\n  Params extends ChatCompletionCreateParams,\n  ParsedT = ExtractParsedContentFromParams<Params>,\n>(completion: ChatCompletion, params: Params): ParsedChatCompletion<ParsedT> {\n  const choices: Array<ParsedChoice<ParsedT>> = completion.choices.map((choice): ParsedChoice<ParsedT> => {\n    if (choice.finish_reason === 'length') {\n      throw new LengthFinishReasonError();\n    }\n\n    if (choice.finish_reason === 'content_filter') {\n      throw new ContentFilterFinishReasonError();\n    }\n\n    return {\n      ...choice,\n      message: {\n        ...choice.message,\n        ...(choice.message.tool_calls ?\n          {\n            tool_calls:\n              choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? undefined,\n          }\n        : undefined),\n        parsed:\n          choice.message.content && !choice.message.refusal ?\n            parseResponseFormat(params, choice.message.content)\n          : null,\n      },\n    };\n  });\n\n  return { ...completion, choices };\n}\n\nfunction parseResponseFormat<\n  Params extends ChatCompletionCreateParams,\n  ParsedT = ExtractParsedContentFromParams<Params>,\n>(params: Params, content: string): ParsedT | null {\n  if (params.response_format?.type !== 'json_schema') {\n    return null;\n  }\n\n  if (params.response_format?.type === 'json_schema') {\n    if ('$parseRaw' in params.response_format) {\n      const response_format = params.response_format as AutoParseableResponseFormat<ParsedT>;\n\n      return response_format.$parseRaw(content);\n    }\n\n    return JSON.parse(content);\n  }\n\n  return null;\n}\n\nfunction parseToolCall<Params extends ChatCompletionCreateParams>(\n  params: Params,\n  toolCall: ChatCompletionMessageToolCall,\n): ParsedFunctionToolCall {\n  const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n  return {\n    ...toolCall,\n    function: {\n      ...toolCall.function,\n      parsed_arguments:\n        isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n        : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n        : null,\n    },\n  };\n}\n\nexport function shouldParseToolCall(\n  params: ChatCompletionCreateParams | null | undefined,\n  toolCall: ChatCompletionMessageToolCall,\n): boolean {\n  if (!params) {\n    return false;\n  }\n\n  const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n  return isAutoParsableTool(inputTool) || inputTool?.function.strict || false;\n}\n\nexport function hasAutoParseableInput(params: AnyChatCompletionCreateParams): boolean {\n  if (isAutoParsableResponseFormat(params.response_format)) {\n    return true;\n  }\n\n  return (\n    params.tools?.some(\n      (t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true),\n    ) ?? false\n  );\n}\n\nexport function validateInputTools(tools: ChatCompletionTool[] | undefined) {\n  for (const tool of tools ?? []) {\n    if (tool.type !== 'function') {\n      throw new OpenAIError(\n        `Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``,\n      );\n    }\n\n    if (tool.function.strict !== true) {\n      throw new OpenAIError(\n        `The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`,\n      );\n    }\n  }\n}\n","import type { CompletionUsage } from '../resources/completions';\nimport type {\n  ChatCompletion,\n  ChatCompletionMessage,\n  ChatCompletionMessageParam,\n  ChatCompletionCreateParams,\n  ChatCompletionTool,\n  ChatCompletionMessageToolCall,\n} from '../resources/chat/completions';\nimport { OpenAIError } from '../error';\nimport {\n  type RunnableFunction,\n  isRunnableFunctionWithParse,\n  type BaseFunctionsArgs,\n  type RunnableToolFunction,\n} from './RunnableFunction';\nimport type { ChatCompletionToolRunnerParams } from './ChatCompletionRunner';\nimport type { ChatCompletionStreamingToolRunnerParams } from './ChatCompletionStreamingRunner';\nimport { isAssistantMessage, isToolMessage } from './chatCompletionUtils';\nimport { BaseEvents, EventStream } from './EventStream';\nimport type { ParsedChatCompletion } from '../resources/chat/completions';\nimport type OpenAI from '../index';\nimport { isAutoParsableTool, parseChatCompletion } from '../lib/parser';\nimport type { RequestOptions } from '../internal/request-options';\n\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport interface RunnerOptions extends RequestOptions {\n  /** How many requests to make before canceling. Default 10. */\n  maxChatCompletions?: number;\n}\n\nexport class AbstractChatCompletionRunner<\n  EventTypes extends AbstractChatCompletionRunnerEvents,\n  ParsedT,\n> extends EventStream<EventTypes> {\n  protected _chatCompletions: ParsedChatCompletion<ParsedT>[] = [];\n  messages: ChatCompletionMessageParam[] = [];\n\n  protected _addChatCompletion(\n    this: AbstractChatCompletionRunner<AbstractChatCompletionRunnerEvents, ParsedT>,\n    chatCompletion: ParsedChatCompletion<ParsedT>,\n  ): ParsedChatCompletion<ParsedT> {\n    this._chatCompletions.push(chatCompletion);\n    this._emit('chatCompletion', chatCompletion);\n    const message = chatCompletion.choices[0]?.message;\n    if (message) this._addMessage(message as ChatCompletionMessageParam);\n    return chatCompletion;\n  }\n\n  protected _addMessage(\n    this: AbstractChatCompletionRunner<AbstractChatCompletionRunnerEvents, ParsedT>,\n    message: ChatCompletionMessageParam,\n    emit = true,\n  ) {\n    if (!('content' in message)) message.content = null;\n\n    this.messages.push(message);\n\n    if (emit) {\n      this._emit('message', message);\n      if (isToolMessage(message) && message.content) {\n        // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n        this._emit('functionToolCallResult', message.content as string);\n      } else if (isAssistantMessage(message) && message.tool_calls) {\n        for (const tool_call of message.tool_calls) {\n          if (tool_call.type === 'function') {\n            this._emit('functionToolCall', tool_call.function);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @returns a promise that resolves with the final ChatCompletion, or rejects\n   * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n   */\n  async finalChatCompletion(): Promise<ParsedChatCompletion<ParsedT>> {\n    await this.done();\n    const completion = this._chatCompletions[this._chatCompletions.length - 1];\n    if (!completion) throw new OpenAIError('stream ended without producing a ChatCompletion');\n    return completion;\n  }\n\n  #getFinalContent(): string | null {\n    return this.#getFinalMessage().content ?? null;\n  }\n\n  /**\n   * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n   * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n   */\n  async finalContent(): Promise<string | null> {\n    await this.done();\n    return this.#getFinalContent();\n  }\n\n  #getFinalMessage(): ChatCompletionMessage {\n    let i = this.messages.length;\n    while (i-- > 0) {\n      const message = this.messages[i];\n      if (isAssistantMessage(message)) {\n        // TODO: support audio here\n        const ret: Omit<ChatCompletionMessage, 'audio'> = {\n          ...message,\n          content: (message as ChatCompletionMessage).content ?? null,\n          refusal: (message as ChatCompletionMessage).refusal ?? null,\n        };\n        return ret;\n      }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n  }\n\n  /**\n   * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n   * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n   */\n  async finalMessage(): Promise<ChatCompletionMessage> {\n    await this.done();\n    return this.#getFinalMessage();\n  }\n\n  #getFinalFunctionToolCall(): ChatCompletionMessageToolCall.Function | undefined {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n      const message = this.messages[i];\n      if (isAssistantMessage(message) && message?.tool_calls?.length) {\n        return message.tool_calls.at(-1)?.function;\n      }\n    }\n\n    return;\n  }\n\n  /**\n   * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n   * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n   */\n  async finalFunctionToolCall(): Promise<ChatCompletionMessageToolCall.Function | undefined> {\n    await this.done();\n    return this.#getFinalFunctionToolCall();\n  }\n\n  #getFinalFunctionToolCallResult(): string | undefined {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n      const message = this.messages[i];\n      if (\n        isToolMessage(message) &&\n        message.content != null &&\n        typeof message.content === 'string' &&\n        this.messages.some(\n          (x) =>\n            x.role === 'assistant' &&\n            x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id),\n        )\n      ) {\n        return message.content;\n      }\n    }\n\n    return;\n  }\n\n  async finalFunctionToolCallResult(): Promise<string | undefined> {\n    await this.done();\n    return this.#getFinalFunctionToolCallResult();\n  }\n\n  #calculateTotalUsage(): CompletionUsage {\n    const total: CompletionUsage = {\n      completion_tokens: 0,\n      prompt_tokens: 0,\n      total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n      if (usage) {\n        total.completion_tokens += usage.completion_tokens;\n        total.prompt_tokens += usage.prompt_tokens;\n        total.total_tokens += usage.total_tokens;\n      }\n    }\n    return total;\n  }\n\n  async totalUsage(): Promise<CompletionUsage> {\n    await this.done();\n    return this.#calculateTotalUsage();\n  }\n\n  allChatCompletions(): ChatCompletion[] {\n    return [...this._chatCompletions];\n  }\n\n  protected override _emitFinal(\n    this: AbstractChatCompletionRunner<AbstractChatCompletionRunnerEvents, ParsedT>,\n  ) {\n    const completion = this._chatCompletions[this._chatCompletions.length - 1];\n    if (completion) this._emit('finalChatCompletion', completion);\n    const finalMessage = this.#getFinalMessage();\n    if (finalMessage) this._emit('finalMessage', finalMessage);\n    const finalContent = this.#getFinalContent();\n    if (finalContent) this._emit('finalContent', finalContent);\n\n    const finalFunctionCall = this.#getFinalFunctionToolCall();\n    if (finalFunctionCall) this._emit('finalFunctionToolCall', finalFunctionCall);\n\n    const finalFunctionCallResult = this.#getFinalFunctionToolCallResult();\n    if (finalFunctionCallResult != null) this._emit('finalFunctionToolCallResult', finalFunctionCallResult);\n\n    if (this._chatCompletions.some((c) => c.usage)) {\n      this._emit('totalUsage', this.#calculateTotalUsage());\n    }\n  }\n\n  #validateParams(params: ChatCompletionCreateParams): void {\n    if (params.n != null && params.n > 1) {\n      throw new OpenAIError(\n        'ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.',\n      );\n    }\n  }\n\n  protected async _createChatCompletion(\n    client: OpenAI,\n    params: ChatCompletionCreateParams,\n    options?: RequestOptions,\n  ): Promise<ParsedChatCompletion<ParsedT>> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    this.#validateParams(params);\n\n    const chatCompletion = await client.chat.completions.create(\n      { ...params, stream: false },\n      { ...options, signal: this.controller.signal },\n    );\n    this._connected();\n    return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n  }\n\n  protected async _runChatCompletion(\n    client: OpenAI,\n    params: ChatCompletionCreateParams,\n    options?: RequestOptions,\n  ): Promise<ChatCompletion> {\n    for (const message of params.messages) {\n      this._addMessage(message, false);\n    }\n    return await this._createChatCompletion(client, params, options);\n  }\n\n  protected async _runTools<FunctionsArgs extends BaseFunctionsArgs>(\n    client: OpenAI,\n    params:\n      | ChatCompletionToolRunnerParams<FunctionsArgs>\n      | ChatCompletionStreamingToolRunnerParams<FunctionsArgs>,\n    options?: RunnerOptions,\n  ) {\n    const role = 'tool' as const;\n    const { tool_choice = 'auto', stream, ...restParams } = params;\n    const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n    const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n\n    // TODO(someday): clean this logic up\n    const inputTools = params.tools.map((tool): RunnableToolFunction<any> => {\n      if (isAutoParsableTool(tool)) {\n        if (!tool.$callback) {\n          throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n        }\n\n        return {\n          type: 'function',\n          function: {\n            function: tool.$callback,\n            name: tool.function.name,\n            description: tool.function.description || '',\n            parameters: tool.function.parameters as any,\n            parse: tool.$parseRaw,\n            strict: true,\n          },\n        };\n      }\n\n      return tool as any as RunnableToolFunction<any>;\n    });\n\n    const functionsByName: Record<string, RunnableFunction<any>> = {};\n    for (const f of inputTools) {\n      if (f.type === 'function') {\n        functionsByName[f.function.name || f.function.function.name] = f.function;\n      }\n    }\n\n    const tools: ChatCompletionTool[] =\n      'tools' in params ?\n        inputTools.map((t) =>\n          t.type === 'function' ?\n            {\n              type: 'function',\n              function: {\n                name: t.function.name || t.function.function.name,\n                parameters: t.function.parameters as Record<string, unknown>,\n                description: t.function.description,\n                strict: t.function.strict,\n              },\n            }\n          : (t as unknown as ChatCompletionTool),\n        )\n      : (undefined as any);\n\n    for (const message of params.messages) {\n      this._addMessage(message, false);\n    }\n\n    for (let i = 0; i < maxChatCompletions; ++i) {\n      const chatCompletion: ChatCompletion = await this._createChatCompletion(\n        client,\n        {\n          ...restParams,\n          tool_choice,\n          tools,\n          messages: [...this.messages],\n        },\n        options,\n      );\n      const message = chatCompletion.choices[0]?.message;\n      if (!message) {\n        throw new OpenAIError(`missing message in ChatCompletion response`);\n      }\n      if (!message.tool_calls?.length) {\n        return;\n      }\n\n      for (const tool_call of message.tool_calls) {\n        if (tool_call.type !== 'function') continue;\n        const tool_call_id = tool_call.id;\n        const { name, arguments: args } = tool_call.function;\n        const fn = functionsByName[name];\n\n        if (!fn) {\n          const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(\n            functionsByName,\n          )\n            .map((name) => JSON.stringify(name))\n            .join(', ')}. Please try again`;\n\n          this._addMessage({ role, tool_call_id, content });\n          continue;\n        } else if (singleFunctionToCall && singleFunctionToCall !== name) {\n          const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(\n            singleFunctionToCall,\n          )} requested. Please try again`;\n\n          this._addMessage({ role, tool_call_id, content });\n          continue;\n        }\n\n        let parsed;\n        try {\n          parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n        } catch (error) {\n          const content = error instanceof Error ? error.message : String(error);\n          this._addMessage({ role, tool_call_id, content });\n          continue;\n        }\n\n        // @ts-expect-error it can't rule out `never` type.\n        const rawContent = await fn.function(parsed, this);\n        const content = this.#stringifyFunctionCallResult(rawContent);\n        this._addMessage({ role, tool_call_id, content });\n\n        if (singleFunctionToCall) {\n          return;\n        }\n      }\n    }\n\n    return;\n  }\n\n  #stringifyFunctionCallResult(rawContent: unknown): string {\n    return (\n      typeof rawContent === 'string' ? rawContent\n      : rawContent === undefined ? 'undefined'\n      : JSON.stringify(rawContent)\n    );\n  }\n}\n\nexport interface AbstractChatCompletionRunnerEvents extends BaseEvents {\n  functionToolCall: (functionCall: ChatCompletionMessageToolCall.Function) => void;\n  message: (message: ChatCompletionMessageParam) => void;\n  chatCompletion: (completion: ChatCompletion) => void;\n  finalContent: (contentSnapshot: string) => void;\n  finalMessage: (message: ChatCompletionMessageParam) => void;\n  finalChatCompletion: (completion: ChatCompletion) => void;\n  finalFunctionToolCall: (functionCall: ChatCompletionMessageToolCall.Function) => void;\n  functionToolCallResult: (content: string) => void;\n  finalFunctionToolCallResult: (content: string) => void;\n  totalUsage: (usage: CompletionUsage) => void;\n}\n","import {\n  type ChatCompletionMessageParam,\n  type ChatCompletionCreateParamsNonStreaming,\n} from '../resources/chat/completions';\nimport { type BaseFunctionsArgs, RunnableTools } from './RunnableFunction';\nimport {\n  AbstractChatCompletionRunner,\n  AbstractChatCompletionRunnerEvents,\n  RunnerOptions,\n} from './AbstractChatCompletionRunner';\nimport { isAssistantMessage } from './chatCompletionUtils';\nimport OpenAI from '../index';\nimport { AutoParseableTool } from '../lib/parser';\n\nexport interface ChatCompletionRunnerEvents extends AbstractChatCompletionRunnerEvents {\n  content: (content: string) => void;\n}\n\nexport type ChatCompletionToolRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsNonStreaming,\n  'tools'\n> & {\n  tools: RunnableTools<FunctionsArgs> | AutoParseableTool<any, true>[];\n};\n\nexport class ChatCompletionRunner<ParsedT = null> extends AbstractChatCompletionRunner<\n  ChatCompletionRunnerEvents,\n  ParsedT\n> {\n  static runTools<ParsedT>(\n    client: OpenAI,\n    params: ChatCompletionToolRunnerParams<any[]>,\n    options?: RunnerOptions,\n  ): ChatCompletionRunner<ParsedT> {\n    const runner = new ChatCompletionRunner<ParsedT>();\n    const opts = {\n      ...options,\n      headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n    };\n    runner._run(() => runner._runTools(client, params, opts));\n    return runner;\n  }\n\n  override _addMessage(\n    this: ChatCompletionRunner<ParsedT>,\n    message: ChatCompletionMessageParam,\n    emit: boolean = true,\n  ) {\n    super._addMessage(message, emit);\n    if (isAssistantMessage(message) && message.content) {\n      this._emit('content', message.content as string);\n    }\n  }\n}\n","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\n\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\n\nconst Allow = {\n  STR,\n  NUM,\n  ARR,\n  OBJ,\n  NULL,\n  BOOL,\n  NAN,\n  INFINITY,\n  MINUS_INFINITY,\n  INF,\n  SPECIAL,\n  ATOM,\n  COLLECTION,\n  ALL,\n};\n\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {}\n\nclass MalformedJSON extends Error {}\n\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString: string, allowPartial: number = Allow.ALL): any {\n  if (typeof jsonString !== 'string') {\n    throw new TypeError(`expecting str, got ${typeof jsonString}`);\n  }\n  if (!jsonString.trim()) {\n    throw new Error(`${jsonString} is empty`);\n  }\n  return _parseJSON(jsonString.trim(), allowPartial);\n}\n\nconst _parseJSON = (jsonString: string, allow: number) => {\n  const length = jsonString.length;\n  let index = 0;\n\n  const markPartialJSON = (msg: string) => {\n    throw new PartialJSON(`${msg} at position ${index}`);\n  };\n\n  const throwMalformedError = (msg: string) => {\n    throw new MalformedJSON(`${msg} at position ${index}`);\n  };\n\n  const parseAny: () => any = () => {\n    skipBlank();\n    if (index >= length) markPartialJSON('Unexpected end of input');\n    if (jsonString[index] === '\"') return parseStr();\n    if (jsonString[index] === '{') return parseObj();\n    if (jsonString[index] === '[') return parseArr();\n    if (\n      jsonString.substring(index, index + 4) === 'null' ||\n      (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))\n    ) {\n      index += 4;\n      return null;\n    }\n    if (\n      jsonString.substring(index, index + 4) === 'true' ||\n      (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))\n    ) {\n      index += 4;\n      return true;\n    }\n    if (\n      jsonString.substring(index, index + 5) === 'false' ||\n      (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))\n    ) {\n      index += 5;\n      return false;\n    }\n    if (\n      jsonString.substring(index, index + 8) === 'Infinity' ||\n      (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))\n    ) {\n      index += 8;\n      return Infinity;\n    }\n    if (\n      jsonString.substring(index, index + 9) === '-Infinity' ||\n      (Allow.MINUS_INFINITY & allow &&\n        1 < length - index &&\n        length - index < 9 &&\n        '-Infinity'.startsWith(jsonString.substring(index)))\n    ) {\n      index += 9;\n      return -Infinity;\n    }\n    if (\n      jsonString.substring(index, index + 3) === 'NaN' ||\n      (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))\n    ) {\n      index += 3;\n      return NaN;\n    }\n    return parseNum();\n  };\n\n  const parseStr: () => string = () => {\n    const start = index;\n    let escape = false;\n    index++; // skip initial quote\n    while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n      escape = jsonString[index] === '\\\\' ? !escape : false;\n      index++;\n    }\n    if (jsonString.charAt(index) == '\"') {\n      try {\n        return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n      } catch (e) {\n        throwMalformedError(String(e));\n      }\n    } else if (Allow.STR & allow) {\n      try {\n        return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n      } catch (e) {\n        // SyntaxError: Invalid escape sequence\n        return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n      }\n    }\n    markPartialJSON('Unterminated string literal');\n  };\n\n  const parseObj = () => {\n    index++; // skip initial brace\n    skipBlank();\n    const obj: Record<string, any> = {};\n    try {\n      while (jsonString[index] !== '}') {\n        skipBlank();\n        if (index >= length && Allow.OBJ & allow) return obj;\n        const key = parseStr();\n        skipBlank();\n        index++; // skip colon\n        try {\n          const value = parseAny();\n          Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n        } catch (e) {\n          if (Allow.OBJ & allow) return obj;\n          else throw e;\n        }\n        skipBlank();\n        if (jsonString[index] === ',') index++; // skip comma\n      }\n    } catch (e) {\n      if (Allow.OBJ & allow) return obj;\n      else markPartialJSON(\"Expected '}' at end of object\");\n    }\n    index++; // skip final brace\n    return obj;\n  };\n\n  const parseArr = () => {\n    index++; // skip initial bracket\n    const arr = [];\n    try {\n      while (jsonString[index] !== ']') {\n        arr.push(parseAny());\n        skipBlank();\n        if (jsonString[index] === ',') {\n          index++; // skip comma\n        }\n      }\n    } catch (e) {\n      if (Allow.ARR & allow) {\n        return arr;\n      }\n      markPartialJSON(\"Expected ']' at end of array\");\n    }\n    index++; // skip final bracket\n    return arr;\n  };\n\n  const parseNum = () => {\n    if (index === 0) {\n      if (jsonString === '-' && Allow.NUM & allow) markPartialJSON(\"Not sure what '-' is\");\n      try {\n        return JSON.parse(jsonString);\n      } catch (e) {\n        if (Allow.NUM & allow) {\n          try {\n            if ('.' === jsonString[jsonString.length - 1])\n              return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n          } catch (e) {}\n        }\n        throwMalformedError(String(e));\n      }\n    }\n\n    const start = index;\n\n    if (jsonString[index] === '-') index++;\n    while (jsonString[index] && !',]}'.includes(jsonString[index]!)) index++;\n\n    if (index == length && !(Allow.NUM & allow)) markPartialJSON('Unterminated number literal');\n\n    try {\n      return JSON.parse(jsonString.substring(start, index));\n    } catch (e) {\n      if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n        markPartialJSON(\"Not sure what '-' is\");\n      try {\n        return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n      } catch (e) {\n        throwMalformedError(String(e));\n      }\n    }\n  };\n\n  const skipBlank = () => {\n    while (index < length && ' \\n\\r\\t'.includes(jsonString[index]!)) {\n      index++;\n    }\n  };\n\n  return parseAny();\n};\n\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input: string) => parseJSON(input, Allow.ALL ^ Allow.NUM);\n\nexport { partialParse, PartialJSON, MalformedJSON };\n","import {\n  OpenAIError,\n  APIUserAbortError,\n  LengthFinishReasonError,\n  ContentFilterFinishReasonError,\n} from '../error';\nimport {\n  ChatCompletionTokenLogprob,\n  type ChatCompletion,\n  type ChatCompletionChunk,\n  type ChatCompletionCreateParams,\n  type ChatCompletionCreateParamsStreaming,\n  type ChatCompletionCreateParamsBase,\n  type ChatCompletionRole,\n} from '../resources/chat/completions/completions';\nimport {\n  AbstractChatCompletionRunner,\n  type AbstractChatCompletionRunnerEvents,\n} from './AbstractChatCompletionRunner';\nimport { type ReadableStream } from '../internal/shim-types';\nimport { Stream } from '../streaming';\nimport OpenAI from '../index';\nimport { ParsedChatCompletion } from '../resources/chat/completions';\nimport {\n  AutoParseableResponseFormat,\n  hasAutoParseableInput,\n  isAutoParsableResponseFormat,\n  isAutoParsableTool,\n  maybeParseChatCompletion,\n  shouldParseToolCall,\n} from '../lib/parser';\nimport { partialParse } from '../_vendor/partial-json-parser/parser';\nimport { RequestOptions } from '../internal/request-options';\n\nexport interface ContentDeltaEvent {\n  delta: string;\n  snapshot: string;\n  parsed: unknown | null;\n}\n\nexport interface ContentDoneEvent<ParsedT = null> {\n  content: string;\n  parsed: ParsedT | null;\n}\n\nexport interface RefusalDeltaEvent {\n  delta: string;\n  snapshot: string;\n}\n\nexport interface RefusalDoneEvent {\n  refusal: string;\n}\n\nexport interface FunctionToolCallArgumentsDeltaEvent {\n  name: string;\n\n  index: number;\n\n  arguments: string;\n\n  parsed_arguments: unknown;\n\n  arguments_delta: string;\n}\n\nexport interface FunctionToolCallArgumentsDoneEvent {\n  name: string;\n\n  index: number;\n\n  arguments: string;\n\n  parsed_arguments: unknown;\n}\n\nexport interface LogProbsContentDeltaEvent {\n  content: Array<ChatCompletionTokenLogprob>;\n  snapshot: Array<ChatCompletionTokenLogprob>;\n}\n\nexport interface LogProbsContentDoneEvent {\n  content: Array<ChatCompletionTokenLogprob>;\n}\n\nexport interface LogProbsRefusalDeltaEvent {\n  refusal: Array<ChatCompletionTokenLogprob>;\n  snapshot: Array<ChatCompletionTokenLogprob>;\n}\n\nexport interface LogProbsRefusalDoneEvent {\n  refusal: Array<ChatCompletionTokenLogprob>;\n}\n\nexport interface ChatCompletionStreamEvents<ParsedT = null> extends AbstractChatCompletionRunnerEvents {\n  content: (contentDelta: string, contentSnapshot: string) => void;\n  chunk: (chunk: ChatCompletionChunk, snapshot: ChatCompletionSnapshot) => void;\n\n  'content.delta': (props: ContentDeltaEvent) => void;\n  'content.done': (props: ContentDoneEvent<ParsedT>) => void;\n\n  'refusal.delta': (props: RefusalDeltaEvent) => void;\n  'refusal.done': (props: RefusalDoneEvent) => void;\n\n  'tool_calls.function.arguments.delta': (props: FunctionToolCallArgumentsDeltaEvent) => void;\n  'tool_calls.function.arguments.done': (props: FunctionToolCallArgumentsDoneEvent) => void;\n\n  'logprobs.content.delta': (props: LogProbsContentDeltaEvent) => void;\n  'logprobs.content.done': (props: LogProbsContentDoneEvent) => void;\n\n  'logprobs.refusal.delta': (props: LogProbsRefusalDeltaEvent) => void;\n  'logprobs.refusal.done': (props: LogProbsRefusalDoneEvent) => void;\n}\n\nexport type ChatCompletionStreamParams = Omit<ChatCompletionCreateParamsBase, 'stream'> & {\n  stream?: true;\n};\n\ninterface ChoiceEventState {\n  content_done: boolean;\n  refusal_done: boolean;\n  logprobs_content_done: boolean;\n  logprobs_refusal_done: boolean;\n  current_tool_call_index: number | null;\n  done_tool_calls: Set<number>;\n}\n\nexport class ChatCompletionStream<ParsedT = null>\n  extends AbstractChatCompletionRunner<ChatCompletionStreamEvents<ParsedT>, ParsedT>\n  implements AsyncIterable<ChatCompletionChunk>\n{\n  #params: ChatCompletionCreateParams | null;\n  #choiceEventStates: ChoiceEventState[];\n  #currentChatCompletionSnapshot: ChatCompletionSnapshot | undefined;\n\n  constructor(params: ChatCompletionCreateParams | null) {\n    super();\n    this.#params = params;\n    this.#choiceEventStates = [];\n  }\n\n  get currentChatCompletionSnapshot(): ChatCompletionSnapshot | undefined {\n    return this.#currentChatCompletionSnapshot;\n  }\n\n  /**\n   * Intended for use on the frontend, consuming a stream produced with\n   * `.toReadableStream()` on the backend.\n   *\n   * Note that messages sent to the model do not appear in `.on('message')`\n   * in this context.\n   */\n  static fromReadableStream(stream: ReadableStream): ChatCompletionStream<null> {\n    const runner = new ChatCompletionStream(null);\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n\n  static createChatCompletion<ParsedT>(\n    client: OpenAI,\n    params: ChatCompletionStreamParams,\n    options?: RequestOptions,\n  ): ChatCompletionStream<ParsedT> {\n    const runner = new ChatCompletionStream<ParsedT>(params as ChatCompletionCreateParamsStreaming);\n    runner._run(() =>\n      runner._runChatCompletion(\n        client,\n        { ...params, stream: true },\n        { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } },\n      ),\n    );\n    return runner;\n  }\n\n  #beginRequest() {\n    if (this.ended) return;\n    this.#currentChatCompletionSnapshot = undefined;\n  }\n\n  #getChoiceEventState(choice: ChatCompletionSnapshot.Choice): ChoiceEventState {\n    let state = this.#choiceEventStates[choice.index];\n    if (state) {\n      return state;\n    }\n\n    state = {\n      content_done: false,\n      refusal_done: false,\n      logprobs_content_done: false,\n      logprobs_refusal_done: false,\n      done_tool_calls: new Set(),\n      current_tool_call_index: null,\n    };\n    this.#choiceEventStates[choice.index] = state;\n    return state;\n  }\n\n  #addChunk(this: ChatCompletionStream<ParsedT>, chunk: ChatCompletionChunk) {\n    if (this.ended) return;\n\n    const completion = this.#accumulateChatCompletion(chunk);\n    this._emit('chunk', chunk, completion);\n\n    for (const choice of chunk.choices) {\n      const choiceSnapshot = completion.choices[choice.index]!;\n\n      if (\n        choice.delta.content != null &&\n        choiceSnapshot.message?.role === 'assistant' &&\n        choiceSnapshot.message?.content\n      ) {\n        this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n        this._emit('content.delta', {\n          delta: choice.delta.content,\n          snapshot: choiceSnapshot.message.content,\n          parsed: choiceSnapshot.message.parsed,\n        });\n      }\n\n      if (\n        choice.delta.refusal != null &&\n        choiceSnapshot.message?.role === 'assistant' &&\n        choiceSnapshot.message?.refusal\n      ) {\n        this._emit('refusal.delta', {\n          delta: choice.delta.refusal,\n          snapshot: choiceSnapshot.message.refusal,\n        });\n      }\n\n      if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n        this._emit('logprobs.content.delta', {\n          content: choice.logprobs?.content,\n          snapshot: choiceSnapshot.logprobs?.content ?? [],\n        });\n      }\n\n      if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n        this._emit('logprobs.refusal.delta', {\n          refusal: choice.logprobs?.refusal,\n          snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n        });\n      }\n\n      const state = this.#getChoiceEventState(choiceSnapshot);\n\n      if (choiceSnapshot.finish_reason) {\n        this.#emitContentDoneEvents(choiceSnapshot);\n\n        if (state.current_tool_call_index != null) {\n          this.#emitToolCallDoneEvent(choiceSnapshot, state.current_tool_call_index);\n        }\n      }\n\n      for (const toolCall of choice.delta.tool_calls ?? []) {\n        if (state.current_tool_call_index !== toolCall.index) {\n          this.#emitContentDoneEvents(choiceSnapshot);\n\n          // new tool call started, the previous one is done\n          if (state.current_tool_call_index != null) {\n            this.#emitToolCallDoneEvent(choiceSnapshot, state.current_tool_call_index);\n          }\n        }\n\n        state.current_tool_call_index = toolCall.index;\n      }\n\n      for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n        if (!toolCallSnapshot?.type) {\n          continue;\n        }\n\n        if (toolCallSnapshot?.type === 'function') {\n          this._emit('tool_calls.function.arguments.delta', {\n            name: toolCallSnapshot.function?.name,\n            index: toolCallDelta.index,\n            arguments: toolCallSnapshot.function.arguments,\n            parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n            arguments_delta: toolCallDelta.function?.arguments ?? '',\n          });\n        } else {\n          assertNever(toolCallSnapshot?.type);\n        }\n      }\n    }\n  }\n\n  #emitToolCallDoneEvent(choiceSnapshot: ChatCompletionSnapshot.Choice, toolCallIndex: number) {\n    const state = this.#getChoiceEventState(choiceSnapshot);\n    if (state.done_tool_calls.has(toolCallIndex)) {\n      // we've already fired the done event\n      return;\n    }\n\n    const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n    if (!toolCallSnapshot) {\n      throw new Error('no tool call snapshot');\n    }\n    if (!toolCallSnapshot.type) {\n      throw new Error('tool call snapshot missing `type`');\n    }\n\n    if (toolCallSnapshot.type === 'function') {\n      const inputTool = this.#params?.tools?.find(\n        (tool) => tool.type === 'function' && tool.function.name === toolCallSnapshot.function.name,\n      );\n\n      this._emit('tool_calls.function.arguments.done', {\n        name: toolCallSnapshot.function.name,\n        index: toolCallIndex,\n        arguments: toolCallSnapshot.function.arguments,\n        parsed_arguments:\n          isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n          : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n          : null,\n      });\n    } else {\n      assertNever(toolCallSnapshot.type);\n    }\n  }\n\n  #emitContentDoneEvents(choiceSnapshot: ChatCompletionSnapshot.Choice) {\n    const state = this.#getChoiceEventState(choiceSnapshot);\n\n    if (choiceSnapshot.message.content && !state.content_done) {\n      state.content_done = true;\n\n      const responseFormat = this.#getAutoParseableResponseFormat();\n\n      this._emit('content.done', {\n        content: choiceSnapshot.message.content,\n        parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : (null as any),\n      });\n    }\n\n    if (choiceSnapshot.message.refusal && !state.refusal_done) {\n      state.refusal_done = true;\n\n      this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n    }\n\n    if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n      state.logprobs_content_done = true;\n\n      this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n    }\n\n    if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n      state.logprobs_refusal_done = true;\n\n      this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n    }\n  }\n\n  #endRequest(): ParsedChatCompletion<ParsedT> {\n    if (this.ended) {\n      throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    const snapshot = this.#currentChatCompletionSnapshot;\n    if (!snapshot) {\n      throw new OpenAIError(`request ended without sending any chunks`);\n    }\n    this.#currentChatCompletionSnapshot = undefined;\n    this.#choiceEventStates = [];\n    return finalizeChatCompletion(snapshot, this.#params);\n  }\n\n  protected override async _createChatCompletion(\n    client: OpenAI,\n    params: ChatCompletionCreateParams,\n    options?: RequestOptions,\n  ): Promise<ParsedChatCompletion<ParsedT>> {\n    super._createChatCompletion;\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    this.#beginRequest();\n\n    const stream = await client.chat.completions.create(\n      { ...params, stream: true },\n      { ...options, signal: this.controller.signal },\n    );\n    this._connected();\n    for await (const chunk of stream) {\n      this.#addChunk(chunk);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addChatCompletion(this.#endRequest());\n  }\n\n  protected async _fromReadableStream(\n    readableStream: ReadableStream,\n    options?: RequestOptions,\n  ): Promise<ChatCompletion> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    this.#beginRequest();\n    this._connected();\n    const stream = Stream.fromReadableStream<ChatCompletionChunk>(readableStream, this.controller);\n    let chatId;\n    for await (const chunk of stream) {\n      if (chatId && chatId !== chunk.id) {\n        // A new request has been made.\n        this._addChatCompletion(this.#endRequest());\n      }\n\n      this.#addChunk(chunk);\n      chatId = chunk.id;\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addChatCompletion(this.#endRequest());\n  }\n\n  #getAutoParseableResponseFormat(): AutoParseableResponseFormat<ParsedT> | null {\n    const responseFormat = this.#params?.response_format;\n    if (isAutoParsableResponseFormat<ParsedT>(responseFormat)) {\n      return responseFormat;\n    }\n\n    return null;\n  }\n\n  #accumulateChatCompletion(chunk: ChatCompletionChunk): ChatCompletionSnapshot {\n    let snapshot = this.#currentChatCompletionSnapshot;\n    const { choices, ...rest } = chunk;\n    if (!snapshot) {\n      snapshot = this.#currentChatCompletionSnapshot = {\n        ...rest,\n        choices: [],\n      };\n    } else {\n      Object.assign(snapshot, rest);\n    }\n\n    for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n      let choice = snapshot.choices[index];\n      if (!choice) {\n        choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n      }\n\n      if (logprobs) {\n        if (!choice.logprobs) {\n          choice.logprobs = Object.assign({}, logprobs);\n        } else {\n          const { content, refusal, ...rest } = logprobs;\n          assertIsEmpty(rest);\n          Object.assign(choice.logprobs, rest);\n\n          if (content) {\n            choice.logprobs.content ??= [];\n            choice.logprobs.content.push(...content);\n          }\n\n          if (refusal) {\n            choice.logprobs.refusal ??= [];\n            choice.logprobs.refusal.push(...refusal);\n          }\n        }\n      }\n\n      if (finish_reason) {\n        choice.finish_reason = finish_reason;\n\n        if (this.#params && hasAutoParseableInput(this.#params)) {\n          if (finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n          }\n\n          if (finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n          }\n        }\n      }\n\n      Object.assign(choice, other);\n\n      if (!delta) continue; // Shouldn't happen; just in case.\n\n      const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n      assertIsEmpty(rest);\n      Object.assign(choice.message, rest);\n\n      if (refusal) {\n        choice.message.refusal = (choice.message.refusal || '') + refusal;\n      }\n\n      if (role) choice.message.role = role;\n      if (function_call) {\n        if (!choice.message.function_call) {\n          choice.message.function_call = function_call;\n        } else {\n          if (function_call.name) choice.message.function_call.name = function_call.name;\n          if (function_call.arguments) {\n            choice.message.function_call.arguments ??= '';\n            choice.message.function_call.arguments += function_call.arguments;\n          }\n        }\n      }\n      if (content) {\n        choice.message.content = (choice.message.content || '') + content;\n\n        if (!choice.message.refusal && this.#getAutoParseableResponseFormat()) {\n          choice.message.parsed = partialParse(choice.message.content);\n        }\n      }\n\n      if (tool_calls) {\n        if (!choice.message.tool_calls) choice.message.tool_calls = [];\n\n        for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n          const tool_call = (choice.message.tool_calls[index] ??=\n            {} as ChatCompletionSnapshot.Choice.Message.ToolCall);\n          Object.assign(tool_call, rest);\n          if (id) tool_call.id = id;\n          if (type) tool_call.type = type;\n          if (fn) tool_call.function ??= { name: fn.name ?? '', arguments: '' };\n          if (fn?.name) tool_call.function!.name = fn.name;\n          if (fn?.arguments) {\n            tool_call.function!.arguments += fn.arguments;\n\n            if (shouldParseToolCall(this.#params, tool_call)) {\n              tool_call.function!.parsed_arguments = partialParse(tool_call.function!.arguments);\n            }\n          }\n        }\n      }\n    }\n    return snapshot;\n  }\n\n  [Symbol.asyncIterator](this: ChatCompletionStream<ParsedT>): AsyncIterator<ChatCompletionChunk> {\n    const pushQueue: ChatCompletionChunk[] = [];\n    const readQueue: {\n      resolve: (chunk: ChatCompletionChunk | undefined) => void;\n      reject: (err: unknown) => void;\n    }[] = [];\n    let done = false;\n\n    this.on('chunk', (chunk) => {\n      const reader = readQueue.shift();\n      if (reader) {\n        reader.resolve(chunk);\n      } else {\n        pushQueue.push(chunk);\n      }\n    });\n\n    this.on('end', () => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.resolve(undefined);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('abort', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('error', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    return {\n      next: async (): Promise<IteratorResult<ChatCompletionChunk>> => {\n        if (!pushQueue.length) {\n          if (done) {\n            return { value: undefined, done: true };\n          }\n          return new Promise<ChatCompletionChunk | undefined>((resolve, reject) =>\n            readQueue.push({ resolve, reject }),\n          ).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n        }\n        const chunk = pushQueue.shift()!;\n        return { value: chunk, done: false };\n      },\n      return: async () => {\n        this.abort();\n        return { value: undefined, done: true };\n      },\n    };\n  }\n\n  toReadableStream(): ReadableStream {\n    const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n    return stream.toReadableStream();\n  }\n}\n\nfunction finalizeChatCompletion<ParsedT>(\n  snapshot: ChatCompletionSnapshot,\n  params: ChatCompletionCreateParams | null,\n): ParsedChatCompletion<ParsedT> {\n  const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n  const completion: ChatCompletion = {\n    ...rest,\n    id,\n    choices: choices.map(\n      ({ message, finish_reason, index, logprobs, ...choiceRest }): ChatCompletion.Choice => {\n        if (!finish_reason) {\n          throw new OpenAIError(`missing finish_reason for choice ${index}`);\n        }\n\n        const { content = null, function_call, tool_calls, ...messageRest } = message;\n        const role = message.role as 'assistant'; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n        if (!role) {\n          throw new OpenAIError(`missing role for choice ${index}`);\n        }\n\n        if (function_call) {\n          const { arguments: args, name } = function_call;\n          if (args == null) {\n            throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n          }\n\n          if (!name) {\n            throw new OpenAIError(`missing function_call.name for choice ${index}`);\n          }\n\n          return {\n            ...choiceRest,\n            message: {\n              content,\n              function_call: { arguments: args, name },\n              role,\n              refusal: message.refusal ?? null,\n            },\n            finish_reason,\n            index,\n            logprobs,\n          };\n        }\n\n        if (tool_calls) {\n          return {\n            ...choiceRest,\n            index,\n            finish_reason,\n            logprobs,\n            message: {\n              ...messageRest,\n              role,\n              content,\n              refusal: message.refusal ?? null,\n              tool_calls: tool_calls.map((tool_call, i) => {\n                const { function: fn, type, id, ...toolRest } = tool_call;\n                const { arguments: args, name, ...fnRest } = fn || {};\n                if (id == null) {\n                  throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                }\n                if (type == null) {\n                  throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                }\n                if (name == null) {\n                  throw new OpenAIError(\n                    `missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`,\n                  );\n                }\n                if (args == null) {\n                  throw new OpenAIError(\n                    `missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`,\n                  );\n                }\n\n                return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n              }),\n            },\n          };\n        }\n        return {\n          ...choiceRest,\n          message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n          finish_reason,\n          index,\n          logprobs,\n        };\n      },\n    ),\n    created,\n    model,\n    object: 'chat.completion',\n    ...(system_fingerprint ? { system_fingerprint } : {}),\n  };\n\n  return maybeParseChatCompletion(completion, params);\n}\n\nfunction str(x: unknown) {\n  return JSON.stringify(x);\n}\n\n/**\n * Represents a streamed chunk of a chat completion response returned by model,\n * based on the provided input.\n */\nexport interface ChatCompletionSnapshot {\n  /**\n   * A unique identifier for the chat completion.\n   */\n  id: string;\n\n  /**\n   * A list of chat completion choices. Can be more than one if `n` is greater\n   * than 1.\n   */\n  choices: Array<ChatCompletionSnapshot.Choice>;\n\n  /**\n   * The Unix timestamp (in seconds) of when the chat completion was created.\n   */\n  created: number;\n\n  /**\n   * The model to generate the completion.\n   */\n  model: string;\n\n  // Note we do not include an \"object\" type on the snapshot,\n  // because the object is not a valid \"chat.completion\" until finalized.\n  // object: 'chat.completion';\n\n  /**\n   * This fingerprint represents the backend configuration that the model runs with.\n   *\n   * Can be used in conjunction with the `seed` request parameter to understand when\n   * backend changes have been made that might impact determinism.\n   */\n  system_fingerprint?: string;\n}\n\nexport namespace ChatCompletionSnapshot {\n  export interface Choice {\n    /**\n     * A chat completion delta generated by streamed model responses.\n     */\n    message: Choice.Message;\n\n    /**\n     * The reason the model stopped generating tokens. This will be `stop` if the model\n     * hit a natural stop point or a provided stop sequence, `length` if the maximum\n     * number of tokens specified in the request was reached, `content_filter` if\n     * content was omitted due to a flag from our content filters, or `function_call`\n     * if the model called a function.\n     */\n    finish_reason: ChatCompletion.Choice['finish_reason'] | null;\n\n    /**\n     * Log probability information for the choice.\n     */\n    logprobs: ChatCompletion.Choice.Logprobs | null;\n\n    /**\n     * The index of the choice in the list of choices.\n     */\n    index: number;\n  }\n\n  export namespace Choice {\n    /**\n     * A chat completion delta generated by streamed model responses.\n     */\n    export interface Message {\n      /**\n       * The contents of the chunk message.\n       */\n      content?: string | null;\n\n      refusal?: string | null;\n\n      parsed?: unknown | null;\n\n      /**\n       * The name and arguments of a function that should be called, as generated by the\n       * model.\n       */\n      function_call?: Message.FunctionCall;\n\n      tool_calls?: Array<Message.ToolCall>;\n\n      /**\n       * The role of the author of this message.\n       */\n      role?: ChatCompletionRole;\n    }\n\n    export namespace Message {\n      export interface ToolCall {\n        /**\n         * The ID of the tool call.\n         */\n        id: string;\n\n        function: ToolCall.Function;\n\n        /**\n         * The type of the tool.\n         */\n        type: 'function';\n      }\n\n      export namespace ToolCall {\n        export interface Function {\n          /**\n           * The arguments to call the function with, as generated by the model in JSON\n           * format. Note that the model does not always generate valid JSON, and may\n           * hallucinate parameters not defined by your function schema. Validate the\n           * arguments in your code before calling your function.\n           */\n          arguments: string;\n\n          parsed_arguments?: unknown;\n\n          /**\n           * The name of the function to call.\n           */\n          name: string;\n        }\n      }\n\n      /**\n       * The name and arguments of a function that should be called, as generated by the\n       * model.\n       */\n      export interface FunctionCall {\n        /**\n         * The arguments to call the function with, as generated by the model in JSON\n         * format. Note that the model does not always generate valid JSON, and may\n         * hallucinate parameters not defined by your function schema. Validate the\n         * arguments in your code before calling your function.\n         */\n        arguments?: string;\n\n        /**\n         * The name of the function to call.\n         */\n        name?: string;\n      }\n    }\n  }\n}\n\ntype AssertIsEmpty<T extends {}> = keyof T extends never ? T : never;\n\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty<T extends {}>(obj: AssertIsEmpty<T>): asserts obj is AssertIsEmpty<T> {\n  return;\n}\n\nfunction assertNever(_x: never) {}\n","import {\n  type ChatCompletionChunk,\n  type ChatCompletionCreateParamsStreaming,\n} from '../resources/chat/completions';\nimport { RunnerOptions, type AbstractChatCompletionRunnerEvents } from './AbstractChatCompletionRunner';\nimport { type ReadableStream } from '../internal/shim-types';\nimport { RunnableTools, type BaseFunctionsArgs } from './RunnableFunction';\nimport { ChatCompletionSnapshot, ChatCompletionStream } from './ChatCompletionStream';\nimport OpenAI from '../index';\nimport { AutoParseableTool } from '../lib/parser';\n\nexport interface ChatCompletionStreamEvents extends AbstractChatCompletionRunnerEvents {\n  content: (contentDelta: string, contentSnapshot: string) => void;\n  chunk: (chunk: ChatCompletionChunk, snapshot: ChatCompletionSnapshot) => void;\n}\n\nexport type ChatCompletionStreamingToolRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsStreaming,\n  'tools'\n> & {\n  tools: RunnableTools<FunctionsArgs> | AutoParseableTool<any, true>[];\n};\n\nexport class ChatCompletionStreamingRunner<ParsedT = null>\n  extends ChatCompletionStream<ParsedT>\n  implements AsyncIterable<ChatCompletionChunk>\n{\n  static override fromReadableStream(stream: ReadableStream): ChatCompletionStreamingRunner<null> {\n    const runner = new ChatCompletionStreamingRunner(null);\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n\n  static runTools<T extends (string | object)[], ParsedT = null>(\n    client: OpenAI,\n    params: ChatCompletionStreamingToolRunnerParams<T>,\n    options?: RunnerOptions,\n  ): ChatCompletionStreamingRunner<ParsedT> {\n    const runner = new ChatCompletionStreamingRunner<ParsedT>(\n      // @ts-expect-error TODO these types are incompatible\n      params,\n    );\n    const opts = {\n      ...options,\n      headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n    };\n    runner._run(() => runner._runTools(client, params, opts));\n    return runner;\n  }\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as CompletionsCompletionsAPI from './completions';\nimport * as CompletionsAPI from '../../completions';\nimport * as Shared from '../../shared';\nimport * as MessagesAPI from './messages';\nimport { MessageListParams, Messages } from './messages';\nimport { APIPromise } from '../../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../../core/pagination';\nimport { Stream } from '../../../core/streaming';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { path } from '../../../internal/utils/path';\n\nimport { ChatCompletionRunner } from '../../../lib/ChatCompletionRunner';\nimport { ChatCompletionStreamingRunner } from '../../../lib/ChatCompletionStreamingRunner';\nimport { RunnerOptions } from '../../../lib/AbstractChatCompletionRunner';\nimport { ChatCompletionToolRunnerParams } from '../../../lib/ChatCompletionRunner';\nimport { ChatCompletionStreamingToolRunnerParams } from '../../../lib/ChatCompletionStreamingRunner';\nimport { ChatCompletionStream, type ChatCompletionStreamParams } from '../../../lib/ChatCompletionStream';\nimport { ExtractParsedContentFromParams, parseChatCompletion, validateInputTools } from '../../../lib/parser';\n\nexport class Completions extends APIResource {\n  messages: MessagesAPI.Messages = new MessagesAPI.Messages(this._client);\n\n  /**\n   * **Starting a new project?** We recommend trying\n   * [Responses](https://platform.openai.com/docs/api-reference/responses) to take\n   * advantage of the latest OpenAI platform features. Compare\n   * [Chat Completions with Responses](https://platform.openai.com/docs/guides/responses-vs-chat-completions?api-mode=responses).\n   *\n   * ---\n   *\n   * Creates a model response for the given chat conversation. Learn more in the\n   * [text generation](https://platform.openai.com/docs/guides/text-generation),\n   * [vision](https://platform.openai.com/docs/guides/vision), and\n   * [audio](https://platform.openai.com/docs/guides/audio) guides.\n   *\n   * Parameter support can differ depending on the model used to generate the\n   * response, particularly for newer reasoning models. Parameters that are only\n   * supported for reasoning models are noted below. For the current state of\n   * unsupported parameters in reasoning models,\n   * [refer to the reasoning guide](https://platform.openai.com/docs/guides/reasoning).\n   *\n   * @example\n   * ```ts\n   * const chatCompletion = await client.chat.completions.create(\n   *   {\n   *     messages: [{ content: 'string', role: 'developer' }],\n   *     model: 'gpt-4o',\n   *   },\n   * );\n   * ```\n   */\n  create(body: ChatCompletionCreateParamsNonStreaming, options?: RequestOptions): APIPromise<ChatCompletion>;\n  create(\n    body: ChatCompletionCreateParamsStreaming,\n    options?: RequestOptions,\n  ): APIPromise<Stream<ChatCompletionChunk>>;\n  create(\n    body: ChatCompletionCreateParamsBase,\n    options?: RequestOptions,\n  ): APIPromise<Stream<ChatCompletionChunk> | ChatCompletion>;\n  create(\n    body: ChatCompletionCreateParams,\n    options?: RequestOptions,\n  ): APIPromise<ChatCompletion> | APIPromise<Stream<ChatCompletionChunk>> {\n    return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false }) as\n      | APIPromise<ChatCompletion>\n      | APIPromise<Stream<ChatCompletionChunk>>;\n  }\n\n  /**\n   * Get a stored chat completion. Only Chat Completions that have been created with\n   * the `store` parameter set to `true` will be returned.\n   *\n   * @example\n   * ```ts\n   * const chatCompletion =\n   *   await client.chat.completions.retrieve('completion_id');\n   * ```\n   */\n  retrieve(completionID: string, options?: RequestOptions): APIPromise<ChatCompletion> {\n    return this._client.get(path`/chat/completions/${completionID}`, options);\n  }\n\n  /**\n   * Modify a stored chat completion. Only Chat Completions that have been created\n   * with the `store` parameter set to `true` can be modified. Currently, the only\n   * supported modification is to update the `metadata` field.\n   *\n   * @example\n   * ```ts\n   * const chatCompletion = await client.chat.completions.update(\n   *   'completion_id',\n   *   { metadata: { foo: 'string' } },\n   * );\n   * ```\n   */\n  update(\n    completionID: string,\n    body: ChatCompletionUpdateParams,\n    options?: RequestOptions,\n  ): APIPromise<ChatCompletion> {\n    return this._client.post(path`/chat/completions/${completionID}`, { body, ...options });\n  }\n\n  /**\n   * List stored Chat Completions. Only Chat Completions that have been stored with\n   * the `store` parameter set to `true` will be returned.\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const chatCompletion of client.chat.completions.list()) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    query: ChatCompletionListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<ChatCompletionsPage, ChatCompletion> {\n    return this._client.getAPIList('/chat/completions', CursorPage<ChatCompletion>, { query, ...options });\n  }\n\n  /**\n   * Delete a stored chat completion. Only Chat Completions that have been created\n   * with the `store` parameter set to `true` can be deleted.\n   *\n   * @example\n   * ```ts\n   * const chatCompletionDeleted =\n   *   await client.chat.completions.delete('completion_id');\n   * ```\n   */\n  delete(completionID: string, options?: RequestOptions): APIPromise<ChatCompletionDeleted> {\n    return this._client.delete(path`/chat/completions/${completionID}`, options);\n  }\n\n  parse<Params extends ChatCompletionParseParams, ParsedT = ExtractParsedContentFromParams<Params>>(\n    body: Params,\n    options?: RequestOptions,\n  ): APIPromise<ParsedChatCompletion<ParsedT>> {\n    validateInputTools(body.tools);\n\n    return this._client.chat.completions\n      .create(body, {\n        ...options,\n        headers: {\n          ...options?.headers,\n          'X-Stainless-Helper-Method': 'chat.completions.parse',\n        },\n      })\n      ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n  }\n\n  /**\n   * A convenience helper for using tool calls with the /chat/completions endpoint\n   * which automatically calls the JavaScript functions you provide and sends their\n   * results back to the /chat/completions endpoint, looping as long as the model\n   * requests function calls.\n   *\n   * For more details and examples, see\n   * [the docs](https://github.com/openai/openai-node#automated-function-calls)\n   */\n  runTools<\n    Params extends ChatCompletionToolRunnerParams<any>,\n    ParsedT = ExtractParsedContentFromParams<Params>,\n  >(body: Params, options?: RunnerOptions): ChatCompletionRunner<ParsedT>;\n\n  runTools<\n    Params extends ChatCompletionStreamingToolRunnerParams<any>,\n    ParsedT = ExtractParsedContentFromParams<Params>,\n  >(body: Params, options?: RunnerOptions): ChatCompletionStreamingRunner<ParsedT>;\n\n  runTools<\n    Params extends ChatCompletionToolRunnerParams<any> | ChatCompletionStreamingToolRunnerParams<any>,\n    ParsedT = ExtractParsedContentFromParams<Params>,\n  >(\n    body: Params,\n    options?: RunnerOptions,\n  ): ChatCompletionRunner<ParsedT> | ChatCompletionStreamingRunner<ParsedT> {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runTools(\n        this._client,\n        body as ChatCompletionStreamingToolRunnerParams<any>,\n        options,\n      );\n    }\n\n    return ChatCompletionRunner.runTools(this._client, body as ChatCompletionToolRunnerParams<any>, options);\n  }\n\n  /**\n   * Creates a chat completion stream\n   */\n  stream<Params extends ChatCompletionStreamParams, ParsedT = ExtractParsedContentFromParams<Params>>(\n    body: Params,\n    options?: RequestOptions,\n  ): ChatCompletionStream<ParsedT> {\n    return ChatCompletionStream.createChatCompletion(this._client, body, options);\n  }\n}\n\nexport interface ParsedFunction extends ChatCompletionMessageToolCall.Function {\n  parsed_arguments?: unknown;\n}\n\nexport interface ParsedFunctionToolCall extends ChatCompletionMessageToolCall {\n  function: ParsedFunction;\n}\n\nexport interface ParsedChatCompletionMessage<ParsedT> extends ChatCompletionMessage {\n  parsed: ParsedT | null;\n  tool_calls?: Array<ParsedFunctionToolCall>;\n}\n\nexport interface ParsedChoice<ParsedT> extends ChatCompletion.Choice {\n  message: ParsedChatCompletionMessage<ParsedT>;\n}\n\nexport interface ParsedChatCompletion<ParsedT> extends ChatCompletion {\n  choices: Array<ParsedChoice<ParsedT>>;\n}\n\nexport type ChatCompletionParseParams = ChatCompletionCreateParamsNonStreaming;\n\nexport { ChatCompletionStreamingRunner } from '../../../lib/ChatCompletionStreamingRunner';\nexport {\n  type RunnableFunctionWithParse,\n  type RunnableFunctionWithoutParse,\n  ParsingToolFunction,\n} from '../../../lib/RunnableFunction';\nexport { type ChatCompletionToolRunnerParams } from '../../../lib/ChatCompletionRunner';\nexport { type ChatCompletionStreamingToolRunnerParams } from '../../../lib/ChatCompletionStreamingRunner';\nexport { ChatCompletionStream, type ChatCompletionStreamParams } from '../../../lib/ChatCompletionStream';\nexport { ChatCompletionRunner } from '../../../lib/ChatCompletionRunner';\n\nexport type ChatCompletionsPage = CursorPage<ChatCompletion>;\n\nexport type ChatCompletionStoreMessagesPage = CursorPage<ChatCompletionStoreMessage>;\n\n/**\n * Represents a chat completion response returned by model, based on the provided\n * input.\n */\nexport interface ChatCompletion {\n  /**\n   * A unique identifier for the chat completion.\n   */\n  id: string;\n\n  /**\n   * A list of chat completion choices. Can be more than one if `n` is greater\n   * than 1.\n   */\n  choices: Array<ChatCompletion.Choice>;\n\n  /**\n   * The Unix timestamp (in seconds) of when the chat completion was created.\n   */\n  created: number;\n\n  /**\n   * The model used for the chat completion.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always `chat.completion`.\n   */\n  object: 'chat.completion';\n\n  /**\n   * Specifies the latency tier to use for processing the request. This parameter is\n   * relevant for customers subscribed to the scale tier service:\n   *\n   * - If set to 'auto', and the Project is Scale tier enabled, the system will\n   *   utilize scale tier credits until they are exhausted.\n   * - If set to 'auto', and the Project is not Scale tier enabled, the request will\n   *   be processed using the default service tier with a lower uptime SLA and no\n   *   latency guarantee.\n   * - If set to 'default', the request will be processed using the default service\n   *   tier with a lower uptime SLA and no latency guarantee.\n   * - If set to 'flex', the request will be processed with the Flex Processing\n   *   service tier.\n   *   [Learn more](https://platform.openai.com/docs/guides/flex-processing).\n   * - When not set, the default behavior is 'auto'.\n   *\n   * When this parameter is set, the response body will include the `service_tier`\n   * utilized.\n   */\n  service_tier?: 'auto' | 'default' | 'flex' | 'scale' | null;\n\n  /**\n   * This fingerprint represents the backend configuration that the model runs with.\n   *\n   * Can be used in conjunction with the `seed` request parameter to understand when\n   * backend changes have been made that might impact determinism.\n   */\n  system_fingerprint?: string;\n\n  /**\n   * Usage statistics for the completion request.\n   */\n  usage?: CompletionsAPI.CompletionUsage;\n}\n\nexport namespace ChatCompletion {\n  export interface Choice {\n    /**\n     * The reason the model stopped generating tokens. This will be `stop` if the model\n     * hit a natural stop point or a provided stop sequence, `length` if the maximum\n     * number of tokens specified in the request was reached, `content_filter` if\n     * content was omitted due to a flag from our content filters, `tool_calls` if the\n     * model called a tool, or `function_call` (deprecated) if the model called a\n     * function.\n     */\n    finish_reason: 'stop' | 'length' | 'tool_calls' | 'content_filter' | 'function_call';\n\n    /**\n     * The index of the choice in the list of choices.\n     */\n    index: number;\n\n    /**\n     * Log probability information for the choice.\n     */\n    logprobs: Choice.Logprobs | null;\n\n    /**\n     * A chat completion message generated by the model.\n     */\n    message: CompletionsCompletionsAPI.ChatCompletionMessage;\n  }\n\n  export namespace Choice {\n    /**\n     * Log probability information for the choice.\n     */\n    export interface Logprobs {\n      /**\n       * A list of message content tokens with log probability information.\n       */\n      content: Array<CompletionsCompletionsAPI.ChatCompletionTokenLogprob> | null;\n\n      /**\n       * A list of message refusal tokens with log probability information.\n       */\n      refusal: Array<CompletionsCompletionsAPI.ChatCompletionTokenLogprob> | null;\n    }\n  }\n}\n\n/**\n * Messages sent by the model in response to user messages.\n */\nexport interface ChatCompletionAssistantMessageParam {\n  /**\n   * The role of the messages author, in this case `assistant`.\n   */\n  role: 'assistant';\n\n  /**\n   * Data about a previous audio response from the model.\n   * [Learn more](https://platform.openai.com/docs/guides/audio).\n   */\n  audio?: ChatCompletionAssistantMessageParam.Audio | null;\n\n  /**\n   * The contents of the assistant message. Required unless `tool_calls` or\n   * `function_call` is specified.\n   */\n  content?: string | Array<ChatCompletionContentPartText | ChatCompletionContentPartRefusal> | null;\n\n  /**\n   * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n   * function that should be called, as generated by the model.\n   */\n  function_call?: ChatCompletionAssistantMessageParam.FunctionCall | null;\n\n  /**\n   * An optional name for the participant. Provides the model information to\n   * differentiate between participants of the same role.\n   */\n  name?: string;\n\n  /**\n   * The refusal message by the assistant.\n   */\n  refusal?: string | null;\n\n  /**\n   * The tool calls generated by the model, such as function calls.\n   */\n  tool_calls?: Array<ChatCompletionMessageToolCall>;\n}\n\nexport namespace ChatCompletionAssistantMessageParam {\n  /**\n   * Data about a previous audio response from the model.\n   * [Learn more](https://platform.openai.com/docs/guides/audio).\n   */\n  export interface Audio {\n    /**\n     * Unique identifier for a previous audio response from the model.\n     */\n    id: string;\n  }\n\n  /**\n   * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n   * function that should be called, as generated by the model.\n   */\n  export interface FunctionCall {\n    /**\n     * The arguments to call the function with, as generated by the model in JSON\n     * format. Note that the model does not always generate valid JSON, and may\n     * hallucinate parameters not defined by your function schema. Validate the\n     * arguments in your code before calling your function.\n     */\n    arguments: string;\n\n    /**\n     * The name of the function to call.\n     */\n    name: string;\n  }\n}\n\n/**\n * If the audio output modality is requested, this object contains data about the\n * audio response from the model.\n * [Learn more](https://platform.openai.com/docs/guides/audio).\n */\nexport interface ChatCompletionAudio {\n  /**\n   * Unique identifier for this audio response.\n   */\n  id: string;\n\n  /**\n   * Base64 encoded audio bytes generated by the model, in the format specified in\n   * the request.\n   */\n  data: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when this audio response will no longer be\n   * accessible on the server for use in multi-turn conversations.\n   */\n  expires_at: number;\n\n  /**\n   * Transcript of the audio generated by the model.\n   */\n  transcript: string;\n}\n\n/**\n * Parameters for audio output. Required when audio output is requested with\n * `modalities: [\"audio\"]`.\n * [Learn more](https://platform.openai.com/docs/guides/audio).\n */\nexport interface ChatCompletionAudioParam {\n  /**\n   * Specifies the output audio format. Must be one of `wav`, `mp3`, `flac`, `opus`,\n   * or `pcm16`.\n   */\n  format: 'wav' | 'aac' | 'mp3' | 'flac' | 'opus' | 'pcm16';\n\n  /**\n   * The voice the model uses to respond. Supported voices are `alloy`, `ash`,\n   * `ballad`, `coral`, `echo`, `fable`, `nova`, `onyx`, `sage`, and `shimmer`.\n   */\n  voice:\n    | (string & {})\n    | 'alloy'\n    | 'ash'\n    | 'ballad'\n    | 'coral'\n    | 'echo'\n    | 'fable'\n    | 'onyx'\n    | 'nova'\n    | 'sage'\n    | 'shimmer'\n    | 'verse';\n}\n\n/**\n * Represents a streamed chunk of a chat completion response returned by the model,\n * based on the provided input.\n * [Learn more](https://platform.openai.com/docs/guides/streaming-responses).\n */\nexport interface ChatCompletionChunk {\n  /**\n   * A unique identifier for the chat completion. Each chunk has the same ID.\n   */\n  id: string;\n\n  /**\n   * A list of chat completion choices. Can contain more than one elements if `n` is\n   * greater than 1. Can also be empty for the last chunk if you set\n   * `stream_options: {\"include_usage\": true}`.\n   */\n  choices: Array<ChatCompletionChunk.Choice>;\n\n  /**\n   * The Unix timestamp (in seconds) of when the chat completion was created. Each\n   * chunk has the same timestamp.\n   */\n  created: number;\n\n  /**\n   * The model to generate the completion.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always `chat.completion.chunk`.\n   */\n  object: 'chat.completion.chunk';\n\n  /**\n   * Specifies the latency tier to use for processing the request. This parameter is\n   * relevant for customers subscribed to the scale tier service:\n   *\n   * - If set to 'auto', and the Project is Scale tier enabled, the system will\n   *   utilize scale tier credits until they are exhausted.\n   * - If set to 'auto', and the Project is not Scale tier enabled, the request will\n   *   be processed using the default service tier with a lower uptime SLA and no\n   *   latency guarantee.\n   * - If set to 'default', the request will be processed using the default service\n   *   tier with a lower uptime SLA and no latency guarantee.\n   * - If set to 'flex', the request will be processed with the Flex Processing\n   *   service tier.\n   *   [Learn more](https://platform.openai.com/docs/guides/flex-processing).\n   * - When not set, the default behavior is 'auto'.\n   *\n   * When this parameter is set, the response body will include the `service_tier`\n   * utilized.\n   */\n  service_tier?: 'auto' | 'default' | 'flex' | 'scale' | null;\n\n  /**\n   * This fingerprint represents the backend configuration that the model runs with.\n   * Can be used in conjunction with the `seed` request parameter to understand when\n   * backend changes have been made that might impact determinism.\n   */\n  system_fingerprint?: string;\n\n  /**\n   * An optional field that will only be present when you set\n   * `stream_options: {\"include_usage\": true}` in your request. When present, it\n   * contains a null value **except for the last chunk** which contains the token\n   * usage statistics for the entire request.\n   *\n   * **NOTE:** If the stream is interrupted or cancelled, you may not receive the\n   * final usage chunk which contains the total token usage for the request.\n   */\n  usage?: CompletionsAPI.CompletionUsage | null;\n}\n\nexport namespace ChatCompletionChunk {\n  export interface Choice {\n    /**\n     * A chat completion delta generated by streamed model responses.\n     */\n    delta: Choice.Delta;\n\n    /**\n     * The reason the model stopped generating tokens. This will be `stop` if the model\n     * hit a natural stop point or a provided stop sequence, `length` if the maximum\n     * number of tokens specified in the request was reached, `content_filter` if\n     * content was omitted due to a flag from our content filters, `tool_calls` if the\n     * model called a tool, or `function_call` (deprecated) if the model called a\n     * function.\n     */\n    finish_reason: 'stop' | 'length' | 'tool_calls' | 'content_filter' | 'function_call' | null;\n\n    /**\n     * The index of the choice in the list of choices.\n     */\n    index: number;\n\n    /**\n     * Log probability information for the choice.\n     */\n    logprobs?: Choice.Logprobs | null;\n  }\n\n  export namespace Choice {\n    /**\n     * A chat completion delta generated by streamed model responses.\n     */\n    export interface Delta {\n      /**\n       * The contents of the chunk message.\n       */\n      content?: string | null;\n\n      /**\n       * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n       * function that should be called, as generated by the model.\n       */\n      function_call?: Delta.FunctionCall;\n\n      /**\n       * The refusal message generated by the model.\n       */\n      refusal?: string | null;\n\n      /**\n       * The role of the author of this message.\n       */\n      role?: 'developer' | 'system' | 'user' | 'assistant' | 'tool';\n\n      tool_calls?: Array<Delta.ToolCall>;\n    }\n\n    export namespace Delta {\n      /**\n       * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n       * function that should be called, as generated by the model.\n       */\n      export interface FunctionCall {\n        /**\n         * The arguments to call the function with, as generated by the model in JSON\n         * format. Note that the model does not always generate valid JSON, and may\n         * hallucinate parameters not defined by your function schema. Validate the\n         * arguments in your code before calling your function.\n         */\n        arguments?: string;\n\n        /**\n         * The name of the function to call.\n         */\n        name?: string;\n      }\n\n      export interface ToolCall {\n        index: number;\n\n        /**\n         * The ID of the tool call.\n         */\n        id?: string;\n\n        function?: ToolCall.Function;\n\n        /**\n         * The type of the tool. Currently, only `function` is supported.\n         */\n        type?: 'function';\n      }\n\n      export namespace ToolCall {\n        export interface Function {\n          /**\n           * The arguments to call the function with, as generated by the model in JSON\n           * format. Note that the model does not always generate valid JSON, and may\n           * hallucinate parameters not defined by your function schema. Validate the\n           * arguments in your code before calling your function.\n           */\n          arguments?: string;\n\n          /**\n           * The name of the function to call.\n           */\n          name?: string;\n        }\n      }\n    }\n\n    /**\n     * Log probability information for the choice.\n     */\n    export interface Logprobs {\n      /**\n       * A list of message content tokens with log probability information.\n       */\n      content: Array<CompletionsCompletionsAPI.ChatCompletionTokenLogprob> | null;\n\n      /**\n       * A list of message refusal tokens with log probability information.\n       */\n      refusal: Array<CompletionsCompletionsAPI.ChatCompletionTokenLogprob> | null;\n    }\n  }\n}\n\n/**\n * Learn about\n * [text inputs](https://platform.openai.com/docs/guides/text-generation).\n */\nexport type ChatCompletionContentPart =\n  | ChatCompletionContentPartText\n  | ChatCompletionContentPartImage\n  | ChatCompletionContentPartInputAudio\n  | ChatCompletionContentPart.File;\n\nexport namespace ChatCompletionContentPart {\n  /**\n   * Learn about [file inputs](https://platform.openai.com/docs/guides/text) for text\n   * generation.\n   */\n  export interface File {\n    file: File.File;\n\n    /**\n     * The type of the content part. Always `file`.\n     */\n    type: 'file';\n  }\n\n  export namespace File {\n    export interface File {\n      /**\n       * The base64 encoded file data, used when passing the file to the model as a\n       * string.\n       */\n      file_data?: string;\n\n      /**\n       * The ID of an uploaded file to use as input.\n       */\n      file_id?: string;\n\n      /**\n       * The name of the file, used when passing the file to the model as a string.\n       */\n      filename?: string;\n    }\n  }\n}\n\n/**\n * Learn about [image inputs](https://platform.openai.com/docs/guides/vision).\n */\nexport interface ChatCompletionContentPartImage {\n  image_url: ChatCompletionContentPartImage.ImageURL;\n\n  /**\n   * The type of the content part.\n   */\n  type: 'image_url';\n}\n\nexport namespace ChatCompletionContentPartImage {\n  export interface ImageURL {\n    /**\n     * Either a URL of the image or the base64 encoded image data.\n     */\n    url: string;\n\n    /**\n     * Specifies the detail level of the image. Learn more in the\n     * [Vision guide](https://platform.openai.com/docs/guides/vision#low-or-high-fidelity-image-understanding).\n     */\n    detail?: 'auto' | 'low' | 'high';\n  }\n}\n\n/**\n * Learn about [audio inputs](https://platform.openai.com/docs/guides/audio).\n */\nexport interface ChatCompletionContentPartInputAudio {\n  input_audio: ChatCompletionContentPartInputAudio.InputAudio;\n\n  /**\n   * The type of the content part. Always `input_audio`.\n   */\n  type: 'input_audio';\n}\n\nexport namespace ChatCompletionContentPartInputAudio {\n  export interface InputAudio {\n    /**\n     * Base64 encoded audio data.\n     */\n    data: string;\n\n    /**\n     * The format of the encoded audio data. Currently supports \"wav\" and \"mp3\".\n     */\n    format: 'wav' | 'mp3';\n  }\n}\n\nexport interface ChatCompletionContentPartRefusal {\n  /**\n   * The refusal message generated by the model.\n   */\n  refusal: string;\n\n  /**\n   * The type of the content part.\n   */\n  type: 'refusal';\n}\n\n/**\n * Learn about\n * [text inputs](https://platform.openai.com/docs/guides/text-generation).\n */\nexport interface ChatCompletionContentPartText {\n  /**\n   * The text content.\n   */\n  text: string;\n\n  /**\n   * The type of the content part.\n   */\n  type: 'text';\n}\n\nexport interface ChatCompletionDeleted {\n  /**\n   * The ID of the chat completion that was deleted.\n   */\n  id: string;\n\n  /**\n   * Whether the chat completion was deleted.\n   */\n  deleted: boolean;\n\n  /**\n   * The type of object being deleted.\n   */\n  object: 'chat.completion.deleted';\n}\n\n/**\n * Developer-provided instructions that the model should follow, regardless of\n * messages sent by the user. With o1 models and newer, `developer` messages\n * replace the previous `system` messages.\n */\nexport interface ChatCompletionDeveloperMessageParam {\n  /**\n   * The contents of the developer message.\n   */\n  content: string | Array<ChatCompletionContentPartText>;\n\n  /**\n   * The role of the messages author, in this case `developer`.\n   */\n  role: 'developer';\n\n  /**\n   * An optional name for the participant. Provides the model information to\n   * differentiate between participants of the same role.\n   */\n  name?: string;\n}\n\n/**\n * Specifying a particular function via `{\"name\": \"my_function\"}` forces the model\n * to call that function.\n */\nexport interface ChatCompletionFunctionCallOption {\n  /**\n   * The name of the function to call.\n   */\n  name: string;\n}\n\n/**\n * @deprecated\n */\nexport interface ChatCompletionFunctionMessageParam {\n  /**\n   * The contents of the function message.\n   */\n  content: string | null;\n\n  /**\n   * The name of the function to call.\n   */\n  name: string;\n\n  /**\n   * The role of the messages author, in this case `function`.\n   */\n  role: 'function';\n}\n\n/**\n * A chat completion message generated by the model.\n */\nexport interface ChatCompletionMessage {\n  /**\n   * The contents of the message.\n   */\n  content: string | null;\n\n  /**\n   * The refusal message generated by the model.\n   */\n  refusal: string | null;\n\n  /**\n   * The role of the author of this message.\n   */\n  role: 'assistant';\n\n  /**\n   * Annotations for the message, when applicable, as when using the\n   * [web search tool](https://platform.openai.com/docs/guides/tools-web-search?api-mode=chat).\n   */\n  annotations?: Array<ChatCompletionMessage.Annotation>;\n\n  /**\n   * If the audio output modality is requested, this object contains data about the\n   * audio response from the model.\n   * [Learn more](https://platform.openai.com/docs/guides/audio).\n   */\n  audio?: ChatCompletionAudio | null;\n\n  /**\n   * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n   * function that should be called, as generated by the model.\n   */\n  function_call?: ChatCompletionMessage.FunctionCall | null;\n\n  /**\n   * The tool calls generated by the model, such as function calls.\n   */\n  tool_calls?: Array<ChatCompletionMessageToolCall>;\n}\n\nexport namespace ChatCompletionMessage {\n  /**\n   * A URL citation when using web search.\n   */\n  export interface Annotation {\n    /**\n     * The type of the URL citation. Always `url_citation`.\n     */\n    type: 'url_citation';\n\n    /**\n     * A URL citation when using web search.\n     */\n    url_citation: Annotation.URLCitation;\n  }\n\n  export namespace Annotation {\n    /**\n     * A URL citation when using web search.\n     */\n    export interface URLCitation {\n      /**\n       * The index of the last character of the URL citation in the message.\n       */\n      end_index: number;\n\n      /**\n       * The index of the first character of the URL citation in the message.\n       */\n      start_index: number;\n\n      /**\n       * The title of the web resource.\n       */\n      title: string;\n\n      /**\n       * The URL of the web resource.\n       */\n      url: string;\n    }\n  }\n\n  /**\n   * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n   * function that should be called, as generated by the model.\n   */\n  export interface FunctionCall {\n    /**\n     * The arguments to call the function with, as generated by the model in JSON\n     * format. Note that the model does not always generate valid JSON, and may\n     * hallucinate parameters not defined by your function schema. Validate the\n     * arguments in your code before calling your function.\n     */\n    arguments: string;\n\n    /**\n     * The name of the function to call.\n     */\n    name: string;\n  }\n}\n\n/**\n * Developer-provided instructions that the model should follow, regardless of\n * messages sent by the user. With o1 models and newer, `developer` messages\n * replace the previous `system` messages.\n */\nexport type ChatCompletionMessageParam =\n  | ChatCompletionDeveloperMessageParam\n  | ChatCompletionSystemMessageParam\n  | ChatCompletionUserMessageParam\n  | ChatCompletionAssistantMessageParam\n  | ChatCompletionToolMessageParam\n  | ChatCompletionFunctionMessageParam;\n\nexport interface ChatCompletionMessageToolCall {\n  /**\n   * The ID of the tool call.\n   */\n  id: string;\n\n  /**\n   * The function that the model called.\n   */\n  function: ChatCompletionMessageToolCall.Function;\n\n  /**\n   * The type of the tool. Currently, only `function` is supported.\n   */\n  type: 'function';\n}\n\nexport namespace ChatCompletionMessageToolCall {\n  /**\n   * The function that the model called.\n   */\n  export interface Function {\n    /**\n     * The arguments to call the function with, as generated by the model in JSON\n     * format. Note that the model does not always generate valid JSON, and may\n     * hallucinate parameters not defined by your function schema. Validate the\n     * arguments in your code before calling your function.\n     */\n    arguments: string;\n\n    /**\n     * The name of the function to call.\n     */\n    name: string;\n  }\n}\n\nexport type ChatCompletionModality = 'text' | 'audio';\n\n/**\n * Specifies a tool the model should use. Use to force the model to call a specific\n * function.\n */\nexport interface ChatCompletionNamedToolChoice {\n  function: ChatCompletionNamedToolChoice.Function;\n\n  /**\n   * The type of the tool. Currently, only `function` is supported.\n   */\n  type: 'function';\n}\n\nexport namespace ChatCompletionNamedToolChoice {\n  export interface Function {\n    /**\n     * The name of the function to call.\n     */\n    name: string;\n  }\n}\n\n/**\n * Static predicted output content, such as the content of a text file that is\n * being regenerated.\n */\nexport interface ChatCompletionPredictionContent {\n  /**\n   * The content that should be matched when generating a model response. If\n   * generated tokens would match this content, the entire model response can be\n   * returned much more quickly.\n   */\n  content: string | Array<ChatCompletionContentPartText>;\n\n  /**\n   * The type of the predicted content you want to provide. This type is currently\n   * always `content`.\n   */\n  type: 'content';\n}\n\n/**\n * The role of the author of a message\n */\nexport type ChatCompletionRole = 'developer' | 'system' | 'user' | 'assistant' | 'tool' | 'function';\n\n/**\n * A chat completion message generated by the model.\n */\nexport interface ChatCompletionStoreMessage extends ChatCompletionMessage {\n  /**\n   * The identifier of the chat message.\n   */\n  id: string;\n}\n\n/**\n * Options for streaming response. Only set this when you set `stream: true`.\n */\nexport interface ChatCompletionStreamOptions {\n  /**\n   * If set, an additional chunk will be streamed before the `data: [DONE]` message.\n   * The `usage` field on this chunk shows the token usage statistics for the entire\n   * request, and the `choices` field will always be an empty array.\n   *\n   * All other chunks will also include a `usage` field, but with a null value.\n   * **NOTE:** If the stream is interrupted, you may not receive the final usage\n   * chunk which contains the total token usage for the request.\n   */\n  include_usage?: boolean;\n}\n\n/**\n * Developer-provided instructions that the model should follow, regardless of\n * messages sent by the user. With o1 models and newer, use `developer` messages\n * for this purpose instead.\n */\nexport interface ChatCompletionSystemMessageParam {\n  /**\n   * The contents of the system message.\n   */\n  content: string | Array<ChatCompletionContentPartText>;\n\n  /**\n   * The role of the messages author, in this case `system`.\n   */\n  role: 'system';\n\n  /**\n   * An optional name for the participant. Provides the model information to\n   * differentiate between participants of the same role.\n   */\n  name?: string;\n}\n\nexport interface ChatCompletionTokenLogprob {\n  /**\n   * The token.\n   */\n  token: string;\n\n  /**\n   * A list of integers representing the UTF-8 bytes representation of the token.\n   * Useful in instances where characters are represented by multiple tokens and\n   * their byte representations must be combined to generate the correct text\n   * representation. Can be `null` if there is no bytes representation for the token.\n   */\n  bytes: Array<number> | null;\n\n  /**\n   * The log probability of this token, if it is within the top 20 most likely\n   * tokens. Otherwise, the value `-9999.0` is used to signify that the token is very\n   * unlikely.\n   */\n  logprob: number;\n\n  /**\n   * List of the most likely tokens and their log probability, at this token\n   * position. In rare cases, there may be fewer than the number of requested\n   * `top_logprobs` returned.\n   */\n  top_logprobs: Array<ChatCompletionTokenLogprob.TopLogprob>;\n}\n\nexport namespace ChatCompletionTokenLogprob {\n  export interface TopLogprob {\n    /**\n     * The token.\n     */\n    token: string;\n\n    /**\n     * A list of integers representing the UTF-8 bytes representation of the token.\n     * Useful in instances where characters are represented by multiple tokens and\n     * their byte representations must be combined to generate the correct text\n     * representation. Can be `null` if there is no bytes representation for the token.\n     */\n    bytes: Array<number> | null;\n\n    /**\n     * The log probability of this token, if it is within the top 20 most likely\n     * tokens. Otherwise, the value `-9999.0` is used to signify that the token is very\n     * unlikely.\n     */\n    logprob: number;\n  }\n}\n\nexport interface ChatCompletionTool {\n  function: Shared.FunctionDefinition;\n\n  /**\n   * The type of the tool. Currently, only `function` is supported.\n   */\n  type: 'function';\n}\n\n/**\n * Controls which (if any) tool is called by the model. `none` means the model will\n * not call any tool and instead generates a message. `auto` means the model can\n * pick between generating a message or calling one or more tools. `required` means\n * the model must call one or more tools. Specifying a particular tool via\n * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n * call that tool.\n *\n * `none` is the default when no tools are present. `auto` is the default if tools\n * are present.\n */\nexport type ChatCompletionToolChoiceOption = 'none' | 'auto' | 'required' | ChatCompletionNamedToolChoice;\n\nexport interface ChatCompletionToolMessageParam {\n  /**\n   * The contents of the tool message.\n   */\n  content: string | Array<ChatCompletionContentPartText>;\n\n  /**\n   * The role of the messages author, in this case `tool`.\n   */\n  role: 'tool';\n\n  /**\n   * Tool call that this message is responding to.\n   */\n  tool_call_id: string;\n}\n\n/**\n * Messages sent by an end user, containing prompts or additional context\n * information.\n */\nexport interface ChatCompletionUserMessageParam {\n  /**\n   * The contents of the user message.\n   */\n  content: string | Array<ChatCompletionContentPart>;\n\n  /**\n   * The role of the messages author, in this case `user`.\n   */\n  role: 'user';\n\n  /**\n   * An optional name for the participant. Provides the model information to\n   * differentiate between participants of the same role.\n   */\n  name?: string;\n}\n\nexport type ChatCompletionReasoningEffort = Shared.ReasoningEffort | null;\n\nexport type ChatCompletionCreateParams =\n  | ChatCompletionCreateParamsNonStreaming\n  | ChatCompletionCreateParamsStreaming;\n\nexport interface ChatCompletionCreateParamsBase {\n  /**\n   * A list of messages comprising the conversation so far. Depending on the\n   * [model](https://platform.openai.com/docs/models) you use, different message\n   * types (modalities) are supported, like\n   * [text](https://platform.openai.com/docs/guides/text-generation),\n   * [images](https://platform.openai.com/docs/guides/vision), and\n   * [audio](https://platform.openai.com/docs/guides/audio).\n   */\n  messages: Array<ChatCompletionMessageParam>;\n\n  /**\n   * Model ID used to generate the response, like `gpt-4o` or `o3`. OpenAI offers a\n   * wide range of models with different capabilities, performance characteristics,\n   * and price points. Refer to the\n   * [model guide](https://platform.openai.com/docs/models) to browse and compare\n   * available models.\n   */\n  model: (string & {}) | Shared.ChatModel;\n\n  /**\n   * Parameters for audio output. Required when audio output is requested with\n   * `modalities: [\"audio\"]`.\n   * [Learn more](https://platform.openai.com/docs/guides/audio).\n   */\n  audio?: ChatCompletionAudioParam | null;\n\n  /**\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on their\n   * existing frequency in the text so far, decreasing the model's likelihood to\n   * repeat the same line verbatim.\n   */\n  frequency_penalty?: number | null;\n\n  /**\n   * @deprecated Deprecated in favor of `tool_choice`.\n   *\n   * Controls which (if any) function is called by the model.\n   *\n   * `none` means the model will not call a function and instead generates a message.\n   *\n   * `auto` means the model can pick between generating a message or calling a\n   * function.\n   *\n   * Specifying a particular function via `{\"name\": \"my_function\"}` forces the model\n   * to call that function.\n   *\n   * `none` is the default when no functions are present. `auto` is the default if\n   * functions are present.\n   */\n  function_call?: 'none' | 'auto' | ChatCompletionFunctionCallOption;\n\n  /**\n   * @deprecated Deprecated in favor of `tools`.\n   *\n   * A list of functions the model may generate JSON inputs for.\n   */\n  functions?: Array<ChatCompletionCreateParams.Function>;\n\n  /**\n   * Modify the likelihood of specified tokens appearing in the completion.\n   *\n   * Accepts a JSON object that maps tokens (specified by their token ID in the\n   * tokenizer) to an associated bias value from -100 to 100. Mathematically, the\n   * bias is added to the logits generated by the model prior to sampling. The exact\n   * effect will vary per model, but values between -1 and 1 should decrease or\n   * increase likelihood of selection; values like -100 or 100 should result in a ban\n   * or exclusive selection of the relevant token.\n   */\n  logit_bias?: Record<string, number> | null;\n\n  /**\n   * Whether to return log probabilities of the output tokens or not. If true,\n   * returns the log probabilities of each output token returned in the `content` of\n   * `message`.\n   */\n  logprobs?: boolean | null;\n\n  /**\n   * An upper bound for the number of tokens that can be generated for a completion,\n   * including visible output tokens and\n   * [reasoning tokens](https://platform.openai.com/docs/guides/reasoning).\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * @deprecated The maximum number of [tokens](/tokenizer) that can be generated in\n   * the chat completion. This value can be used to control\n   * [costs](https://openai.com/api/pricing/) for text generated via API.\n   *\n   * This value is now deprecated in favor of `max_completion_tokens`, and is not\n   * compatible with\n   * [o-series models](https://platform.openai.com/docs/guides/reasoning).\n   */\n  max_tokens?: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * Output types that you would like the model to generate. Most models are capable\n   * of generating text, which is the default:\n   *\n   * `[\"text\"]`\n   *\n   * The `gpt-4o-audio-preview` model can also be used to\n   * [generate audio](https://platform.openai.com/docs/guides/audio). To request that\n   * this model generate both text and audio responses, you can use:\n   *\n   * `[\"text\", \"audio\"]`\n   */\n  modalities?: Array<'text' | 'audio'> | null;\n\n  /**\n   * How many chat completion choices to generate for each input message. Note that\n   * you will be charged based on the number of generated tokens across all of the\n   * choices. Keep `n` as `1` to minimize costs.\n   */\n  n?: number | null;\n\n  /**\n   * Whether to enable\n   * [parallel function calling](https://platform.openai.com/docs/guides/function-calling#configuring-parallel-function-calling)\n   * during tool use.\n   */\n  parallel_tool_calls?: boolean;\n\n  /**\n   * Static predicted output content, such as the content of a text file that is\n   * being regenerated.\n   */\n  prediction?: ChatCompletionPredictionContent | null;\n\n  /**\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on\n   * whether they appear in the text so far, increasing the model's likelihood to\n   * talk about new topics.\n   */\n  presence_penalty?: number | null;\n\n  /**\n   * **o-series models only**\n   *\n   * Constrains effort on reasoning for\n   * [reasoning models](https://platform.openai.com/docs/guides/reasoning). Currently\n   * supported values are `low`, `medium`, and `high`. Reducing reasoning effort can\n   * result in faster responses and fewer tokens used on reasoning in a response.\n   */\n  reasoning_effort?: Shared.ReasoningEffort | null;\n\n  /**\n   * An object specifying the format that the model must output.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables the older JSON mode, which\n   * ensures the message the model generates is valid JSON. Using `json_schema` is\n   * preferred for models that support it.\n   */\n  response_format?:\n    | Shared.ResponseFormatText\n    | Shared.ResponseFormatJSONSchema\n    | Shared.ResponseFormatJSONObject;\n\n  /**\n   * This feature is in Beta. If specified, our system will make a best effort to\n   * sample deterministically, such that repeated requests with the same `seed` and\n   * parameters should return the same result. Determinism is not guaranteed, and you\n   * should refer to the `system_fingerprint` response parameter to monitor changes\n   * in the backend.\n   */\n  seed?: number | null;\n\n  /**\n   * Specifies the latency tier to use for processing the request. This parameter is\n   * relevant for customers subscribed to the scale tier service:\n   *\n   * - If set to 'auto', and the Project is Scale tier enabled, the system will\n   *   utilize scale tier credits until they are exhausted.\n   * - If set to 'auto', and the Project is not Scale tier enabled, the request will\n   *   be processed using the default service tier with a lower uptime SLA and no\n   *   latency guarantee.\n   * - If set to 'default', the request will be processed using the default service\n   *   tier with a lower uptime SLA and no latency guarantee.\n   * - If set to 'flex', the request will be processed with the Flex Processing\n   *   service tier.\n   *   [Learn more](https://platform.openai.com/docs/guides/flex-processing).\n   * - When not set, the default behavior is 'auto'.\n   *\n   * When this parameter is set, the response body will include the `service_tier`\n   * utilized.\n   */\n  service_tier?: 'auto' | 'default' | 'flex' | 'scale' | null;\n\n  /**\n   * Not supported with latest reasoning models `o3` and `o4-mini`.\n   *\n   * Up to 4 sequences where the API will stop generating further tokens. The\n   * returned text will not contain the stop sequence.\n   */\n  stop?: string | null | Array<string>;\n\n  /**\n   * Whether or not to store the output of this chat completion request for use in\n   * our [model distillation](https://platform.openai.com/docs/guides/distillation)\n   * or [evals](https://platform.openai.com/docs/guides/evals) products.\n   */\n  store?: boolean | null;\n\n  /**\n   * If set to true, the model response data will be streamed to the client as it is\n   * generated using\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\n   * See the\n   * [Streaming section below](https://platform.openai.com/docs/api-reference/chat/streaming)\n   * for more information, along with the\n   * [streaming responses](https://platform.openai.com/docs/guides/streaming-responses)\n   * guide for more information on how to handle the streaming events.\n   */\n  stream?: boolean | null;\n\n  /**\n   * Options for streaming response. Only set this when you set `stream: true`.\n   */\n  stream_options?: ChatCompletionStreamOptions | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic. We generally recommend altering this or `top_p` but\n   * not both.\n   */\n  temperature?: number | null;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tool and instead generates a message. `auto` means the model can\n   * pick between generating a message or calling one or more tools. `required` means\n   * the model must call one or more tools. Specifying a particular tool via\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   *\n   * `none` is the default when no tools are present. `auto` is the default if tools\n   * are present.\n   */\n  tool_choice?: ChatCompletionToolChoiceOption;\n\n  /**\n   * A list of tools the model may call. Currently, only functions are supported as a\n   * tool. Use this to provide a list of functions the model may generate JSON inputs\n   * for. A max of 128 functions are supported.\n   */\n  tools?: Array<ChatCompletionTool>;\n\n  /**\n   * An integer between 0 and 20 specifying the number of most likely tokens to\n   * return at each token position, each with an associated log probability.\n   * `logprobs` must be set to `true` if this parameter is used.\n   */\n  top_logprobs?: number | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or `temperature` but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * A stable identifier for your end-users. Used to boost cache hit rates by better\n   * bucketing similar requests and to help OpenAI detect and prevent abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n\n  /**\n   * This tool searches the web for relevant results to use in a response. Learn more\n   * about the\n   * [web search tool](https://platform.openai.com/docs/guides/tools-web-search?api-mode=chat).\n   */\n  web_search_options?: ChatCompletionCreateParams.WebSearchOptions;\n}\n\nexport namespace ChatCompletionCreateParams {\n  /**\n   * @deprecated\n   */\n  export interface Function {\n    /**\n     * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain\n     * underscores and dashes, with a maximum length of 64.\n     */\n    name: string;\n\n    /**\n     * A description of what the function does, used by the model to choose when and\n     * how to call the function.\n     */\n    description?: string;\n\n    /**\n     * The parameters the functions accepts, described as a JSON Schema object. See the\n     * [guide](https://platform.openai.com/docs/guides/function-calling) for examples,\n     * and the\n     * [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for\n     * documentation about the format.\n     *\n     * Omitting `parameters` defines a function with an empty parameter list.\n     */\n    parameters?: Shared.FunctionParameters;\n  }\n\n  /**\n   * This tool searches the web for relevant results to use in a response. Learn more\n   * about the\n   * [web search tool](https://platform.openai.com/docs/guides/tools-web-search?api-mode=chat).\n   */\n  export interface WebSearchOptions {\n    /**\n     * High level guidance for the amount of context window space to use for the\n     * search. One of `low`, `medium`, or `high`. `medium` is the default.\n     */\n    search_context_size?: 'low' | 'medium' | 'high';\n\n    /**\n     * Approximate location parameters for the search.\n     */\n    user_location?: WebSearchOptions.UserLocation | null;\n  }\n\n  export namespace WebSearchOptions {\n    /**\n     * Approximate location parameters for the search.\n     */\n    export interface UserLocation {\n      /**\n       * Approximate location parameters for the search.\n       */\n      approximate: UserLocation.Approximate;\n\n      /**\n       * The type of location approximation. Always `approximate`.\n       */\n      type: 'approximate';\n    }\n\n    export namespace UserLocation {\n      /**\n       * Approximate location parameters for the search.\n       */\n      export interface Approximate {\n        /**\n         * Free text input for the city of the user, e.g. `San Francisco`.\n         */\n        city?: string;\n\n        /**\n         * The two-letter [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1) of\n         * the user, e.g. `US`.\n         */\n        country?: string;\n\n        /**\n         * Free text input for the region of the user, e.g. `California`.\n         */\n        region?: string;\n\n        /**\n         * The [IANA timezone](https://timeapi.io/documentation/iana-timezones) of the\n         * user, e.g. `America/Los_Angeles`.\n         */\n        timezone?: string;\n      }\n    }\n  }\n\n  export type ChatCompletionCreateParamsNonStreaming =\n    CompletionsCompletionsAPI.ChatCompletionCreateParamsNonStreaming;\n  export type ChatCompletionCreateParamsStreaming =\n    CompletionsCompletionsAPI.ChatCompletionCreateParamsStreaming;\n}\n\nexport interface ChatCompletionCreateParamsNonStreaming extends ChatCompletionCreateParamsBase {\n  /**\n   * If set to true, the model response data will be streamed to the client as it is\n   * generated using\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\n   * See the\n   * [Streaming section below](https://platform.openai.com/docs/api-reference/chat/streaming)\n   * for more information, along with the\n   * [streaming responses](https://platform.openai.com/docs/guides/streaming-responses)\n   * guide for more information on how to handle the streaming events.\n   */\n  stream?: false | null;\n}\n\nexport interface ChatCompletionCreateParamsStreaming extends ChatCompletionCreateParamsBase {\n  /**\n   * If set to true, the model response data will be streamed to the client as it is\n   * generated using\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\n   * See the\n   * [Streaming section below](https://platform.openai.com/docs/api-reference/chat/streaming)\n   * for more information, along with the\n   * [streaming responses](https://platform.openai.com/docs/guides/streaming-responses)\n   * guide for more information on how to handle the streaming events.\n   */\n  stream: true;\n}\n\nexport interface ChatCompletionUpdateParams {\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n}\n\nexport interface ChatCompletionListParams extends CursorPageParams {\n  /**\n   * A list of metadata keys to filter the Chat Completions by. Example:\n   *\n   * `metadata[key1]=value1&metadata[key2]=value2`\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The model used to generate the Chat Completions.\n   */\n  model?: string;\n\n  /**\n   * Sort order for Chat Completions by timestamp. Use `asc` for ascending order or\n   * `desc` for descending order. Defaults to `asc`.\n   */\n  order?: 'asc' | 'desc';\n}\n\nCompletions.Messages = Messages;\n\nexport declare namespace Completions {\n  export {\n    type ChatCompletion as ChatCompletion,\n    type ChatCompletionAssistantMessageParam as ChatCompletionAssistantMessageParam,\n    type ChatCompletionAudio as ChatCompletionAudio,\n    type ChatCompletionAudioParam as ChatCompletionAudioParam,\n    type ChatCompletionChunk as ChatCompletionChunk,\n    type ChatCompletionContentPart as ChatCompletionContentPart,\n    type ChatCompletionContentPartImage as ChatCompletionContentPartImage,\n    type ChatCompletionContentPartInputAudio as ChatCompletionContentPartInputAudio,\n    type ChatCompletionContentPartRefusal as ChatCompletionContentPartRefusal,\n    type ChatCompletionContentPartText as ChatCompletionContentPartText,\n    type ChatCompletionDeleted as ChatCompletionDeleted,\n    type ChatCompletionDeveloperMessageParam as ChatCompletionDeveloperMessageParam,\n    type ChatCompletionFunctionCallOption as ChatCompletionFunctionCallOption,\n    type ChatCompletionFunctionMessageParam as ChatCompletionFunctionMessageParam,\n    type ChatCompletionMessage as ChatCompletionMessage,\n    type ChatCompletionMessageParam as ChatCompletionMessageParam,\n    type ChatCompletionMessageToolCall as ChatCompletionMessageToolCall,\n    type ChatCompletionModality as ChatCompletionModality,\n    type ChatCompletionNamedToolChoice as ChatCompletionNamedToolChoice,\n    type ChatCompletionPredictionContent as ChatCompletionPredictionContent,\n    type ChatCompletionRole as ChatCompletionRole,\n    type ChatCompletionStoreMessage as ChatCompletionStoreMessage,\n    type ChatCompletionStreamOptions as ChatCompletionStreamOptions,\n    type ChatCompletionSystemMessageParam as ChatCompletionSystemMessageParam,\n    type ChatCompletionTokenLogprob as ChatCompletionTokenLogprob,\n    type ChatCompletionTool as ChatCompletionTool,\n    type ChatCompletionToolChoiceOption as ChatCompletionToolChoiceOption,\n    type ChatCompletionToolMessageParam as ChatCompletionToolMessageParam,\n    type ChatCompletionUserMessageParam as ChatCompletionUserMessageParam,\n    type ChatCompletionReasoningEffort as ChatCompletionReasoningEffort,\n    type ChatCompletionsPage as ChatCompletionsPage,\n    type ChatCompletionCreateParams as ChatCompletionCreateParams,\n    type ChatCompletionCreateParamsNonStreaming as ChatCompletionCreateParamsNonStreaming,\n    type ChatCompletionCreateParamsStreaming as ChatCompletionCreateParamsStreaming,\n    type ChatCompletionUpdateParams as ChatCompletionUpdateParams,\n    type ChatCompletionListParams as ChatCompletionListParams,\n  };\n\n  export { Messages as Messages, type MessageListParams as MessageListParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as Shared from '../shared';\nimport * as CompletionsAPI from './completions/completions';\nimport {\n  ChatCompletion,\n  ChatCompletionAssistantMessageParam,\n  ChatCompletionAudio,\n  ChatCompletionAudioParam,\n  ChatCompletionChunk,\n  ChatCompletionContentPart,\n  ChatCompletionContentPartImage,\n  ChatCompletionContentPartInputAudio,\n  ChatCompletionContentPartRefusal,\n  ChatCompletionContentPartText,\n  ChatCompletionCreateParams,\n  ChatCompletionCreateParamsNonStreaming,\n  ChatCompletionCreateParamsStreaming,\n  ChatCompletionDeleted,\n  ChatCompletionDeveloperMessageParam,\n  ChatCompletionFunctionCallOption,\n  ChatCompletionFunctionMessageParam,\n  ChatCompletionListParams,\n  ChatCompletionMessage,\n  ChatCompletionMessageParam,\n  ChatCompletionMessageToolCall,\n  ChatCompletionModality,\n  ChatCompletionNamedToolChoice,\n  ChatCompletionPredictionContent,\n  ChatCompletionReasoningEffort,\n  ChatCompletionRole,\n  ChatCompletionStoreMessage,\n  ChatCompletionStreamOptions,\n  ChatCompletionSystemMessageParam,\n  ChatCompletionTokenLogprob,\n  ChatCompletionTool,\n  ChatCompletionToolChoiceOption,\n  ChatCompletionToolMessageParam,\n  ChatCompletionUpdateParams,\n  ChatCompletionUserMessageParam,\n  ChatCompletionsPage,\n  Completions,\n} from './completions/completions';\n\nexport class Chat extends APIResource {\n  completions: CompletionsAPI.Completions = new CompletionsAPI.Completions(this._client);\n}\n\nexport type ChatModel = Shared.ChatModel;\n\nChat.Completions = Completions;\n\nexport declare namespace Chat {\n  export { type ChatModel as ChatModel };\n\n  export {\n    Completions as Completions,\n    type ChatCompletion as ChatCompletion,\n    type ChatCompletionAssistantMessageParam as ChatCompletionAssistantMessageParam,\n    type ChatCompletionAudio as ChatCompletionAudio,\n    type ChatCompletionAudioParam as ChatCompletionAudioParam,\n    type ChatCompletionChunk as ChatCompletionChunk,\n    type ChatCompletionContentPart as ChatCompletionContentPart,\n    type ChatCompletionContentPartImage as ChatCompletionContentPartImage,\n    type ChatCompletionContentPartInputAudio as ChatCompletionContentPartInputAudio,\n    type ChatCompletionContentPartRefusal as ChatCompletionContentPartRefusal,\n    type ChatCompletionContentPartText as ChatCompletionContentPartText,\n    type ChatCompletionDeleted as ChatCompletionDeleted,\n    type ChatCompletionDeveloperMessageParam as ChatCompletionDeveloperMessageParam,\n    type ChatCompletionFunctionCallOption as ChatCompletionFunctionCallOption,\n    type ChatCompletionFunctionMessageParam as ChatCompletionFunctionMessageParam,\n    type ChatCompletionMessage as ChatCompletionMessage,\n    type ChatCompletionMessageParam as ChatCompletionMessageParam,\n    type ChatCompletionMessageToolCall as ChatCompletionMessageToolCall,\n    type ChatCompletionModality as ChatCompletionModality,\n    type ChatCompletionNamedToolChoice as ChatCompletionNamedToolChoice,\n    type ChatCompletionPredictionContent as ChatCompletionPredictionContent,\n    type ChatCompletionRole as ChatCompletionRole,\n    type ChatCompletionStoreMessage as ChatCompletionStoreMessage,\n    type ChatCompletionStreamOptions as ChatCompletionStreamOptions,\n    type ChatCompletionSystemMessageParam as ChatCompletionSystemMessageParam,\n    type ChatCompletionTokenLogprob as ChatCompletionTokenLogprob,\n    type ChatCompletionTool as ChatCompletionTool,\n    type ChatCompletionToolChoiceOption as ChatCompletionToolChoiceOption,\n    type ChatCompletionToolMessageParam as ChatCompletionToolMessageParam,\n    type ChatCompletionUserMessageParam as ChatCompletionUserMessageParam,\n    type ChatCompletionReasoningEffort as ChatCompletionReasoningEffort,\n    type ChatCompletionsPage as ChatCompletionsPage,\n    type ChatCompletionCreateParams as ChatCompletionCreateParams,\n    type ChatCompletionCreateParamsNonStreaming as ChatCompletionCreateParamsNonStreaming,\n    type ChatCompletionCreateParamsStreaming as ChatCompletionCreateParamsStreaming,\n    type ChatCompletionUpdateParams as ChatCompletionUpdateParams,\n    type ChatCompletionListParams as ChatCompletionListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { isReadonlyArray } from './utils/values';\n\ntype HeaderValue = string | undefined | null;\nexport type HeadersLike =\n  | Headers\n  | readonly HeaderValue[][]\n  | Record<string, HeaderValue | readonly HeaderValue[]>\n  | undefined\n  | null\n  | NullableHeaders;\n\nconst brand_privateNullableHeaders = /* @__PURE__ */ Symbol('brand.privateNullableHeaders');\n\n/**\n * @internal\n * Users can pass explicit nulls to unset default headers. When we parse them\n * into a standard headers type we need to preserve that information.\n */\nexport type NullableHeaders = {\n  /** Brand check, prevent users from creating a NullableHeaders. */\n  [brand_privateNullableHeaders]: true;\n  /** Parsed headers. */\n  values: Headers;\n  /** Set of lowercase header names explicitly set to null. */\n  nulls: Set<string>;\n};\n\nfunction* iterateHeaders(headers: HeadersLike): IterableIterator<readonly [string, string | null]> {\n  if (!headers) return;\n\n  if (brand_privateNullableHeaders in headers) {\n    const { values, nulls } = headers;\n    yield* values.entries();\n    for (const name of nulls) {\n      yield [name, null];\n    }\n    return;\n  }\n\n  let shouldClear = false;\n  let iter: Iterable<readonly (HeaderValue | readonly HeaderValue[])[]>;\n  if (headers instanceof Headers) {\n    iter = headers.entries();\n  } else if (isReadonlyArray(headers)) {\n    iter = headers;\n  } else {\n    shouldClear = true;\n    iter = Object.entries(headers ?? {});\n  }\n  for (let row of iter) {\n    const name = row[0];\n    if (typeof name !== 'string') throw new TypeError('expected header name to be a string');\n    const values = isReadonlyArray(row[1]) ? row[1] : [row[1]];\n    let didClear = false;\n    for (const value of values) {\n      if (value === undefined) continue;\n\n      // Objects keys always overwrite older headers, they never append.\n      // Yield a null to clear the header before adding the new values.\n      if (shouldClear && !didClear) {\n        didClear = true;\n        yield [name, null];\n      }\n      yield [name, value];\n    }\n  }\n}\n\nexport const buildHeaders = (newHeaders: HeadersLike[]): NullableHeaders => {\n  const targetHeaders = new Headers();\n  const nullHeaders = new Set<string>();\n  for (const headers of newHeaders) {\n    const seenHeaders = new Set<string>();\n    for (const [name, value] of iterateHeaders(headers)) {\n      const lowerName = name.toLowerCase();\n      if (!seenHeaders.has(lowerName)) {\n        targetHeaders.delete(name);\n        seenHeaders.add(lowerName);\n      }\n      if (value === null) {\n        targetHeaders.delete(name);\n        nullHeaders.add(lowerName);\n      } else {\n        targetHeaders.append(name, value);\n        nullHeaders.delete(lowerName);\n      }\n    }\n  }\n  return { [brand_privateNullableHeaders]: true, values: targetHeaders, nulls: nullHeaders };\n};\n\nexport const isEmptyHeaders = (headers: HeadersLike) => {\n  for (const _ of iterateHeaders(headers)) return false;\n  return true;\n};\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport { APIPromise } from '../../core/api-promise';\nimport { buildHeaders } from '../../internal/headers';\nimport { RequestOptions } from '../../internal/request-options';\n\nexport class Speech extends APIResource {\n  /**\n   * Generates audio from the input text.\n   *\n   * @example\n   * ```ts\n   * const speech = await client.audio.speech.create({\n   *   input: 'input',\n   *   model: 'string',\n   *   voice: 'ash',\n   * });\n   *\n   * const content = await speech.blob();\n   * console.log(content);\n   * ```\n   */\n  create(body: SpeechCreateParams, options?: RequestOptions): APIPromise<Response> {\n    return this._client.post('/audio/speech', {\n      body,\n      ...options,\n      headers: buildHeaders([{ Accept: 'application/octet-stream' }, options?.headers]),\n      __binaryResponse: true,\n    });\n  }\n}\n\nexport type SpeechModel = 'tts-1' | 'tts-1-hd' | 'gpt-4o-mini-tts';\n\nexport interface SpeechCreateParams {\n  /**\n   * The text to generate audio for. The maximum length is 4096 characters.\n   */\n  input: string;\n\n  /**\n   * One of the available [TTS models](https://platform.openai.com/docs/models#tts):\n   * `tts-1`, `tts-1-hd` or `gpt-4o-mini-tts`.\n   */\n  model: (string & {}) | SpeechModel;\n\n  /**\n   * The voice to use when generating the audio. Supported voices are `alloy`, `ash`,\n   * `ballad`, `coral`, `echo`, `fable`, `onyx`, `nova`, `sage`, `shimmer`, and\n   * `verse`. Previews of the voices are available in the\n   * [Text to speech guide](https://platform.openai.com/docs/guides/text-to-speech#voice-options).\n   */\n  voice:\n    | (string & {})\n    | 'alloy'\n    | 'ash'\n    | 'ballad'\n    | 'coral'\n    | 'echo'\n    | 'fable'\n    | 'onyx'\n    | 'nova'\n    | 'sage'\n    | 'shimmer'\n    | 'verse';\n\n  /**\n   * Control the voice of your generated audio with additional instructions. Does not\n   * work with `tts-1` or `tts-1-hd`.\n   */\n  instructions?: string;\n\n  /**\n   * The format to audio in. Supported formats are `mp3`, `opus`, `aac`, `flac`,\n   * `wav`, and `pcm`.\n   */\n  response_format?: 'mp3' | 'opus' | 'aac' | 'flac' | 'wav' | 'pcm';\n\n  /**\n   * The speed of the generated audio. Select a value from `0.25` to `4.0`. `1.0` is\n   * the default. Does not work with `gpt-4o-mini-tts`.\n   */\n  speed?: number;\n}\n\nexport declare namespace Speech {\n  export { type SpeechModel as SpeechModel, type SpeechCreateParams as SpeechCreateParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as TranscriptionsAPI from './transcriptions';\nimport * as AudioAPI from './audio';\nimport { APIPromise } from '../../core/api-promise';\nimport { Stream } from '../../core/streaming';\nimport { type Uploadable } from '../../core/uploads';\nimport { RequestOptions } from '../../internal/request-options';\nimport { multipartFormRequestOptions } from '../../internal/uploads';\n\nexport class Transcriptions extends APIResource {\n  /**\n   * Transcribes audio into the input language.\n   *\n   * @example\n   * ```ts\n   * const transcription =\n   *   await client.audio.transcriptions.create({\n   *     file: fs.createReadStream('speech.mp3'),\n   *     model: 'gpt-4o-transcribe',\n   *   });\n   * ```\n   */\n  create(\n    body: TranscriptionCreateParamsNonStreaming<'json' | undefined>,\n    options?: RequestOptions,\n  ): APIPromise<Transcription>;\n  create(\n    body: TranscriptionCreateParamsNonStreaming<'verbose_json'>,\n    options?: RequestOptions,\n  ): APIPromise<TranscriptionVerbose>;\n  create(\n    body: TranscriptionCreateParamsNonStreaming<'srt' | 'vtt' | 'text'>,\n    options?: RequestOptions,\n  ): APIPromise<string>;\n  create(body: TranscriptionCreateParamsNonStreaming, options?: RequestOptions): APIPromise<Transcription>;\n  create(\n    body: TranscriptionCreateParamsStreaming,\n    options?: RequestOptions,\n  ): APIPromise<Stream<TranscriptionStreamEvent>>;\n  create(\n    body: TranscriptionCreateParamsStreaming,\n    options?: RequestOptions,\n  ): APIPromise<TranscriptionCreateResponse | string | Stream<TranscriptionStreamEvent>>;\n  create(\n    body: TranscriptionCreateParams,\n    options?: RequestOptions,\n  ): APIPromise<TranscriptionCreateResponse | string | Stream<TranscriptionStreamEvent>> {\n    return this._client.post(\n      '/audio/transcriptions',\n      multipartFormRequestOptions(\n        {\n          body,\n          ...options,\n          stream: body.stream ?? false,\n          __metadata: { model: body.model },\n        },\n        this._client,\n      ),\n    );\n  }\n}\n\n/**\n * Represents a transcription response returned by model, based on the provided\n * input.\n */\nexport interface Transcription {\n  /**\n   * The transcribed text.\n   */\n  text: string;\n\n  /**\n   * The log probabilities of the tokens in the transcription. Only returned with the\n   * models `gpt-4o-transcribe` and `gpt-4o-mini-transcribe` if `logprobs` is added\n   * to the `include` array.\n   */\n  logprobs?: Array<Transcription.Logprob>;\n}\n\nexport namespace Transcription {\n  export interface Logprob {\n    /**\n     * The token in the transcription.\n     */\n    token?: string;\n\n    /**\n     * The bytes of the token.\n     */\n    bytes?: Array<number>;\n\n    /**\n     * The log probability of the token.\n     */\n    logprob?: number;\n  }\n}\n\nexport type TranscriptionInclude = 'logprobs';\n\nexport interface TranscriptionSegment {\n  /**\n   * Unique identifier of the segment.\n   */\n  id: number;\n\n  /**\n   * Average logprob of the segment. If the value is lower than -1, consider the\n   * logprobs failed.\n   */\n  avg_logprob: number;\n\n  /**\n   * Compression ratio of the segment. If the value is greater than 2.4, consider the\n   * compression failed.\n   */\n  compression_ratio: number;\n\n  /**\n   * End time of the segment in seconds.\n   */\n  end: number;\n\n  /**\n   * Probability of no speech in the segment. If the value is higher than 1.0 and the\n   * `avg_logprob` is below -1, consider this segment silent.\n   */\n  no_speech_prob: number;\n\n  /**\n   * Seek offset of the segment.\n   */\n  seek: number;\n\n  /**\n   * Start time of the segment in seconds.\n   */\n  start: number;\n\n  /**\n   * Temperature parameter used for generating the segment.\n   */\n  temperature: number;\n\n  /**\n   * Text content of the segment.\n   */\n  text: string;\n\n  /**\n   * Array of token IDs for the text content.\n   */\n  tokens: Array<number>;\n}\n\n/**\n * Emitted when there is an additional text delta. This is also the first event\n * emitted when the transcription starts. Only emitted when you\n * [create a transcription](https://platform.openai.com/docs/api-reference/audio/create-transcription)\n * with the `Stream` parameter set to `true`.\n */\nexport type TranscriptionStreamEvent = TranscriptionTextDeltaEvent | TranscriptionTextDoneEvent;\n\n/**\n * Emitted when there is an additional text delta. This is also the first event\n * emitted when the transcription starts. Only emitted when you\n * [create a transcription](https://platform.openai.com/docs/api-reference/audio/create-transcription)\n * with the `Stream` parameter set to `true`.\n */\nexport interface TranscriptionTextDeltaEvent {\n  /**\n   * The text delta that was additionally transcribed.\n   */\n  delta: string;\n\n  /**\n   * The type of the event. Always `transcript.text.delta`.\n   */\n  type: 'transcript.text.delta';\n\n  /**\n   * The log probabilities of the delta. Only included if you\n   * [create a transcription](https://platform.openai.com/docs/api-reference/audio/create-transcription)\n   * with the `include[]` parameter set to `logprobs`.\n   */\n  logprobs?: Array<TranscriptionTextDeltaEvent.Logprob>;\n}\n\nexport namespace TranscriptionTextDeltaEvent {\n  export interface Logprob {\n    /**\n     * The token that was used to generate the log probability.\n     */\n    token?: string;\n\n    /**\n     * The bytes that were used to generate the log probability.\n     */\n    bytes?: Array<number>;\n\n    /**\n     * The log probability of the token.\n     */\n    logprob?: number;\n  }\n}\n\n/**\n * Emitted when the transcription is complete. Contains the complete transcription\n * text. Only emitted when you\n * [create a transcription](https://platform.openai.com/docs/api-reference/audio/create-transcription)\n * with the `Stream` parameter set to `true`.\n */\nexport interface TranscriptionTextDoneEvent {\n  /**\n   * The text that was transcribed.\n   */\n  text: string;\n\n  /**\n   * The type of the event. Always `transcript.text.done`.\n   */\n  type: 'transcript.text.done';\n\n  /**\n   * The log probabilities of the individual tokens in the transcription. Only\n   * included if you\n   * [create a transcription](https://platform.openai.com/docs/api-reference/audio/create-transcription)\n   * with the `include[]` parameter set to `logprobs`.\n   */\n  logprobs?: Array<TranscriptionTextDoneEvent.Logprob>;\n}\n\nexport namespace TranscriptionTextDoneEvent {\n  export interface Logprob {\n    /**\n     * The token that was used to generate the log probability.\n     */\n    token?: string;\n\n    /**\n     * The bytes that were used to generate the log probability.\n     */\n    bytes?: Array<number>;\n\n    /**\n     * The log probability of the token.\n     */\n    logprob?: number;\n  }\n}\n\n/**\n * Represents a verbose json transcription response returned by model, based on the\n * provided input.\n */\nexport interface TranscriptionVerbose {\n  /**\n   * The duration of the input audio.\n   */\n  duration: number;\n\n  /**\n   * The language of the input audio.\n   */\n  language: string;\n\n  /**\n   * The transcribed text.\n   */\n  text: string;\n\n  /**\n   * Segments of the transcribed text and their corresponding details.\n   */\n  segments?: Array<TranscriptionSegment>;\n\n  /**\n   * Extracted words and their corresponding timestamps.\n   */\n  words?: Array<TranscriptionWord>;\n}\n\nexport interface TranscriptionWord {\n  /**\n   * End time of the word in seconds.\n   */\n  end: number;\n\n  /**\n   * Start time of the word in seconds.\n   */\n  start: number;\n\n  /**\n   * The text content of the word.\n   */\n  word: string;\n}\n\n/**\n * Represents a transcription response returned by model, based on the provided\n * input.\n */\nexport type TranscriptionCreateResponse = Transcription | TranscriptionVerbose;\n\nexport type TranscriptionCreateParams<\n  ResponseFormat extends AudioAPI.AudioResponseFormat | undefined = AudioAPI.AudioResponseFormat | undefined,\n> = TranscriptionCreateParamsNonStreaming<ResponseFormat> | TranscriptionCreateParamsStreaming;\n\nexport interface TranscriptionCreateParamsBase<\n  ResponseFormat extends AudioAPI.AudioResponseFormat | undefined = AudioAPI.AudioResponseFormat | undefined,\n> {\n  /**\n   * The audio file object (not file name) to transcribe, in one of these formats:\n   * flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.\n   */\n  file: Uploadable;\n\n  /**\n   * ID of the model to use. The options are `gpt-4o-transcribe`,\n   * `gpt-4o-mini-transcribe`, and `whisper-1` (which is powered by our open source\n   * Whisper V2 model).\n   */\n  model: (string & {}) | AudioAPI.AudioModel;\n\n  /**\n   * Controls how the audio is cut into chunks. When set to `\"auto\"`, the server\n   * first normalizes loudness and then uses voice activity detection (VAD) to choose\n   * boundaries. `server_vad` object can be provided to tweak VAD detection\n   * parameters manually. If unset, the audio is transcribed as a single block.\n   */\n  chunking_strategy?: 'auto' | TranscriptionCreateParams.VadConfig | null;\n\n  /**\n   * Additional information to include in the transcription response. `logprobs` will\n   * return the log probabilities of the tokens in the response to understand the\n   * model's confidence in the transcription. `logprobs` only works with\n   * response_format set to `json` and only with the models `gpt-4o-transcribe` and\n   * `gpt-4o-mini-transcribe`.\n   */\n  include?: Array<TranscriptionInclude>;\n\n  /**\n   * The language of the input audio. Supplying the input language in\n   * [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. `en`)\n   * format will improve accuracy and latency.\n   */\n  language?: string;\n\n  /**\n   * An optional text to guide the model's style or continue a previous audio\n   * segment. The\n   * [prompt](https://platform.openai.com/docs/guides/speech-to-text#prompting)\n   * should match the audio language.\n   */\n  prompt?: string;\n\n  /**\n   * The format of the output, in one of these options: `json`, `text`, `srt`,\n   * `verbose_json`, or `vtt`. For `gpt-4o-transcribe` and `gpt-4o-mini-transcribe`,\n   * the only supported format is `json`.\n   */\n  response_format?: ResponseFormat;\n\n  /**\n   * If set to true, the model response data will be streamed to the client as it is\n   * generated using\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\n   * See the\n   * [Streaming section of the Speech-to-Text guide](https://platform.openai.com/docs/guides/speech-to-text?lang=curl#streaming-transcriptions)\n   * for more information.\n   *\n   * Note: Streaming is not supported for the `whisper-1` model and will be ignored.\n   */\n  stream?: boolean | null;\n\n  /**\n   * The sampling temperature, between 0 and 1. Higher values like 0.8 will make the\n   * output more random, while lower values like 0.2 will make it more focused and\n   * deterministic. If set to 0, the model will use\n   * [log probability](https://en.wikipedia.org/wiki/Log_probability) to\n   * automatically increase the temperature until certain thresholds are hit.\n   */\n  temperature?: number;\n\n  /**\n   * The timestamp granularities to populate for this transcription.\n   * `response_format` must be set `verbose_json` to use timestamp granularities.\n   * Either or both of these options are supported: `word`, or `segment`. Note: There\n   * is no additional latency for segment timestamps, but generating word timestamps\n   * incurs additional latency.\n   */\n  timestamp_granularities?: Array<'word' | 'segment'>;\n}\n\nexport namespace TranscriptionCreateParams {\n  export interface VadConfig {\n    /**\n     * Must be set to `server_vad` to enable manual chunking using server side VAD.\n     */\n    type: 'server_vad';\n\n    /**\n     * Amount of audio to include before the VAD detected speech (in milliseconds).\n     */\n    prefix_padding_ms?: number;\n\n    /**\n     * Duration of silence to detect speech stop (in milliseconds). With shorter values\n     * the model will respond more quickly, but may jump in on short pauses from the\n     * user.\n     */\n    silence_duration_ms?: number;\n\n    /**\n     * Sensitivity threshold (0.0 to 1.0) for voice activity detection. A higher\n     * threshold will require louder audio to activate the model, and thus might\n     * perform better in noisy environments.\n     */\n    threshold?: number;\n  }\n\n  export type TranscriptionCreateParamsNonStreaming = TranscriptionsAPI.TranscriptionCreateParamsNonStreaming;\n  export type TranscriptionCreateParamsStreaming = TranscriptionsAPI.TranscriptionCreateParamsStreaming;\n}\n\nexport interface TranscriptionCreateParamsNonStreaming<\n  ResponseFormat extends AudioAPI.AudioResponseFormat | undefined = AudioAPI.AudioResponseFormat | undefined,\n> extends TranscriptionCreateParamsBase<ResponseFormat> {\n  /**\n   * If set to true, the model response data will be streamed to the client as it is\n   * generated using\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\n   * See the\n   * [Streaming section of the Speech-to-Text guide](https://platform.openai.com/docs/guides/speech-to-text?lang=curl#streaming-transcriptions)\n   * for more information.\n   *\n   * Note: Streaming is not supported for the `whisper-1` model and will be ignored.\n   */\n  stream?: false | null;\n}\n\nexport interface TranscriptionCreateParamsStreaming extends TranscriptionCreateParamsBase {\n  /**\n   * If set to true, the model response data will be streamed to the client as it is\n   * generated using\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\n   * See the\n   * [Streaming section of the Speech-to-Text guide](https://platform.openai.com/docs/guides/speech-to-text?lang=curl#streaming-transcriptions)\n   * for more information.\n   *\n   * Note: Streaming is not supported for the `whisper-1` model and will be ignored.\n   */\n  stream: true;\n}\n\nexport declare namespace Transcriptions {\n  export {\n    type Transcription as Transcription,\n    type TranscriptionInclude as TranscriptionInclude,\n    type TranscriptionSegment as TranscriptionSegment,\n    type TranscriptionStreamEvent as TranscriptionStreamEvent,\n    type TranscriptionTextDeltaEvent as TranscriptionTextDeltaEvent,\n    type TranscriptionTextDoneEvent as TranscriptionTextDoneEvent,\n    type TranscriptionVerbose as TranscriptionVerbose,\n    type TranscriptionWord as TranscriptionWord,\n    type TranscriptionCreateResponse as TranscriptionCreateResponse,\n    type TranscriptionCreateParams as TranscriptionCreateParams,\n    type TranscriptionCreateParamsNonStreaming as TranscriptionCreateParamsNonStreaming,\n    type TranscriptionCreateParamsStreaming as TranscriptionCreateParamsStreaming,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as AudioAPI from './audio';\nimport * as TranscriptionsAPI from './transcriptions';\nimport { APIPromise } from '../../core/api-promise';\nimport { type Uploadable } from '../../core/uploads';\nimport { RequestOptions } from '../../internal/request-options';\nimport { multipartFormRequestOptions } from '../../internal/uploads';\n\nexport class Translations extends APIResource {\n  /**\n   * Translates audio into English.\n   *\n   * @example\n   * ```ts\n   * const translation = await client.audio.translations.create({\n   *   file: fs.createReadStream('speech.mp3'),\n   *   model: 'whisper-1',\n   * });\n   * ```\n   */\n  create(\n    body: TranslationCreateParams<'json' | undefined>,\n    options?: RequestOptions,\n  ): APIPromise<Translation>;\n  create(\n    body: TranslationCreateParams<'verbose_json'>,\n    options?: RequestOptions,\n  ): APIPromise<TranslationVerbose>;\n  create(body: TranslationCreateParams<'text' | 'srt' | 'vtt'>, options?: RequestOptions): APIPromise<string>;\n  create(body: TranslationCreateParams, options?: RequestOptions): APIPromise<Translation>;\n  create(\n    body: TranslationCreateParams,\n    options?: RequestOptions,\n  ): APIPromise<TranslationCreateResponse | string> {\n    return this._client.post(\n      '/audio/translations',\n      multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }, this._client),\n    );\n  }\n}\n\nexport interface Translation {\n  text: string;\n}\n\nexport interface TranslationVerbose {\n  /**\n   * The duration of the input audio.\n   */\n  duration: number;\n\n  /**\n   * The language of the output translation (always `english`).\n   */\n  language: string;\n\n  /**\n   * The translated text.\n   */\n  text: string;\n\n  /**\n   * Segments of the translated text and their corresponding details.\n   */\n  segments?: Array<TranscriptionsAPI.TranscriptionSegment>;\n}\n\nexport type TranslationCreateResponse = Translation | TranslationVerbose;\n\nexport interface TranslationCreateParams<\n  ResponseFormat extends AudioAPI.AudioResponseFormat | undefined = AudioAPI.AudioResponseFormat | undefined,\n> {\n  /**\n   * The audio file object (not file name) translate, in one of these formats: flac,\n   * mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.\n   */\n  file: Uploadable;\n\n  /**\n   * ID of the model to use. Only `whisper-1` (which is powered by our open source\n   * Whisper V2 model) is currently available.\n   */\n  model: (string & {}) | AudioAPI.AudioModel;\n\n  /**\n   * An optional text to guide the model's style or continue a previous audio\n   * segment. The\n   * [prompt](https://platform.openai.com/docs/guides/speech-to-text#prompting)\n   * should be in English.\n   */\n  prompt?: string;\n\n  /**\n   * The format of the output, in one of these options: `json`, `text`, `srt`,\n   * `verbose_json`, or `vtt`.\n   */\n  response_format?: 'json' | 'text' | 'srt' | 'verbose_json' | 'vtt';\n\n  /**\n   * The sampling temperature, between 0 and 1. Higher values like 0.8 will make the\n   * output more random, while lower values like 0.2 will make it more focused and\n   * deterministic. If set to 0, the model will use\n   * [log probability](https://en.wikipedia.org/wiki/Log_probability) to\n   * automatically increase the temperature until certain thresholds are hit.\n   */\n  temperature?: number;\n}\n\nexport declare namespace Translations {\n  export {\n    type Translation as Translation,\n    type TranslationVerbose as TranslationVerbose,\n    type TranslationCreateResponse as TranslationCreateResponse,\n    type TranslationCreateParams as TranslationCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as SpeechAPI from './speech';\nimport { Speech, SpeechCreateParams, SpeechModel } from './speech';\nimport * as TranscriptionsAPI from './transcriptions';\nimport {\n  Transcription,\n  TranscriptionCreateParams,\n  TranscriptionCreateParamsNonStreaming,\n  TranscriptionCreateParamsStreaming,\n  TranscriptionCreateResponse,\n  TranscriptionInclude,\n  TranscriptionSegment,\n  TranscriptionStreamEvent,\n  TranscriptionTextDeltaEvent,\n  TranscriptionTextDoneEvent,\n  TranscriptionVerbose,\n  TranscriptionWord,\n  Transcriptions,\n} from './transcriptions';\nimport * as TranslationsAPI from './translations';\nimport {\n  Translation,\n  TranslationCreateParams,\n  TranslationCreateResponse,\n  TranslationVerbose,\n  Translations,\n} from './translations';\n\nexport class Audio extends APIResource {\n  transcriptions: TranscriptionsAPI.Transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n  translations: TranslationsAPI.Translations = new TranslationsAPI.Translations(this._client);\n  speech: SpeechAPI.Speech = new SpeechAPI.Speech(this._client);\n}\n\nexport type AudioModel = 'whisper-1' | 'gpt-4o-transcribe' | 'gpt-4o-mini-transcribe';\n\n/**\n * The format of the output, in one of these options: `json`, `text`, `srt`,\n * `verbose_json`, or `vtt`. For `gpt-4o-transcribe` and `gpt-4o-mini-transcribe`,\n * the only supported format is `json`.\n */\nexport type AudioResponseFormat = 'json' | 'text' | 'srt' | 'verbose_json' | 'vtt';\n\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n\nexport declare namespace Audio {\n  export { type AudioModel as AudioModel, type AudioResponseFormat as AudioResponseFormat };\n\n  export {\n    Transcriptions as Transcriptions,\n    type Transcription as Transcription,\n    type TranscriptionInclude as TranscriptionInclude,\n    type TranscriptionSegment as TranscriptionSegment,\n    type TranscriptionStreamEvent as TranscriptionStreamEvent,\n    type TranscriptionTextDeltaEvent as TranscriptionTextDeltaEvent,\n    type TranscriptionTextDoneEvent as TranscriptionTextDoneEvent,\n    type TranscriptionVerbose as TranscriptionVerbose,\n    type TranscriptionWord as TranscriptionWord,\n    type TranscriptionCreateResponse as TranscriptionCreateResponse,\n    type TranscriptionCreateParams as TranscriptionCreateParams,\n    type TranscriptionCreateParamsNonStreaming as TranscriptionCreateParamsNonStreaming,\n    type TranscriptionCreateParamsStreaming as TranscriptionCreateParamsStreaming,\n  };\n\n  export {\n    Translations as Translations,\n    type Translation as Translation,\n    type TranslationVerbose as TranslationVerbose,\n    type TranslationCreateResponse as TranslationCreateResponse,\n    type TranslationCreateParams as TranslationCreateParams,\n  };\n\n  export { Speech as Speech, type SpeechModel as SpeechModel, type SpeechCreateParams as SpeechCreateParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../core/resource';\nimport * as BatchesAPI from './batches';\nimport * as Shared from './shared';\nimport { APIPromise } from '../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../core/pagination';\nimport { RequestOptions } from '../internal/request-options';\nimport { path } from '../internal/utils/path';\n\nexport class Batches extends APIResource {\n  /**\n   * Creates and executes a batch from an uploaded file of requests\n   */\n  create(body: BatchCreateParams, options?: RequestOptions): APIPromise<Batch> {\n    return this._client.post('/batches', { body, ...options });\n  }\n\n  /**\n   * Retrieves a batch.\n   */\n  retrieve(batchID: string, options?: RequestOptions): APIPromise<Batch> {\n    return this._client.get(path`/batches/${batchID}`, options);\n  }\n\n  /**\n   * List your organization's batches.\n   */\n  list(\n    query: BatchListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<BatchesPage, Batch> {\n    return this._client.getAPIList('/batches', CursorPage<Batch>, { query, ...options });\n  }\n\n  /**\n   * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n   * 10 minutes, before changing to `cancelled`, where it will have partial results\n   * (if any) available in the output file.\n   */\n  cancel(batchID: string, options?: RequestOptions): APIPromise<Batch> {\n    return this._client.post(path`/batches/${batchID}/cancel`, options);\n  }\n}\n\nexport type BatchesPage = CursorPage<Batch>;\n\nexport interface Batch {\n  id: string;\n\n  /**\n   * The time frame within which the batch should be processed.\n   */\n  completion_window: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch was created.\n   */\n  created_at: number;\n\n  /**\n   * The OpenAI API endpoint used by the batch.\n   */\n  endpoint: string;\n\n  /**\n   * The ID of the input file for the batch.\n   */\n  input_file_id: string;\n\n  /**\n   * The object type, which is always `batch`.\n   */\n  object: 'batch';\n\n  /**\n   * The current status of the batch.\n   */\n  status:\n    | 'validating'\n    | 'failed'\n    | 'in_progress'\n    | 'finalizing'\n    | 'completed'\n    | 'expired'\n    | 'cancelling'\n    | 'cancelled';\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch was cancelled.\n   */\n  cancelled_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch started cancelling.\n   */\n  cancelling_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch was completed.\n   */\n  completed_at?: number;\n\n  /**\n   * The ID of the file containing the outputs of requests with errors.\n   */\n  error_file_id?: string;\n\n  errors?: Batch.Errors;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch expired.\n   */\n  expired_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch will expire.\n   */\n  expires_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch failed.\n   */\n  failed_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch started finalizing.\n   */\n  finalizing_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch started processing.\n   */\n  in_progress_at?: number;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The ID of the file containing the outputs of successfully executed requests.\n   */\n  output_file_id?: string;\n\n  /**\n   * The request counts for different statuses within the batch.\n   */\n  request_counts?: BatchRequestCounts;\n}\n\nexport namespace Batch {\n  export interface Errors {\n    data?: Array<BatchesAPI.BatchError>;\n\n    /**\n     * The object type, which is always `list`.\n     */\n    object?: string;\n  }\n}\n\nexport interface BatchError {\n  /**\n   * An error code identifying the error type.\n   */\n  code?: string;\n\n  /**\n   * The line number of the input file where the error occurred, if applicable.\n   */\n  line?: number | null;\n\n  /**\n   * A human-readable message providing more details about the error.\n   */\n  message?: string;\n\n  /**\n   * The name of the parameter that caused the error, if applicable.\n   */\n  param?: string | null;\n}\n\n/**\n * The request counts for different statuses within the batch.\n */\nexport interface BatchRequestCounts {\n  /**\n   * Number of requests that have been completed successfully.\n   */\n  completed: number;\n\n  /**\n   * Number of requests that have failed.\n   */\n  failed: number;\n\n  /**\n   * Total number of requests in the batch.\n   */\n  total: number;\n}\n\nexport interface BatchCreateParams {\n  /**\n   * The time frame within which the batch should be processed. Currently only `24h`\n   * is supported.\n   */\n  completion_window: '24h';\n\n  /**\n   * The endpoint to be used for all requests in the batch. Currently\n   * `/v1/responses`, `/v1/chat/completions`, `/v1/embeddings`, and `/v1/completions`\n   * are supported. Note that `/v1/embeddings` batches are also restricted to a\n   * maximum of 50,000 embedding inputs across all requests in the batch.\n   */\n  endpoint: '/v1/responses' | '/v1/chat/completions' | '/v1/embeddings' | '/v1/completions';\n\n  /**\n   * The ID of an uploaded file that contains requests for the new batch.\n   *\n   * See [upload file](https://platform.openai.com/docs/api-reference/files/create)\n   * for how to upload a file.\n   *\n   * Your input file must be formatted as a\n   * [JSONL file](https://platform.openai.com/docs/api-reference/batch/request-input),\n   * and must be uploaded with the purpose `batch`. The file can contain up to 50,000\n   * requests, and can be up to 200 MB in size.\n   */\n  input_file_id: string;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n}\n\nexport interface BatchListParams extends CursorPageParams {}\n\nexport declare namespace Batches {\n  export {\n    type Batch as Batch,\n    type BatchError as BatchError,\n    type BatchRequestCounts as BatchRequestCounts,\n    type BatchesPage as BatchesPage,\n    type BatchCreateParams as BatchCreateParams,\n    type BatchListParams as BatchListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as Shared from '../shared';\nimport * as MessagesAPI from './threads/messages';\nimport * as ThreadsAPI from './threads/threads';\nimport * as RunsAPI from './threads/runs/runs';\nimport * as StepsAPI from './threads/runs/steps';\nimport { APIPromise } from '../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../core/pagination';\nimport { buildHeaders } from '../../internal/headers';\nimport { RequestOptions } from '../../internal/request-options';\nimport { path } from '../../internal/utils/path';\nimport { AssistantStream } from '../../lib/AssistantStream';\n\nexport class Assistants extends APIResource {\n  /**\n   * Create an assistant with a model and instructions.\n   *\n   * @example\n   * ```ts\n   * const assistant = await client.beta.assistants.create({\n   *   model: 'gpt-4o',\n   * });\n   * ```\n   */\n  create(body: AssistantCreateParams, options?: RequestOptions): APIPromise<Assistant> {\n    return this._client.post('/assistants', {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Retrieves an assistant.\n   *\n   * @example\n   * ```ts\n   * const assistant = await client.beta.assistants.retrieve(\n   *   'assistant_id',\n   * );\n   * ```\n   */\n  retrieve(assistantID: string, options?: RequestOptions): APIPromise<Assistant> {\n    return this._client.get(path`/assistants/${assistantID}`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Modifies an assistant.\n   *\n   * @example\n   * ```ts\n   * const assistant = await client.beta.assistants.update(\n   *   'assistant_id',\n   * );\n   * ```\n   */\n  update(assistantID: string, body: AssistantUpdateParams, options?: RequestOptions): APIPromise<Assistant> {\n    return this._client.post(path`/assistants/${assistantID}`, {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Returns a list of assistants.\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const assistant of client.beta.assistants.list()) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    query: AssistantListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<AssistantsPage, Assistant> {\n    return this._client.getAPIList('/assistants', CursorPage<Assistant>, {\n      query,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Delete an assistant.\n   *\n   * @example\n   * ```ts\n   * const assistantDeleted =\n   *   await client.beta.assistants.delete('assistant_id');\n   * ```\n   */\n  delete(assistantID: string, options?: RequestOptions): APIPromise<AssistantDeleted> {\n    return this._client.delete(path`/assistants/${assistantID}`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n}\n\nexport type AssistantsPage = CursorPage<Assistant>;\n\n/**\n * Represents an `assistant` that can call the model and use tools.\n */\nexport interface Assistant {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the assistant was created.\n   */\n  created_at: number;\n\n  /**\n   * The description of the assistant. The maximum length is 512 characters.\n   */\n  description: string | null;\n\n  /**\n   * The system instructions that the assistant uses. The maximum length is 256,000\n   * characters.\n   */\n  instructions: string | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * ID of the model to use. You can use the\n   * [List models](https://platform.openai.com/docs/api-reference/models/list) API to\n   * see all of your available models, or see our\n   * [Model overview](https://platform.openai.com/docs/models) for descriptions of\n   * them.\n   */\n  model: string;\n\n  /**\n   * The name of the assistant. The maximum length is 256 characters.\n   */\n  name: string | null;\n\n  /**\n   * The object type, which is always `assistant`.\n   */\n  object: 'assistant';\n\n  /**\n   * A list of tool enabled on the assistant. There can be a maximum of 128 tools per\n   * assistant. Tools can be of types `code_interpreter`, `file_search`, or\n   * `function`.\n   */\n  tools: Array<AssistantTool>;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  tool_resources?: Assistant.ToolResources | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n}\n\nexport namespace Assistant {\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter`` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The ID of the\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this assistant. There can be a maximum of 1 vector store attached to\n       * the assistant.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n}\n\nexport interface AssistantDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'assistant.deleted';\n}\n\n/**\n * Represents an event emitted when streaming a Run.\n *\n * Each event in a server-sent events stream has an `event` and `data` property:\n *\n * ```\n * event: thread.created\n * data: {\"id\": \"thread_123\", \"object\": \"thread\", ...}\n * ```\n *\n * We emit events whenever a new object is created, transitions to a new state, or\n * is being streamed in parts (deltas). For example, we emit `thread.run.created`\n * when a new run is created, `thread.run.completed` when a run completes, and so\n * on. When an Assistant chooses to create a message during a run, we emit a\n * `thread.message.created event`, a `thread.message.in_progress` event, many\n * `thread.message.delta` events, and finally a `thread.message.completed` event.\n *\n * We may add additional events over time, so we recommend handling unknown events\n * gracefully in your code. See the\n * [Assistants API quickstart](https://platform.openai.com/docs/assistants/overview)\n * to learn how to integrate the Assistants API with streaming.\n */\nexport type AssistantStreamEvent =\n  | AssistantStreamEvent.ThreadCreated\n  | AssistantStreamEvent.ThreadRunCreated\n  | AssistantStreamEvent.ThreadRunQueued\n  | AssistantStreamEvent.ThreadRunInProgress\n  | AssistantStreamEvent.ThreadRunRequiresAction\n  | AssistantStreamEvent.ThreadRunCompleted\n  | AssistantStreamEvent.ThreadRunIncomplete\n  | AssistantStreamEvent.ThreadRunFailed\n  | AssistantStreamEvent.ThreadRunCancelling\n  | AssistantStreamEvent.ThreadRunCancelled\n  | AssistantStreamEvent.ThreadRunExpired\n  | AssistantStreamEvent.ThreadRunStepCreated\n  | AssistantStreamEvent.ThreadRunStepInProgress\n  | AssistantStreamEvent.ThreadRunStepDelta\n  | AssistantStreamEvent.ThreadRunStepCompleted\n  | AssistantStreamEvent.ThreadRunStepFailed\n  | AssistantStreamEvent.ThreadRunStepCancelled\n  | AssistantStreamEvent.ThreadRunStepExpired\n  | AssistantStreamEvent.ThreadMessageCreated\n  | AssistantStreamEvent.ThreadMessageInProgress\n  | AssistantStreamEvent.ThreadMessageDelta\n  | AssistantStreamEvent.ThreadMessageCompleted\n  | AssistantStreamEvent.ThreadMessageIncomplete\n  | AssistantStreamEvent.ErrorEvent;\n\nexport namespace AssistantStreamEvent {\n  /**\n   * Occurs when a new\n   * [thread](https://platform.openai.com/docs/api-reference/threads/object) is\n   * created.\n   */\n  export interface ThreadCreated {\n    /**\n     * Represents a thread that contains\n     * [messages](https://platform.openai.com/docs/api-reference/messages).\n     */\n    data: ThreadsAPI.Thread;\n\n    event: 'thread.created';\n\n    /**\n     * Whether to enable input audio transcription.\n     */\n    enabled?: boolean;\n  }\n\n  /**\n   * Occurs when a new\n   * [run](https://platform.openai.com/docs/api-reference/runs/object) is created.\n   */\n  export interface ThreadRunCreated {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.created';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to a `queued` status.\n   */\n  export interface ThreadRunQueued {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.queued';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to an `in_progress` status.\n   */\n  export interface ThreadRunInProgress {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.in_progress';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to a `requires_action` status.\n   */\n  export interface ThreadRunRequiresAction {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.requires_action';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * is completed.\n   */\n  export interface ThreadRunCompleted {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.completed';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * ends with status `incomplete`.\n   */\n  export interface ThreadRunIncomplete {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.incomplete';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * fails.\n   */\n  export interface ThreadRunFailed {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.failed';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to a `cancelling` status.\n   */\n  export interface ThreadRunCancelling {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.cancelling';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * is cancelled.\n   */\n  export interface ThreadRunCancelled {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.cancelled';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * expires.\n   */\n  export interface ThreadRunExpired {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.expired';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * is created.\n   */\n  export interface ThreadRunStepCreated {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.created';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * moves to an `in_progress` state.\n   */\n  export interface ThreadRunStepInProgress {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.in_progress';\n  }\n\n  /**\n   * Occurs when parts of a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * are being streamed.\n   */\n  export interface ThreadRunStepDelta {\n    /**\n     * Represents a run step delta i.e. any changed fields on a run step during\n     * streaming.\n     */\n    data: StepsAPI.RunStepDeltaEvent;\n\n    event: 'thread.run.step.delta';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * is completed.\n   */\n  export interface ThreadRunStepCompleted {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.completed';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * fails.\n   */\n  export interface ThreadRunStepFailed {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.failed';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * is cancelled.\n   */\n  export interface ThreadRunStepCancelled {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.cancelled';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * expires.\n   */\n  export interface ThreadRunStepExpired {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.expired';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) is\n   * created.\n   */\n  export interface ThreadMessageCreated {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.created';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) moves\n   * to an `in_progress` state.\n   */\n  export interface ThreadMessageInProgress {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.in_progress';\n  }\n\n  /**\n   * Occurs when parts of a\n   * [Message](https://platform.openai.com/docs/api-reference/messages/object) are\n   * being streamed.\n   */\n  export interface ThreadMessageDelta {\n    /**\n     * Represents a message delta i.e. any changed fields on a message during\n     * streaming.\n     */\n    data: MessagesAPI.MessageDeltaEvent;\n\n    event: 'thread.message.delta';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) is\n   * completed.\n   */\n  export interface ThreadMessageCompleted {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.completed';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) ends\n   * before it is completed.\n   */\n  export interface ThreadMessageIncomplete {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.incomplete';\n  }\n\n  /**\n   * Occurs when an\n   * [error](https://platform.openai.com/docs/guides/error-codes#api-errors) occurs.\n   * This can happen due to an internal server error or a timeout.\n   */\n  export interface ErrorEvent {\n    data: Shared.ErrorObject;\n\n    event: 'error';\n  }\n}\n\nexport type AssistantTool = CodeInterpreterTool | FileSearchTool | FunctionTool;\n\nexport interface CodeInterpreterTool {\n  /**\n   * The type of tool being defined: `code_interpreter`\n   */\n  type: 'code_interpreter';\n}\n\nexport interface FileSearchTool {\n  /**\n   * The type of tool being defined: `file_search`\n   */\n  type: 'file_search';\n\n  /**\n   * Overrides for the file search tool.\n   */\n  file_search?: FileSearchTool.FileSearch;\n}\n\nexport namespace FileSearchTool {\n  /**\n   * Overrides for the file search tool.\n   */\n  export interface FileSearch {\n    /**\n     * The maximum number of results the file search tool should output. The default is\n     * 20 for `gpt-4*` models and 5 for `gpt-3.5-turbo`. This number should be between\n     * 1 and 50 inclusive.\n     *\n     * Note that the file search tool may output fewer than `max_num_results` results.\n     * See the\n     * [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings)\n     * for more information.\n     */\n    max_num_results?: number;\n\n    /**\n     * The ranking options for the file search. If not specified, the file search tool\n     * will use the `auto` ranker and a score_threshold of 0.\n     *\n     * See the\n     * [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings)\n     * for more information.\n     */\n    ranking_options?: FileSearch.RankingOptions;\n  }\n\n  export namespace FileSearch {\n    /**\n     * The ranking options for the file search. If not specified, the file search tool\n     * will use the `auto` ranker and a score_threshold of 0.\n     *\n     * See the\n     * [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings)\n     * for more information.\n     */\n    export interface RankingOptions {\n      /**\n       * The score threshold for the file search. All values must be a floating point\n       * number between 0 and 1.\n       */\n      score_threshold: number;\n\n      /**\n       * The ranker to use for the file search. If not specified will use the `auto`\n       * ranker.\n       */\n      ranker?: 'auto' | 'default_2024_08_21';\n    }\n  }\n}\n\nexport interface FunctionTool {\n  function: Shared.FunctionDefinition;\n\n  /**\n   * The type of tool being defined: `function`\n   */\n  type: 'function';\n}\n\n/**\n * Occurs when a\n * [message](https://platform.openai.com/docs/api-reference/messages/object) is\n * created.\n */\nexport type MessageStreamEvent =\n  | MessageStreamEvent.ThreadMessageCreated\n  | MessageStreamEvent.ThreadMessageInProgress\n  | MessageStreamEvent.ThreadMessageDelta\n  | MessageStreamEvent.ThreadMessageCompleted\n  | MessageStreamEvent.ThreadMessageIncomplete;\n\nexport namespace MessageStreamEvent {\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) is\n   * created.\n   */\n  export interface ThreadMessageCreated {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.created';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) moves\n   * to an `in_progress` state.\n   */\n  export interface ThreadMessageInProgress {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.in_progress';\n  }\n\n  /**\n   * Occurs when parts of a\n   * [Message](https://platform.openai.com/docs/api-reference/messages/object) are\n   * being streamed.\n   */\n  export interface ThreadMessageDelta {\n    /**\n     * Represents a message delta i.e. any changed fields on a message during\n     * streaming.\n     */\n    data: MessagesAPI.MessageDeltaEvent;\n\n    event: 'thread.message.delta';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) is\n   * completed.\n   */\n  export interface ThreadMessageCompleted {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.completed';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) ends\n   * before it is completed.\n   */\n  export interface ThreadMessageIncomplete {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.incomplete';\n  }\n}\n\n/**\n * Occurs when a\n * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n * is created.\n */\nexport type RunStepStreamEvent =\n  | RunStepStreamEvent.ThreadRunStepCreated\n  | RunStepStreamEvent.ThreadRunStepInProgress\n  | RunStepStreamEvent.ThreadRunStepDelta\n  | RunStepStreamEvent.ThreadRunStepCompleted\n  | RunStepStreamEvent.ThreadRunStepFailed\n  | RunStepStreamEvent.ThreadRunStepCancelled\n  | RunStepStreamEvent.ThreadRunStepExpired;\n\nexport namespace RunStepStreamEvent {\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * is created.\n   */\n  export interface ThreadRunStepCreated {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.created';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * moves to an `in_progress` state.\n   */\n  export interface ThreadRunStepInProgress {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.in_progress';\n  }\n\n  /**\n   * Occurs when parts of a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * are being streamed.\n   */\n  export interface ThreadRunStepDelta {\n    /**\n     * Represents a run step delta i.e. any changed fields on a run step during\n     * streaming.\n     */\n    data: StepsAPI.RunStepDeltaEvent;\n\n    event: 'thread.run.step.delta';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * is completed.\n   */\n  export interface ThreadRunStepCompleted {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.completed';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * fails.\n   */\n  export interface ThreadRunStepFailed {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.failed';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * is cancelled.\n   */\n  export interface ThreadRunStepCancelled {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.cancelled';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * expires.\n   */\n  export interface ThreadRunStepExpired {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.expired';\n  }\n}\n\n/**\n * Occurs when a new\n * [run](https://platform.openai.com/docs/api-reference/runs/object) is created.\n */\nexport type RunStreamEvent =\n  | RunStreamEvent.ThreadRunCreated\n  | RunStreamEvent.ThreadRunQueued\n  | RunStreamEvent.ThreadRunInProgress\n  | RunStreamEvent.ThreadRunRequiresAction\n  | RunStreamEvent.ThreadRunCompleted\n  | RunStreamEvent.ThreadRunIncomplete\n  | RunStreamEvent.ThreadRunFailed\n  | RunStreamEvent.ThreadRunCancelling\n  | RunStreamEvent.ThreadRunCancelled\n  | RunStreamEvent.ThreadRunExpired;\n\nexport namespace RunStreamEvent {\n  /**\n   * Occurs when a new\n   * [run](https://platform.openai.com/docs/api-reference/runs/object) is created.\n   */\n  export interface ThreadRunCreated {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.created';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to a `queued` status.\n   */\n  export interface ThreadRunQueued {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.queued';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to an `in_progress` status.\n   */\n  export interface ThreadRunInProgress {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.in_progress';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to a `requires_action` status.\n   */\n  export interface ThreadRunRequiresAction {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.requires_action';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * is completed.\n   */\n  export interface ThreadRunCompleted {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.completed';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * ends with status `incomplete`.\n   */\n  export interface ThreadRunIncomplete {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.incomplete';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * fails.\n   */\n  export interface ThreadRunFailed {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.failed';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to a `cancelling` status.\n   */\n  export interface ThreadRunCancelling {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.cancelling';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * is cancelled.\n   */\n  export interface ThreadRunCancelled {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.cancelled';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * expires.\n   */\n  export interface ThreadRunExpired {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.expired';\n  }\n}\n\n/**\n * Occurs when a new\n * [thread](https://platform.openai.com/docs/api-reference/threads/object) is\n * created.\n */\nexport interface ThreadStreamEvent {\n  /**\n   * Represents a thread that contains\n   * [messages](https://platform.openai.com/docs/api-reference/messages).\n   */\n  data: ThreadsAPI.Thread;\n\n  event: 'thread.created';\n\n  /**\n   * Whether to enable input audio transcription.\n   */\n  enabled?: boolean;\n}\n\nexport interface AssistantCreateParams {\n  /**\n   * ID of the model to use. You can use the\n   * [List models](https://platform.openai.com/docs/api-reference/models/list) API to\n   * see all of your available models, or see our\n   * [Model overview](https://platform.openai.com/docs/models) for descriptions of\n   * them.\n   */\n  model: (string & {}) | Shared.ChatModel;\n\n  /**\n   * The description of the assistant. The maximum length is 512 characters.\n   */\n  description?: string | null;\n\n  /**\n   * The system instructions that the assistant uses. The maximum length is 256,000\n   * characters.\n   */\n  instructions?: string | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The name of the assistant. The maximum length is 256 characters.\n   */\n  name?: string | null;\n\n  /**\n   * **o-series models only**\n   *\n   * Constrains effort on reasoning for\n   * [reasoning models](https://platform.openai.com/docs/guides/reasoning). Currently\n   * supported values are `low`, `medium`, and `high`. Reducing reasoning effort can\n   * result in faster responses and fewer tokens used on reasoning in a response.\n   */\n  reasoning_effort?: Shared.ReasoningEffort | null;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  tool_resources?: AssistantCreateParams.ToolResources | null;\n\n  /**\n   * A list of tool enabled on the assistant. There can be a maximum of 128 tools per\n   * assistant. Tools can be of types `code_interpreter`, `file_search`, or\n   * `function`.\n   */\n  tools?: Array<AssistantTool>;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n}\n\nexport namespace AssistantCreateParams {\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this assistant. There can be a maximum of 1 vector store attached to\n       * the assistant.\n       */\n      vector_store_ids?: Array<string>;\n\n      /**\n       * A helper to create a\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * with file_ids and attach it to this assistant. There can be a maximum of 1\n       * vector store attached to the assistant.\n       */\n      vector_stores?: Array<FileSearch.VectorStore>;\n    }\n\n    export namespace FileSearch {\n      export interface VectorStore {\n        /**\n         * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n         * strategy.\n         */\n        chunking_strategy?: VectorStore.Auto | VectorStore.Static;\n\n        /**\n         * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs to\n         * add to the vector store. There can be a maximum of 10000 files in a vector\n         * store.\n         */\n        file_ids?: Array<string>;\n\n        /**\n         * Set of 16 key-value pairs that can be attached to an object. This can be useful\n         * for storing additional information about the object in a structured format, and\n         * querying for objects via API or the dashboard.\n         *\n         * Keys are strings with a maximum length of 64 characters. Values are strings with\n         * a maximum length of 512 characters.\n         */\n        metadata?: Shared.Metadata | null;\n      }\n\n      export namespace VectorStore {\n        /**\n         * The default strategy. This strategy currently uses a `max_chunk_size_tokens` of\n         * `800` and `chunk_overlap_tokens` of `400`.\n         */\n        export interface Auto {\n          /**\n           * Always `auto`.\n           */\n          type: 'auto';\n        }\n\n        export interface Static {\n          static: Static.Static;\n\n          /**\n           * Always `static`.\n           */\n          type: 'static';\n        }\n\n        export namespace Static {\n          export interface Static {\n            /**\n             * The number of tokens that overlap between chunks. The default value is `400`.\n             *\n             * Note that the overlap must not exceed half of `max_chunk_size_tokens`.\n             */\n            chunk_overlap_tokens: number;\n\n            /**\n             * The maximum number of tokens in each chunk. The default value is `800`. The\n             * minimum value is `100` and the maximum value is `4096`.\n             */\n            max_chunk_size_tokens: number;\n          }\n        }\n      }\n    }\n  }\n}\n\nexport interface AssistantUpdateParams {\n  /**\n   * The description of the assistant. The maximum length is 512 characters.\n   */\n  description?: string | null;\n\n  /**\n   * The system instructions that the assistant uses. The maximum length is 256,000\n   * characters.\n   */\n  instructions?: string | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * ID of the model to use. You can use the\n   * [List models](https://platform.openai.com/docs/api-reference/models/list) API to\n   * see all of your available models, or see our\n   * [Model overview](https://platform.openai.com/docs/models) for descriptions of\n   * them.\n   */\n  model?:\n    | (string & {})\n    | 'gpt-4.1'\n    | 'gpt-4.1-mini'\n    | 'gpt-4.1-nano'\n    | 'gpt-4.1-2025-04-14'\n    | 'gpt-4.1-mini-2025-04-14'\n    | 'gpt-4.1-nano-2025-04-14'\n    | 'o3-mini'\n    | 'o3-mini-2025-01-31'\n    | 'o1'\n    | 'o1-2024-12-17'\n    | 'gpt-4o'\n    | 'gpt-4o-2024-11-20'\n    | 'gpt-4o-2024-08-06'\n    | 'gpt-4o-2024-05-13'\n    | 'gpt-4o-mini'\n    | 'gpt-4o-mini-2024-07-18'\n    | 'gpt-4.5-preview'\n    | 'gpt-4.5-preview-2025-02-27'\n    | 'gpt-4-turbo'\n    | 'gpt-4-turbo-2024-04-09'\n    | 'gpt-4-0125-preview'\n    | 'gpt-4-turbo-preview'\n    | 'gpt-4-1106-preview'\n    | 'gpt-4-vision-preview'\n    | 'gpt-4'\n    | 'gpt-4-0314'\n    | 'gpt-4-0613'\n    | 'gpt-4-32k'\n    | 'gpt-4-32k-0314'\n    | 'gpt-4-32k-0613'\n    | 'gpt-3.5-turbo'\n    | 'gpt-3.5-turbo-16k'\n    | 'gpt-3.5-turbo-0613'\n    | 'gpt-3.5-turbo-1106'\n    | 'gpt-3.5-turbo-0125'\n    | 'gpt-3.5-turbo-16k-0613';\n\n  /**\n   * The name of the assistant. The maximum length is 256 characters.\n   */\n  name?: string | null;\n\n  /**\n   * **o-series models only**\n   *\n   * Constrains effort on reasoning for\n   * [reasoning models](https://platform.openai.com/docs/guides/reasoning). Currently\n   * supported values are `low`, `medium`, and `high`. Reducing reasoning effort can\n   * result in faster responses and fewer tokens used on reasoning in a response.\n   */\n  reasoning_effort?: Shared.ReasoningEffort | null;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  tool_resources?: AssistantUpdateParams.ToolResources | null;\n\n  /**\n   * A list of tool enabled on the assistant. There can be a maximum of 128 tools per\n   * assistant. Tools can be of types `code_interpreter`, `file_search`, or\n   * `function`.\n   */\n  tools?: Array<AssistantTool>;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n}\n\nexport namespace AssistantUpdateParams {\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * Overrides the list of\n       * [file](https://platform.openai.com/docs/api-reference/files) IDs made available\n       * to the `code_interpreter` tool. There can be a maximum of 20 files associated\n       * with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * Overrides the\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this assistant. There can be a maximum of 1 vector store attached to\n       * the assistant.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n}\n\nexport interface AssistantListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\n   * to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport declare namespace Assistants {\n  export {\n    type Assistant as Assistant,\n    type AssistantDeleted as AssistantDeleted,\n    type AssistantStreamEvent as AssistantStreamEvent,\n    type AssistantTool as AssistantTool,\n    type CodeInterpreterTool as CodeInterpreterTool,\n    type FileSearchTool as FileSearchTool,\n    type FunctionTool as FunctionTool,\n    type MessageStreamEvent as MessageStreamEvent,\n    type RunStepStreamEvent as RunStepStreamEvent,\n    type RunStreamEvent as RunStreamEvent,\n    type ThreadStreamEvent as ThreadStreamEvent,\n    type AssistantsPage as AssistantsPage,\n    type AssistantCreateParams as AssistantCreateParams,\n    type AssistantUpdateParams as AssistantUpdateParams,\n    type AssistantListParams as AssistantListParams,\n  };\n\n  export { AssistantStream };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport { APIPromise } from '../../../core/api-promise';\nimport { buildHeaders } from '../../../internal/headers';\nimport { RequestOptions } from '../../../internal/request-options';\n\nexport class Sessions extends APIResource {\n  /**\n   * Create an ephemeral API token for use in client-side applications with the\n   * Realtime API. Can be configured with the same session parameters as the\n   * `session.update` client event.\n   *\n   * It responds with a session object, plus a `client_secret` key which contains a\n   * usable ephemeral API token that can be used to authenticate browser clients for\n   * the Realtime API.\n   *\n   * @example\n   * ```ts\n   * const session =\n   *   await client.beta.realtime.sessions.create();\n   * ```\n   */\n  create(body: SessionCreateParams, options?: RequestOptions): APIPromise<SessionCreateResponse> {\n    return this._client.post('/realtime/sessions', {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n}\n\n/**\n * Realtime session object configuration.\n */\nexport interface Session {\n  /**\n   * Unique identifier for the session that looks like `sess_1234567890abcdef`.\n   */\n  id?: string;\n\n  /**\n   * The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For\n   * `pcm16`, input audio must be 16-bit PCM at a 24kHz sample rate, single channel\n   * (mono), and little-endian byte order.\n   */\n  input_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n  /**\n   * Configuration for input audio noise reduction. This can be set to `null` to turn\n   * off. Noise reduction filters audio added to the input audio buffer before it is\n   * sent to VAD and the model. Filtering the audio can improve VAD and turn\n   * detection accuracy (reducing false positives) and model performance by improving\n   * perception of the input audio.\n   */\n  input_audio_noise_reduction?: Session.InputAudioNoiseReduction;\n\n  /**\n   * Configuration for input audio transcription, defaults to off and can be set to\n   * `null` to turn off once on. Input audio transcription is not native to the\n   * model, since the model consumes audio directly. Transcription runs\n   * asynchronously through\n   * [the /audio/transcriptions endpoint](https://platform.openai.com/docs/api-reference/audio/createTranscription)\n   * and should be treated as guidance of input audio content rather than precisely\n   * what the model heard. The client can optionally set the language and prompt for\n   * transcription, these offer additional guidance to the transcription service.\n   */\n  input_audio_transcription?: Session.InputAudioTranscription;\n\n  /**\n   * The default system instructions (i.e. system message) prepended to model calls.\n   * This field allows the client to guide the model on desired responses. The model\n   * can be instructed on response content and format, (e.g. \"be extremely succinct\",\n   * \"act friendly\", \"here are examples of good responses\") and on audio behavior\n   * (e.g. \"talk quickly\", \"inject emotion into your voice\", \"laugh frequently\"). The\n   * instructions are not guaranteed to be followed by the model, but they provide\n   * guidance to the model on the desired behavior.\n   *\n   * Note that the server sets default instructions which will be used if this field\n   * is not set and are visible in the `session.created` event at the start of the\n   * session.\n   */\n  instructions?: string;\n\n  /**\n   * Maximum number of output tokens for a single assistant response, inclusive of\n   * tool calls. Provide an integer between 1 and 4096 to limit output tokens, or\n   * `inf` for the maximum available tokens for a given model. Defaults to `inf`.\n   */\n  max_response_output_tokens?: number | 'inf';\n\n  /**\n   * The set of modalities the model can respond with. To disable audio, set this to\n   * [\"text\"].\n   */\n  modalities?: Array<'text' | 'audio'>;\n\n  /**\n   * The Realtime model used for this session.\n   */\n  model?:\n    | 'gpt-4o-realtime-preview'\n    | 'gpt-4o-realtime-preview-2024-10-01'\n    | 'gpt-4o-realtime-preview-2024-12-17'\n    | 'gpt-4o-realtime-preview-2025-06-03'\n    | 'gpt-4o-mini-realtime-preview'\n    | 'gpt-4o-mini-realtime-preview-2024-12-17';\n\n  /**\n   * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n   * For `pcm16`, output audio is sampled at a rate of 24kHz.\n   */\n  output_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n  /**\n   * The speed of the model's spoken response. 1.0 is the default speed. 0.25 is the\n   * minimum speed. 1.5 is the maximum speed. This value can only be changed in\n   * between model turns, not while a response is in progress.\n   */\n  speed?: number;\n\n  /**\n   * Sampling temperature for the model, limited to [0.6, 1.2]. For audio models a\n   * temperature of 0.8 is highly recommended for best performance.\n   */\n  temperature?: number;\n\n  /**\n   * How the model chooses tools. Options are `auto`, `none`, `required`, or specify\n   * a function.\n   */\n  tool_choice?: string;\n\n  /**\n   * Tools (functions) available to the model.\n   */\n  tools?: Array<Session.Tool>;\n\n  /**\n   * Configuration options for tracing. Set to null to disable tracing. Once tracing\n   * is enabled for a session, the configuration cannot be modified.\n   *\n   * `auto` will create a trace for the session with default values for the workflow\n   * name, group id, and metadata.\n   */\n  tracing?: 'auto' | Session.TracingConfiguration;\n\n  /**\n   * Configuration for turn detection, ether Server VAD or Semantic VAD. This can be\n   * set to `null` to turn off, in which case the client must manually trigger model\n   * response. Server VAD means that the model will detect the start and end of\n   * speech based on audio volume and respond at the end of user speech. Semantic VAD\n   * is more advanced and uses a turn detection model (in conjuction with VAD) to\n   * semantically estimate whether the user has finished speaking, then dynamically\n   * sets a timeout based on this probability. For example, if user audio trails off\n   * with \"uhhm\", the model will score a low probability of turn end and wait longer\n   * for the user to continue speaking. This can be useful for more natural\n   * conversations, but may have a higher latency.\n   */\n  turn_detection?: Session.TurnDetection;\n\n  /**\n   * The voice the model uses to respond. Voice cannot be changed during the session\n   * once the model has responded with audio at least once. Current voice options are\n   * `alloy`, `ash`, `ballad`, `coral`, `echo`, `fable`, `onyx`, `nova`, `sage`,\n   * `shimmer`, and `verse`.\n   */\n  voice?:\n    | (string & {})\n    | 'alloy'\n    | 'ash'\n    | 'ballad'\n    | 'coral'\n    | 'echo'\n    | 'fable'\n    | 'onyx'\n    | 'nova'\n    | 'sage'\n    | 'shimmer'\n    | 'verse';\n}\n\nexport namespace Session {\n  /**\n   * Configuration for input audio noise reduction. This can be set to `null` to turn\n   * off. Noise reduction filters audio added to the input audio buffer before it is\n   * sent to VAD and the model. Filtering the audio can improve VAD and turn\n   * detection accuracy (reducing false positives) and model performance by improving\n   * perception of the input audio.\n   */\n  export interface InputAudioNoiseReduction {\n    /**\n     * Type of noise reduction. `near_field` is for close-talking microphones such as\n     * headphones, `far_field` is for far-field microphones such as laptop or\n     * conference room microphones.\n     */\n    type?: 'near_field' | 'far_field';\n  }\n\n  /**\n   * Configuration for input audio transcription, defaults to off and can be set to\n   * `null` to turn off once on. Input audio transcription is not native to the\n   * model, since the model consumes audio directly. Transcription runs\n   * asynchronously through\n   * [the /audio/transcriptions endpoint](https://platform.openai.com/docs/api-reference/audio/createTranscription)\n   * and should be treated as guidance of input audio content rather than precisely\n   * what the model heard. The client can optionally set the language and prompt for\n   * transcription, these offer additional guidance to the transcription service.\n   */\n  export interface InputAudioTranscription {\n    /**\n     * The language of the input audio. Supplying the input language in\n     * [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. `en`)\n     * format will improve accuracy and latency.\n     */\n    language?: string;\n\n    /**\n     * The model to use for transcription, current options are `gpt-4o-transcribe`,\n     * `gpt-4o-mini-transcribe`, and `whisper-1`.\n     */\n    model?: string;\n\n    /**\n     * An optional text to guide the model's style or continue a previous audio\n     * segment. For `whisper-1`, the\n     * [prompt is a list of keywords](https://platform.openai.com/docs/guides/speech-to-text#prompting).\n     * For `gpt-4o-transcribe` models, the prompt is a free text string, for example\n     * \"expect words related to technology\".\n     */\n    prompt?: string;\n  }\n\n  export interface Tool {\n    /**\n     * The description of the function, including guidance on when and how to call it,\n     * and guidance about what to tell the user when calling (if anything).\n     */\n    description?: string;\n\n    /**\n     * The name of the function.\n     */\n    name?: string;\n\n    /**\n     * Parameters of the function in JSON Schema.\n     */\n    parameters?: unknown;\n\n    /**\n     * The type of the tool, i.e. `function`.\n     */\n    type?: 'function';\n  }\n\n  /**\n   * Granular configuration for tracing.\n   */\n  export interface TracingConfiguration {\n    /**\n     * The group id to attach to this trace to enable filtering and grouping in the\n     * traces dashboard.\n     */\n    group_id?: string;\n\n    /**\n     * The arbitrary metadata to attach to this trace to enable filtering in the traces\n     * dashboard.\n     */\n    metadata?: unknown;\n\n    /**\n     * The name of the workflow to attach to this trace. This is used to name the trace\n     * in the traces dashboard.\n     */\n    workflow_name?: string;\n  }\n\n  /**\n   * Configuration for turn detection, ether Server VAD or Semantic VAD. This can be\n   * set to `null` to turn off, in which case the client must manually trigger model\n   * response. Server VAD means that the model will detect the start and end of\n   * speech based on audio volume and respond at the end of user speech. Semantic VAD\n   * is more advanced and uses a turn detection model (in conjuction with VAD) to\n   * semantically estimate whether the user has finished speaking, then dynamically\n   * sets a timeout based on this probability. For example, if user audio trails off\n   * with \"uhhm\", the model will score a low probability of turn end and wait longer\n   * for the user to continue speaking. This can be useful for more natural\n   * conversations, but may have a higher latency.\n   */\n  export interface TurnDetection {\n    /**\n     * Whether or not to automatically generate a response when a VAD stop event\n     * occurs.\n     */\n    create_response?: boolean;\n\n    /**\n     * Used only for `semantic_vad` mode. The eagerness of the model to respond. `low`\n     * will wait longer for the user to continue speaking, `high` will respond more\n     * quickly. `auto` is the default and is equivalent to `medium`.\n     */\n    eagerness?: 'low' | 'medium' | 'high' | 'auto';\n\n    /**\n     * Whether or not to automatically interrupt any ongoing response with output to\n     * the default conversation (i.e. `conversation` of `auto`) when a VAD start event\n     * occurs.\n     */\n    interrupt_response?: boolean;\n\n    /**\n     * Used only for `server_vad` mode. Amount of audio to include before the VAD\n     * detected speech (in milliseconds). Defaults to 300ms.\n     */\n    prefix_padding_ms?: number;\n\n    /**\n     * Used only for `server_vad` mode. Duration of silence to detect speech stop (in\n     * milliseconds). Defaults to 500ms. With shorter values the model will respond\n     * more quickly, but may jump in on short pauses from the user.\n     */\n    silence_duration_ms?: number;\n\n    /**\n     * Used only for `server_vad` mode. Activation threshold for VAD (0.0 to 1.0), this\n     * defaults to 0.5. A higher threshold will require louder audio to activate the\n     * model, and thus might perform better in noisy environments.\n     */\n    threshold?: number;\n\n    /**\n     * Type of turn detection.\n     */\n    type?: 'server_vad' | 'semantic_vad';\n  }\n}\n\n/**\n * A new Realtime session configuration, with an ephermeral key. Default TTL for\n * keys is one minute.\n */\nexport interface SessionCreateResponse {\n  /**\n   * Ephemeral key returned by the API.\n   */\n  client_secret: SessionCreateResponse.ClientSecret;\n\n  /**\n   * The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n   */\n  input_audio_format?: string;\n\n  /**\n   * Configuration for input audio transcription, defaults to off and can be set to\n   * `null` to turn off once on. Input audio transcription is not native to the\n   * model, since the model consumes audio directly. Transcription runs\n   * asynchronously through Whisper and should be treated as rough guidance rather\n   * than the representation understood by the model.\n   */\n  input_audio_transcription?: SessionCreateResponse.InputAudioTranscription;\n\n  /**\n   * The default system instructions (i.e. system message) prepended to model calls.\n   * This field allows the client to guide the model on desired responses. The model\n   * can be instructed on response content and format, (e.g. \"be extremely succinct\",\n   * \"act friendly\", \"here are examples of good responses\") and on audio behavior\n   * (e.g. \"talk quickly\", \"inject emotion into your voice\", \"laugh frequently\"). The\n   * instructions are not guaranteed to be followed by the model, but they provide\n   * guidance to the model on the desired behavior.\n   *\n   * Note that the server sets default instructions which will be used if this field\n   * is not set and are visible in the `session.created` event at the start of the\n   * session.\n   */\n  instructions?: string;\n\n  /**\n   * Maximum number of output tokens for a single assistant response, inclusive of\n   * tool calls. Provide an integer between 1 and 4096 to limit output tokens, or\n   * `inf` for the maximum available tokens for a given model. Defaults to `inf`.\n   */\n  max_response_output_tokens?: number | 'inf';\n\n  /**\n   * The set of modalities the model can respond with. To disable audio, set this to\n   * [\"text\"].\n   */\n  modalities?: Array<'text' | 'audio'>;\n\n  /**\n   * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n   */\n  output_audio_format?: string;\n\n  /**\n   * The speed of the model's spoken response. 1.0 is the default speed. 0.25 is the\n   * minimum speed. 1.5 is the maximum speed. This value can only be changed in\n   * between model turns, not while a response is in progress.\n   */\n  speed?: number;\n\n  /**\n   * Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8.\n   */\n  temperature?: number;\n\n  /**\n   * How the model chooses tools. Options are `auto`, `none`, `required`, or specify\n   * a function.\n   */\n  tool_choice?: string;\n\n  /**\n   * Tools (functions) available to the model.\n   */\n  tools?: Array<SessionCreateResponse.Tool>;\n\n  /**\n   * Configuration options for tracing. Set to null to disable tracing. Once tracing\n   * is enabled for a session, the configuration cannot be modified.\n   *\n   * `auto` will create a trace for the session with default values for the workflow\n   * name, group id, and metadata.\n   */\n  tracing?: 'auto' | SessionCreateResponse.TracingConfiguration;\n\n  /**\n   * Configuration for turn detection. Can be set to `null` to turn off. Server VAD\n   * means that the model will detect the start and end of speech based on audio\n   * volume and respond at the end of user speech.\n   */\n  turn_detection?: SessionCreateResponse.TurnDetection;\n\n  /**\n   * The voice the model uses to respond. Voice cannot be changed during the session\n   * once the model has responded with audio at least once. Current voice options are\n   * `alloy`, `ash`, `ballad`, `coral`, `echo` `sage`, `shimmer` and `verse`.\n   */\n  voice?:\n    | (string & {})\n    | 'alloy'\n    | 'ash'\n    | 'ballad'\n    | 'coral'\n    | 'echo'\n    | 'fable'\n    | 'onyx'\n    | 'nova'\n    | 'sage'\n    | 'shimmer'\n    | 'verse';\n}\n\nexport namespace SessionCreateResponse {\n  /**\n   * Ephemeral key returned by the API.\n   */\n  export interface ClientSecret {\n    /**\n     * Timestamp for when the token expires. Currently, all tokens expire after one\n     * minute.\n     */\n    expires_at: number;\n\n    /**\n     * Ephemeral key usable in client environments to authenticate connections to the\n     * Realtime API. Use this in client-side environments rather than a standard API\n     * token, which should only be used server-side.\n     */\n    value: string;\n  }\n\n  /**\n   * Configuration for input audio transcription, defaults to off and can be set to\n   * `null` to turn off once on. Input audio transcription is not native to the\n   * model, since the model consumes audio directly. Transcription runs\n   * asynchronously through Whisper and should be treated as rough guidance rather\n   * than the representation understood by the model.\n   */\n  export interface InputAudioTranscription {\n    /**\n     * The model to use for transcription, `whisper-1` is the only currently supported\n     * model.\n     */\n    model?: string;\n  }\n\n  export interface Tool {\n    /**\n     * The description of the function, including guidance on when and how to call it,\n     * and guidance about what to tell the user when calling (if anything).\n     */\n    description?: string;\n\n    /**\n     * The name of the function.\n     */\n    name?: string;\n\n    /**\n     * Parameters of the function in JSON Schema.\n     */\n    parameters?: unknown;\n\n    /**\n     * The type of the tool, i.e. `function`.\n     */\n    type?: 'function';\n  }\n\n  /**\n   * Granular configuration for tracing.\n   */\n  export interface TracingConfiguration {\n    /**\n     * The group id to attach to this trace to enable filtering and grouping in the\n     * traces dashboard.\n     */\n    group_id?: string;\n\n    /**\n     * The arbitrary metadata to attach to this trace to enable filtering in the traces\n     * dashboard.\n     */\n    metadata?: unknown;\n\n    /**\n     * The name of the workflow to attach to this trace. This is used to name the trace\n     * in the traces dashboard.\n     */\n    workflow_name?: string;\n  }\n\n  /**\n   * Configuration for turn detection. Can be set to `null` to turn off. Server VAD\n   * means that the model will detect the start and end of speech based on audio\n   * volume and respond at the end of user speech.\n   */\n  export interface TurnDetection {\n    /**\n     * Amount of audio to include before the VAD detected speech (in milliseconds).\n     * Defaults to 300ms.\n     */\n    prefix_padding_ms?: number;\n\n    /**\n     * Duration of silence to detect speech stop (in milliseconds). Defaults to 500ms.\n     * With shorter values the model will respond more quickly, but may jump in on\n     * short pauses from the user.\n     */\n    silence_duration_ms?: number;\n\n    /**\n     * Activation threshold for VAD (0.0 to 1.0), this defaults to 0.5. A higher\n     * threshold will require louder audio to activate the model, and thus might\n     * perform better in noisy environments.\n     */\n    threshold?: number;\n\n    /**\n     * Type of turn detection, only `server_vad` is currently supported.\n     */\n    type?: string;\n  }\n}\n\nexport interface SessionCreateParams {\n  /**\n   * Configuration options for the generated client secret.\n   */\n  client_secret?: SessionCreateParams.ClientSecret;\n\n  /**\n   * The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For\n   * `pcm16`, input audio must be 16-bit PCM at a 24kHz sample rate, single channel\n   * (mono), and little-endian byte order.\n   */\n  input_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n  /**\n   * Configuration for input audio noise reduction. This can be set to `null` to turn\n   * off. Noise reduction filters audio added to the input audio buffer before it is\n   * sent to VAD and the model. Filtering the audio can improve VAD and turn\n   * detection accuracy (reducing false positives) and model performance by improving\n   * perception of the input audio.\n   */\n  input_audio_noise_reduction?: SessionCreateParams.InputAudioNoiseReduction;\n\n  /**\n   * Configuration for input audio transcription, defaults to off and can be set to\n   * `null` to turn off once on. Input audio transcription is not native to the\n   * model, since the model consumes audio directly. Transcription runs\n   * asynchronously through\n   * [the /audio/transcriptions endpoint](https://platform.openai.com/docs/api-reference/audio/createTranscription)\n   * and should be treated as guidance of input audio content rather than precisely\n   * what the model heard. The client can optionally set the language and prompt for\n   * transcription, these offer additional guidance to the transcription service.\n   */\n  input_audio_transcription?: SessionCreateParams.InputAudioTranscription;\n\n  /**\n   * The default system instructions (i.e. system message) prepended to model calls.\n   * This field allows the client to guide the model on desired responses. The model\n   * can be instructed on response content and format, (e.g. \"be extremely succinct\",\n   * \"act friendly\", \"here are examples of good responses\") and on audio behavior\n   * (e.g. \"talk quickly\", \"inject emotion into your voice\", \"laugh frequently\"). The\n   * instructions are not guaranteed to be followed by the model, but they provide\n   * guidance to the model on the desired behavior.\n   *\n   * Note that the server sets default instructions which will be used if this field\n   * is not set and are visible in the `session.created` event at the start of the\n   * session.\n   */\n  instructions?: string;\n\n  /**\n   * Maximum number of output tokens for a single assistant response, inclusive of\n   * tool calls. Provide an integer between 1 and 4096 to limit output tokens, or\n   * `inf` for the maximum available tokens for a given model. Defaults to `inf`.\n   */\n  max_response_output_tokens?: number | 'inf';\n\n  /**\n   * The set of modalities the model can respond with. To disable audio, set this to\n   * [\"text\"].\n   */\n  modalities?: Array<'text' | 'audio'>;\n\n  /**\n   * The Realtime model used for this session.\n   */\n  model?:\n    | 'gpt-4o-realtime-preview'\n    | 'gpt-4o-realtime-preview-2024-10-01'\n    | 'gpt-4o-realtime-preview-2024-12-17'\n    | 'gpt-4o-realtime-preview-2025-06-03'\n    | 'gpt-4o-mini-realtime-preview'\n    | 'gpt-4o-mini-realtime-preview-2024-12-17';\n\n  /**\n   * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n   * For `pcm16`, output audio is sampled at a rate of 24kHz.\n   */\n  output_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n  /**\n   * The speed of the model's spoken response. 1.0 is the default speed. 0.25 is the\n   * minimum speed. 1.5 is the maximum speed. This value can only be changed in\n   * between model turns, not while a response is in progress.\n   */\n  speed?: number;\n\n  /**\n   * Sampling temperature for the model, limited to [0.6, 1.2]. For audio models a\n   * temperature of 0.8 is highly recommended for best performance.\n   */\n  temperature?: number;\n\n  /**\n   * How the model chooses tools. Options are `auto`, `none`, `required`, or specify\n   * a function.\n   */\n  tool_choice?: string;\n\n  /**\n   * Tools (functions) available to the model.\n   */\n  tools?: Array<SessionCreateParams.Tool>;\n\n  /**\n   * Configuration options for tracing. Set to null to disable tracing. Once tracing\n   * is enabled for a session, the configuration cannot be modified.\n   *\n   * `auto` will create a trace for the session with default values for the workflow\n   * name, group id, and metadata.\n   */\n  tracing?: 'auto' | SessionCreateParams.TracingConfiguration;\n\n  /**\n   * Configuration for turn detection, ether Server VAD or Semantic VAD. This can be\n   * set to `null` to turn off, in which case the client must manually trigger model\n   * response. Server VAD means that the model will detect the start and end of\n   * speech based on audio volume and respond at the end of user speech. Semantic VAD\n   * is more advanced and uses a turn detection model (in conjuction with VAD) to\n   * semantically estimate whether the user has finished speaking, then dynamically\n   * sets a timeout based on this probability. For example, if user audio trails off\n   * with \"uhhm\", the model will score a low probability of turn end and wait longer\n   * for the user to continue speaking. This can be useful for more natural\n   * conversations, but may have a higher latency.\n   */\n  turn_detection?: SessionCreateParams.TurnDetection;\n\n  /**\n   * The voice the model uses to respond. Voice cannot be changed during the session\n   * once the model has responded with audio at least once. Current voice options are\n   * `alloy`, `ash`, `ballad`, `coral`, `echo`, `fable`, `onyx`, `nova`, `sage`,\n   * `shimmer`, and `verse`.\n   */\n  voice?:\n    | (string & {})\n    | 'alloy'\n    | 'ash'\n    | 'ballad'\n    | 'coral'\n    | 'echo'\n    | 'fable'\n    | 'onyx'\n    | 'nova'\n    | 'sage'\n    | 'shimmer'\n    | 'verse';\n}\n\nexport namespace SessionCreateParams {\n  /**\n   * Configuration options for the generated client secret.\n   */\n  export interface ClientSecret {\n    /**\n     * Configuration for the ephemeral token expiration.\n     */\n    expires_at?: ClientSecret.ExpiresAt;\n  }\n\n  export namespace ClientSecret {\n    /**\n     * Configuration for the ephemeral token expiration.\n     */\n    export interface ExpiresAt {\n      /**\n       * The anchor point for the ephemeral token expiration. Only `created_at` is\n       * currently supported.\n       */\n      anchor?: 'created_at';\n\n      /**\n       * The number of seconds from the anchor point to the expiration. Select a value\n       * between `10` and `7200`.\n       */\n      seconds?: number;\n    }\n  }\n\n  /**\n   * Configuration for input audio noise reduction. This can be set to `null` to turn\n   * off. Noise reduction filters audio added to the input audio buffer before it is\n   * sent to VAD and the model. Filtering the audio can improve VAD and turn\n   * detection accuracy (reducing false positives) and model performance by improving\n   * perception of the input audio.\n   */\n  export interface InputAudioNoiseReduction {\n    /**\n     * Type of noise reduction. `near_field` is for close-talking microphones such as\n     * headphones, `far_field` is for far-field microphones such as laptop or\n     * conference room microphones.\n     */\n    type?: 'near_field' | 'far_field';\n  }\n\n  /**\n   * Configuration for input audio transcription, defaults to off and can be set to\n   * `null` to turn off once on. Input audio transcription is not native to the\n   * model, since the model consumes audio directly. Transcription runs\n   * asynchronously through\n   * [the /audio/transcriptions endpoint](https://platform.openai.com/docs/api-reference/audio/createTranscription)\n   * and should be treated as guidance of input audio content rather than precisely\n   * what the model heard. The client can optionally set the language and prompt for\n   * transcription, these offer additional guidance to the transcription service.\n   */\n  export interface InputAudioTranscription {\n    /**\n     * The language of the input audio. Supplying the input language in\n     * [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. `en`)\n     * format will improve accuracy and latency.\n     */\n    language?: string;\n\n    /**\n     * The model to use for transcription, current options are `gpt-4o-transcribe`,\n     * `gpt-4o-mini-transcribe`, and `whisper-1`.\n     */\n    model?: string;\n\n    /**\n     * An optional text to guide the model's style or continue a previous audio\n     * segment. For `whisper-1`, the\n     * [prompt is a list of keywords](https://platform.openai.com/docs/guides/speech-to-text#prompting).\n     * For `gpt-4o-transcribe` models, the prompt is a free text string, for example\n     * \"expect words related to technology\".\n     */\n    prompt?: string;\n  }\n\n  export interface Tool {\n    /**\n     * The description of the function, including guidance on when and how to call it,\n     * and guidance about what to tell the user when calling (if anything).\n     */\n    description?: string;\n\n    /**\n     * The name of the function.\n     */\n    name?: string;\n\n    /**\n     * Parameters of the function in JSON Schema.\n     */\n    parameters?: unknown;\n\n    /**\n     * The type of the tool, i.e. `function`.\n     */\n    type?: 'function';\n  }\n\n  /**\n   * Granular configuration for tracing.\n   */\n  export interface TracingConfiguration {\n    /**\n     * The group id to attach to this trace to enable filtering and grouping in the\n     * traces dashboard.\n     */\n    group_id?: string;\n\n    /**\n     * The arbitrary metadata to attach to this trace to enable filtering in the traces\n     * dashboard.\n     */\n    metadata?: unknown;\n\n    /**\n     * The name of the workflow to attach to this trace. This is used to name the trace\n     * in the traces dashboard.\n     */\n    workflow_name?: string;\n  }\n\n  /**\n   * Configuration for turn detection, ether Server VAD or Semantic VAD. This can be\n   * set to `null` to turn off, in which case the client must manually trigger model\n   * response. Server VAD means that the model will detect the start and end of\n   * speech based on audio volume and respond at the end of user speech. Semantic VAD\n   * is more advanced and uses a turn detection model (in conjuction with VAD) to\n   * semantically estimate whether the user has finished speaking, then dynamically\n   * sets a timeout based on this probability. For example, if user audio trails off\n   * with \"uhhm\", the model will score a low probability of turn end and wait longer\n   * for the user to continue speaking. This can be useful for more natural\n   * conversations, but may have a higher latency.\n   */\n  export interface TurnDetection {\n    /**\n     * Whether or not to automatically generate a response when a VAD stop event\n     * occurs.\n     */\n    create_response?: boolean;\n\n    /**\n     * Used only for `semantic_vad` mode. The eagerness of the model to respond. `low`\n     * will wait longer for the user to continue speaking, `high` will respond more\n     * quickly. `auto` is the default and is equivalent to `medium`.\n     */\n    eagerness?: 'low' | 'medium' | 'high' | 'auto';\n\n    /**\n     * Whether or not to automatically interrupt any ongoing response with output to\n     * the default conversation (i.e. `conversation` of `auto`) when a VAD start event\n     * occurs.\n     */\n    interrupt_response?: boolean;\n\n    /**\n     * Used only for `server_vad` mode. Amount of audio to include before the VAD\n     * detected speech (in milliseconds). Defaults to 300ms.\n     */\n    prefix_padding_ms?: number;\n\n    /**\n     * Used only for `server_vad` mode. Duration of silence to detect speech stop (in\n     * milliseconds). Defaults to 500ms. With shorter values the model will respond\n     * more quickly, but may jump in on short pauses from the user.\n     */\n    silence_duration_ms?: number;\n\n    /**\n     * Used only for `server_vad` mode. Activation threshold for VAD (0.0 to 1.0), this\n     * defaults to 0.5. A higher threshold will require louder audio to activate the\n     * model, and thus might perform better in noisy environments.\n     */\n    threshold?: number;\n\n    /**\n     * Type of turn detection.\n     */\n    type?: 'server_vad' | 'semantic_vad';\n  }\n}\n\nexport declare namespace Sessions {\n  export {\n    type Session as Session,\n    type SessionCreateResponse as SessionCreateResponse,\n    type SessionCreateParams as SessionCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport { APIPromise } from '../../../core/api-promise';\nimport { buildHeaders } from '../../../internal/headers';\nimport { RequestOptions } from '../../../internal/request-options';\n\nexport class TranscriptionSessions extends APIResource {\n  /**\n   * Create an ephemeral API token for use in client-side applications with the\n   * Realtime API specifically for realtime transcriptions. Can be configured with\n   * the same session parameters as the `transcription_session.update` client event.\n   *\n   * It responds with a session object, plus a `client_secret` key which contains a\n   * usable ephemeral API token that can be used to authenticate browser clients for\n   * the Realtime API.\n   *\n   * @example\n   * ```ts\n   * const transcriptionSession =\n   *   await client.beta.realtime.transcriptionSessions.create();\n   * ```\n   */\n  create(body: TranscriptionSessionCreateParams, options?: RequestOptions): APIPromise<TranscriptionSession> {\n    return this._client.post('/realtime/transcription_sessions', {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n}\n\n/**\n * A new Realtime transcription session configuration.\n *\n * When a session is created on the server via REST API, the session object also\n * contains an ephemeral key. Default TTL for keys is 10 minutes. This property is\n * not present when a session is updated via the WebSocket API.\n */\nexport interface TranscriptionSession {\n  /**\n   * Ephemeral key returned by the API. Only present when the session is created on\n   * the server via REST API.\n   */\n  client_secret: TranscriptionSession.ClientSecret;\n\n  /**\n   * The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n   */\n  input_audio_format?: string;\n\n  /**\n   * Configuration of the transcription model.\n   */\n  input_audio_transcription?: TranscriptionSession.InputAudioTranscription;\n\n  /**\n   * The set of modalities the model can respond with. To disable audio, set this to\n   * [\"text\"].\n   */\n  modalities?: Array<'text' | 'audio'>;\n\n  /**\n   * Configuration for turn detection. Can be set to `null` to turn off. Server VAD\n   * means that the model will detect the start and end of speech based on audio\n   * volume and respond at the end of user speech.\n   */\n  turn_detection?: TranscriptionSession.TurnDetection;\n}\n\nexport namespace TranscriptionSession {\n  /**\n   * Ephemeral key returned by the API. Only present when the session is created on\n   * the server via REST API.\n   */\n  export interface ClientSecret {\n    /**\n     * Timestamp for when the token expires. Currently, all tokens expire after one\n     * minute.\n     */\n    expires_at: number;\n\n    /**\n     * Ephemeral key usable in client environments to authenticate connections to the\n     * Realtime API. Use this in client-side environments rather than a standard API\n     * token, which should only be used server-side.\n     */\n    value: string;\n  }\n\n  /**\n   * Configuration of the transcription model.\n   */\n  export interface InputAudioTranscription {\n    /**\n     * The language of the input audio. Supplying the input language in\n     * [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. `en`)\n     * format will improve accuracy and latency.\n     */\n    language?: string;\n\n    /**\n     * The model to use for transcription. Can be `gpt-4o-transcribe`,\n     * `gpt-4o-mini-transcribe`, or `whisper-1`.\n     */\n    model?: 'gpt-4o-transcribe' | 'gpt-4o-mini-transcribe' | 'whisper-1';\n\n    /**\n     * An optional text to guide the model's style or continue a previous audio\n     * segment. The\n     * [prompt](https://platform.openai.com/docs/guides/speech-to-text#prompting)\n     * should match the audio language.\n     */\n    prompt?: string;\n  }\n\n  /**\n   * Configuration for turn detection. Can be set to `null` to turn off. Server VAD\n   * means that the model will detect the start and end of speech based on audio\n   * volume and respond at the end of user speech.\n   */\n  export interface TurnDetection {\n    /**\n     * Amount of audio to include before the VAD detected speech (in milliseconds).\n     * Defaults to 300ms.\n     */\n    prefix_padding_ms?: number;\n\n    /**\n     * Duration of silence to detect speech stop (in milliseconds). Defaults to 500ms.\n     * With shorter values the model will respond more quickly, but may jump in on\n     * short pauses from the user.\n     */\n    silence_duration_ms?: number;\n\n    /**\n     * Activation threshold for VAD (0.0 to 1.0), this defaults to 0.5. A higher\n     * threshold will require louder audio to activate the model, and thus might\n     * perform better in noisy environments.\n     */\n    threshold?: number;\n\n    /**\n     * Type of turn detection, only `server_vad` is currently supported.\n     */\n    type?: string;\n  }\n}\n\nexport interface TranscriptionSessionCreateParams {\n  /**\n   * Configuration options for the generated client secret.\n   */\n  client_secret?: TranscriptionSessionCreateParams.ClientSecret;\n\n  /**\n   * The set of items to include in the transcription. Current available items are:\n   *\n   * - `item.input_audio_transcription.logprobs`\n   */\n  include?: Array<string>;\n\n  /**\n   * The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For\n   * `pcm16`, input audio must be 16-bit PCM at a 24kHz sample rate, single channel\n   * (mono), and little-endian byte order.\n   */\n  input_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n  /**\n   * Configuration for input audio noise reduction. This can be set to `null` to turn\n   * off. Noise reduction filters audio added to the input audio buffer before it is\n   * sent to VAD and the model. Filtering the audio can improve VAD and turn\n   * detection accuracy (reducing false positives) and model performance by improving\n   * perception of the input audio.\n   */\n  input_audio_noise_reduction?: TranscriptionSessionCreateParams.InputAudioNoiseReduction;\n\n  /**\n   * Configuration for input audio transcription. The client can optionally set the\n   * language and prompt for transcription, these offer additional guidance to the\n   * transcription service.\n   */\n  input_audio_transcription?: TranscriptionSessionCreateParams.InputAudioTranscription;\n\n  /**\n   * The set of modalities the model can respond with. To disable audio, set this to\n   * [\"text\"].\n   */\n  modalities?: Array<'text' | 'audio'>;\n\n  /**\n   * Configuration for turn detection, ether Server VAD or Semantic VAD. This can be\n   * set to `null` to turn off, in which case the client must manually trigger model\n   * response. Server VAD means that the model will detect the start and end of\n   * speech based on audio volume and respond at the end of user speech. Semantic VAD\n   * is more advanced and uses a turn detection model (in conjuction with VAD) to\n   * semantically estimate whether the user has finished speaking, then dynamically\n   * sets a timeout based on this probability. For example, if user audio trails off\n   * with \"uhhm\", the model will score a low probability of turn end and wait longer\n   * for the user to continue speaking. This can be useful for more natural\n   * conversations, but may have a higher latency.\n   */\n  turn_detection?: TranscriptionSessionCreateParams.TurnDetection;\n}\n\nexport namespace TranscriptionSessionCreateParams {\n  /**\n   * Configuration options for the generated client secret.\n   */\n  export interface ClientSecret {\n    /**\n     * Configuration for the ephemeral token expiration.\n     */\n    expires_at?: ClientSecret.ExpiresAt;\n  }\n\n  export namespace ClientSecret {\n    /**\n     * Configuration for the ephemeral token expiration.\n     */\n    export interface ExpiresAt {\n      /**\n       * The anchor point for the ephemeral token expiration. Only `created_at` is\n       * currently supported.\n       */\n      anchor?: 'created_at';\n\n      /**\n       * The number of seconds from the anchor point to the expiration. Select a value\n       * between `10` and `7200`.\n       */\n      seconds?: number;\n    }\n  }\n\n  /**\n   * Configuration for input audio noise reduction. This can be set to `null` to turn\n   * off. Noise reduction filters audio added to the input audio buffer before it is\n   * sent to VAD and the model. Filtering the audio can improve VAD and turn\n   * detection accuracy (reducing false positives) and model performance by improving\n   * perception of the input audio.\n   */\n  export interface InputAudioNoiseReduction {\n    /**\n     * Type of noise reduction. `near_field` is for close-talking microphones such as\n     * headphones, `far_field` is for far-field microphones such as laptop or\n     * conference room microphones.\n     */\n    type?: 'near_field' | 'far_field';\n  }\n\n  /**\n   * Configuration for input audio transcription. The client can optionally set the\n   * language and prompt for transcription, these offer additional guidance to the\n   * transcription service.\n   */\n  export interface InputAudioTranscription {\n    /**\n     * The language of the input audio. Supplying the input language in\n     * [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. `en`)\n     * format will improve accuracy and latency.\n     */\n    language?: string;\n\n    /**\n     * The model to use for transcription, current options are `gpt-4o-transcribe`,\n     * `gpt-4o-mini-transcribe`, and `whisper-1`.\n     */\n    model?: 'gpt-4o-transcribe' | 'gpt-4o-mini-transcribe' | 'whisper-1';\n\n    /**\n     * An optional text to guide the model's style or continue a previous audio\n     * segment. For `whisper-1`, the\n     * [prompt is a list of keywords](https://platform.openai.com/docs/guides/speech-to-text#prompting).\n     * For `gpt-4o-transcribe` models, the prompt is a free text string, for example\n     * \"expect words related to technology\".\n     */\n    prompt?: string;\n  }\n\n  /**\n   * Configuration for turn detection, ether Server VAD or Semantic VAD. This can be\n   * set to `null` to turn off, in which case the client must manually trigger model\n   * response. Server VAD means that the model will detect the start and end of\n   * speech based on audio volume and respond at the end of user speech. Semantic VAD\n   * is more advanced and uses a turn detection model (in conjuction with VAD) to\n   * semantically estimate whether the user has finished speaking, then dynamically\n   * sets a timeout based on this probability. For example, if user audio trails off\n   * with \"uhhm\", the model will score a low probability of turn end and wait longer\n   * for the user to continue speaking. This can be useful for more natural\n   * conversations, but may have a higher latency.\n   */\n  export interface TurnDetection {\n    /**\n     * Whether or not to automatically generate a response when a VAD stop event\n     * occurs. Not available for transcription sessions.\n     */\n    create_response?: boolean;\n\n    /**\n     * Used only for `semantic_vad` mode. The eagerness of the model to respond. `low`\n     * will wait longer for the user to continue speaking, `high` will respond more\n     * quickly. `auto` is the default and is equivalent to `medium`.\n     */\n    eagerness?: 'low' | 'medium' | 'high' | 'auto';\n\n    /**\n     * Whether or not to automatically interrupt any ongoing response with output to\n     * the default conversation (i.e. `conversation` of `auto`) when a VAD start event\n     * occurs. Not available for transcription sessions.\n     */\n    interrupt_response?: boolean;\n\n    /**\n     * Used only for `server_vad` mode. Amount of audio to include before the VAD\n     * detected speech (in milliseconds). Defaults to 300ms.\n     */\n    prefix_padding_ms?: number;\n\n    /**\n     * Used only for `server_vad` mode. Duration of silence to detect speech stop (in\n     * milliseconds). Defaults to 500ms. With shorter values the model will respond\n     * more quickly, but may jump in on short pauses from the user.\n     */\n    silence_duration_ms?: number;\n\n    /**\n     * Used only for `server_vad` mode. Activation threshold for VAD (0.0 to 1.0), this\n     * defaults to 0.5. A higher threshold will require louder audio to activate the\n     * model, and thus might perform better in noisy environments.\n     */\n    threshold?: number;\n\n    /**\n     * Type of turn detection.\n     */\n    type?: 'server_vad' | 'semantic_vad';\n  }\n}\n\nexport declare namespace TranscriptionSessions {\n  export {\n    type TranscriptionSession as TranscriptionSession,\n    type TranscriptionSessionCreateParams as TranscriptionSessionCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as RealtimeAPI from './realtime';\nimport * as Shared from '../../shared';\nimport * as SessionsAPI from './sessions';\nimport {\n  Session as SessionsAPISession,\n  SessionCreateParams,\n  SessionCreateResponse,\n  Sessions,\n} from './sessions';\nimport * as TranscriptionSessionsAPI from './transcription-sessions';\nimport {\n  TranscriptionSession,\n  TranscriptionSessionCreateParams,\n  TranscriptionSessions,\n} from './transcription-sessions';\n\nexport class Realtime extends APIResource {\n  sessions: SessionsAPI.Sessions = new SessionsAPI.Sessions(this._client);\n  transcriptionSessions: TranscriptionSessionsAPI.TranscriptionSessions =\n    new TranscriptionSessionsAPI.TranscriptionSessions(this._client);\n}\n\n/**\n * Returned when a conversation is created. Emitted right after session creation.\n */\nexport interface ConversationCreatedEvent {\n  /**\n   * The conversation resource.\n   */\n  conversation: ConversationCreatedEvent.Conversation;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The event type, must be `conversation.created`.\n   */\n  type: 'conversation.created';\n}\n\nexport namespace ConversationCreatedEvent {\n  /**\n   * The conversation resource.\n   */\n  export interface Conversation {\n    /**\n     * The unique ID of the conversation.\n     */\n    id?: string;\n\n    /**\n     * The object type, must be `realtime.conversation`.\n     */\n    object?: 'realtime.conversation';\n  }\n}\n\n/**\n * The item to add to the conversation.\n */\nexport interface ConversationItem {\n  /**\n   * The unique ID of the item, this can be generated by the client to help manage\n   * server-side context, but is not required because the server will generate one if\n   * not provided.\n   */\n  id?: string;\n\n  /**\n   * The arguments of the function call (for `function_call` items).\n   */\n  arguments?: string;\n\n  /**\n   * The ID of the function call (for `function_call` and `function_call_output`\n   * items). If passed on a `function_call_output` item, the server will check that a\n   * `function_call` item with the same ID exists in the conversation history.\n   */\n  call_id?: string;\n\n  /**\n   * The content of the message, applicable for `message` items.\n   *\n   * - Message items of role `system` support only `input_text` content\n   * - Message items of role `user` support `input_text` and `input_audio` content\n   * - Message items of role `assistant` support `text` content.\n   */\n  content?: Array<ConversationItemContent>;\n\n  /**\n   * The name of the function being called (for `function_call` items).\n   */\n  name?: string;\n\n  /**\n   * Identifier for the API object being returned - always `realtime.item`.\n   */\n  object?: 'realtime.item';\n\n  /**\n   * The output of the function call (for `function_call_output` items).\n   */\n  output?: string;\n\n  /**\n   * The role of the message sender (`user`, `assistant`, `system`), only applicable\n   * for `message` items.\n   */\n  role?: 'user' | 'assistant' | 'system';\n\n  /**\n   * The status of the item (`completed`, `incomplete`). These have no effect on the\n   * conversation, but are accepted for consistency with the\n   * `conversation.item.created` event.\n   */\n  status?: 'completed' | 'incomplete';\n\n  /**\n   * The type of the item (`message`, `function_call`, `function_call_output`).\n   */\n  type?: 'message' | 'function_call' | 'function_call_output';\n}\n\nexport interface ConversationItemContent {\n  /**\n   * ID of a previous conversation item to reference (for `item_reference` content\n   * types in `response.create` events). These can reference both client and server\n   * created items.\n   */\n  id?: string;\n\n  /**\n   * Base64-encoded audio bytes, used for `input_audio` content type.\n   */\n  audio?: string;\n\n  /**\n   * The text content, used for `input_text` and `text` content types.\n   */\n  text?: string;\n\n  /**\n   * The transcript of the audio, used for `input_audio` content type.\n   */\n  transcript?: string;\n\n  /**\n   * The content type (`input_text`, `input_audio`, `item_reference`, `text`).\n   */\n  type?: 'input_text' | 'input_audio' | 'item_reference' | 'text';\n}\n\n/**\n * Add a new Item to the Conversation's context, including messages, function\n * calls, and function call responses. This event can be used both to populate a\n * \"history\" of the conversation and to add new items mid-stream, but has the\n * current limitation that it cannot populate assistant audio messages.\n *\n * If successful, the server will respond with a `conversation.item.created` event,\n * otherwise an `error` event will be sent.\n */\nexport interface ConversationItemCreateEvent {\n  /**\n   * The item to add to the conversation.\n   */\n  item: ConversationItem;\n\n  /**\n   * The event type, must be `conversation.item.create`.\n   */\n  type: 'conversation.item.create';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n\n  /**\n   * The ID of the preceding item after which the new item will be inserted. If not\n   * set, the new item will be appended to the end of the conversation. If set to\n   * `root`, the new item will be added to the beginning of the conversation. If set\n   * to an existing ID, it allows an item to be inserted mid-conversation. If the ID\n   * cannot be found, an error will be returned and the item will not be added.\n   */\n  previous_item_id?: string;\n}\n\n/**\n * Returned when a conversation item is created. There are several scenarios that\n * produce this event:\n *\n * - The server is generating a Response, which if successful will produce either\n *   one or two Items, which will be of type `message` (role `assistant`) or type\n *   `function_call`.\n * - The input audio buffer has been committed, either by the client or the server\n *   (in `server_vad` mode). The server will take the content of the input audio\n *   buffer and add it to a new user message Item.\n * - The client has sent a `conversation.item.create` event to add a new Item to\n *   the Conversation.\n */\nexport interface ConversationItemCreatedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The item to add to the conversation.\n   */\n  item: ConversationItem;\n\n  /**\n   * The ID of the preceding item in the Conversation context, allows the client to\n   * understand the order of the conversation.\n   */\n  previous_item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.created`.\n   */\n  type: 'conversation.item.created';\n}\n\n/**\n * Send this event when you want to remove any item from the conversation history.\n * The server will respond with a `conversation.item.deleted` event, unless the\n * item does not exist in the conversation history, in which case the server will\n * respond with an error.\n */\nexport interface ConversationItemDeleteEvent {\n  /**\n   * The ID of the item to delete.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.delete`.\n   */\n  type: 'conversation.item.delete';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\n/**\n * Returned when an item in the conversation is deleted by the client with a\n * `conversation.item.delete` event. This event is used to synchronize the server's\n * understanding of the conversation history with the client's view.\n */\nexport interface ConversationItemDeletedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item that was deleted.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.deleted`.\n   */\n  type: 'conversation.item.deleted';\n}\n\n/**\n * This event is the output of audio transcription for user audio written to the\n * user audio buffer. Transcription begins when the input audio buffer is committed\n * by the client or server (in `server_vad` mode). Transcription runs\n * asynchronously with Response creation, so this event may come before or after\n * the Response events.\n *\n * Realtime API models accept audio natively, and thus input transcription is a\n * separate process run on a separate ASR (Automatic Speech Recognition) model,\n * currently always `whisper-1`. Thus the transcript may diverge somewhat from the\n * model's interpretation, and should be treated as a rough guide.\n */\nexport interface ConversationItemInputAudioTranscriptionCompletedEvent {\n  /**\n   * The index of the content part containing the audio.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the user message item containing the audio.\n   */\n  item_id: string;\n\n  /**\n   * The transcribed text.\n   */\n  transcript: string;\n\n  /**\n   * The event type, must be `conversation.item.input_audio_transcription.completed`.\n   */\n  type: 'conversation.item.input_audio_transcription.completed';\n\n  /**\n   * The log probabilities of the transcription.\n   */\n  logprobs?: Array<ConversationItemInputAudioTranscriptionCompletedEvent.Logprob> | null;\n}\n\nexport namespace ConversationItemInputAudioTranscriptionCompletedEvent {\n  /**\n   * A log probability object.\n   */\n  export interface Logprob {\n    /**\n     * The token that was used to generate the log probability.\n     */\n    token: string;\n\n    /**\n     * The bytes that were used to generate the log probability.\n     */\n    bytes: Array<number>;\n\n    /**\n     * The log probability of the token.\n     */\n    logprob: number;\n  }\n}\n\n/**\n * Returned when the text value of an input audio transcription content part is\n * updated.\n */\nexport interface ConversationItemInputAudioTranscriptionDeltaEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.input_audio_transcription.delta`.\n   */\n  type: 'conversation.item.input_audio_transcription.delta';\n\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index?: number;\n\n  /**\n   * The text delta.\n   */\n  delta?: string;\n\n  /**\n   * The log probabilities of the transcription.\n   */\n  logprobs?: Array<ConversationItemInputAudioTranscriptionDeltaEvent.Logprob> | null;\n}\n\nexport namespace ConversationItemInputAudioTranscriptionDeltaEvent {\n  /**\n   * A log probability object.\n   */\n  export interface Logprob {\n    /**\n     * The token that was used to generate the log probability.\n     */\n    token: string;\n\n    /**\n     * The bytes that were used to generate the log probability.\n     */\n    bytes: Array<number>;\n\n    /**\n     * The log probability of the token.\n     */\n    logprob: number;\n  }\n}\n\n/**\n * Returned when input audio transcription is configured, and a transcription\n * request for a user message failed. These events are separate from other `error`\n * events so that the client can identify the related Item.\n */\nexport interface ConversationItemInputAudioTranscriptionFailedEvent {\n  /**\n   * The index of the content part containing the audio.\n   */\n  content_index: number;\n\n  /**\n   * Details of the transcription error.\n   */\n  error: ConversationItemInputAudioTranscriptionFailedEvent.Error;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the user message item.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.input_audio_transcription.failed`.\n   */\n  type: 'conversation.item.input_audio_transcription.failed';\n}\n\nexport namespace ConversationItemInputAudioTranscriptionFailedEvent {\n  /**\n   * Details of the transcription error.\n   */\n  export interface Error {\n    /**\n     * Error code, if any.\n     */\n    code?: string;\n\n    /**\n     * A human-readable error message.\n     */\n    message?: string;\n\n    /**\n     * Parameter related to the error, if any.\n     */\n    param?: string;\n\n    /**\n     * The type of error.\n     */\n    type?: string;\n  }\n}\n\n/**\n * Send this event when you want to retrieve the server's representation of a\n * specific item in the conversation history. This is useful, for example, to\n * inspect user audio after noise cancellation and VAD. The server will respond\n * with a `conversation.item.retrieved` event, unless the item does not exist in\n * the conversation history, in which case the server will respond with an error.\n */\nexport interface ConversationItemRetrieveEvent {\n  /**\n   * The ID of the item to retrieve.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.retrieve`.\n   */\n  type: 'conversation.item.retrieve';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\n/**\n * Send this event to truncate a previous assistant message’s audio. The server\n * will produce audio faster than realtime, so this event is useful when the user\n * interrupts to truncate audio that has already been sent to the client but not\n * yet played. This will synchronize the server's understanding of the audio with\n * the client's playback.\n *\n * Truncating audio will delete the server-side text transcript to ensure there is\n * not text in the context that hasn't been heard by the user.\n *\n * If successful, the server will respond with a `conversation.item.truncated`\n * event.\n */\nexport interface ConversationItemTruncateEvent {\n  /**\n   * Inclusive duration up to which audio is truncated, in milliseconds. If the\n   * audio_end_ms is greater than the actual audio duration, the server will respond\n   * with an error.\n   */\n  audio_end_ms: number;\n\n  /**\n   * The index of the content part to truncate. Set this to 0.\n   */\n  content_index: number;\n\n  /**\n   * The ID of the assistant message item to truncate. Only assistant message items\n   * can be truncated.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.truncate`.\n   */\n  type: 'conversation.item.truncate';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\n/**\n * Returned when an earlier assistant audio message item is truncated by the client\n * with a `conversation.item.truncate` event. This event is used to synchronize the\n * server's understanding of the audio with the client's playback.\n *\n * This action will truncate the audio and remove the server-side text transcript\n * to ensure there is no text in the context that hasn't been heard by the user.\n */\nexport interface ConversationItemTruncatedEvent {\n  /**\n   * The duration up to which the audio was truncated, in milliseconds.\n   */\n  audio_end_ms: number;\n\n  /**\n   * The index of the content part that was truncated.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the assistant message item that was truncated.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.truncated`.\n   */\n  type: 'conversation.item.truncated';\n}\n\n/**\n * The item to add to the conversation.\n */\nexport interface ConversationItemWithReference {\n  /**\n   * For an item of type (`message` | `function_call` | `function_call_output`) this\n   * field allows the client to assign the unique ID of the item. It is not required\n   * because the server will generate one if not provided.\n   *\n   * For an item of type `item_reference`, this field is required and is a reference\n   * to any item that has previously existed in the conversation.\n   */\n  id?: string;\n\n  /**\n   * The arguments of the function call (for `function_call` items).\n   */\n  arguments?: string;\n\n  /**\n   * The ID of the function call (for `function_call` and `function_call_output`\n   * items). If passed on a `function_call_output` item, the server will check that a\n   * `function_call` item with the same ID exists in the conversation history.\n   */\n  call_id?: string;\n\n  /**\n   * The content of the message, applicable for `message` items.\n   *\n   * - Message items of role `system` support only `input_text` content\n   * - Message items of role `user` support `input_text` and `input_audio` content\n   * - Message items of role `assistant` support `text` content.\n   */\n  content?: Array<ConversationItemContent>;\n\n  /**\n   * The name of the function being called (for `function_call` items).\n   */\n  name?: string;\n\n  /**\n   * Identifier for the API object being returned - always `realtime.item`.\n   */\n  object?: 'realtime.item';\n\n  /**\n   * The output of the function call (for `function_call_output` items).\n   */\n  output?: string;\n\n  /**\n   * The role of the message sender (`user`, `assistant`, `system`), only applicable\n   * for `message` items.\n   */\n  role?: 'user' | 'assistant' | 'system';\n\n  /**\n   * The status of the item (`completed`, `incomplete`). These have no effect on the\n   * conversation, but are accepted for consistency with the\n   * `conversation.item.created` event.\n   */\n  status?: 'completed' | 'incomplete';\n\n  /**\n   * The type of the item (`message`, `function_call`, `function_call_output`,\n   * `item_reference`).\n   */\n  type?: 'message' | 'function_call' | 'function_call_output' | 'item_reference';\n}\n\n/**\n * Returned when an error occurs, which could be a client problem or a server\n * problem. Most errors are recoverable and the session will stay open, we\n * recommend to implementors to monitor and log error messages by default.\n */\nexport interface ErrorEvent {\n  /**\n   * Details of the error.\n   */\n  error: ErrorEvent.Error;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The event type, must be `error`.\n   */\n  type: 'error';\n}\n\nexport namespace ErrorEvent {\n  /**\n   * Details of the error.\n   */\n  export interface Error {\n    /**\n     * A human-readable error message.\n     */\n    message: string;\n\n    /**\n     * The type of error (e.g., \"invalid_request_error\", \"server_error\").\n     */\n    type: string;\n\n    /**\n     * Error code, if any.\n     */\n    code?: string | null;\n\n    /**\n     * The event_id of the client event that caused the error, if applicable.\n     */\n    event_id?: string | null;\n\n    /**\n     * Parameter related to the error, if any.\n     */\n    param?: string | null;\n  }\n}\n\n/**\n * Send this event to append audio bytes to the input audio buffer. The audio\n * buffer is temporary storage you can write to and later commit. In Server VAD\n * mode, the audio buffer is used to detect speech and the server will decide when\n * to commit. When Server VAD is disabled, you must commit the audio buffer\n * manually.\n *\n * The client may choose how much audio to place in each event up to a maximum of\n * 15 MiB, for example streaming smaller chunks from the client may allow the VAD\n * to be more responsive. Unlike made other client events, the server will not send\n * a confirmation response to this event.\n */\nexport interface InputAudioBufferAppendEvent {\n  /**\n   * Base64-encoded audio bytes. This must be in the format specified by the\n   * `input_audio_format` field in the session configuration.\n   */\n  audio: string;\n\n  /**\n   * The event type, must be `input_audio_buffer.append`.\n   */\n  type: 'input_audio_buffer.append';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\n/**\n * Send this event to clear the audio bytes in the buffer. The server will respond\n * with an `input_audio_buffer.cleared` event.\n */\nexport interface InputAudioBufferClearEvent {\n  /**\n   * The event type, must be `input_audio_buffer.clear`.\n   */\n  type: 'input_audio_buffer.clear';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\n/**\n * Returned when the input audio buffer is cleared by the client with a\n * `input_audio_buffer.clear` event.\n */\nexport interface InputAudioBufferClearedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The event type, must be `input_audio_buffer.cleared`.\n   */\n  type: 'input_audio_buffer.cleared';\n}\n\n/**\n * Send this event to commit the user input audio buffer, which will create a new\n * user message item in the conversation. This event will produce an error if the\n * input audio buffer is empty. When in Server VAD mode, the client does not need\n * to send this event, the server will commit the audio buffer automatically.\n *\n * Committing the input audio buffer will trigger input audio transcription (if\n * enabled in session configuration), but it will not create a response from the\n * model. The server will respond with an `input_audio_buffer.committed` event.\n */\nexport interface InputAudioBufferCommitEvent {\n  /**\n   * The event type, must be `input_audio_buffer.commit`.\n   */\n  type: 'input_audio_buffer.commit';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\n/**\n * Returned when an input audio buffer is committed, either by the client or\n * automatically in server VAD mode. The `item_id` property is the ID of the user\n * message item that will be created, thus a `conversation.item.created` event will\n * also be sent to the client.\n */\nexport interface InputAudioBufferCommittedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the user message item that will be created.\n   */\n  item_id: string;\n\n  /**\n   * The ID of the preceding item after which the new item will be inserted.\n   */\n  previous_item_id: string;\n\n  /**\n   * The event type, must be `input_audio_buffer.committed`.\n   */\n  type: 'input_audio_buffer.committed';\n}\n\n/**\n * Sent by the server when in `server_vad` mode to indicate that speech has been\n * detected in the audio buffer. This can happen any time audio is added to the\n * buffer (unless speech is already detected). The client may want to use this\n * event to interrupt audio playback or provide visual feedback to the user.\n *\n * The client should expect to receive a `input_audio_buffer.speech_stopped` event\n * when speech stops. The `item_id` property is the ID of the user message item\n * that will be created when speech stops and will also be included in the\n * `input_audio_buffer.speech_stopped` event (unless the client manually commits\n * the audio buffer during VAD activation).\n */\nexport interface InputAudioBufferSpeechStartedEvent {\n  /**\n   * Milliseconds from the start of all audio written to the buffer during the\n   * session when speech was first detected. This will correspond to the beginning of\n   * audio sent to the model, and thus includes the `prefix_padding_ms` configured in\n   * the Session.\n   */\n  audio_start_ms: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the user message item that will be created when speech stops.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `input_audio_buffer.speech_started`.\n   */\n  type: 'input_audio_buffer.speech_started';\n}\n\n/**\n * Returned in `server_vad` mode when the server detects the end of speech in the\n * audio buffer. The server will also send an `conversation.item.created` event\n * with the user message item that is created from the audio buffer.\n */\nexport interface InputAudioBufferSpeechStoppedEvent {\n  /**\n   * Milliseconds since the session started when speech stopped. This will correspond\n   * to the end of audio sent to the model, and thus includes the\n   * `min_silence_duration_ms` configured in the Session.\n   */\n  audio_end_ms: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the user message item that will be created.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `input_audio_buffer.speech_stopped`.\n   */\n  type: 'input_audio_buffer.speech_stopped';\n}\n\n/**\n * Emitted at the beginning of a Response to indicate the updated rate limits. When\n * a Response is created some tokens will be \"reserved\" for the output tokens, the\n * rate limits shown here reflect that reservation, which is then adjusted\n * accordingly once the Response is completed.\n */\nexport interface RateLimitsUpdatedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * List of rate limit information.\n   */\n  rate_limits: Array<RateLimitsUpdatedEvent.RateLimit>;\n\n  /**\n   * The event type, must be `rate_limits.updated`.\n   */\n  type: 'rate_limits.updated';\n}\n\nexport namespace RateLimitsUpdatedEvent {\n  export interface RateLimit {\n    /**\n     * The maximum allowed value for the rate limit.\n     */\n    limit?: number;\n\n    /**\n     * The name of the rate limit (`requests`, `tokens`).\n     */\n    name?: 'requests' | 'tokens';\n\n    /**\n     * The remaining value before the limit is reached.\n     */\n    remaining?: number;\n\n    /**\n     * Seconds until the rate limit resets.\n     */\n    reset_seconds?: number;\n  }\n}\n\n/**\n * A realtime client event.\n */\nexport type RealtimeClientEvent =\n  | ConversationItemCreateEvent\n  | ConversationItemDeleteEvent\n  | ConversationItemRetrieveEvent\n  | ConversationItemTruncateEvent\n  | InputAudioBufferAppendEvent\n  | InputAudioBufferClearEvent\n  | RealtimeClientEvent.OutputAudioBufferClear\n  | InputAudioBufferCommitEvent\n  | ResponseCancelEvent\n  | ResponseCreateEvent\n  | SessionUpdateEvent\n  | TranscriptionSessionUpdate;\n\nexport namespace RealtimeClientEvent {\n  /**\n   * **WebRTC Only:** Emit to cut off the current audio response. This will trigger\n   * the server to stop generating audio and emit a `output_audio_buffer.cleared`\n   * event. This event should be preceded by a `response.cancel` client event to stop\n   * the generation of the current response.\n   * [Learn more](https://platform.openai.com/docs/guides/realtime-conversations#client-and-server-events-for-audio-in-webrtc).\n   */\n  export interface OutputAudioBufferClear {\n    /**\n     * The event type, must be `output_audio_buffer.clear`.\n     */\n    type: 'output_audio_buffer.clear';\n\n    /**\n     * The unique ID of the client event used for error handling.\n     */\n    event_id?: string;\n  }\n}\n\n/**\n * The response resource.\n */\nexport interface RealtimeResponse {\n  /**\n   * The unique ID of the response.\n   */\n  id?: string;\n\n  /**\n   * Which conversation the response is added to, determined by the `conversation`\n   * field in the `response.create` event. If `auto`, the response will be added to\n   * the default conversation and the value of `conversation_id` will be an id like\n   * `conv_1234`. If `none`, the response will not be added to any conversation and\n   * the value of `conversation_id` will be `null`. If responses are being triggered\n   * by server VAD, the response will be added to the default conversation, thus the\n   * `conversation_id` will be an id like `conv_1234`.\n   */\n  conversation_id?: string;\n\n  /**\n   * Maximum number of output tokens for a single assistant response, inclusive of\n   * tool calls, that was used in this response.\n   */\n  max_output_tokens?: number | 'inf';\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The set of modalities the model used to respond. If there are multiple\n   * modalities, the model will pick one, for example if `modalities` is\n   * `[\"text\", \"audio\"]`, the model could be responding in either text or audio.\n   */\n  modalities?: Array<'text' | 'audio'>;\n\n  /**\n   * The object type, must be `realtime.response`.\n   */\n  object?: 'realtime.response';\n\n  /**\n   * The list of output items generated by the response.\n   */\n  output?: Array<ConversationItem>;\n\n  /**\n   * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n   */\n  output_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n  /**\n   * The final status of the response (`completed`, `cancelled`, `failed`, or\n   * `incomplete`).\n   */\n  status?: 'completed' | 'cancelled' | 'failed' | 'incomplete';\n\n  /**\n   * Additional details about the status.\n   */\n  status_details?: RealtimeResponseStatus;\n\n  /**\n   * Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8.\n   */\n  temperature?: number;\n\n  /**\n   * Usage statistics for the Response, this will correspond to billing. A Realtime\n   * API session will maintain a conversation context and append new Items to the\n   * Conversation, thus output from previous turns (text and audio tokens) will\n   * become the input for later turns.\n   */\n  usage?: RealtimeResponseUsage;\n\n  /**\n   * The voice the model used to respond. Current voice options are `alloy`, `ash`,\n   * `ballad`, `coral`, `echo`, `fable`, `onyx`, `nova`, `sage`, `shimmer`, and\n   * `verse`.\n   */\n  voice?:\n    | (string & {})\n    | 'alloy'\n    | 'ash'\n    | 'ballad'\n    | 'coral'\n    | 'echo'\n    | 'fable'\n    | 'onyx'\n    | 'nova'\n    | 'sage'\n    | 'shimmer'\n    | 'verse';\n}\n\n/**\n * Additional details about the status.\n */\nexport interface RealtimeResponseStatus {\n  /**\n   * A description of the error that caused the response to fail, populated when the\n   * `status` is `failed`.\n   */\n  error?: RealtimeResponseStatus.Error;\n\n  /**\n   * The reason the Response did not complete. For a `cancelled` Response, one of\n   * `turn_detected` (the server VAD detected a new start of speech) or\n   * `client_cancelled` (the client sent a cancel event). For an `incomplete`\n   * Response, one of `max_output_tokens` or `content_filter` (the server-side safety\n   * filter activated and cut off the response).\n   */\n  reason?: 'turn_detected' | 'client_cancelled' | 'max_output_tokens' | 'content_filter';\n\n  /**\n   * The type of error that caused the response to fail, corresponding with the\n   * `status` field (`completed`, `cancelled`, `incomplete`, `failed`).\n   */\n  type?: 'completed' | 'cancelled' | 'incomplete' | 'failed';\n}\n\nexport namespace RealtimeResponseStatus {\n  /**\n   * A description of the error that caused the response to fail, populated when the\n   * `status` is `failed`.\n   */\n  export interface Error {\n    /**\n     * Error code, if any.\n     */\n    code?: string;\n\n    /**\n     * The type of error.\n     */\n    type?: string;\n  }\n}\n\n/**\n * Usage statistics for the Response, this will correspond to billing. A Realtime\n * API session will maintain a conversation context and append new Items to the\n * Conversation, thus output from previous turns (text and audio tokens) will\n * become the input for later turns.\n */\nexport interface RealtimeResponseUsage {\n  /**\n   * Details about the input tokens used in the Response.\n   */\n  input_token_details?: RealtimeResponseUsage.InputTokenDetails;\n\n  /**\n   * The number of input tokens used in the Response, including text and audio\n   * tokens.\n   */\n  input_tokens?: number;\n\n  /**\n   * Details about the output tokens used in the Response.\n   */\n  output_token_details?: RealtimeResponseUsage.OutputTokenDetails;\n\n  /**\n   * The number of output tokens sent in the Response, including text and audio\n   * tokens.\n   */\n  output_tokens?: number;\n\n  /**\n   * The total number of tokens in the Response including input and output text and\n   * audio tokens.\n   */\n  total_tokens?: number;\n}\n\nexport namespace RealtimeResponseUsage {\n  /**\n   * Details about the input tokens used in the Response.\n   */\n  export interface InputTokenDetails {\n    /**\n     * The number of audio tokens used in the Response.\n     */\n    audio_tokens?: number;\n\n    /**\n     * The number of cached tokens used in the Response.\n     */\n    cached_tokens?: number;\n\n    /**\n     * The number of text tokens used in the Response.\n     */\n    text_tokens?: number;\n  }\n\n  /**\n   * Details about the output tokens used in the Response.\n   */\n  export interface OutputTokenDetails {\n    /**\n     * The number of audio tokens used in the Response.\n     */\n    audio_tokens?: number;\n\n    /**\n     * The number of text tokens used in the Response.\n     */\n    text_tokens?: number;\n  }\n}\n\n/**\n * A realtime server event.\n */\nexport type RealtimeServerEvent =\n  | ConversationCreatedEvent\n  | ConversationItemCreatedEvent\n  | ConversationItemDeletedEvent\n  | ConversationItemInputAudioTranscriptionCompletedEvent\n  | ConversationItemInputAudioTranscriptionDeltaEvent\n  | ConversationItemInputAudioTranscriptionFailedEvent\n  | RealtimeServerEvent.ConversationItemRetrieved\n  | ConversationItemTruncatedEvent\n  | ErrorEvent\n  | InputAudioBufferClearedEvent\n  | InputAudioBufferCommittedEvent\n  | InputAudioBufferSpeechStartedEvent\n  | InputAudioBufferSpeechStoppedEvent\n  | RateLimitsUpdatedEvent\n  | ResponseAudioDeltaEvent\n  | ResponseAudioDoneEvent\n  | ResponseAudioTranscriptDeltaEvent\n  | ResponseAudioTranscriptDoneEvent\n  | ResponseContentPartAddedEvent\n  | ResponseContentPartDoneEvent\n  | ResponseCreatedEvent\n  | ResponseDoneEvent\n  | ResponseFunctionCallArgumentsDeltaEvent\n  | ResponseFunctionCallArgumentsDoneEvent\n  | ResponseOutputItemAddedEvent\n  | ResponseOutputItemDoneEvent\n  | ResponseTextDeltaEvent\n  | ResponseTextDoneEvent\n  | SessionCreatedEvent\n  | SessionUpdatedEvent\n  | TranscriptionSessionUpdatedEvent\n  | RealtimeServerEvent.OutputAudioBufferStarted\n  | RealtimeServerEvent.OutputAudioBufferStopped\n  | RealtimeServerEvent.OutputAudioBufferCleared;\n\nexport namespace RealtimeServerEvent {\n  /**\n   * Returned when a conversation item is retrieved with\n   * `conversation.item.retrieve`.\n   */\n  export interface ConversationItemRetrieved {\n    /**\n     * The unique ID of the server event.\n     */\n    event_id: string;\n\n    /**\n     * The item to add to the conversation.\n     */\n    item: RealtimeAPI.ConversationItem;\n\n    /**\n     * The event type, must be `conversation.item.retrieved`.\n     */\n    type: 'conversation.item.retrieved';\n  }\n\n  /**\n   * **WebRTC Only:** Emitted when the server begins streaming audio to the client.\n   * This event is emitted after an audio content part has been added\n   * (`response.content_part.added`) to the response.\n   * [Learn more](https://platform.openai.com/docs/guides/realtime-conversations#client-and-server-events-for-audio-in-webrtc).\n   */\n  export interface OutputAudioBufferStarted {\n    /**\n     * The unique ID of the server event.\n     */\n    event_id: string;\n\n    /**\n     * The unique ID of the response that produced the audio.\n     */\n    response_id: string;\n\n    /**\n     * The event type, must be `output_audio_buffer.started`.\n     */\n    type: 'output_audio_buffer.started';\n  }\n\n  /**\n   * **WebRTC Only:** Emitted when the output audio buffer has been completely\n   * drained on the server, and no more audio is forthcoming. This event is emitted\n   * after the full response data has been sent to the client (`response.done`).\n   * [Learn more](https://platform.openai.com/docs/guides/realtime-conversations#client-and-server-events-for-audio-in-webrtc).\n   */\n  export interface OutputAudioBufferStopped {\n    /**\n     * The unique ID of the server event.\n     */\n    event_id: string;\n\n    /**\n     * The unique ID of the response that produced the audio.\n     */\n    response_id: string;\n\n    /**\n     * The event type, must be `output_audio_buffer.stopped`.\n     */\n    type: 'output_audio_buffer.stopped';\n  }\n\n  /**\n   * **WebRTC Only:** Emitted when the output audio buffer is cleared. This happens\n   * either in VAD mode when the user has interrupted\n   * (`input_audio_buffer.speech_started`), or when the client has emitted the\n   * `output_audio_buffer.clear` event to manually cut off the current audio\n   * response.\n   * [Learn more](https://platform.openai.com/docs/guides/realtime-conversations#client-and-server-events-for-audio-in-webrtc).\n   */\n  export interface OutputAudioBufferCleared {\n    /**\n     * The unique ID of the server event.\n     */\n    event_id: string;\n\n    /**\n     * The unique ID of the response that produced the audio.\n     */\n    response_id: string;\n\n    /**\n     * The event type, must be `output_audio_buffer.cleared`.\n     */\n    type: 'output_audio_buffer.cleared';\n  }\n}\n\n/**\n * Returned when the model-generated audio is updated.\n */\nexport interface ResponseAudioDeltaEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * Base64-encoded audio data delta.\n   */\n  delta: string;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.audio.delta`.\n   */\n  type: 'response.audio.delta';\n}\n\n/**\n * Returned when the model-generated audio is done. Also emitted when a Response is\n * interrupted, incomplete, or cancelled.\n */\nexport interface ResponseAudioDoneEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.audio.done`.\n   */\n  type: 'response.audio.done';\n}\n\n/**\n * Returned when the model-generated transcription of audio output is updated.\n */\nexport interface ResponseAudioTranscriptDeltaEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The transcript delta.\n   */\n  delta: string;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.audio_transcript.delta`.\n   */\n  type: 'response.audio_transcript.delta';\n}\n\n/**\n * Returned when the model-generated transcription of audio output is done\n * streaming. Also emitted when a Response is interrupted, incomplete, or\n * cancelled.\n */\nexport interface ResponseAudioTranscriptDoneEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The final transcript of the audio.\n   */\n  transcript: string;\n\n  /**\n   * The event type, must be `response.audio_transcript.done`.\n   */\n  type: 'response.audio_transcript.done';\n}\n\n/**\n * Send this event to cancel an in-progress response. The server will respond with\n * a `response.cancelled` event or an error if there is no response to cancel.\n */\nexport interface ResponseCancelEvent {\n  /**\n   * The event type, must be `response.cancel`.\n   */\n  type: 'response.cancel';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n\n  /**\n   * A specific response ID to cancel - if not provided, will cancel an in-progress\n   * response in the default conversation.\n   */\n  response_id?: string;\n}\n\n/**\n * Returned when a new content part is added to an assistant message item during\n * response generation.\n */\nexport interface ResponseContentPartAddedEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item to which the content part was added.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The content part that was added.\n   */\n  part: ResponseContentPartAddedEvent.Part;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.content_part.added`.\n   */\n  type: 'response.content_part.added';\n}\n\nexport namespace ResponseContentPartAddedEvent {\n  /**\n   * The content part that was added.\n   */\n  export interface Part {\n    /**\n     * Base64-encoded audio data (if type is \"audio\").\n     */\n    audio?: string;\n\n    /**\n     * The text content (if type is \"text\").\n     */\n    text?: string;\n\n    /**\n     * The transcript of the audio (if type is \"audio\").\n     */\n    transcript?: string;\n\n    /**\n     * The content type (\"text\", \"audio\").\n     */\n    type?: 'text' | 'audio';\n  }\n}\n\n/**\n * Returned when a content part is done streaming in an assistant message item.\n * Also emitted when a Response is interrupted, incomplete, or cancelled.\n */\nexport interface ResponseContentPartDoneEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The content part that is done.\n   */\n  part: ResponseContentPartDoneEvent.Part;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.content_part.done`.\n   */\n  type: 'response.content_part.done';\n}\n\nexport namespace ResponseContentPartDoneEvent {\n  /**\n   * The content part that is done.\n   */\n  export interface Part {\n    /**\n     * Base64-encoded audio data (if type is \"audio\").\n     */\n    audio?: string;\n\n    /**\n     * The text content (if type is \"text\").\n     */\n    text?: string;\n\n    /**\n     * The transcript of the audio (if type is \"audio\").\n     */\n    transcript?: string;\n\n    /**\n     * The content type (\"text\", \"audio\").\n     */\n    type?: 'text' | 'audio';\n  }\n}\n\n/**\n * This event instructs the server to create a Response, which means triggering\n * model inference. When in Server VAD mode, the server will create Responses\n * automatically.\n *\n * A Response will include at least one Item, and may have two, in which case the\n * second will be a function call. These Items will be appended to the conversation\n * history.\n *\n * The server will respond with a `response.created` event, events for Items and\n * content created, and finally a `response.done` event to indicate the Response is\n * complete.\n *\n * The `response.create` event includes inference configuration like\n * `instructions`, and `temperature`. These fields will override the Session's\n * configuration for this Response only.\n */\nexport interface ResponseCreateEvent {\n  /**\n   * The event type, must be `response.create`.\n   */\n  type: 'response.create';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n\n  /**\n   * Create a new Realtime response with these parameters\n   */\n  response?: ResponseCreateEvent.Response;\n}\n\nexport namespace ResponseCreateEvent {\n  /**\n   * Create a new Realtime response with these parameters\n   */\n  export interface Response {\n    /**\n     * Controls which conversation the response is added to. Currently supports `auto`\n     * and `none`, with `auto` as the default value. The `auto` value means that the\n     * contents of the response will be added to the default conversation. Set this to\n     * `none` to create an out-of-band response which will not add items to default\n     * conversation.\n     */\n    conversation?: (string & {}) | 'auto' | 'none';\n\n    /**\n     * Input items to include in the prompt for the model. Using this field creates a\n     * new context for this Response instead of using the default conversation. An\n     * empty array `[]` will clear the context for this Response. Note that this can\n     * include references to items from the default conversation.\n     */\n    input?: Array<RealtimeAPI.ConversationItemWithReference>;\n\n    /**\n     * The default system instructions (i.e. system message) prepended to model calls.\n     * This field allows the client to guide the model on desired responses. The model\n     * can be instructed on response content and format, (e.g. \"be extremely succinct\",\n     * \"act friendly\", \"here are examples of good responses\") and on audio behavior\n     * (e.g. \"talk quickly\", \"inject emotion into your voice\", \"laugh frequently\"). The\n     * instructions are not guaranteed to be followed by the model, but they provide\n     * guidance to the model on the desired behavior.\n     *\n     * Note that the server sets default instructions which will be used if this field\n     * is not set and are visible in the `session.created` event at the start of the\n     * session.\n     */\n    instructions?: string;\n\n    /**\n     * Maximum number of output tokens for a single assistant response, inclusive of\n     * tool calls. Provide an integer between 1 and 4096 to limit output tokens, or\n     * `inf` for the maximum available tokens for a given model. Defaults to `inf`.\n     */\n    max_response_output_tokens?: number | 'inf';\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n\n    /**\n     * The set of modalities the model can respond with. To disable audio, set this to\n     * [\"text\"].\n     */\n    modalities?: Array<'text' | 'audio'>;\n\n    /**\n     * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n     */\n    output_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n    /**\n     * Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8.\n     */\n    temperature?: number;\n\n    /**\n     * How the model chooses tools. Options are `auto`, `none`, `required`, or specify\n     * a function, like `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}`.\n     */\n    tool_choice?: string;\n\n    /**\n     * Tools (functions) available to the model.\n     */\n    tools?: Array<Response.Tool>;\n\n    /**\n     * The voice the model uses to respond. Voice cannot be changed during the session\n     * once the model has responded with audio at least once. Current voice options are\n     * `alloy`, `ash`, `ballad`, `coral`, `echo`, `fable`, `onyx`, `nova`, `sage`,\n     * `shimmer`, and `verse`.\n     */\n    voice?:\n      | (string & {})\n      | 'alloy'\n      | 'ash'\n      | 'ballad'\n      | 'coral'\n      | 'echo'\n      | 'fable'\n      | 'onyx'\n      | 'nova'\n      | 'sage'\n      | 'shimmer'\n      | 'verse';\n  }\n\n  export namespace Response {\n    export interface Tool {\n      /**\n       * The description of the function, including guidance on when and how to call it,\n       * and guidance about what to tell the user when calling (if anything).\n       */\n      description?: string;\n\n      /**\n       * The name of the function.\n       */\n      name?: string;\n\n      /**\n       * Parameters of the function in JSON Schema.\n       */\n      parameters?: unknown;\n\n      /**\n       * The type of the tool, i.e. `function`.\n       */\n      type?: 'function';\n    }\n  }\n}\n\n/**\n * Returned when a new Response is created. The first event of response creation,\n * where the response is in an initial state of `in_progress`.\n */\nexport interface ResponseCreatedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The response resource.\n   */\n  response: RealtimeResponse;\n\n  /**\n   * The event type, must be `response.created`.\n   */\n  type: 'response.created';\n}\n\n/**\n * Returned when a Response is done streaming. Always emitted, no matter the final\n * state. The Response object included in the `response.done` event will include\n * all output Items in the Response but will omit the raw audio data.\n */\nexport interface ResponseDoneEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The response resource.\n   */\n  response: RealtimeResponse;\n\n  /**\n   * The event type, must be `response.done`.\n   */\n  type: 'response.done';\n}\n\n/**\n * Returned when the model-generated function call arguments are updated.\n */\nexport interface ResponseFunctionCallArgumentsDeltaEvent {\n  /**\n   * The ID of the function call.\n   */\n  call_id: string;\n\n  /**\n   * The arguments delta as a JSON string.\n   */\n  delta: string;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the function call item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.function_call_arguments.delta`.\n   */\n  type: 'response.function_call_arguments.delta';\n}\n\n/**\n * Returned when the model-generated function call arguments are done streaming.\n * Also emitted when a Response is interrupted, incomplete, or cancelled.\n */\nexport interface ResponseFunctionCallArgumentsDoneEvent {\n  /**\n   * The final arguments as a JSON string.\n   */\n  arguments: string;\n\n  /**\n   * The ID of the function call.\n   */\n  call_id: string;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the function call item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.function_call_arguments.done`.\n   */\n  type: 'response.function_call_arguments.done';\n}\n\n/**\n * Returned when a new Item is created during Response generation.\n */\nexport interface ResponseOutputItemAddedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The item to add to the conversation.\n   */\n  item: ConversationItem;\n\n  /**\n   * The index of the output item in the Response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the Response to which the item belongs.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.output_item.added`.\n   */\n  type: 'response.output_item.added';\n}\n\n/**\n * Returned when an Item is done streaming. Also emitted when a Response is\n * interrupted, incomplete, or cancelled.\n */\nexport interface ResponseOutputItemDoneEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The item to add to the conversation.\n   */\n  item: ConversationItem;\n\n  /**\n   * The index of the output item in the Response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the Response to which the item belongs.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.output_item.done`.\n   */\n  type: 'response.output_item.done';\n}\n\n/**\n * Returned when the text value of a \"text\" content part is updated.\n */\nexport interface ResponseTextDeltaEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The text delta.\n   */\n  delta: string;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.text.delta`.\n   */\n  type: 'response.text.delta';\n}\n\n/**\n * Returned when the text value of a \"text\" content part is done streaming. Also\n * emitted when a Response is interrupted, incomplete, or cancelled.\n */\nexport interface ResponseTextDoneEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The final text content.\n   */\n  text: string;\n\n  /**\n   * The event type, must be `response.text.done`.\n   */\n  type: 'response.text.done';\n}\n\n/**\n * Returned when a Session is created. Emitted automatically when a new connection\n * is established as the first server event. This event will contain the default\n * Session configuration.\n */\nexport interface SessionCreatedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * Realtime session object configuration.\n   */\n  session: SessionsAPI.Session;\n\n  /**\n   * The event type, must be `session.created`.\n   */\n  type: 'session.created';\n}\n\n/**\n * Send this event to update the session’s default configuration. The client may\n * send this event at any time to update any field, except for `voice`. However,\n * note that once a session has been initialized with a particular `model`, it\n * can’t be changed to another model using `session.update`.\n *\n * When the server receives a `session.update`, it will respond with a\n * `session.updated` event showing the full, effective configuration. Only the\n * fields that are present are updated. To clear a field like `instructions`, pass\n * an empty string.\n */\nexport interface SessionUpdateEvent {\n  /**\n   * Realtime session object configuration.\n   */\n  session: SessionUpdateEvent.Session;\n\n  /**\n   * The event type, must be `session.update`.\n   */\n  type: 'session.update';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\nexport namespace SessionUpdateEvent {\n  /**\n   * Realtime session object configuration.\n   */\n  export interface Session {\n    /**\n     * Configuration options for the generated client secret.\n     */\n    client_secret?: Session.ClientSecret;\n\n    /**\n     * The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For\n     * `pcm16`, input audio must be 16-bit PCM at a 24kHz sample rate, single channel\n     * (mono), and little-endian byte order.\n     */\n    input_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n    /**\n     * Configuration for input audio noise reduction. This can be set to `null` to turn\n     * off. Noise reduction filters audio added to the input audio buffer before it is\n     * sent to VAD and the model. Filtering the audio can improve VAD and turn\n     * detection accuracy (reducing false positives) and model performance by improving\n     * perception of the input audio.\n     */\n    input_audio_noise_reduction?: Session.InputAudioNoiseReduction;\n\n    /**\n     * Configuration for input audio transcription, defaults to off and can be set to\n     * `null` to turn off once on. Input audio transcription is not native to the\n     * model, since the model consumes audio directly. Transcription runs\n     * asynchronously through\n     * [the /audio/transcriptions endpoint](https://platform.openai.com/docs/api-reference/audio/createTranscription)\n     * and should be treated as guidance of input audio content rather than precisely\n     * what the model heard. The client can optionally set the language and prompt for\n     * transcription, these offer additional guidance to the transcription service.\n     */\n    input_audio_transcription?: Session.InputAudioTranscription;\n\n    /**\n     * The default system instructions (i.e. system message) prepended to model calls.\n     * This field allows the client to guide the model on desired responses. The model\n     * can be instructed on response content and format, (e.g. \"be extremely succinct\",\n     * \"act friendly\", \"here are examples of good responses\") and on audio behavior\n     * (e.g. \"talk quickly\", \"inject emotion into your voice\", \"laugh frequently\"). The\n     * instructions are not guaranteed to be followed by the model, but they provide\n     * guidance to the model on the desired behavior.\n     *\n     * Note that the server sets default instructions which will be used if this field\n     * is not set and are visible in the `session.created` event at the start of the\n     * session.\n     */\n    instructions?: string;\n\n    /**\n     * Maximum number of output tokens for a single assistant response, inclusive of\n     * tool calls. Provide an integer between 1 and 4096 to limit output tokens, or\n     * `inf` for the maximum available tokens for a given model. Defaults to `inf`.\n     */\n    max_response_output_tokens?: number | 'inf';\n\n    /**\n     * The set of modalities the model can respond with. To disable audio, set this to\n     * [\"text\"].\n     */\n    modalities?: Array<'text' | 'audio'>;\n\n    /**\n     * The Realtime model used for this session.\n     */\n    model?:\n      | 'gpt-4o-realtime-preview'\n      | 'gpt-4o-realtime-preview-2024-10-01'\n      | 'gpt-4o-realtime-preview-2024-12-17'\n      | 'gpt-4o-realtime-preview-2025-06-03'\n      | 'gpt-4o-mini-realtime-preview'\n      | 'gpt-4o-mini-realtime-preview-2024-12-17';\n\n    /**\n     * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n     * For `pcm16`, output audio is sampled at a rate of 24kHz.\n     */\n    output_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n    /**\n     * The speed of the model's spoken response. 1.0 is the default speed. 0.25 is the\n     * minimum speed. 1.5 is the maximum speed. This value can only be changed in\n     * between model turns, not while a response is in progress.\n     */\n    speed?: number;\n\n    /**\n     * Sampling temperature for the model, limited to [0.6, 1.2]. For audio models a\n     * temperature of 0.8 is highly recommended for best performance.\n     */\n    temperature?: number;\n\n    /**\n     * How the model chooses tools. Options are `auto`, `none`, `required`, or specify\n     * a function.\n     */\n    tool_choice?: string;\n\n    /**\n     * Tools (functions) available to the model.\n     */\n    tools?: Array<Session.Tool>;\n\n    /**\n     * Configuration options for tracing. Set to null to disable tracing. Once tracing\n     * is enabled for a session, the configuration cannot be modified.\n     *\n     * `auto` will create a trace for the session with default values for the workflow\n     * name, group id, and metadata.\n     */\n    tracing?: 'auto' | Session.TracingConfiguration;\n\n    /**\n     * Configuration for turn detection, ether Server VAD or Semantic VAD. This can be\n     * set to `null` to turn off, in which case the client must manually trigger model\n     * response. Server VAD means that the model will detect the start and end of\n     * speech based on audio volume and respond at the end of user speech. Semantic VAD\n     * is more advanced and uses a turn detection model (in conjuction with VAD) to\n     * semantically estimate whether the user has finished speaking, then dynamically\n     * sets a timeout based on this probability. For example, if user audio trails off\n     * with \"uhhm\", the model will score a low probability of turn end and wait longer\n     * for the user to continue speaking. This can be useful for more natural\n     * conversations, but may have a higher latency.\n     */\n    turn_detection?: Session.TurnDetection;\n\n    /**\n     * The voice the model uses to respond. Voice cannot be changed during the session\n     * once the model has responded with audio at least once. Current voice options are\n     * `alloy`, `ash`, `ballad`, `coral`, `echo`, `fable`, `onyx`, `nova`, `sage`,\n     * `shimmer`, and `verse`.\n     */\n    voice?:\n      | (string & {})\n      | 'alloy'\n      | 'ash'\n      | 'ballad'\n      | 'coral'\n      | 'echo'\n      | 'fable'\n      | 'onyx'\n      | 'nova'\n      | 'sage'\n      | 'shimmer'\n      | 'verse';\n  }\n\n  export namespace Session {\n    /**\n     * Configuration options for the generated client secret.\n     */\n    export interface ClientSecret {\n      /**\n       * Configuration for the ephemeral token expiration.\n       */\n      expires_at?: ClientSecret.ExpiresAt;\n    }\n\n    export namespace ClientSecret {\n      /**\n       * Configuration for the ephemeral token expiration.\n       */\n      export interface ExpiresAt {\n        /**\n         * The anchor point for the ephemeral token expiration. Only `created_at` is\n         * currently supported.\n         */\n        anchor?: 'created_at';\n\n        /**\n         * The number of seconds from the anchor point to the expiration. Select a value\n         * between `10` and `7200`.\n         */\n        seconds?: number;\n      }\n    }\n\n    /**\n     * Configuration for input audio noise reduction. This can be set to `null` to turn\n     * off. Noise reduction filters audio added to the input audio buffer before it is\n     * sent to VAD and the model. Filtering the audio can improve VAD and turn\n     * detection accuracy (reducing false positives) and model performance by improving\n     * perception of the input audio.\n     */\n    export interface InputAudioNoiseReduction {\n      /**\n       * Type of noise reduction. `near_field` is for close-talking microphones such as\n       * headphones, `far_field` is for far-field microphones such as laptop or\n       * conference room microphones.\n       */\n      type?: 'near_field' | 'far_field';\n    }\n\n    /**\n     * Configuration for input audio transcription, defaults to off and can be set to\n     * `null` to turn off once on. Input audio transcription is not native to the\n     * model, since the model consumes audio directly. Transcription runs\n     * asynchronously through\n     * [the /audio/transcriptions endpoint](https://platform.openai.com/docs/api-reference/audio/createTranscription)\n     * and should be treated as guidance of input audio content rather than precisely\n     * what the model heard. The client can optionally set the language and prompt for\n     * transcription, these offer additional guidance to the transcription service.\n     */\n    export interface InputAudioTranscription {\n      /**\n       * The language of the input audio. Supplying the input language in\n       * [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. `en`)\n       * format will improve accuracy and latency.\n       */\n      language?: string;\n\n      /**\n       * The model to use for transcription, current options are `gpt-4o-transcribe`,\n       * `gpt-4o-mini-transcribe`, and `whisper-1`.\n       */\n      model?: string;\n\n      /**\n       * An optional text to guide the model's style or continue a previous audio\n       * segment. For `whisper-1`, the\n       * [prompt is a list of keywords](https://platform.openai.com/docs/guides/speech-to-text#prompting).\n       * For `gpt-4o-transcribe` models, the prompt is a free text string, for example\n       * \"expect words related to technology\".\n       */\n      prompt?: string;\n    }\n\n    export interface Tool {\n      /**\n       * The description of the function, including guidance on when and how to call it,\n       * and guidance about what to tell the user when calling (if anything).\n       */\n      description?: string;\n\n      /**\n       * The name of the function.\n       */\n      name?: string;\n\n      /**\n       * Parameters of the function in JSON Schema.\n       */\n      parameters?: unknown;\n\n      /**\n       * The type of the tool, i.e. `function`.\n       */\n      type?: 'function';\n    }\n\n    /**\n     * Granular configuration for tracing.\n     */\n    export interface TracingConfiguration {\n      /**\n       * The group id to attach to this trace to enable filtering and grouping in the\n       * traces dashboard.\n       */\n      group_id?: string;\n\n      /**\n       * The arbitrary metadata to attach to this trace to enable filtering in the traces\n       * dashboard.\n       */\n      metadata?: unknown;\n\n      /**\n       * The name of the workflow to attach to this trace. This is used to name the trace\n       * in the traces dashboard.\n       */\n      workflow_name?: string;\n    }\n\n    /**\n     * Configuration for turn detection, ether Server VAD or Semantic VAD. This can be\n     * set to `null` to turn off, in which case the client must manually trigger model\n     * response. Server VAD means that the model will detect the start and end of\n     * speech based on audio volume and respond at the end of user speech. Semantic VAD\n     * is more advanced and uses a turn detection model (in conjuction with VAD) to\n     * semantically estimate whether the user has finished speaking, then dynamically\n     * sets a timeout based on this probability. For example, if user audio trails off\n     * with \"uhhm\", the model will score a low probability of turn end and wait longer\n     * for the user to continue speaking. This can be useful for more natural\n     * conversations, but may have a higher latency.\n     */\n    export interface TurnDetection {\n      /**\n       * Whether or not to automatically generate a response when a VAD stop event\n       * occurs.\n       */\n      create_response?: boolean;\n\n      /**\n       * Used only for `semantic_vad` mode. The eagerness of the model to respond. `low`\n       * will wait longer for the user to continue speaking, `high` will respond more\n       * quickly. `auto` is the default and is equivalent to `medium`.\n       */\n      eagerness?: 'low' | 'medium' | 'high' | 'auto';\n\n      /**\n       * Whether or not to automatically interrupt any ongoing response with output to\n       * the default conversation (i.e. `conversation` of `auto`) when a VAD start event\n       * occurs.\n       */\n      interrupt_response?: boolean;\n\n      /**\n       * Used only for `server_vad` mode. Amount of audio to include before the VAD\n       * detected speech (in milliseconds). Defaults to 300ms.\n       */\n      prefix_padding_ms?: number;\n\n      /**\n       * Used only for `server_vad` mode. Duration of silence to detect speech stop (in\n       * milliseconds). Defaults to 500ms. With shorter values the model will respond\n       * more quickly, but may jump in on short pauses from the user.\n       */\n      silence_duration_ms?: number;\n\n      /**\n       * Used only for `server_vad` mode. Activation threshold for VAD (0.0 to 1.0), this\n       * defaults to 0.5. A higher threshold will require louder audio to activate the\n       * model, and thus might perform better in noisy environments.\n       */\n      threshold?: number;\n\n      /**\n       * Type of turn detection.\n       */\n      type?: 'server_vad' | 'semantic_vad';\n    }\n  }\n}\n\n/**\n * Returned when a session is updated with a `session.update` event, unless there\n * is an error.\n */\nexport interface SessionUpdatedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * Realtime session object configuration.\n   */\n  session: SessionsAPI.Session;\n\n  /**\n   * The event type, must be `session.updated`.\n   */\n  type: 'session.updated';\n}\n\n/**\n * Send this event to update a transcription session.\n */\nexport interface TranscriptionSessionUpdate {\n  /**\n   * Realtime transcription session object configuration.\n   */\n  session: TranscriptionSessionUpdate.Session;\n\n  /**\n   * The event type, must be `transcription_session.update`.\n   */\n  type: 'transcription_session.update';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\nexport namespace TranscriptionSessionUpdate {\n  /**\n   * Realtime transcription session object configuration.\n   */\n  export interface Session {\n    /**\n     * Configuration options for the generated client secret.\n     */\n    client_secret?: Session.ClientSecret;\n\n    /**\n     * The set of items to include in the transcription. Current available items are:\n     *\n     * - `item.input_audio_transcription.logprobs`\n     */\n    include?: Array<string>;\n\n    /**\n     * The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For\n     * `pcm16`, input audio must be 16-bit PCM at a 24kHz sample rate, single channel\n     * (mono), and little-endian byte order.\n     */\n    input_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n    /**\n     * Configuration for input audio noise reduction. This can be set to `null` to turn\n     * off. Noise reduction filters audio added to the input audio buffer before it is\n     * sent to VAD and the model. Filtering the audio can improve VAD and turn\n     * detection accuracy (reducing false positives) and model performance by improving\n     * perception of the input audio.\n     */\n    input_audio_noise_reduction?: Session.InputAudioNoiseReduction;\n\n    /**\n     * Configuration for input audio transcription. The client can optionally set the\n     * language and prompt for transcription, these offer additional guidance to the\n     * transcription service.\n     */\n    input_audio_transcription?: Session.InputAudioTranscription;\n\n    /**\n     * The set of modalities the model can respond with. To disable audio, set this to\n     * [\"text\"].\n     */\n    modalities?: Array<'text' | 'audio'>;\n\n    /**\n     * Configuration for turn detection, ether Server VAD or Semantic VAD. This can be\n     * set to `null` to turn off, in which case the client must manually trigger model\n     * response. Server VAD means that the model will detect the start and end of\n     * speech based on audio volume and respond at the end of user speech. Semantic VAD\n     * is more advanced and uses a turn detection model (in conjuction with VAD) to\n     * semantically estimate whether the user has finished speaking, then dynamically\n     * sets a timeout based on this probability. For example, if user audio trails off\n     * with \"uhhm\", the model will score a low probability of turn end and wait longer\n     * for the user to continue speaking. This can be useful for more natural\n     * conversations, but may have a higher latency.\n     */\n    turn_detection?: Session.TurnDetection;\n  }\n\n  export namespace Session {\n    /**\n     * Configuration options for the generated client secret.\n     */\n    export interface ClientSecret {\n      /**\n       * Configuration for the ephemeral token expiration.\n       */\n      expires_at?: ClientSecret.ExpiresAt;\n    }\n\n    export namespace ClientSecret {\n      /**\n       * Configuration for the ephemeral token expiration.\n       */\n      export interface ExpiresAt {\n        /**\n         * The anchor point for the ephemeral token expiration. Only `created_at` is\n         * currently supported.\n         */\n        anchor?: 'created_at';\n\n        /**\n         * The number of seconds from the anchor point to the expiration. Select a value\n         * between `10` and `7200`.\n         */\n        seconds?: number;\n      }\n    }\n\n    /**\n     * Configuration for input audio noise reduction. This can be set to `null` to turn\n     * off. Noise reduction filters audio added to the input audio buffer before it is\n     * sent to VAD and the model. Filtering the audio can improve VAD and turn\n     * detection accuracy (reducing false positives) and model performance by improving\n     * perception of the input audio.\n     */\n    export interface InputAudioNoiseReduction {\n      /**\n       * Type of noise reduction. `near_field` is for close-talking microphones such as\n       * headphones, `far_field` is for far-field microphones such as laptop or\n       * conference room microphones.\n       */\n      type?: 'near_field' | 'far_field';\n    }\n\n    /**\n     * Configuration for input audio transcription. The client can optionally set the\n     * language and prompt for transcription, these offer additional guidance to the\n     * transcription service.\n     */\n    export interface InputAudioTranscription {\n      /**\n       * The language of the input audio. Supplying the input language in\n       * [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. `en`)\n       * format will improve accuracy and latency.\n       */\n      language?: string;\n\n      /**\n       * The model to use for transcription, current options are `gpt-4o-transcribe`,\n       * `gpt-4o-mini-transcribe`, and `whisper-1`.\n       */\n      model?: 'gpt-4o-transcribe' | 'gpt-4o-mini-transcribe' | 'whisper-1';\n\n      /**\n       * An optional text to guide the model's style or continue a previous audio\n       * segment. For `whisper-1`, the\n       * [prompt is a list of keywords](https://platform.openai.com/docs/guides/speech-to-text#prompting).\n       * For `gpt-4o-transcribe` models, the prompt is a free text string, for example\n       * \"expect words related to technology\".\n       */\n      prompt?: string;\n    }\n\n    /**\n     * Configuration for turn detection, ether Server VAD or Semantic VAD. This can be\n     * set to `null` to turn off, in which case the client must manually trigger model\n     * response. Server VAD means that the model will detect the start and end of\n     * speech based on audio volume and respond at the end of user speech. Semantic VAD\n     * is more advanced and uses a turn detection model (in conjuction with VAD) to\n     * semantically estimate whether the user has finished speaking, then dynamically\n     * sets a timeout based on this probability. For example, if user audio trails off\n     * with \"uhhm\", the model will score a low probability of turn end and wait longer\n     * for the user to continue speaking. This can be useful for more natural\n     * conversations, but may have a higher latency.\n     */\n    export interface TurnDetection {\n      /**\n       * Whether or not to automatically generate a response when a VAD stop event\n       * occurs. Not available for transcription sessions.\n       */\n      create_response?: boolean;\n\n      /**\n       * Used only for `semantic_vad` mode. The eagerness of the model to respond. `low`\n       * will wait longer for the user to continue speaking, `high` will respond more\n       * quickly. `auto` is the default and is equivalent to `medium`.\n       */\n      eagerness?: 'low' | 'medium' | 'high' | 'auto';\n\n      /**\n       * Whether or not to automatically interrupt any ongoing response with output to\n       * the default conversation (i.e. `conversation` of `auto`) when a VAD start event\n       * occurs. Not available for transcription sessions.\n       */\n      interrupt_response?: boolean;\n\n      /**\n       * Used only for `server_vad` mode. Amount of audio to include before the VAD\n       * detected speech (in milliseconds). Defaults to 300ms.\n       */\n      prefix_padding_ms?: number;\n\n      /**\n       * Used only for `server_vad` mode. Duration of silence to detect speech stop (in\n       * milliseconds). Defaults to 500ms. With shorter values the model will respond\n       * more quickly, but may jump in on short pauses from the user.\n       */\n      silence_duration_ms?: number;\n\n      /**\n       * Used only for `server_vad` mode. Activation threshold for VAD (0.0 to 1.0), this\n       * defaults to 0.5. A higher threshold will require louder audio to activate the\n       * model, and thus might perform better in noisy environments.\n       */\n      threshold?: number;\n\n      /**\n       * Type of turn detection.\n       */\n      type?: 'server_vad' | 'semantic_vad';\n    }\n  }\n}\n\n/**\n * Returned when a transcription session is updated with a\n * `transcription_session.update` event, unless there is an error.\n */\nexport interface TranscriptionSessionUpdatedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * A new Realtime transcription session configuration.\n   *\n   * When a session is created on the server via REST API, the session object also\n   * contains an ephemeral key. Default TTL for keys is 10 minutes. This property is\n   * not present when a session is updated via the WebSocket API.\n   */\n  session: TranscriptionSessionsAPI.TranscriptionSession;\n\n  /**\n   * The event type, must be `transcription_session.updated`.\n   */\n  type: 'transcription_session.updated';\n}\n\nRealtime.Sessions = Sessions;\nRealtime.TranscriptionSessions = TranscriptionSessions;\n\nexport declare namespace Realtime {\n  export {\n    type ConversationCreatedEvent as ConversationCreatedEvent,\n    type ConversationItem as ConversationItem,\n    type ConversationItemContent as ConversationItemContent,\n    type ConversationItemCreateEvent as ConversationItemCreateEvent,\n    type ConversationItemCreatedEvent as ConversationItemCreatedEvent,\n    type ConversationItemDeleteEvent as ConversationItemDeleteEvent,\n    type ConversationItemDeletedEvent as ConversationItemDeletedEvent,\n    type ConversationItemInputAudioTranscriptionCompletedEvent as ConversationItemInputAudioTranscriptionCompletedEvent,\n    type ConversationItemInputAudioTranscriptionDeltaEvent as ConversationItemInputAudioTranscriptionDeltaEvent,\n    type ConversationItemInputAudioTranscriptionFailedEvent as ConversationItemInputAudioTranscriptionFailedEvent,\n    type ConversationItemRetrieveEvent as ConversationItemRetrieveEvent,\n    type ConversationItemTruncateEvent as ConversationItemTruncateEvent,\n    type ConversationItemTruncatedEvent as ConversationItemTruncatedEvent,\n    type ConversationItemWithReference as ConversationItemWithReference,\n    type ErrorEvent as ErrorEvent,\n    type InputAudioBufferAppendEvent as InputAudioBufferAppendEvent,\n    type InputAudioBufferClearEvent as InputAudioBufferClearEvent,\n    type InputAudioBufferClearedEvent as InputAudioBufferClearedEvent,\n    type InputAudioBufferCommitEvent as InputAudioBufferCommitEvent,\n    type InputAudioBufferCommittedEvent as InputAudioBufferCommittedEvent,\n    type InputAudioBufferSpeechStartedEvent as InputAudioBufferSpeechStartedEvent,\n    type InputAudioBufferSpeechStoppedEvent as InputAudioBufferSpeechStoppedEvent,\n    type RateLimitsUpdatedEvent as RateLimitsUpdatedEvent,\n    type RealtimeClientEvent as RealtimeClientEvent,\n    type RealtimeResponse as RealtimeResponse,\n    type RealtimeResponseStatus as RealtimeResponseStatus,\n    type RealtimeResponseUsage as RealtimeResponseUsage,\n    type RealtimeServerEvent as RealtimeServerEvent,\n    type ResponseAudioDeltaEvent as ResponseAudioDeltaEvent,\n    type ResponseAudioDoneEvent as ResponseAudioDoneEvent,\n    type ResponseAudioTranscriptDeltaEvent as ResponseAudioTranscriptDeltaEvent,\n    type ResponseAudioTranscriptDoneEvent as ResponseAudioTranscriptDoneEvent,\n    type ResponseCancelEvent as ResponseCancelEvent,\n    type ResponseContentPartAddedEvent as ResponseContentPartAddedEvent,\n    type ResponseContentPartDoneEvent as ResponseContentPartDoneEvent,\n    type ResponseCreateEvent as ResponseCreateEvent,\n    type ResponseCreatedEvent as ResponseCreatedEvent,\n    type ResponseDoneEvent as ResponseDoneEvent,\n    type ResponseFunctionCallArgumentsDeltaEvent as ResponseFunctionCallArgumentsDeltaEvent,\n    type ResponseFunctionCallArgumentsDoneEvent as ResponseFunctionCallArgumentsDoneEvent,\n    type ResponseOutputItemAddedEvent as ResponseOutputItemAddedEvent,\n    type ResponseOutputItemDoneEvent as ResponseOutputItemDoneEvent,\n    type ResponseTextDeltaEvent as ResponseTextDeltaEvent,\n    type ResponseTextDoneEvent as ResponseTextDoneEvent,\n    type SessionCreatedEvent as SessionCreatedEvent,\n    type SessionUpdateEvent as SessionUpdateEvent,\n    type SessionUpdatedEvent as SessionUpdatedEvent,\n    type TranscriptionSessionUpdate as TranscriptionSessionUpdate,\n    type TranscriptionSessionUpdatedEvent as TranscriptionSessionUpdatedEvent,\n  };\n\n  export {\n    Sessions as Sessions,\n    type SessionsAPISession as Session,\n    type SessionCreateResponse as SessionCreateResponse,\n    type SessionCreateParams as SessionCreateParams,\n  };\n\n  export {\n    TranscriptionSessions as TranscriptionSessions,\n    type TranscriptionSession as TranscriptionSession,\n    type TranscriptionSessionCreateParams as TranscriptionSessionCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as Shared from '../../shared';\nimport * as AssistantsAPI from '../assistants';\nimport { APIPromise } from '../../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../../core/pagination';\nimport { buildHeaders } from '../../../internal/headers';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { path } from '../../../internal/utils/path';\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Messages extends APIResource {\n  /**\n   * Create a message.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  create(threadID: string, body: MessageCreateParams, options?: RequestOptions): APIPromise<Message> {\n    return this._client.post(path`/threads/${threadID}/messages`, {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Retrieve a message.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  retrieve(messageID: string, params: MessageRetrieveParams, options?: RequestOptions): APIPromise<Message> {\n    const { thread_id } = params;\n    return this._client.get(path`/threads/${thread_id}/messages/${messageID}`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Modifies a message.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  update(messageID: string, params: MessageUpdateParams, options?: RequestOptions): APIPromise<Message> {\n    const { thread_id, ...body } = params;\n    return this._client.post(path`/threads/${thread_id}/messages/${messageID}`, {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Returns a list of messages for a given thread.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  list(\n    threadID: string,\n    query: MessageListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<MessagesPage, Message> {\n    return this._client.getAPIList(path`/threads/${threadID}/messages`, CursorPage<Message>, {\n      query,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Deletes a message.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  delete(\n    messageID: string,\n    params: MessageDeleteParams,\n    options?: RequestOptions,\n  ): APIPromise<MessageDeleted> {\n    const { thread_id } = params;\n    return this._client.delete(path`/threads/${thread_id}/messages/${messageID}`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n}\n\nexport type MessagesPage = CursorPage<Message>;\n\n/**\n * A citation within the message that points to a specific quote from a specific\n * File associated with the assistant or the message. Generated when the assistant\n * uses the \"file_search\" tool to search files.\n */\nexport type Annotation = FileCitationAnnotation | FilePathAnnotation;\n\n/**\n * A citation within the message that points to a specific quote from a specific\n * File associated with the assistant or the message. Generated when the assistant\n * uses the \"file_search\" tool to search files.\n */\nexport type AnnotationDelta = FileCitationDeltaAnnotation | FilePathDeltaAnnotation;\n\n/**\n * A citation within the message that points to a specific quote from a specific\n * File associated with the assistant or the message. Generated when the assistant\n * uses the \"file_search\" tool to search files.\n */\nexport interface FileCitationAnnotation {\n  end_index: number;\n\n  file_citation: FileCitationAnnotation.FileCitation;\n\n  start_index: number;\n\n  /**\n   * The text in the message content that needs to be replaced.\n   */\n  text: string;\n\n  /**\n   * Always `file_citation`.\n   */\n  type: 'file_citation';\n}\n\nexport namespace FileCitationAnnotation {\n  export interface FileCitation {\n    /**\n     * The ID of the specific File the citation is from.\n     */\n    file_id: string;\n  }\n}\n\n/**\n * A citation within the message that points to a specific quote from a specific\n * File associated with the assistant or the message. Generated when the assistant\n * uses the \"file_search\" tool to search files.\n */\nexport interface FileCitationDeltaAnnotation {\n  /**\n   * The index of the annotation in the text content part.\n   */\n  index: number;\n\n  /**\n   * Always `file_citation`.\n   */\n  type: 'file_citation';\n\n  end_index?: number;\n\n  file_citation?: FileCitationDeltaAnnotation.FileCitation;\n\n  start_index?: number;\n\n  /**\n   * The text in the message content that needs to be replaced.\n   */\n  text?: string;\n}\n\nexport namespace FileCitationDeltaAnnotation {\n  export interface FileCitation {\n    /**\n     * The ID of the specific File the citation is from.\n     */\n    file_id?: string;\n\n    /**\n     * The specific quote in the file.\n     */\n    quote?: string;\n  }\n}\n\n/**\n * A URL for the file that's generated when the assistant used the\n * `code_interpreter` tool to generate a file.\n */\nexport interface FilePathAnnotation {\n  end_index: number;\n\n  file_path: FilePathAnnotation.FilePath;\n\n  start_index: number;\n\n  /**\n   * The text in the message content that needs to be replaced.\n   */\n  text: string;\n\n  /**\n   * Always `file_path`.\n   */\n  type: 'file_path';\n}\n\nexport namespace FilePathAnnotation {\n  export interface FilePath {\n    /**\n     * The ID of the file that was generated.\n     */\n    file_id: string;\n  }\n}\n\n/**\n * A URL for the file that's generated when the assistant used the\n * `code_interpreter` tool to generate a file.\n */\nexport interface FilePathDeltaAnnotation {\n  /**\n   * The index of the annotation in the text content part.\n   */\n  index: number;\n\n  /**\n   * Always `file_path`.\n   */\n  type: 'file_path';\n\n  end_index?: number;\n\n  file_path?: FilePathDeltaAnnotation.FilePath;\n\n  start_index?: number;\n\n  /**\n   * The text in the message content that needs to be replaced.\n   */\n  text?: string;\n}\n\nexport namespace FilePathDeltaAnnotation {\n  export interface FilePath {\n    /**\n     * The ID of the file that was generated.\n     */\n    file_id?: string;\n  }\n}\n\nexport interface ImageFile {\n  /**\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n   * in the message content. Set `purpose=\"vision\"` when uploading the File if you\n   * need to later display the file content.\n   */\n  file_id: string;\n\n  /**\n   * Specifies the detail level of the image if specified by the user. `low` uses\n   * fewer tokens, you can opt in to high resolution using `high`.\n   */\n  detail?: 'auto' | 'low' | 'high';\n}\n\n/**\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\n * in the content of a message.\n */\nexport interface ImageFileContentBlock {\n  image_file: ImageFile;\n\n  /**\n   * Always `image_file`.\n   */\n  type: 'image_file';\n}\n\nexport interface ImageFileDelta {\n  /**\n   * Specifies the detail level of the image if specified by the user. `low` uses\n   * fewer tokens, you can opt in to high resolution using `high`.\n   */\n  detail?: 'auto' | 'low' | 'high';\n\n  /**\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n   * in the message content. Set `purpose=\"vision\"` when uploading the File if you\n   * need to later display the file content.\n   */\n  file_id?: string;\n}\n\n/**\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\n * in the content of a message.\n */\nexport interface ImageFileDeltaBlock {\n  /**\n   * The index of the content part in the message.\n   */\n  index: number;\n\n  /**\n   * Always `image_file`.\n   */\n  type: 'image_file';\n\n  image_file?: ImageFileDelta;\n}\n\nexport interface ImageURL {\n  /**\n   * The external URL of the image, must be a supported image types: jpeg, jpg, png,\n   * gif, webp.\n   */\n  url: string;\n\n  /**\n   * Specifies the detail level of the image. `low` uses fewer tokens, you can opt in\n   * to high resolution using `high`. Default value is `auto`\n   */\n  detail?: 'auto' | 'low' | 'high';\n}\n\n/**\n * References an image URL in the content of a message.\n */\nexport interface ImageURLContentBlock {\n  image_url: ImageURL;\n\n  /**\n   * The type of the content part.\n   */\n  type: 'image_url';\n}\n\nexport interface ImageURLDelta {\n  /**\n   * Specifies the detail level of the image. `low` uses fewer tokens, you can opt in\n   * to high resolution using `high`.\n   */\n  detail?: 'auto' | 'low' | 'high';\n\n  /**\n   * The URL of the image, must be a supported image types: jpeg, jpg, png, gif,\n   * webp.\n   */\n  url?: string;\n}\n\n/**\n * References an image URL in the content of a message.\n */\nexport interface ImageURLDeltaBlock {\n  /**\n   * The index of the content part in the message.\n   */\n  index: number;\n\n  /**\n   * Always `image_url`.\n   */\n  type: 'image_url';\n\n  image_url?: ImageURLDelta;\n}\n\n/**\n * Represents a message within a\n * [thread](https://platform.openai.com/docs/api-reference/threads).\n */\nexport interface Message {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * If applicable, the ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) that\n   * authored this message.\n   */\n  assistant_id: string | null;\n\n  /**\n   * A list of files attached to the message, and the tools they were added to.\n   */\n  attachments: Array<Message.Attachment> | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the message was completed.\n   */\n  completed_at: number | null;\n\n  /**\n   * The content of the message in array of text and/or images.\n   */\n  content: Array<MessageContent>;\n\n  /**\n   * The Unix timestamp (in seconds) for when the message was created.\n   */\n  created_at: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the message was marked as incomplete.\n   */\n  incomplete_at: number | null;\n\n  /**\n   * On an incomplete message, details about why the message is incomplete.\n   */\n  incomplete_details: Message.IncompleteDetails | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The object type, which is always `thread.message`.\n   */\n  object: 'thread.message';\n\n  /**\n   * The entity that produced the message. One of `user` or `assistant`.\n   */\n  role: 'user' | 'assistant';\n\n  /**\n   * The ID of the [run](https://platform.openai.com/docs/api-reference/runs)\n   * associated with the creation of this message. Value is `null` when messages are\n   * created manually using the create message or create thread endpoints.\n   */\n  run_id: string | null;\n\n  /**\n   * The status of the message, which can be either `in_progress`, `incomplete`, or\n   * `completed`.\n   */\n  status: 'in_progress' | 'incomplete' | 'completed';\n\n  /**\n   * The [thread](https://platform.openai.com/docs/api-reference/threads) ID that\n   * this message belongs to.\n   */\n  thread_id: string;\n}\n\nexport namespace Message {\n  export interface Attachment {\n    /**\n     * The ID of the file to attach to the message.\n     */\n    file_id?: string;\n\n    /**\n     * The tools to add this file to.\n     */\n    tools?: Array<AssistantsAPI.CodeInterpreterTool | Attachment.AssistantToolsFileSearchTypeOnly>;\n  }\n\n  export namespace Attachment {\n    export interface AssistantToolsFileSearchTypeOnly {\n      /**\n       * The type of tool being defined: `file_search`\n       */\n      type: 'file_search';\n    }\n  }\n\n  /**\n   * On an incomplete message, details about why the message is incomplete.\n   */\n  export interface IncompleteDetails {\n    /**\n     * The reason the message is incomplete.\n     */\n    reason: 'content_filter' | 'max_tokens' | 'run_cancelled' | 'run_expired' | 'run_failed';\n  }\n}\n\n/**\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\n * in the content of a message.\n */\nexport type MessageContent =\n  | ImageFileContentBlock\n  | ImageURLContentBlock\n  | TextContentBlock\n  | RefusalContentBlock;\n\n/**\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\n * in the content of a message.\n */\nexport type MessageContentDelta =\n  | ImageFileDeltaBlock\n  | TextDeltaBlock\n  | RefusalDeltaBlock\n  | ImageURLDeltaBlock;\n\n/**\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\n * in the content of a message.\n */\nexport type MessageContentPartParam = ImageFileContentBlock | ImageURLContentBlock | TextContentBlockParam;\n\nexport interface MessageDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'thread.message.deleted';\n}\n\n/**\n * The delta containing the fields that have changed on the Message.\n */\nexport interface MessageDelta {\n  /**\n   * The content of the message in array of text and/or images.\n   */\n  content?: Array<MessageContentDelta>;\n\n  /**\n   * The entity that produced the message. One of `user` or `assistant`.\n   */\n  role?: 'user' | 'assistant';\n}\n\n/**\n * Represents a message delta i.e. any changed fields on a message during\n * streaming.\n */\nexport interface MessageDeltaEvent {\n  /**\n   * The identifier of the message, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The delta containing the fields that have changed on the Message.\n   */\n  delta: MessageDelta;\n\n  /**\n   * The object type, which is always `thread.message.delta`.\n   */\n  object: 'thread.message.delta';\n}\n\n/**\n * The refusal content generated by the assistant.\n */\nexport interface RefusalContentBlock {\n  refusal: string;\n\n  /**\n   * Always `refusal`.\n   */\n  type: 'refusal';\n}\n\n/**\n * The refusal content that is part of a message.\n */\nexport interface RefusalDeltaBlock {\n  /**\n   * The index of the refusal part in the message.\n   */\n  index: number;\n\n  /**\n   * Always `refusal`.\n   */\n  type: 'refusal';\n\n  refusal?: string;\n}\n\nexport interface Text {\n  annotations: Array<Annotation>;\n\n  /**\n   * The data that makes up the text.\n   */\n  value: string;\n}\n\n/**\n * The text content that is part of a message.\n */\nexport interface TextContentBlock {\n  text: Text;\n\n  /**\n   * Always `text`.\n   */\n  type: 'text';\n}\n\n/**\n * The text content that is part of a message.\n */\nexport interface TextContentBlockParam {\n  /**\n   * Text content to be sent to the model\n   */\n  text: string;\n\n  /**\n   * Always `text`.\n   */\n  type: 'text';\n}\n\nexport interface TextDelta {\n  annotations?: Array<AnnotationDelta>;\n\n  /**\n   * The data that makes up the text.\n   */\n  value?: string;\n}\n\n/**\n * The text content that is part of a message.\n */\nexport interface TextDeltaBlock {\n  /**\n   * The index of the content part in the message.\n   */\n  index: number;\n\n  /**\n   * Always `text`.\n   */\n  type: 'text';\n\n  text?: TextDelta;\n}\n\nexport interface MessageCreateParams {\n  /**\n   * The text contents of the message.\n   */\n  content: string | Array<MessageContentPartParam>;\n\n  /**\n   * The role of the entity that is creating the message. Allowed values include:\n   *\n   * - `user`: Indicates the message is sent by an actual user and should be used in\n   *   most cases to represent user-generated messages.\n   * - `assistant`: Indicates the message is generated by the assistant. Use this\n   *   value to insert messages from the assistant into the conversation.\n   */\n  role: 'user' | 'assistant';\n\n  /**\n   * A list of files attached to the message, and the tools they should be added to.\n   */\n  attachments?: Array<MessageCreateParams.Attachment> | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n}\n\nexport namespace MessageCreateParams {\n  export interface Attachment {\n    /**\n     * The ID of the file to attach to the message.\n     */\n    file_id?: string;\n\n    /**\n     * The tools to add this file to.\n     */\n    tools?: Array<AssistantsAPI.CodeInterpreterTool | Attachment.FileSearch>;\n  }\n\n  export namespace Attachment {\n    export interface FileSearch {\n      /**\n       * The type of tool being defined: `file_search`\n       */\n      type: 'file_search';\n    }\n  }\n}\n\nexport interface MessageRetrieveParams {\n  /**\n   * The ID of the [thread](https://platform.openai.com/docs/api-reference/threads)\n   * to which this message belongs.\n   */\n  thread_id: string;\n}\n\nexport interface MessageUpdateParams {\n  /**\n   * Path param: The ID of the thread to which this message belongs.\n   */\n  thread_id: string;\n\n  /**\n   * Body param: Set of 16 key-value pairs that can be attached to an object. This\n   * can be useful for storing additional information about the object in a\n   * structured format, and querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n}\n\nexport interface MessageListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\n   * to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n\n  /**\n   * Filter messages by the run ID that generated them.\n   */\n  run_id?: string;\n}\n\nexport interface MessageDeleteParams {\n  /**\n   * The ID of the thread to which this message belongs.\n   */\n  thread_id: string;\n}\n\nexport declare namespace Messages {\n  export {\n    type Annotation as Annotation,\n    type AnnotationDelta as AnnotationDelta,\n    type FileCitationAnnotation as FileCitationAnnotation,\n    type FileCitationDeltaAnnotation as FileCitationDeltaAnnotation,\n    type FilePathAnnotation as FilePathAnnotation,\n    type FilePathDeltaAnnotation as FilePathDeltaAnnotation,\n    type ImageFile as ImageFile,\n    type ImageFileContentBlock as ImageFileContentBlock,\n    type ImageFileDelta as ImageFileDelta,\n    type ImageFileDeltaBlock as ImageFileDeltaBlock,\n    type ImageURL as ImageURL,\n    type ImageURLContentBlock as ImageURLContentBlock,\n    type ImageURLDelta as ImageURLDelta,\n    type ImageURLDeltaBlock as ImageURLDeltaBlock,\n    type Message as Message,\n    type MessageContent as MessageContent,\n    type MessageContentDelta as MessageContentDelta,\n    type MessageContentPartParam as MessageContentPartParam,\n    type MessageDeleted as MessageDeleted,\n    type MessageDelta as MessageDelta,\n    type MessageDeltaEvent as MessageDeltaEvent,\n    type RefusalContentBlock as RefusalContentBlock,\n    type RefusalDeltaBlock as RefusalDeltaBlock,\n    type Text as Text,\n    type TextContentBlock as TextContentBlock,\n    type TextContentBlockParam as TextContentBlockParam,\n    type TextDelta as TextDelta,\n    type TextDeltaBlock as TextDeltaBlock,\n    type MessagesPage as MessagesPage,\n    type MessageCreateParams as MessageCreateParams,\n    type MessageRetrieveParams as MessageRetrieveParams,\n    type MessageUpdateParams as MessageUpdateParams,\n    type MessageListParams as MessageListParams,\n    type MessageDeleteParams as MessageDeleteParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../../core/resource';\nimport * as StepsAPI from './steps';\nimport * as Shared from '../../../shared';\nimport { APIPromise } from '../../../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../../../core/pagination';\nimport { buildHeaders } from '../../../../internal/headers';\nimport { RequestOptions } from '../../../../internal/request-options';\nimport { path } from '../../../../internal/utils/path';\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Steps extends APIResource {\n  /**\n   * Retrieves a run step.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  retrieve(stepID: string, params: StepRetrieveParams, options?: RequestOptions): APIPromise<RunStep> {\n    const { thread_id, run_id, ...query } = params;\n    return this._client.get(path`/threads/${thread_id}/runs/${run_id}/steps/${stepID}`, {\n      query,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Returns a list of run steps belonging to a run.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  list(runID: string, params: StepListParams, options?: RequestOptions): PagePromise<RunStepsPage, RunStep> {\n    const { thread_id, ...query } = params;\n    return this._client.getAPIList(path`/threads/${thread_id}/runs/${runID}/steps`, CursorPage<RunStep>, {\n      query,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n}\n\nexport type RunStepsPage = CursorPage<RunStep>;\n\n/**\n * Text output from the Code Interpreter tool call as part of a run step.\n */\nexport interface CodeInterpreterLogs {\n  /**\n   * The index of the output in the outputs array.\n   */\n  index: number;\n\n  /**\n   * Always `logs`.\n   */\n  type: 'logs';\n\n  /**\n   * The text output from the Code Interpreter tool call.\n   */\n  logs?: string;\n}\n\nexport interface CodeInterpreterOutputImage {\n  /**\n   * The index of the output in the outputs array.\n   */\n  index: number;\n\n  /**\n   * Always `image`.\n   */\n  type: 'image';\n\n  image?: CodeInterpreterOutputImage.Image;\n}\n\nexport namespace CodeInterpreterOutputImage {\n  export interface Image {\n    /**\n     * The [file](https://platform.openai.com/docs/api-reference/files) ID of the\n     * image.\n     */\n    file_id?: string;\n  }\n}\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n */\nexport interface CodeInterpreterToolCall {\n  /**\n   * The ID of the tool call.\n   */\n  id: string;\n\n  /**\n   * The Code Interpreter tool call definition.\n   */\n  code_interpreter: CodeInterpreterToolCall.CodeInterpreter;\n\n  /**\n   * The type of tool call. This is always going to be `code_interpreter` for this\n   * type of tool call.\n   */\n  type: 'code_interpreter';\n}\n\nexport namespace CodeInterpreterToolCall {\n  /**\n   * The Code Interpreter tool call definition.\n   */\n  export interface CodeInterpreter {\n    /**\n     * The input to the Code Interpreter tool call.\n     */\n    input: string;\n\n    /**\n     * The outputs from the Code Interpreter tool call. Code Interpreter can output one\n     * or more items, including text (`logs`) or images (`image`). Each of these are\n     * represented by a different object type.\n     */\n    outputs: Array<CodeInterpreter.Logs | CodeInterpreter.Image>;\n  }\n\n  export namespace CodeInterpreter {\n    /**\n     * Text output from the Code Interpreter tool call as part of a run step.\n     */\n    export interface Logs {\n      /**\n       * The text output from the Code Interpreter tool call.\n       */\n      logs: string;\n\n      /**\n       * Always `logs`.\n       */\n      type: 'logs';\n    }\n\n    export interface Image {\n      image: Image.Image;\n\n      /**\n       * Always `image`.\n       */\n      type: 'image';\n    }\n\n    export namespace Image {\n      export interface Image {\n        /**\n         * The [file](https://platform.openai.com/docs/api-reference/files) ID of the\n         * image.\n         */\n        file_id: string;\n      }\n    }\n  }\n}\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n */\nexport interface CodeInterpreterToolCallDelta {\n  /**\n   * The index of the tool call in the tool calls array.\n   */\n  index: number;\n\n  /**\n   * The type of tool call. This is always going to be `code_interpreter` for this\n   * type of tool call.\n   */\n  type: 'code_interpreter';\n\n  /**\n   * The ID of the tool call.\n   */\n  id?: string;\n\n  /**\n   * The Code Interpreter tool call definition.\n   */\n  code_interpreter?: CodeInterpreterToolCallDelta.CodeInterpreter;\n}\n\nexport namespace CodeInterpreterToolCallDelta {\n  /**\n   * The Code Interpreter tool call definition.\n   */\n  export interface CodeInterpreter {\n    /**\n     * The input to the Code Interpreter tool call.\n     */\n    input?: string;\n\n    /**\n     * The outputs from the Code Interpreter tool call. Code Interpreter can output one\n     * or more items, including text (`logs`) or images (`image`). Each of these are\n     * represented by a different object type.\n     */\n    outputs?: Array<StepsAPI.CodeInterpreterLogs | StepsAPI.CodeInterpreterOutputImage>;\n  }\n}\n\nexport interface FileSearchToolCall {\n  /**\n   * The ID of the tool call object.\n   */\n  id: string;\n\n  /**\n   * For now, this is always going to be an empty object.\n   */\n  file_search: FileSearchToolCall.FileSearch;\n\n  /**\n   * The type of tool call. This is always going to be `file_search` for this type of\n   * tool call.\n   */\n  type: 'file_search';\n}\n\nexport namespace FileSearchToolCall {\n  /**\n   * For now, this is always going to be an empty object.\n   */\n  export interface FileSearch {\n    /**\n     * The ranking options for the file search.\n     */\n    ranking_options?: FileSearch.RankingOptions;\n\n    /**\n     * The results of the file search.\n     */\n    results?: Array<FileSearch.Result>;\n  }\n\n  export namespace FileSearch {\n    /**\n     * The ranking options for the file search.\n     */\n    export interface RankingOptions {\n      /**\n       * The ranker to use for the file search. If not specified will use the `auto`\n       * ranker.\n       */\n      ranker: 'auto' | 'default_2024_08_21';\n\n      /**\n       * The score threshold for the file search. All values must be a floating point\n       * number between 0 and 1.\n       */\n      score_threshold: number;\n    }\n\n    /**\n     * A result instance of the file search.\n     */\n    export interface Result {\n      /**\n       * The ID of the file that result was found in.\n       */\n      file_id: string;\n\n      /**\n       * The name of the file that result was found in.\n       */\n      file_name: string;\n\n      /**\n       * The score of the result. All values must be a floating point number between 0\n       * and 1.\n       */\n      score: number;\n\n      /**\n       * The content of the result that was found. The content is only included if\n       * requested via the include query parameter.\n       */\n      content?: Array<Result.Content>;\n    }\n\n    export namespace Result {\n      export interface Content {\n        /**\n         * The text content of the file.\n         */\n        text?: string;\n\n        /**\n         * The type of the content.\n         */\n        type?: 'text';\n      }\n    }\n  }\n}\n\nexport interface FileSearchToolCallDelta {\n  /**\n   * For now, this is always going to be an empty object.\n   */\n  file_search: unknown;\n\n  /**\n   * The index of the tool call in the tool calls array.\n   */\n  index: number;\n\n  /**\n   * The type of tool call. This is always going to be `file_search` for this type of\n   * tool call.\n   */\n  type: 'file_search';\n\n  /**\n   * The ID of the tool call object.\n   */\n  id?: string;\n}\n\nexport interface FunctionToolCall {\n  /**\n   * The ID of the tool call object.\n   */\n  id: string;\n\n  /**\n   * The definition of the function that was called.\n   */\n  function: FunctionToolCall.Function;\n\n  /**\n   * The type of tool call. This is always going to be `function` for this type of\n   * tool call.\n   */\n  type: 'function';\n}\n\nexport namespace FunctionToolCall {\n  /**\n   * The definition of the function that was called.\n   */\n  export interface Function {\n    /**\n     * The arguments passed to the function.\n     */\n    arguments: string;\n\n    /**\n     * The name of the function.\n     */\n    name: string;\n\n    /**\n     * The output of the function. This will be `null` if the outputs have not been\n     * [submitted](https://platform.openai.com/docs/api-reference/runs/submitToolOutputs)\n     * yet.\n     */\n    output: string | null;\n  }\n}\n\nexport interface FunctionToolCallDelta {\n  /**\n   * The index of the tool call in the tool calls array.\n   */\n  index: number;\n\n  /**\n   * The type of tool call. This is always going to be `function` for this type of\n   * tool call.\n   */\n  type: 'function';\n\n  /**\n   * The ID of the tool call object.\n   */\n  id?: string;\n\n  /**\n   * The definition of the function that was called.\n   */\n  function?: FunctionToolCallDelta.Function;\n}\n\nexport namespace FunctionToolCallDelta {\n  /**\n   * The definition of the function that was called.\n   */\n  export interface Function {\n    /**\n     * The arguments passed to the function.\n     */\n    arguments?: string;\n\n    /**\n     * The name of the function.\n     */\n    name?: string;\n\n    /**\n     * The output of the function. This will be `null` if the outputs have not been\n     * [submitted](https://platform.openai.com/docs/api-reference/runs/submitToolOutputs)\n     * yet.\n     */\n    output?: string | null;\n  }\n}\n\n/**\n * Details of the message creation by the run step.\n */\nexport interface MessageCreationStepDetails {\n  message_creation: MessageCreationStepDetails.MessageCreation;\n\n  /**\n   * Always `message_creation`.\n   */\n  type: 'message_creation';\n}\n\nexport namespace MessageCreationStepDetails {\n  export interface MessageCreation {\n    /**\n     * The ID of the message that was created by this run step.\n     */\n    message_id: string;\n  }\n}\n\n/**\n * Represents a step in execution of a run.\n */\nexport interface RunStep {\n  /**\n   * The identifier of the run step, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants)\n   * associated with the run step.\n   */\n  assistant_id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run step was cancelled.\n   */\n  cancelled_at: number | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run step completed.\n   */\n  completed_at: number | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run step was created.\n   */\n  created_at: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run step expired. A step is\n   * considered expired if the parent run is expired.\n   */\n  expired_at: number | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run step failed.\n   */\n  failed_at: number | null;\n\n  /**\n   * The last error associated with this run step. Will be `null` if there are no\n   * errors.\n   */\n  last_error: RunStep.LastError | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The object type, which is always `thread.run.step`.\n   */\n  object: 'thread.run.step';\n\n  /**\n   * The ID of the [run](https://platform.openai.com/docs/api-reference/runs) that\n   * this run step is a part of.\n   */\n  run_id: string;\n\n  /**\n   * The status of the run step, which can be either `in_progress`, `cancelled`,\n   * `failed`, `completed`, or `expired`.\n   */\n  status: 'in_progress' | 'cancelled' | 'failed' | 'completed' | 'expired';\n\n  /**\n   * The details of the run step.\n   */\n  step_details: MessageCreationStepDetails | ToolCallsStepDetails;\n\n  /**\n   * The ID of the [thread](https://platform.openai.com/docs/api-reference/threads)\n   * that was run.\n   */\n  thread_id: string;\n\n  /**\n   * The type of run step, which can be either `message_creation` or `tool_calls`.\n   */\n  type: 'message_creation' | 'tool_calls';\n\n  /**\n   * Usage statistics related to the run step. This value will be `null` while the\n   * run step's status is `in_progress`.\n   */\n  usage: RunStep.Usage | null;\n}\n\nexport namespace RunStep {\n  /**\n   * The last error associated with this run step. Will be `null` if there are no\n   * errors.\n   */\n  export interface LastError {\n    /**\n     * One of `server_error` or `rate_limit_exceeded`.\n     */\n    code: 'server_error' | 'rate_limit_exceeded';\n\n    /**\n     * A human-readable description of the error.\n     */\n    message: string;\n  }\n\n  /**\n   * Usage statistics related to the run step. This value will be `null` while the\n   * run step's status is `in_progress`.\n   */\n  export interface Usage {\n    /**\n     * Number of completion tokens used over the course of the run step.\n     */\n    completion_tokens: number;\n\n    /**\n     * Number of prompt tokens used over the course of the run step.\n     */\n    prompt_tokens: number;\n\n    /**\n     * Total number of tokens used (prompt + completion).\n     */\n    total_tokens: number;\n  }\n}\n\n/**\n * The delta containing the fields that have changed on the run step.\n */\nexport interface RunStepDelta {\n  /**\n   * The details of the run step.\n   */\n  step_details?: RunStepDeltaMessageDelta | ToolCallDeltaObject;\n}\n\n/**\n * Represents a run step delta i.e. any changed fields on a run step during\n * streaming.\n */\nexport interface RunStepDeltaEvent {\n  /**\n   * The identifier of the run step, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The delta containing the fields that have changed on the run step.\n   */\n  delta: RunStepDelta;\n\n  /**\n   * The object type, which is always `thread.run.step.delta`.\n   */\n  object: 'thread.run.step.delta';\n}\n\n/**\n * Details of the message creation by the run step.\n */\nexport interface RunStepDeltaMessageDelta {\n  /**\n   * Always `message_creation`.\n   */\n  type: 'message_creation';\n\n  message_creation?: RunStepDeltaMessageDelta.MessageCreation;\n}\n\nexport namespace RunStepDeltaMessageDelta {\n  export interface MessageCreation {\n    /**\n     * The ID of the message that was created by this run step.\n     */\n    message_id?: string;\n  }\n}\n\nexport type RunStepInclude = 'step_details.tool_calls[*].file_search.results[*].content';\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n */\nexport type ToolCall = CodeInterpreterToolCall | FileSearchToolCall | FunctionToolCall;\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n */\nexport type ToolCallDelta = CodeInterpreterToolCallDelta | FileSearchToolCallDelta | FunctionToolCallDelta;\n\n/**\n * Details of the tool call.\n */\nexport interface ToolCallDeltaObject {\n  /**\n   * Always `tool_calls`.\n   */\n  type: 'tool_calls';\n\n  /**\n   * An array of tool calls the run step was involved in. These can be associated\n   * with one of three types of tools: `code_interpreter`, `file_search`, or\n   * `function`.\n   */\n  tool_calls?: Array<ToolCallDelta>;\n}\n\n/**\n * Details of the tool call.\n */\nexport interface ToolCallsStepDetails {\n  /**\n   * An array of tool calls the run step was involved in. These can be associated\n   * with one of three types of tools: `code_interpreter`, `file_search`, or\n   * `function`.\n   */\n  tool_calls: Array<ToolCall>;\n\n  /**\n   * Always `tool_calls`.\n   */\n  type: 'tool_calls';\n}\n\nexport interface StepRetrieveParams {\n  /**\n   * Path param: The ID of the thread to which the run and run step belongs.\n   */\n  thread_id: string;\n\n  /**\n   * Path param: The ID of the run to which the run step belongs.\n   */\n  run_id: string;\n\n  /**\n   * Query param: A list of additional fields to include in the response. Currently\n   * the only supported value is\n   * `step_details.tool_calls[*].file_search.results[*].content` to fetch the file\n   * search result content.\n   *\n   * See the\n   * [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings)\n   * for more information.\n   */\n  include?: Array<RunStepInclude>;\n}\n\nexport interface StepListParams extends CursorPageParams {\n  /**\n   * Path param: The ID of the thread the run and run steps belong to.\n   */\n  thread_id: string;\n\n  /**\n   * Query param: A cursor for use in pagination. `before` is an object ID that\n   * defines your place in the list. For instance, if you make a list request and\n   * receive 100 objects, starting with obj_foo, your subsequent call can include\n   * before=obj_foo in order to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Query param: A list of additional fields to include in the response. Currently\n   * the only supported value is\n   * `step_details.tool_calls[*].file_search.results[*].content` to fetch the file\n   * search result content.\n   *\n   * See the\n   * [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings)\n   * for more information.\n   */\n  include?: Array<RunStepInclude>;\n\n  /**\n   * Query param: Sort order by the `created_at` timestamp of the objects. `asc` for\n   * ascending order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport declare namespace Steps {\n  export {\n    type CodeInterpreterLogs as CodeInterpreterLogs,\n    type CodeInterpreterOutputImage as CodeInterpreterOutputImage,\n    type CodeInterpreterToolCall as CodeInterpreterToolCall,\n    type CodeInterpreterToolCallDelta as CodeInterpreterToolCallDelta,\n    type FileSearchToolCall as FileSearchToolCall,\n    type FileSearchToolCallDelta as FileSearchToolCallDelta,\n    type FunctionToolCall as FunctionToolCall,\n    type FunctionToolCallDelta as FunctionToolCallDelta,\n    type MessageCreationStepDetails as MessageCreationStepDetails,\n    type RunStep as RunStep,\n    type RunStepDelta as RunStepDelta,\n    type RunStepDeltaEvent as RunStepDeltaEvent,\n    type RunStepDeltaMessageDelta as RunStepDeltaMessageDelta,\n    type RunStepInclude as RunStepInclude,\n    type ToolCall as ToolCall,\n    type ToolCallDelta as ToolCallDelta,\n    type ToolCallDeltaObject as ToolCallDeltaObject,\n    type ToolCallsStepDetails as ToolCallsStepDetails,\n    type RunStepsPage as RunStepsPage,\n    type StepRetrieveParams as StepRetrieveParams,\n    type StepListParams as StepListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { OpenAIError } from '../../core/error';\nimport { encodeUTF8 } from './bytes';\n\nexport const toBase64 = (data: string | Uint8Array | null | undefined): string => {\n  if (!data) return '';\n\n  if (typeof (globalThis as any).Buffer !== 'undefined') {\n    return (globalThis as any).Buffer.from(data).toString('base64');\n  }\n\n  if (typeof data === 'string') {\n    data = encodeUTF8(data);\n  }\n\n  if (typeof btoa !== 'undefined') {\n    return btoa(String.fromCharCode.apply(null, data as any));\n  }\n\n  throw new OpenAIError('Cannot generate base64 string; Expected `Buffer` or `btoa` to be defined');\n};\n\nexport const fromBase64 = (str: string): Uint8Array => {\n  if (typeof (globalThis as any).Buffer !== 'undefined') {\n    const buf = (globalThis as any).Buffer.from(str, 'base64');\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  if (typeof atob !== 'undefined') {\n    const bstr = atob(str);\n    const buf = new Uint8Array(bstr.length);\n    for (let i = 0; i < bstr.length; i++) {\n      buf[i] = bstr.charCodeAt(i);\n    }\n    return buf;\n  }\n\n  throw new OpenAIError('Cannot decode base64 string; Expected `Buffer` or `atob` to be defined');\n};\n\n/**\n * Converts a Base64 encoded string to a Float32Array.\n * @param base64Str - The Base64 encoded string.\n * @returns An Array of numbers interpreted as Float32 values.\n */\nexport const toFloat32Array = (base64Str: string): Array<number> => {\n  if (typeof Buffer !== 'undefined') {\n    // for Node.js environment\n    const buf = Buffer.from(base64Str, 'base64');\n    return Array.from(\n      new Float32Array(buf.buffer, buf.byteOffset, buf.length / Float32Array.BYTES_PER_ELEMENT),\n    );\n  } else {\n    // for legacy web platform APIs\n    const binaryStr = atob(base64Str);\n    const len = binaryStr.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryStr.charCodeAt(i);\n    }\n    return Array.from(new Float32Array(bytes.buffer));\n  }\n};\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env: string): string | undefined => {\n  if (typeof (globalThis as any).process !== 'undefined') {\n    return (globalThis as any).process.env?.[env]?.trim() ?? undefined;\n  }\n  if (typeof (globalThis as any).Deno !== 'undefined') {\n    return (globalThis as any).Deno.env?.get?.(env)?.trim();\n  }\n  return undefined;\n};\n","import {\n  TextContentBlock,\n  ImageFileContentBlock,\n  Message,\n  MessageContentDelta,\n  Text,\n  ImageFile,\n  TextDelta,\n  MessageDelta,\n  MessageContent,\n} from '../resources/beta/threads/messages';\nimport { RequestOptions } from '../internal/request-options';\nimport {\n  Run,\n  RunCreateParamsBase,\n  RunCreateParamsStreaming,\n  Runs,\n  RunSubmitToolOutputsParamsBase,\n  RunSubmitToolOutputsParamsStreaming,\n} from '../resources/beta/threads/runs/runs';\nimport { type ReadableStream } from '../internal/shim-types';\nimport { Stream } from '../streaming';\nimport { APIUserAbortError, OpenAIError } from '../error';\nimport {\n  AssistantStreamEvent,\n  MessageStreamEvent,\n  RunStepStreamEvent,\n  RunStreamEvent,\n} from '../resources/beta/assistants';\nimport { RunStep, RunStepDelta, ToolCall, ToolCallDelta } from '../resources/beta/threads/runs/steps';\nimport { ThreadCreateAndRunParamsBase, Threads } from '../resources/beta/threads/threads';\nimport { BaseEvents, EventStream } from './EventStream';\nimport { isObj } from '../internal/utils';\n\nexport interface AssistantStreamEvents extends BaseEvents {\n  run: (run: Run) => void;\n\n  //New event structure\n  messageCreated: (message: Message) => void;\n  messageDelta: (message: MessageDelta, snapshot: Message) => void;\n  messageDone: (message: Message) => void;\n\n  runStepCreated: (runStep: RunStep) => void;\n  runStepDelta: (delta: RunStepDelta, snapshot: Runs.RunStep) => void;\n  runStepDone: (runStep: Runs.RunStep, snapshot: Runs.RunStep) => void;\n\n  toolCallCreated: (toolCall: ToolCall) => void;\n  toolCallDelta: (delta: ToolCallDelta, snapshot: ToolCall) => void;\n  toolCallDone: (toolCall: ToolCall) => void;\n\n  textCreated: (content: Text) => void;\n  textDelta: (delta: TextDelta, snapshot: Text) => void;\n  textDone: (content: Text, snapshot: Message) => void;\n\n  //No created or delta as this is not streamed\n  imageFileDone: (content: ImageFile, snapshot: Message) => void;\n\n  event: (event: AssistantStreamEvent) => void;\n}\n\nexport type ThreadCreateAndRunParamsBaseStream = Omit<ThreadCreateAndRunParamsBase, 'stream'> & {\n  stream?: true;\n};\n\nexport type RunCreateParamsBaseStream = Omit<RunCreateParamsBase, 'stream'> & {\n  stream?: true;\n};\n\nexport type RunSubmitToolOutputsParamsStream = Omit<RunSubmitToolOutputsParamsBase, 'stream'> & {\n  stream?: true;\n};\n\nexport class AssistantStream\n  extends EventStream<AssistantStreamEvents>\n  implements AsyncIterable<AssistantStreamEvent>\n{\n  //Track all events in a single list for reference\n  #events: AssistantStreamEvent[] = [];\n\n  //Used to accumulate deltas\n  //We are accumulating many types so the value here is not strict\n  #runStepSnapshots: { [id: string]: Runs.RunStep } = {};\n  #messageSnapshots: { [id: string]: Message } = {};\n  #messageSnapshot: Message | undefined;\n  #finalRun: Run | undefined;\n  #currentContentIndex: number | undefined;\n  #currentContent: MessageContent | undefined;\n  #currentToolCallIndex: number | undefined;\n  #currentToolCall: ToolCall | undefined;\n\n  //For current snapshot methods\n  #currentEvent: AssistantStreamEvent | undefined;\n  #currentRunSnapshot: Run | undefined;\n  #currentRunStepSnapshot: Runs.RunStep | undefined;\n\n  [Symbol.asyncIterator](): AsyncIterator<AssistantStreamEvent> {\n    const pushQueue: AssistantStreamEvent[] = [];\n    const readQueue: {\n      resolve: (chunk: AssistantStreamEvent | undefined) => void;\n      reject: (err: unknown) => void;\n    }[] = [];\n    let done = false;\n\n    //Catch all for passing along all events\n    this.on('event', (event) => {\n      const reader = readQueue.shift();\n      if (reader) {\n        reader.resolve(event);\n      } else {\n        pushQueue.push(event);\n      }\n    });\n\n    this.on('end', () => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.resolve(undefined);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('abort', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('error', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    return {\n      next: async (): Promise<IteratorResult<AssistantStreamEvent>> => {\n        if (!pushQueue.length) {\n          if (done) {\n            return { value: undefined, done: true };\n          }\n          return new Promise<AssistantStreamEvent | undefined>((resolve, reject) =>\n            readQueue.push({ resolve, reject }),\n          ).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n        }\n        const chunk = pushQueue.shift()!;\n        return { value: chunk, done: false };\n      },\n      return: async () => {\n        this.abort();\n        return { value: undefined, done: true };\n      },\n    };\n  }\n\n  static fromReadableStream(stream: ReadableStream): AssistantStream {\n    const runner = new AssistantStream();\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n\n  protected async _fromReadableStream(\n    readableStream: ReadableStream,\n    options?: RequestOptions,\n  ): Promise<Run> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    this._connected();\n    const stream = Stream.fromReadableStream<AssistantStreamEvent>(readableStream, this.controller);\n    for await (const event of stream) {\n      this.#addEvent(event);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addRun(this.#endRequest());\n  }\n\n  toReadableStream(): ReadableStream {\n    const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n    return stream.toReadableStream();\n  }\n\n  static createToolAssistantStream(\n    runId: string,\n    runs: Runs,\n    params: RunSubmitToolOutputsParamsStream,\n    options: RequestOptions | undefined,\n  ): AssistantStream {\n    const runner = new AssistantStream();\n    runner._run(() =>\n      runner._runToolAssistantStream(runId, runs, params, {\n        ...options,\n        headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n      }),\n    );\n    return runner;\n  }\n\n  protected async _createToolAssistantStream(\n    run: Runs,\n    runId: string,\n    params: RunSubmitToolOutputsParamsStream,\n    options?: RequestOptions,\n  ): Promise<Run> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n\n    const body: RunSubmitToolOutputsParamsStreaming = { ...params, stream: true };\n    const stream = await run.submitToolOutputs(runId, body, {\n      ...options,\n      signal: this.controller.signal,\n    });\n\n    this._connected();\n\n    for await (const event of stream) {\n      this.#addEvent(event);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    return this._addRun(this.#endRequest());\n  }\n\n  static createThreadAssistantStream(\n    params: ThreadCreateAndRunParamsBaseStream,\n    thread: Threads,\n    options?: RequestOptions,\n  ): AssistantStream {\n    const runner = new AssistantStream();\n    runner._run(() =>\n      runner._threadAssistantStream(params, thread, {\n        ...options,\n        headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n      }),\n    );\n    return runner;\n  }\n\n  static createAssistantStream(\n    threadId: string,\n    runs: Runs,\n    params: RunCreateParamsBaseStream,\n    options?: RequestOptions,\n  ): AssistantStream {\n    const runner = new AssistantStream();\n    runner._run(() =>\n      runner._runAssistantStream(threadId, runs, params, {\n        ...options,\n        headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n      }),\n    );\n    return runner;\n  }\n\n  currentEvent(): AssistantStreamEvent | undefined {\n    return this.#currentEvent;\n  }\n\n  currentRun(): Run | undefined {\n    return this.#currentRunSnapshot;\n  }\n\n  currentMessageSnapshot(): Message | undefined {\n    return this.#messageSnapshot;\n  }\n\n  currentRunStepSnapshot(): Runs.RunStep | undefined {\n    return this.#currentRunStepSnapshot;\n  }\n\n  async finalRunSteps(): Promise<Runs.RunStep[]> {\n    await this.done();\n\n    return Object.values(this.#runStepSnapshots);\n  }\n\n  async finalMessages(): Promise<Message[]> {\n    await this.done();\n\n    return Object.values(this.#messageSnapshots);\n  }\n\n  async finalRun(): Promise<Run> {\n    await this.done();\n    if (!this.#finalRun) throw Error('Final run was not received.');\n\n    return this.#finalRun;\n  }\n\n  protected async _createThreadAssistantStream(\n    thread: Threads,\n    params: ThreadCreateAndRunParamsBase,\n    options?: RequestOptions,\n  ): Promise<Run> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n\n    const body: RunCreateParamsStreaming = { ...params, stream: true };\n    const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n\n    this._connected();\n\n    for await (const event of stream) {\n      this.#addEvent(event);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    return this._addRun(this.#endRequest());\n  }\n\n  protected async _createAssistantStream(\n    run: Runs,\n    threadId: string,\n    params: RunCreateParamsBase,\n    options?: RequestOptions,\n  ): Promise<Run> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n\n    const body: RunCreateParamsStreaming = { ...params, stream: true };\n    const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n\n    this._connected();\n\n    for await (const event of stream) {\n      this.#addEvent(event);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    return this._addRun(this.#endRequest());\n  }\n\n  #addEvent(event: AssistantStreamEvent) {\n    if (this.ended) return;\n\n    this.#currentEvent = event;\n\n    this.#handleEvent(event);\n\n    switch (event.event) {\n      case 'thread.created':\n        //No action on this event.\n        break;\n\n      case 'thread.run.created':\n      case 'thread.run.queued':\n      case 'thread.run.in_progress':\n      case 'thread.run.requires_action':\n      case 'thread.run.completed':\n      case 'thread.run.incomplete':\n      case 'thread.run.failed':\n      case 'thread.run.cancelling':\n      case 'thread.run.cancelled':\n      case 'thread.run.expired':\n        this.#handleRun(event);\n        break;\n\n      case 'thread.run.step.created':\n      case 'thread.run.step.in_progress':\n      case 'thread.run.step.delta':\n      case 'thread.run.step.completed':\n      case 'thread.run.step.failed':\n      case 'thread.run.step.cancelled':\n      case 'thread.run.step.expired':\n        this.#handleRunStep(event);\n        break;\n\n      case 'thread.message.created':\n      case 'thread.message.in_progress':\n      case 'thread.message.delta':\n      case 'thread.message.completed':\n      case 'thread.message.incomplete':\n        this.#handleMessage(event);\n        break;\n\n      case 'error':\n        //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n        throw new Error(\n          'Encountered an error event in event processing - errors should be processed earlier',\n        );\n      default:\n        assertNever(event);\n    }\n  }\n\n  #endRequest(): Run {\n    if (this.ended) {\n      throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n\n    if (!this.#finalRun) throw Error('Final run has not been received');\n\n    return this.#finalRun;\n  }\n\n  #handleMessage(this: AssistantStream, event: MessageStreamEvent) {\n    const [accumulatedMessage, newContent] = this.#accumulateMessage(event, this.#messageSnapshot);\n    this.#messageSnapshot = accumulatedMessage;\n    this.#messageSnapshots[accumulatedMessage.id] = accumulatedMessage;\n\n    for (const content of newContent) {\n      const snapshotContent = accumulatedMessage.content[content.index];\n      if (snapshotContent?.type == 'text') {\n        this._emit('textCreated', snapshotContent.text);\n      }\n    }\n\n    switch (event.event) {\n      case 'thread.message.created':\n        this._emit('messageCreated', event.data);\n        break;\n\n      case 'thread.message.in_progress':\n        break;\n\n      case 'thread.message.delta':\n        this._emit('messageDelta', event.data.delta, accumulatedMessage);\n\n        if (event.data.delta.content) {\n          for (const content of event.data.delta.content) {\n            //If it is text delta, emit a text delta event\n            if (content.type == 'text' && content.text) {\n              let textDelta = content.text;\n              let snapshot = accumulatedMessage.content[content.index];\n              if (snapshot && snapshot.type == 'text') {\n                this._emit('textDelta', textDelta, snapshot.text);\n              } else {\n                throw Error('The snapshot associated with this text delta is not text or missing');\n              }\n            }\n\n            if (content.index != this.#currentContentIndex) {\n              //See if we have in progress content\n              if (this.#currentContent) {\n                switch (this.#currentContent.type) {\n                  case 'text':\n                    this._emit('textDone', this.#currentContent.text, this.#messageSnapshot);\n                    break;\n                  case 'image_file':\n                    this._emit('imageFileDone', this.#currentContent.image_file, this.#messageSnapshot);\n                    break;\n                }\n              }\n\n              this.#currentContentIndex = content.index;\n            }\n\n            this.#currentContent = accumulatedMessage.content[content.index];\n          }\n        }\n\n        break;\n\n      case 'thread.message.completed':\n      case 'thread.message.incomplete':\n        //We emit the latest content we were working on on completion (including incomplete)\n        if (this.#currentContentIndex !== undefined) {\n          const currentContent = event.data.content[this.#currentContentIndex];\n          if (currentContent) {\n            switch (currentContent.type) {\n              case 'image_file':\n                this._emit('imageFileDone', currentContent.image_file, this.#messageSnapshot);\n                break;\n              case 'text':\n                this._emit('textDone', currentContent.text, this.#messageSnapshot);\n                break;\n            }\n          }\n        }\n\n        if (this.#messageSnapshot) {\n          this._emit('messageDone', event.data);\n        }\n\n        this.#messageSnapshot = undefined;\n    }\n  }\n\n  #handleRunStep(this: AssistantStream, event: RunStepStreamEvent) {\n    const accumulatedRunStep = this.#accumulateRunStep(event);\n    this.#currentRunStepSnapshot = accumulatedRunStep;\n\n    switch (event.event) {\n      case 'thread.run.step.created':\n        this._emit('runStepCreated', event.data);\n        break;\n      case 'thread.run.step.delta':\n        const delta = event.data.delta;\n        if (\n          delta.step_details &&\n          delta.step_details.type == 'tool_calls' &&\n          delta.step_details.tool_calls &&\n          accumulatedRunStep.step_details.type == 'tool_calls'\n        ) {\n          for (const toolCall of delta.step_details.tool_calls) {\n            if (toolCall.index == this.#currentToolCallIndex) {\n              this._emit(\n                'toolCallDelta',\n                toolCall,\n                accumulatedRunStep.step_details.tool_calls[toolCall.index] as ToolCall,\n              );\n            } else {\n              if (this.#currentToolCall) {\n                this._emit('toolCallDone', this.#currentToolCall);\n              }\n\n              this.#currentToolCallIndex = toolCall.index;\n              this.#currentToolCall = accumulatedRunStep.step_details.tool_calls[toolCall.index];\n              if (this.#currentToolCall) this._emit('toolCallCreated', this.#currentToolCall);\n            }\n          }\n        }\n\n        this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n        break;\n      case 'thread.run.step.completed':\n      case 'thread.run.step.failed':\n      case 'thread.run.step.cancelled':\n      case 'thread.run.step.expired':\n        this.#currentRunStepSnapshot = undefined;\n        const details = event.data.step_details;\n        if (details.type == 'tool_calls') {\n          if (this.#currentToolCall) {\n            this._emit('toolCallDone', this.#currentToolCall as ToolCall);\n            this.#currentToolCall = undefined;\n          }\n        }\n        this._emit('runStepDone', event.data, accumulatedRunStep);\n        break;\n      case 'thread.run.step.in_progress':\n        break;\n    }\n  }\n\n  #handleEvent(this: AssistantStream, event: AssistantStreamEvent) {\n    this.#events.push(event);\n    this._emit('event', event);\n  }\n\n  #accumulateRunStep(event: RunStepStreamEvent): Runs.RunStep {\n    switch (event.event) {\n      case 'thread.run.step.created':\n        this.#runStepSnapshots[event.data.id] = event.data;\n        return event.data;\n\n      case 'thread.run.step.delta':\n        let snapshot = this.#runStepSnapshots[event.data.id] as Runs.RunStep;\n        if (!snapshot) {\n          throw Error('Received a RunStepDelta before creation of a snapshot');\n        }\n\n        let data = event.data;\n\n        if (data.delta) {\n          const accumulated = AssistantStream.accumulateDelta(snapshot, data.delta) as Runs.RunStep;\n          this.#runStepSnapshots[event.data.id] = accumulated;\n        }\n\n        return this.#runStepSnapshots[event.data.id] as Runs.RunStep;\n\n      case 'thread.run.step.completed':\n      case 'thread.run.step.failed':\n      case 'thread.run.step.cancelled':\n      case 'thread.run.step.expired':\n      case 'thread.run.step.in_progress':\n        this.#runStepSnapshots[event.data.id] = event.data;\n        break;\n    }\n\n    if (this.#runStepSnapshots[event.data.id]) return this.#runStepSnapshots[event.data.id] as Runs.RunStep;\n    throw new Error('No snapshot available');\n  }\n\n  #accumulateMessage(\n    event: AssistantStreamEvent,\n    snapshot: Message | undefined,\n  ): [Message, MessageContentDelta[]] {\n    let newContent: MessageContentDelta[] = [];\n\n    switch (event.event) {\n      case 'thread.message.created':\n        //On creation the snapshot is just the initial message\n        return [event.data, newContent];\n\n      case 'thread.message.delta':\n        if (!snapshot) {\n          throw Error(\n            'Received a delta with no existing snapshot (there should be one from message creation)',\n          );\n        }\n\n        let data = event.data;\n\n        //If this delta does not have content, nothing to process\n        if (data.delta.content) {\n          for (const contentElement of data.delta.content) {\n            if (contentElement.index in snapshot.content) {\n              let currentContent = snapshot.content[contentElement.index];\n              snapshot.content[contentElement.index] = this.#accumulateContent(\n                contentElement,\n                currentContent,\n              );\n            } else {\n              snapshot.content[contentElement.index] = contentElement as MessageContent;\n              // This is a new element\n              newContent.push(contentElement);\n            }\n          }\n        }\n\n        return [snapshot, newContent];\n\n      case 'thread.message.in_progress':\n      case 'thread.message.completed':\n      case 'thread.message.incomplete':\n        //No changes on other thread events\n        if (snapshot) {\n          return [snapshot, newContent];\n        } else {\n          throw Error('Received thread message event with no existing snapshot');\n        }\n    }\n    throw Error('Tried to accumulate a non-message event');\n  }\n\n  #accumulateContent(\n    contentElement: MessageContentDelta,\n    currentContent: MessageContent | undefined,\n  ): TextContentBlock | ImageFileContentBlock {\n    return AssistantStream.accumulateDelta(currentContent as unknown as Record<any, any>, contentElement) as\n      | TextContentBlock\n      | ImageFileContentBlock;\n  }\n\n  static accumulateDelta(acc: Record<string, any>, delta: Record<string, any>): Record<string, any> {\n    for (const [key, deltaValue] of Object.entries(delta)) {\n      if (!acc.hasOwnProperty(key)) {\n        acc[key] = deltaValue;\n        continue;\n      }\n\n      let accValue = acc[key];\n      if (accValue === null || accValue === undefined) {\n        acc[key] = deltaValue;\n        continue;\n      }\n\n      // We don't accumulate these special properties\n      if (key === 'index' || key === 'type') {\n        acc[key] = deltaValue;\n        continue;\n      }\n\n      // Type-specific accumulation logic\n      if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n        accValue += deltaValue;\n      } else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n        accValue += deltaValue;\n      } else if (isObj(accValue) && isObj(deltaValue)) {\n        accValue = this.accumulateDelta(accValue as Record<string, any>, deltaValue as Record<string, any>);\n      } else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n        if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n          accValue.push(...deltaValue); // Use spread syntax for efficient addition\n          continue;\n        }\n\n        for (const deltaEntry of deltaValue) {\n          if (!isObj(deltaEntry)) {\n            throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n          }\n\n          const index = deltaEntry['index'];\n          if (index == null) {\n            console.error(deltaEntry);\n            throw new Error('Expected array delta entry to have an `index` property');\n          }\n\n          if (typeof index !== 'number') {\n            throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n          }\n\n          const accEntry = accValue[index];\n          if (accEntry == null) {\n            accValue.push(deltaEntry);\n          } else {\n            accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n          }\n        }\n        continue;\n      } else {\n        throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n      }\n      acc[key] = accValue;\n    }\n\n    return acc;\n  }\n\n  #handleRun(this: AssistantStream, event: RunStreamEvent) {\n    this.#currentRunSnapshot = event.data;\n\n    switch (event.event) {\n      case 'thread.run.created':\n        break;\n      case 'thread.run.queued':\n        break;\n      case 'thread.run.in_progress':\n        break;\n      case 'thread.run.requires_action':\n      case 'thread.run.cancelled':\n      case 'thread.run.failed':\n      case 'thread.run.completed':\n      case 'thread.run.expired':\n      case 'thread.run.incomplete':\n        this.#finalRun = event.data;\n        if (this.#currentToolCall) {\n          this._emit('toolCallDone', this.#currentToolCall);\n          this.#currentToolCall = undefined;\n        }\n        break;\n      case 'thread.run.cancelling':\n        break;\n    }\n  }\n\n  protected _addRun(run: Run): Run {\n    return run;\n  }\n\n  protected async _threadAssistantStream(\n    params: ThreadCreateAndRunParamsBase,\n    thread: Threads,\n    options?: RequestOptions,\n  ): Promise<Run> {\n    return await this._createThreadAssistantStream(thread, params, options);\n  }\n\n  protected async _runAssistantStream(\n    threadId: string,\n    runs: Runs,\n    params: RunCreateParamsBase,\n    options?: RequestOptions,\n  ): Promise<Run> {\n    return await this._createAssistantStream(runs, threadId, params, options);\n  }\n\n  protected async _runToolAssistantStream(\n    runId: string,\n    runs: Runs,\n    params: RunSubmitToolOutputsParamsStream,\n    options?: RequestOptions,\n  ): Promise<Run> {\n    return await this._createToolAssistantStream(runs, runId, params, options);\n  }\n}\n\nfunction assertNever(_x: never) {}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../../core/resource';\nimport * as RunsAPI from './runs';\nimport * as Shared from '../../../shared';\nimport * as AssistantsAPI from '../../assistants';\nimport * as MessagesAPI from '../messages';\nimport * as ThreadsAPI from '../threads';\nimport * as StepsAPI from './steps';\nimport {\n  CodeInterpreterLogs,\n  CodeInterpreterOutputImage,\n  CodeInterpreterToolCall,\n  CodeInterpreterToolCallDelta,\n  FileSearchToolCall,\n  FileSearchToolCallDelta,\n  FunctionToolCall,\n  FunctionToolCallDelta,\n  MessageCreationStepDetails,\n  RunStep,\n  RunStepDelta,\n  RunStepDeltaEvent,\n  RunStepDeltaMessageDelta,\n  RunStepInclude,\n  RunStepsPage,\n  StepListParams,\n  StepRetrieveParams,\n  Steps,\n  ToolCall,\n  ToolCallDelta,\n  ToolCallDeltaObject,\n  ToolCallsStepDetails,\n} from './steps';\nimport { APIPromise } from '../../../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../../../core/pagination';\nimport { Stream } from '../../../../core/streaming';\nimport { buildHeaders } from '../../../../internal/headers';\nimport { RequestOptions } from '../../../../internal/request-options';\nimport { AssistantStream, RunCreateParamsBaseStream } from '../../../../lib/AssistantStream';\nimport { sleep } from '../../../../internal/utils/sleep';\nimport { RunSubmitToolOutputsParamsStream } from '../../../../lib/AssistantStream';\nimport { path } from '../../../../internal/utils/path';\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Runs extends APIResource {\n  steps: StepsAPI.Steps = new StepsAPI.Steps(this._client);\n\n  /**\n   * Create a run.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  create(threadID: string, params: RunCreateParamsNonStreaming, options?: RequestOptions): APIPromise<Run>;\n  create(\n    threadID: string,\n    params: RunCreateParamsStreaming,\n    options?: RequestOptions,\n  ): APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>>;\n  create(\n    threadID: string,\n    params: RunCreateParamsBase,\n    options?: RequestOptions,\n  ): APIPromise<Stream<AssistantsAPI.AssistantStreamEvent> | Run>;\n  create(\n    threadID: string,\n    params: RunCreateParams,\n    options?: RequestOptions,\n  ): APIPromise<Run> | APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>> {\n    const { include, ...body } = params;\n    return this._client.post(path`/threads/${threadID}/runs`, {\n      query: { include },\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n      stream: params.stream ?? false,\n    }) as APIPromise<Run> | APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>>;\n  }\n\n  /**\n   * Retrieves a run.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  retrieve(runID: string, params: RunRetrieveParams, options?: RequestOptions): APIPromise<Run> {\n    const { thread_id } = params;\n    return this._client.get(path`/threads/${thread_id}/runs/${runID}`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Modifies a run.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  update(runID: string, params: RunUpdateParams, options?: RequestOptions): APIPromise<Run> {\n    const { thread_id, ...body } = params;\n    return this._client.post(path`/threads/${thread_id}/runs/${runID}`, {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Returns a list of runs belonging to a thread.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  list(\n    threadID: string,\n    query: RunListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<RunsPage, Run> {\n    return this._client.getAPIList(path`/threads/${threadID}/runs`, CursorPage<Run>, {\n      query,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Cancels a run that is `in_progress`.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  cancel(runID: string, params: RunCancelParams, options?: RequestOptions): APIPromise<Run> {\n    const { thread_id } = params;\n    return this._client.post(path`/threads/${thread_id}/runs/${runID}/cancel`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * A helper to create a run an poll for a terminal state. More information on Run\n   * lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async createAndPoll(\n    threadId: string,\n    body: RunCreateParamsNonStreaming,\n    options?: RequestOptions & { pollIntervalMs?: number },\n  ): Promise<Run> {\n    const run = await this.create(threadId, body, options);\n    return await this.poll(run.id, { thread_id: threadId }, options);\n  }\n\n  /**\n   * Create a Run stream\n   *\n   * @deprecated use `stream` instead\n   */\n  createAndStream(\n    threadId: string,\n    body: RunCreateParamsBaseStream,\n    options?: RequestOptions,\n  ): AssistantStream {\n    return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n  }\n\n  /**\n   * A helper to poll a run status until it reaches a terminal state. More\n   * information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async poll(\n    runId: string,\n    params: RunRetrieveParams,\n    options?: RequestOptions & { pollIntervalMs?: number },\n  ): Promise<Run> {\n    const headers = buildHeaders([\n      options?.headers,\n      {\n        'X-Stainless-Poll-Helper': 'true',\n        'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n      },\n    ]);\n\n    while (true) {\n      const { data: run, response } = await this.retrieve(runId, params, {\n        ...options,\n        headers: { ...options?.headers, ...headers },\n      }).withResponse();\n\n      switch (run.status) {\n        //If we are in any sort of intermediate state we poll\n        case 'queued':\n        case 'in_progress':\n        case 'cancelling':\n          let sleepInterval = 5000;\n\n          if (options?.pollIntervalMs) {\n            sleepInterval = options.pollIntervalMs;\n          } else {\n            const headerInterval = response.headers.get('openai-poll-after-ms');\n            if (headerInterval) {\n              const headerIntervalMs = parseInt(headerInterval);\n              if (!isNaN(headerIntervalMs)) {\n                sleepInterval = headerIntervalMs;\n              }\n            }\n          }\n          await sleep(sleepInterval);\n          break;\n        //We return the run in any terminal state.\n        case 'requires_action':\n        case 'incomplete':\n        case 'cancelled':\n        case 'completed':\n        case 'failed':\n        case 'expired':\n          return run;\n      }\n    }\n  }\n\n  /**\n   * Create a Run stream\n   */\n  stream(threadId: string, body: RunCreateParamsBaseStream, options?: RequestOptions): AssistantStream {\n    return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n  }\n\n  /**\n   * When a run has the `status: \"requires_action\"` and `required_action.type` is\n   * `submit_tool_outputs`, this endpoint can be used to submit the outputs from the\n   * tool calls once they're all completed. All outputs must be submitted in a single\n   * request.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  submitToolOutputs(\n    runID: string,\n    params: RunSubmitToolOutputsParamsNonStreaming,\n    options?: RequestOptions,\n  ): APIPromise<Run>;\n  submitToolOutputs(\n    runID: string,\n    params: RunSubmitToolOutputsParamsStreaming,\n    options?: RequestOptions,\n  ): APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>>;\n  submitToolOutputs(\n    runID: string,\n    params: RunSubmitToolOutputsParamsBase,\n    options?: RequestOptions,\n  ): APIPromise<Stream<AssistantsAPI.AssistantStreamEvent> | Run>;\n  submitToolOutputs(\n    runID: string,\n    params: RunSubmitToolOutputsParams,\n    options?: RequestOptions,\n  ): APIPromise<Run> | APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>> {\n    const { thread_id, ...body } = params;\n    return this._client.post(path`/threads/${thread_id}/runs/${runID}/submit_tool_outputs`, {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n      stream: params.stream ?? false,\n    }) as APIPromise<Run> | APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>>;\n  }\n\n  /**\n   * A helper to submit a tool output to a run and poll for a terminal run state.\n   * More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async submitToolOutputsAndPoll(\n    runId: string,\n    params: RunSubmitToolOutputsParamsNonStreaming,\n    options?: RequestOptions & { pollIntervalMs?: number },\n  ): Promise<Run> {\n    const run = await this.submitToolOutputs(runId, params, options);\n    return await this.poll(run.id, params, options);\n  }\n\n  /**\n   * Submit the tool outputs from a previous run and stream the run to a terminal\n   * state. More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  submitToolOutputsStream(\n    runId: string,\n    params: RunSubmitToolOutputsParamsStream,\n    options?: RequestOptions,\n  ): AssistantStream {\n    return AssistantStream.createToolAssistantStream(runId, this._client.beta.threads.runs, params, options);\n  }\n}\n\nexport type RunsPage = CursorPage<Run>;\n\n/**\n * Tool call objects\n */\nexport interface RequiredActionFunctionToolCall {\n  /**\n   * The ID of the tool call. This ID must be referenced when you submit the tool\n   * outputs in using the\n   * [Submit tool outputs to run](https://platform.openai.com/docs/api-reference/runs/submitToolOutputs)\n   * endpoint.\n   */\n  id: string;\n\n  /**\n   * The function definition.\n   */\n  function: RequiredActionFunctionToolCall.Function;\n\n  /**\n   * The type of tool call the output is required for. For now, this is always\n   * `function`.\n   */\n  type: 'function';\n}\n\nexport namespace RequiredActionFunctionToolCall {\n  /**\n   * The function definition.\n   */\n  export interface Function {\n    /**\n     * The arguments that the model expects you to pass to the function.\n     */\n    arguments: string;\n\n    /**\n     * The name of the function.\n     */\n    name: string;\n  }\n}\n\n/**\n * Represents an execution run on a\n * [thread](https://platform.openai.com/docs/api-reference/threads).\n */\nexport interface Run {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) used for\n   * execution of this run.\n   */\n  assistant_id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run was cancelled.\n   */\n  cancelled_at: number | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run was completed.\n   */\n  completed_at: number | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run was created.\n   */\n  created_at: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run will expire.\n   */\n  expires_at: number | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run failed.\n   */\n  failed_at: number | null;\n\n  /**\n   * Details on why the run is incomplete. Will be `null` if the run is not\n   * incomplete.\n   */\n  incomplete_details: Run.IncompleteDetails | null;\n\n  /**\n   * The instructions that the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) used for\n   * this run.\n   */\n  instructions: string;\n\n  /**\n   * The last error associated with this run. Will be `null` if there are no errors.\n   */\n  last_error: Run.LastError | null;\n\n  /**\n   * The maximum number of completion tokens specified to have been used over the\n   * course of the run.\n   */\n  max_completion_tokens: number | null;\n\n  /**\n   * The maximum number of prompt tokens specified to have been used over the course\n   * of the run.\n   */\n  max_prompt_tokens: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The model that the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) used for\n   * this run.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always `thread.run`.\n   */\n  object: 'thread.run';\n\n  /**\n   * Whether to enable\n   * [parallel function calling](https://platform.openai.com/docs/guides/function-calling#configuring-parallel-function-calling)\n   * during tool use.\n   */\n  parallel_tool_calls: boolean;\n\n  /**\n   * Details on the action required to continue the run. Will be `null` if no action\n   * is required.\n   */\n  required_action: Run.RequiredAction | null;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run was started.\n   */\n  started_at: number | null;\n\n  /**\n   * The status of the run, which can be either `queued`, `in_progress`,\n   * `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`,\n   * `incomplete`, or `expired`.\n   */\n  status: RunStatus;\n\n  /**\n   * The ID of the [thread](https://platform.openai.com/docs/api-reference/threads)\n   * that was executed on as a part of this run.\n   */\n  thread_id: string;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tools and instead generates a message. `auto` is the default value\n   * and means the model can pick between generating a message or calling one or more\n   * tools. `required` means the model must call one or more tools before responding\n   * to the user. Specifying a particular tool like `{\"type\": \"file_search\"}` or\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   */\n  tool_choice: ThreadsAPI.AssistantToolChoiceOption | null;\n\n  /**\n   * The list of tools that the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) used for\n   * this run.\n   */\n  tools: Array<AssistantsAPI.AssistantTool>;\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  truncation_strategy: Run.TruncationStrategy | null;\n\n  /**\n   * Usage statistics related to the run. This value will be `null` if the run is not\n   * in a terminal state (i.e. `in_progress`, `queued`, etc.).\n   */\n  usage: Run.Usage | null;\n\n  /**\n   * The sampling temperature used for this run. If not set, defaults to 1.\n   */\n  temperature?: number | null;\n\n  /**\n   * The nucleus sampling value used for this run. If not set, defaults to 1.\n   */\n  top_p?: number | null;\n}\n\nexport namespace Run {\n  /**\n   * Details on why the run is incomplete. Will be `null` if the run is not\n   * incomplete.\n   */\n  export interface IncompleteDetails {\n    /**\n     * The reason why the run is incomplete. This will point to which specific token\n     * limit was reached over the course of the run.\n     */\n    reason?: 'max_completion_tokens' | 'max_prompt_tokens';\n  }\n\n  /**\n   * The last error associated with this run. Will be `null` if there are no errors.\n   */\n  export interface LastError {\n    /**\n     * One of `server_error`, `rate_limit_exceeded`, or `invalid_prompt`.\n     */\n    code: 'server_error' | 'rate_limit_exceeded' | 'invalid_prompt';\n\n    /**\n     * A human-readable description of the error.\n     */\n    message: string;\n  }\n\n  /**\n   * Details on the action required to continue the run. Will be `null` if no action\n   * is required.\n   */\n  export interface RequiredAction {\n    /**\n     * Details on the tool outputs needed for this run to continue.\n     */\n    submit_tool_outputs: RequiredAction.SubmitToolOutputs;\n\n    /**\n     * For now, this is always `submit_tool_outputs`.\n     */\n    type: 'submit_tool_outputs';\n  }\n\n  export namespace RequiredAction {\n    /**\n     * Details on the tool outputs needed for this run to continue.\n     */\n    export interface SubmitToolOutputs {\n      /**\n       * A list of the relevant tool calls.\n       */\n      tool_calls: Array<RunsAPI.RequiredActionFunctionToolCall>;\n    }\n  }\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  export interface TruncationStrategy {\n    /**\n     * The truncation strategy to use for the thread. The default is `auto`. If set to\n     * `last_messages`, the thread will be truncated to the n most recent messages in\n     * the thread. When set to `auto`, messages in the middle of the thread will be\n     * dropped to fit the context length of the model, `max_prompt_tokens`.\n     */\n    type: 'auto' | 'last_messages';\n\n    /**\n     * The number of most recent messages from the thread when constructing the context\n     * for the run.\n     */\n    last_messages?: number | null;\n  }\n\n  /**\n   * Usage statistics related to the run. This value will be `null` if the run is not\n   * in a terminal state (i.e. `in_progress`, `queued`, etc.).\n   */\n  export interface Usage {\n    /**\n     * Number of completion tokens used over the course of the run.\n     */\n    completion_tokens: number;\n\n    /**\n     * Number of prompt tokens used over the course of the run.\n     */\n    prompt_tokens: number;\n\n    /**\n     * Total number of tokens used (prompt + completion).\n     */\n    total_tokens: number;\n  }\n}\n\n/**\n * The status of the run, which can be either `queued`, `in_progress`,\n * `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`,\n * `incomplete`, or `expired`.\n */\nexport type RunStatus =\n  | 'queued'\n  | 'in_progress'\n  | 'requires_action'\n  | 'cancelling'\n  | 'cancelled'\n  | 'failed'\n  | 'completed'\n  | 'incomplete'\n  | 'expired';\n\nexport type RunCreateParams = RunCreateParamsNonStreaming | RunCreateParamsStreaming;\n\nexport interface RunCreateParamsBase {\n  /**\n   * Body param: The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) to use to\n   * execute this run.\n   */\n  assistant_id: string;\n\n  /**\n   * Query param: A list of additional fields to include in the response. Currently\n   * the only supported value is\n   * `step_details.tool_calls[*].file_search.results[*].content` to fetch the file\n   * search result content.\n   *\n   * See the\n   * [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings)\n   * for more information.\n   */\n  include?: Array<StepsAPI.RunStepInclude>;\n\n  /**\n   * Body param: Appends additional instructions at the end of the instructions for\n   * the run. This is useful for modifying the behavior on a per-run basis without\n   * overriding other instructions.\n   */\n  additional_instructions?: string | null;\n\n  /**\n   * Body param: Adds additional messages to the thread before creating the run.\n   */\n  additional_messages?: Array<RunCreateParams.AdditionalMessage> | null;\n\n  /**\n   * Body param: Overrides the\n   * [instructions](https://platform.openai.com/docs/api-reference/assistants/createAssistant)\n   * of the assistant. This is useful for modifying the behavior on a per-run basis.\n   */\n  instructions?: string | null;\n\n  /**\n   * Body param: The maximum number of completion tokens that may be used over the\n   * course of the run. The run will make a best effort to use only the number of\n   * completion tokens specified, across multiple turns of the run. If the run\n   * exceeds the number of completion tokens specified, the run will end with status\n   * `incomplete`. See `incomplete_details` for more info.\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * Body param: The maximum number of prompt tokens that may be used over the course\n   * of the run. The run will make a best effort to use only the number of prompt\n   * tokens specified, across multiple turns of the run. If the run exceeds the\n   * number of prompt tokens specified, the run will end with status `incomplete`.\n   * See `incomplete_details` for more info.\n   */\n  max_prompt_tokens?: number | null;\n\n  /**\n   * Body param: Set of 16 key-value pairs that can be attached to an object. This\n   * can be useful for storing additional information about the object in a\n   * structured format, and querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * Body param: The ID of the\n   * [Model](https://platform.openai.com/docs/api-reference/models) to be used to\n   * execute this run. If a value is provided here, it will override the model\n   * associated with the assistant. If not, the model associated with the assistant\n   * will be used.\n   */\n  model?: (string & {}) | Shared.ChatModel | null;\n\n  /**\n   * Body param: Whether to enable\n   * [parallel function calling](https://platform.openai.com/docs/guides/function-calling#configuring-parallel-function-calling)\n   * during tool use.\n   */\n  parallel_tool_calls?: boolean;\n\n  /**\n   * Body param: **o-series models only**\n   *\n   * Constrains effort on reasoning for\n   * [reasoning models](https://platform.openai.com/docs/guides/reasoning). Currently\n   * supported values are `low`, `medium`, and `high`. Reducing reasoning effort can\n   * result in faster responses and fewer tokens used on reasoning in a response.\n   */\n  reasoning_effort?: Shared.ReasoningEffort | null;\n\n  /**\n   * Body param: Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * Body param: If `true`, returns a stream of events that happen during the Run as\n   * server-sent events, terminating when the Run enters a terminal state with a\n   * `data: [DONE]` message.\n   */\n  stream?: boolean | null;\n\n  /**\n   * Body param: What sampling temperature to use, between 0 and 2. Higher values\n   * like 0.8 will make the output more random, while lower values like 0.2 will make\n   * it more focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * Body param: Controls which (if any) tool is called by the model. `none` means\n   * the model will not call any tools and instead generates a message. `auto` is the\n   * default value and means the model can pick between generating a message or\n   * calling one or more tools. `required` means the model must call one or more\n   * tools before responding to the user. Specifying a particular tool like\n   * `{\"type\": \"file_search\"}` or\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   */\n  tool_choice?: ThreadsAPI.AssistantToolChoiceOption | null;\n\n  /**\n   * Body param: Override the tools the assistant can use for this run. This is\n   * useful for modifying the behavior on a per-run basis.\n   */\n  tools?: Array<AssistantsAPI.AssistantTool> | null;\n\n  /**\n   * Body param: An alternative to sampling with temperature, called nucleus\n   * sampling, where the model considers the results of the tokens with top_p\n   * probability mass. So 0.1 means only the tokens comprising the top 10%\n   * probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * Body param: Controls for how a thread will be truncated prior to the run. Use\n   * this to control the intial context window of the run.\n   */\n  truncation_strategy?: RunCreateParams.TruncationStrategy | null;\n}\n\nexport namespace RunCreateParams {\n  export interface AdditionalMessage {\n    /**\n     * The text contents of the message.\n     */\n    content: string | Array<MessagesAPI.MessageContentPartParam>;\n\n    /**\n     * The role of the entity that is creating the message. Allowed values include:\n     *\n     * - `user`: Indicates the message is sent by an actual user and should be used in\n     *   most cases to represent user-generated messages.\n     * - `assistant`: Indicates the message is generated by the assistant. Use this\n     *   value to insert messages from the assistant into the conversation.\n     */\n    role: 'user' | 'assistant';\n\n    /**\n     * A list of files attached to the message, and the tools they should be added to.\n     */\n    attachments?: Array<AdditionalMessage.Attachment> | null;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n  }\n\n  export namespace AdditionalMessage {\n    export interface Attachment {\n      /**\n       * The ID of the file to attach to the message.\n       */\n      file_id?: string;\n\n      /**\n       * The tools to add this file to.\n       */\n      tools?: Array<AssistantsAPI.CodeInterpreterTool | Attachment.FileSearch>;\n    }\n\n    export namespace Attachment {\n      export interface FileSearch {\n        /**\n         * The type of tool being defined: `file_search`\n         */\n        type: 'file_search';\n      }\n    }\n  }\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  export interface TruncationStrategy {\n    /**\n     * The truncation strategy to use for the thread. The default is `auto`. If set to\n     * `last_messages`, the thread will be truncated to the n most recent messages in\n     * the thread. When set to `auto`, messages in the middle of the thread will be\n     * dropped to fit the context length of the model, `max_prompt_tokens`.\n     */\n    type: 'auto' | 'last_messages';\n\n    /**\n     * The number of most recent messages from the thread when constructing the context\n     * for the run.\n     */\n    last_messages?: number | null;\n  }\n\n  export type RunCreateParamsNonStreaming = RunsAPI.RunCreateParamsNonStreaming;\n  export type RunCreateParamsStreaming = RunsAPI.RunCreateParamsStreaming;\n}\n\nexport interface RunCreateParamsNonStreaming extends RunCreateParamsBase {\n  /**\n   * Body param: If `true`, returns a stream of events that happen during the Run as\n   * server-sent events, terminating when the Run enters a terminal state with a\n   * `data: [DONE]` message.\n   */\n  stream?: false | null;\n}\n\nexport interface RunCreateParamsStreaming extends RunCreateParamsBase {\n  /**\n   * Body param: If `true`, returns a stream of events that happen during the Run as\n   * server-sent events, terminating when the Run enters a terminal state with a\n   * `data: [DONE]` message.\n   */\n  stream: true;\n}\n\nexport interface RunRetrieveParams {\n  /**\n   * The ID of the [thread](https://platform.openai.com/docs/api-reference/threads)\n   * that was run.\n   */\n  thread_id: string;\n}\n\nexport interface RunUpdateParams {\n  /**\n   * Path param: The ID of the\n   * [thread](https://platform.openai.com/docs/api-reference/threads) that was run.\n   */\n  thread_id: string;\n\n  /**\n   * Body param: Set of 16 key-value pairs that can be attached to an object. This\n   * can be useful for storing additional information about the object in a\n   * structured format, and querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n}\n\nexport interface RunListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\n   * to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport interface RunCancelParams {\n  /**\n   * The ID of the thread to which this run belongs.\n   */\n  thread_id: string;\n}\n\nexport type RunCreateAndPollParams = ThreadsAPI.ThreadCreateAndRunParamsNonStreaming;\n\nexport type RunCreateAndStreamParams = RunCreateParamsBaseStream;\n\nexport type RunStreamParams = RunCreateParamsBaseStream;\n\nexport type RunSubmitToolOutputsParams =\n  | RunSubmitToolOutputsParamsNonStreaming\n  | RunSubmitToolOutputsParamsStreaming;\n\nexport interface RunSubmitToolOutputsParamsBase {\n  /**\n   * Path param: The ID of the\n   * [thread](https://platform.openai.com/docs/api-reference/threads) to which this\n   * run belongs.\n   */\n  thread_id: string;\n\n  /**\n   * Body param: A list of tools for which the outputs are being submitted.\n   */\n  tool_outputs: Array<RunSubmitToolOutputsParams.ToolOutput>;\n\n  /**\n   * Body param: If `true`, returns a stream of events that happen during the Run as\n   * server-sent events, terminating when the Run enters a terminal state with a\n   * `data: [DONE]` message.\n   */\n  stream?: boolean | null;\n}\n\nexport namespace RunSubmitToolOutputsParams {\n  export interface ToolOutput {\n    /**\n     * The output of the tool call to be submitted to continue the run.\n     */\n    output?: string;\n\n    /**\n     * The ID of the tool call in the `required_action` object within the run object\n     * the output is being submitted for.\n     */\n    tool_call_id?: string;\n  }\n\n  export type RunSubmitToolOutputsParamsNonStreaming = RunsAPI.RunSubmitToolOutputsParamsNonStreaming;\n  export type RunSubmitToolOutputsParamsStreaming = RunsAPI.RunSubmitToolOutputsParamsStreaming;\n}\n\nexport interface RunSubmitToolOutputsParamsNonStreaming extends RunSubmitToolOutputsParamsBase {\n  /**\n   * Body param: If `true`, returns a stream of events that happen during the Run as\n   * server-sent events, terminating when the Run enters a terminal state with a\n   * `data: [DONE]` message.\n   */\n  stream?: false | null;\n}\n\nexport interface RunSubmitToolOutputsParamsStreaming extends RunSubmitToolOutputsParamsBase {\n  /**\n   * Body param: If `true`, returns a stream of events that happen during the Run as\n   * server-sent events, terminating when the Run enters a terminal state with a\n   * `data: [DONE]` message.\n   */\n  stream: true;\n}\n\nexport type RunSubmitToolOutputsAndPollParams = RunSubmitToolOutputsParamsNonStreaming;\nexport type RunSubmitToolOutputsStreamParams = RunSubmitToolOutputsParamsStream;\n\nRuns.Steps = Steps;\n\nexport declare namespace Runs {\n  export {\n    type RequiredActionFunctionToolCall as RequiredActionFunctionToolCall,\n    type Run as Run,\n    type RunStatus as RunStatus,\n    type RunsPage as RunsPage,\n    type RunCreateParams as RunCreateParams,\n    type RunCreateParamsNonStreaming as RunCreateParamsNonStreaming,\n    type RunCreateParamsStreaming as RunCreateParamsStreaming,\n    type RunRetrieveParams as RunRetrieveParams,\n    type RunUpdateParams as RunUpdateParams,\n    type RunListParams as RunListParams,\n    type RunCreateAndPollParams,\n    type RunCreateAndStreamParams,\n    type RunStreamParams,\n    type RunSubmitToolOutputsParams as RunSubmitToolOutputsParams,\n    type RunSubmitToolOutputsParamsNonStreaming as RunSubmitToolOutputsParamsNonStreaming,\n    type RunSubmitToolOutputsParamsStreaming as RunSubmitToolOutputsParamsStreaming,\n    type RunSubmitToolOutputsAndPollParams,\n    type RunSubmitToolOutputsStreamParams,\n  };\n\n  export {\n    Steps as Steps,\n    type CodeInterpreterLogs as CodeInterpreterLogs,\n    type CodeInterpreterOutputImage as CodeInterpreterOutputImage,\n    type CodeInterpreterToolCall as CodeInterpreterToolCall,\n    type CodeInterpreterToolCallDelta as CodeInterpreterToolCallDelta,\n    type FileSearchToolCall as FileSearchToolCall,\n    type FileSearchToolCallDelta as FileSearchToolCallDelta,\n    type FunctionToolCall as FunctionToolCall,\n    type FunctionToolCallDelta as FunctionToolCallDelta,\n    type MessageCreationStepDetails as MessageCreationStepDetails,\n    type RunStep as RunStep,\n    type RunStepDelta as RunStepDelta,\n    type RunStepDeltaEvent as RunStepDeltaEvent,\n    type RunStepDeltaMessageDelta as RunStepDeltaMessageDelta,\n    type RunStepInclude as RunStepInclude,\n    type ToolCall as ToolCall,\n    type ToolCallDelta as ToolCallDelta,\n    type ToolCallDeltaObject as ToolCallDeltaObject,\n    type ToolCallsStepDetails as ToolCallsStepDetails,\n    type RunStepsPage as RunStepsPage,\n    type StepRetrieveParams as StepRetrieveParams,\n    type StepListParams as StepListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as ThreadsAPI from './threads';\nimport * as Shared from '../../shared';\nimport * as AssistantsAPI from '../assistants';\nimport * as MessagesAPI from './messages';\nimport {\n  Annotation,\n  AnnotationDelta,\n  FileCitationAnnotation,\n  FileCitationDeltaAnnotation,\n  FilePathAnnotation,\n  FilePathDeltaAnnotation,\n  ImageFile,\n  ImageFileContentBlock,\n  ImageFileDelta,\n  ImageFileDeltaBlock,\n  ImageURL,\n  ImageURLContentBlock,\n  ImageURLDelta,\n  ImageURLDeltaBlock,\n  Message as MessagesAPIMessage,\n  MessageContent,\n  MessageContentDelta,\n  MessageContentPartParam,\n  MessageCreateParams,\n  MessageDeleteParams,\n  MessageDeleted,\n  MessageDelta,\n  MessageDeltaEvent,\n  MessageListParams,\n  MessageRetrieveParams,\n  MessageUpdateParams,\n  Messages,\n  MessagesPage,\n  RefusalContentBlock,\n  RefusalDeltaBlock,\n  Text,\n  TextContentBlock,\n  TextContentBlockParam,\n  TextDelta,\n  TextDeltaBlock,\n} from './messages';\nimport * as RunsAPI from './runs/runs';\nimport {\n  RequiredActionFunctionToolCall,\n  Run,\n  RunCreateAndPollParams,\n  RunCreateAndStreamParams,\n  RunCancelParams,\n  RunCreateParams,\n  RunCreateParamsNonStreaming,\n  RunCreateParamsStreaming,\n  RunListParams,\n  RunRetrieveParams,\n  RunStatus,\n  RunStreamParams,\n  RunSubmitToolOutputsAndPollParams,\n  RunSubmitToolOutputsParams,\n  RunSubmitToolOutputsParamsNonStreaming,\n  RunSubmitToolOutputsParamsStreaming,\n  RunSubmitToolOutputsStreamParams,\n  RunUpdateParams,\n  Runs,\n  RunsPage,\n} from './runs/runs';\nimport { APIPromise } from '../../../core/api-promise';\nimport { Stream } from '../../../core/streaming';\nimport { buildHeaders } from '../../../internal/headers';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { AssistantStream, ThreadCreateAndRunParamsBaseStream } from '../../../lib/AssistantStream';\nimport { path } from '../../../internal/utils/path';\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Threads extends APIResource {\n  runs: RunsAPI.Runs = new RunsAPI.Runs(this._client);\n  messages: MessagesAPI.Messages = new MessagesAPI.Messages(this._client);\n\n  /**\n   * Create a thread.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  create(body: ThreadCreateParams | null | undefined = {}, options?: RequestOptions): APIPromise<Thread> {\n    return this._client.post('/threads', {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Retrieves a thread.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  retrieve(threadID: string, options?: RequestOptions): APIPromise<Thread> {\n    return this._client.get(path`/threads/${threadID}`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Modifies a thread.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  update(threadID: string, body: ThreadUpdateParams, options?: RequestOptions): APIPromise<Thread> {\n    return this._client.post(path`/threads/${threadID}`, {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Delete a thread.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  delete(threadID: string, options?: RequestOptions): APIPromise<ThreadDeleted> {\n    return this._client.delete(path`/threads/${threadID}`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Create a thread and run it in one request.\n   *\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\n   */\n  createAndRun(body: ThreadCreateAndRunParamsNonStreaming, options?: RequestOptions): APIPromise<RunsAPI.Run>;\n  createAndRun(\n    body: ThreadCreateAndRunParamsStreaming,\n    options?: RequestOptions,\n  ): APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>>;\n  createAndRun(\n    body: ThreadCreateAndRunParamsBase,\n    options?: RequestOptions,\n  ): APIPromise<Stream<AssistantsAPI.AssistantStreamEvent> | RunsAPI.Run>;\n  createAndRun(\n    body: ThreadCreateAndRunParams,\n    options?: RequestOptions,\n  ): APIPromise<RunsAPI.Run> | APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>> {\n    return this._client.post('/threads/runs', {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n      stream: body.stream ?? false,\n    }) as APIPromise<RunsAPI.Run> | APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>>;\n  }\n\n  /**\n   * A helper to create a thread, start a run and then poll for a terminal state.\n   * More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async createAndRunPoll(\n    body: ThreadCreateAndRunParamsNonStreaming,\n    options?: RequestOptions & { pollIntervalMs?: number },\n  ): Promise<Threads.Run> {\n    const run = await this.createAndRun(body, options);\n    return await this.runs.poll(run.id, { thread_id: run.thread_id }, options);\n  }\n\n  /**\n   * Create a thread and stream the run back\n   */\n  createAndRunStream(body: ThreadCreateAndRunParamsBaseStream, options?: RequestOptions): AssistantStream {\n    return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n  }\n}\n\n/**\n * Specifies the format that the model must output. Compatible with\n * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n *\n * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n * Outputs which ensures the model will match your supplied JSON schema. Learn more\n * in the\n * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n *\n * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n * message the model generates is valid JSON.\n *\n * **Important:** when using JSON mode, you **must** also instruct the model to\n * produce JSON yourself via a system or user message. Without this, the model may\n * generate an unending stream of whitespace until the generation reaches the token\n * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n * the message content may be partially cut off if `finish_reason=\"length\"`, which\n * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n * max context length.\n */\nexport type AssistantResponseFormatOption =\n  | 'auto'\n  | Shared.ResponseFormatText\n  | Shared.ResponseFormatJSONObject\n  | Shared.ResponseFormatJSONSchema;\n\n/**\n * Specifies a tool the model should use. Use to force the model to call a specific\n * tool.\n */\nexport interface AssistantToolChoice {\n  /**\n   * The type of the tool. If type is `function`, the function name must be set\n   */\n  type: 'function' | 'code_interpreter' | 'file_search';\n\n  function?: AssistantToolChoiceFunction;\n}\n\nexport interface AssistantToolChoiceFunction {\n  /**\n   * The name of the function to call.\n   */\n  name: string;\n}\n\n/**\n * Controls which (if any) tool is called by the model. `none` means the model will\n * not call any tools and instead generates a message. `auto` is the default value\n * and means the model can pick between generating a message or calling one or more\n * tools. `required` means the model must call one or more tools before responding\n * to the user. Specifying a particular tool like `{\"type\": \"file_search\"}` or\n * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n * call that tool.\n */\nexport type AssistantToolChoiceOption = 'none' | 'auto' | 'required' | AssistantToolChoice;\n\n/**\n * Represents a thread that contains\n * [messages](https://platform.openai.com/docs/api-reference/messages).\n */\nexport interface Thread {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the thread was created.\n   */\n  created_at: number;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The object type, which is always `thread`.\n   */\n  object: 'thread';\n\n  /**\n   * A set of resources that are made available to the assistant's tools in this\n   * thread. The resources are specific to the type of tool. For example, the\n   * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n   * tool requires a list of vector store IDs.\n   */\n  tool_resources: Thread.ToolResources | null;\n}\n\nexport namespace Thread {\n  /**\n   * A set of resources that are made available to the assistant's tools in this\n   * thread. The resources are specific to the type of tool. For example, the\n   * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n   * tool requires a list of vector store IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this thread. There can be a maximum of 1 vector store attached to\n       * the thread.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n}\n\nexport interface ThreadDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'thread.deleted';\n}\n\nexport interface ThreadCreateParams {\n  /**\n   * A list of [messages](https://platform.openai.com/docs/api-reference/messages) to\n   * start the thread with.\n   */\n  messages?: Array<ThreadCreateParams.Message>;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * A set of resources that are made available to the assistant's tools in this\n   * thread. The resources are specific to the type of tool. For example, the\n   * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n   * tool requires a list of vector store IDs.\n   */\n  tool_resources?: ThreadCreateParams.ToolResources | null;\n}\n\nexport namespace ThreadCreateParams {\n  export interface Message {\n    /**\n     * The text contents of the message.\n     */\n    content: string | Array<MessagesAPI.MessageContentPartParam>;\n\n    /**\n     * The role of the entity that is creating the message. Allowed values include:\n     *\n     * - `user`: Indicates the message is sent by an actual user and should be used in\n     *   most cases to represent user-generated messages.\n     * - `assistant`: Indicates the message is generated by the assistant. Use this\n     *   value to insert messages from the assistant into the conversation.\n     */\n    role: 'user' | 'assistant';\n\n    /**\n     * A list of files attached to the message, and the tools they should be added to.\n     */\n    attachments?: Array<Message.Attachment> | null;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n  }\n\n  export namespace Message {\n    export interface Attachment {\n      /**\n       * The ID of the file to attach to the message.\n       */\n      file_id?: string;\n\n      /**\n       * The tools to add this file to.\n       */\n      tools?: Array<AssistantsAPI.CodeInterpreterTool | Attachment.FileSearch>;\n    }\n\n    export namespace Attachment {\n      export interface FileSearch {\n        /**\n         * The type of tool being defined: `file_search`\n         */\n        type: 'file_search';\n      }\n    }\n  }\n\n  /**\n   * A set of resources that are made available to the assistant's tools in this\n   * thread. The resources are specific to the type of tool. For example, the\n   * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n   * tool requires a list of vector store IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this thread. There can be a maximum of 1 vector store attached to\n       * the thread.\n       */\n      vector_store_ids?: Array<string>;\n\n      /**\n       * A helper to create a\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * with file_ids and attach it to this thread. There can be a maximum of 1 vector\n       * store attached to the thread.\n       */\n      vector_stores?: Array<FileSearch.VectorStore>;\n    }\n\n    export namespace FileSearch {\n      export interface VectorStore {\n        /**\n         * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n         * strategy.\n         */\n        chunking_strategy?: VectorStore.Auto | VectorStore.Static;\n\n        /**\n         * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs to\n         * add to the vector store. There can be a maximum of 10000 files in a vector\n         * store.\n         */\n        file_ids?: Array<string>;\n\n        /**\n         * Set of 16 key-value pairs that can be attached to an object. This can be useful\n         * for storing additional information about the object in a structured format, and\n         * querying for objects via API or the dashboard.\n         *\n         * Keys are strings with a maximum length of 64 characters. Values are strings with\n         * a maximum length of 512 characters.\n         */\n        metadata?: Shared.Metadata | null;\n      }\n\n      export namespace VectorStore {\n        /**\n         * The default strategy. This strategy currently uses a `max_chunk_size_tokens` of\n         * `800` and `chunk_overlap_tokens` of `400`.\n         */\n        export interface Auto {\n          /**\n           * Always `auto`.\n           */\n          type: 'auto';\n        }\n\n        export interface Static {\n          static: Static.Static;\n\n          /**\n           * Always `static`.\n           */\n          type: 'static';\n        }\n\n        export namespace Static {\n          export interface Static {\n            /**\n             * The number of tokens that overlap between chunks. The default value is `400`.\n             *\n             * Note that the overlap must not exceed half of `max_chunk_size_tokens`.\n             */\n            chunk_overlap_tokens: number;\n\n            /**\n             * The maximum number of tokens in each chunk. The default value is `800`. The\n             * minimum value is `100` and the maximum value is `4096`.\n             */\n            max_chunk_size_tokens: number;\n          }\n        }\n      }\n    }\n  }\n}\n\nexport interface ThreadUpdateParams {\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * A set of resources that are made available to the assistant's tools in this\n   * thread. The resources are specific to the type of tool. For example, the\n   * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n   * tool requires a list of vector store IDs.\n   */\n  tool_resources?: ThreadUpdateParams.ToolResources | null;\n}\n\nexport namespace ThreadUpdateParams {\n  /**\n   * A set of resources that are made available to the assistant's tools in this\n   * thread. The resources are specific to the type of tool. For example, the\n   * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n   * tool requires a list of vector store IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this thread. There can be a maximum of 1 vector store attached to\n       * the thread.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n}\n\nexport type ThreadCreateAndRunParams =\n  | ThreadCreateAndRunParamsNonStreaming\n  | ThreadCreateAndRunParamsStreaming;\n\nexport interface ThreadCreateAndRunParamsBase {\n  /**\n   * The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) to use to\n   * execute this run.\n   */\n  assistant_id: string;\n\n  /**\n   * Override the default system message of the assistant. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  instructions?: string | null;\n\n  /**\n   * The maximum number of completion tokens that may be used over the course of the\n   * run. The run will make a best effort to use only the number of completion tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * completion tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * The maximum number of prompt tokens that may be used over the course of the run.\n   * The run will make a best effort to use only the number of prompt tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * prompt tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_prompt_tokens?: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The ID of the [Model](https://platform.openai.com/docs/api-reference/models) to\n   * be used to execute this run. If a value is provided here, it will override the\n   * model associated with the assistant. If not, the model associated with the\n   * assistant will be used.\n   */\n  model?: (string & {}) | Shared.ChatModel | null;\n\n  /**\n   * Whether to enable\n   * [parallel function calling](https://platform.openai.com/docs/guides/function-calling#configuring-parallel-function-calling)\n   * during tool use.\n   */\n  parallel_tool_calls?: boolean;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: AssistantResponseFormatOption | null;\n\n  /**\n   * If `true`, returns a stream of events that happen during the Run as server-sent\n   * events, terminating when the Run enters a terminal state with a `data: [DONE]`\n   * message.\n   */\n  stream?: boolean | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * Options to create a new thread. If no thread is provided when running a request,\n   * an empty thread will be created.\n   */\n  thread?: ThreadCreateAndRunParams.Thread;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tools and instead generates a message. `auto` is the default value\n   * and means the model can pick between generating a message or calling one or more\n   * tools. `required` means the model must call one or more tools before responding\n   * to the user. Specifying a particular tool like `{\"type\": \"file_search\"}` or\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   */\n  tool_choice?: AssistantToolChoiceOption | null;\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  tool_resources?: ThreadCreateAndRunParams.ToolResources | null;\n\n  /**\n   * Override the tools the assistant can use for this run. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  tools?: Array<AssistantsAPI.AssistantTool> | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  truncation_strategy?: ThreadCreateAndRunParams.TruncationStrategy | null;\n}\n\nexport namespace ThreadCreateAndRunParams {\n  /**\n   * Options to create a new thread. If no thread is provided when running a request,\n   * an empty thread will be created.\n   */\n  export interface Thread {\n    /**\n     * A list of [messages](https://platform.openai.com/docs/api-reference/messages) to\n     * start the thread with.\n     */\n    messages?: Array<Thread.Message>;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n\n    /**\n     * A set of resources that are made available to the assistant's tools in this\n     * thread. The resources are specific to the type of tool. For example, the\n     * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n     * tool requires a list of vector store IDs.\n     */\n    tool_resources?: Thread.ToolResources | null;\n  }\n\n  export namespace Thread {\n    export interface Message {\n      /**\n       * The text contents of the message.\n       */\n      content: string | Array<MessagesAPI.MessageContentPartParam>;\n\n      /**\n       * The role of the entity that is creating the message. Allowed values include:\n       *\n       * - `user`: Indicates the message is sent by an actual user and should be used in\n       *   most cases to represent user-generated messages.\n       * - `assistant`: Indicates the message is generated by the assistant. Use this\n       *   value to insert messages from the assistant into the conversation.\n       */\n      role: 'user' | 'assistant';\n\n      /**\n       * A list of files attached to the message, and the tools they should be added to.\n       */\n      attachments?: Array<Message.Attachment> | null;\n\n      /**\n       * Set of 16 key-value pairs that can be attached to an object. This can be useful\n       * for storing additional information about the object in a structured format, and\n       * querying for objects via API or the dashboard.\n       *\n       * Keys are strings with a maximum length of 64 characters. Values are strings with\n       * a maximum length of 512 characters.\n       */\n      metadata?: Shared.Metadata | null;\n    }\n\n    export namespace Message {\n      export interface Attachment {\n        /**\n         * The ID of the file to attach to the message.\n         */\n        file_id?: string;\n\n        /**\n         * The tools to add this file to.\n         */\n        tools?: Array<AssistantsAPI.CodeInterpreterTool | Attachment.FileSearch>;\n      }\n\n      export namespace Attachment {\n        export interface FileSearch {\n          /**\n           * The type of tool being defined: `file_search`\n           */\n          type: 'file_search';\n        }\n      }\n    }\n\n    /**\n     * A set of resources that are made available to the assistant's tools in this\n     * thread. The resources are specific to the type of tool. For example, the\n     * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n     * tool requires a list of vector store IDs.\n     */\n    export interface ToolResources {\n      code_interpreter?: ToolResources.CodeInterpreter;\n\n      file_search?: ToolResources.FileSearch;\n    }\n\n    export namespace ToolResources {\n      export interface CodeInterpreter {\n        /**\n         * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n         * available to the `code_interpreter` tool. There can be a maximum of 20 files\n         * associated with the tool.\n         */\n        file_ids?: Array<string>;\n      }\n\n      export interface FileSearch {\n        /**\n         * The\n         * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n         * attached to this thread. There can be a maximum of 1 vector store attached to\n         * the thread.\n         */\n        vector_store_ids?: Array<string>;\n\n        /**\n         * A helper to create a\n         * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n         * with file_ids and attach it to this thread. There can be a maximum of 1 vector\n         * store attached to the thread.\n         */\n        vector_stores?: Array<FileSearch.VectorStore>;\n      }\n\n      export namespace FileSearch {\n        export interface VectorStore {\n          /**\n           * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n           * strategy.\n           */\n          chunking_strategy?: VectorStore.Auto | VectorStore.Static;\n\n          /**\n           * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs to\n           * add to the vector store. There can be a maximum of 10000 files in a vector\n           * store.\n           */\n          file_ids?: Array<string>;\n\n          /**\n           * Set of 16 key-value pairs that can be attached to an object. This can be useful\n           * for storing additional information about the object in a structured format, and\n           * querying for objects via API or the dashboard.\n           *\n           * Keys are strings with a maximum length of 64 characters. Values are strings with\n           * a maximum length of 512 characters.\n           */\n          metadata?: Shared.Metadata | null;\n        }\n\n        export namespace VectorStore {\n          /**\n           * The default strategy. This strategy currently uses a `max_chunk_size_tokens` of\n           * `800` and `chunk_overlap_tokens` of `400`.\n           */\n          export interface Auto {\n            /**\n             * Always `auto`.\n             */\n            type: 'auto';\n          }\n\n          export interface Static {\n            static: Static.Static;\n\n            /**\n             * Always `static`.\n             */\n            type: 'static';\n          }\n\n          export namespace Static {\n            export interface Static {\n              /**\n               * The number of tokens that overlap between chunks. The default value is `400`.\n               *\n               * Note that the overlap must not exceed half of `max_chunk_size_tokens`.\n               */\n              chunk_overlap_tokens: number;\n\n              /**\n               * The maximum number of tokens in each chunk. The default value is `800`. The\n               * minimum value is `100` and the maximum value is `4096`.\n               */\n              max_chunk_size_tokens: number;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The ID of the\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this assistant. There can be a maximum of 1 vector store attached to\n       * the assistant.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  export interface TruncationStrategy {\n    /**\n     * The truncation strategy to use for the thread. The default is `auto`. If set to\n     * `last_messages`, the thread will be truncated to the n most recent messages in\n     * the thread. When set to `auto`, messages in the middle of the thread will be\n     * dropped to fit the context length of the model, `max_prompt_tokens`.\n     */\n    type: 'auto' | 'last_messages';\n\n    /**\n     * The number of most recent messages from the thread when constructing the context\n     * for the run.\n     */\n    last_messages?: number | null;\n  }\n\n  export type ThreadCreateAndRunParamsNonStreaming = ThreadsAPI.ThreadCreateAndRunParamsNonStreaming;\n  export type ThreadCreateAndRunParamsStreaming = ThreadsAPI.ThreadCreateAndRunParamsStreaming;\n}\n\nexport interface ThreadCreateAndRunParamsNonStreaming extends ThreadCreateAndRunParamsBase {\n  /**\n   * If `true`, returns a stream of events that happen during the Run as server-sent\n   * events, terminating when the Run enters a terminal state with a `data: [DONE]`\n   * message.\n   */\n  stream?: false | null;\n}\n\nexport interface ThreadCreateAndRunParamsStreaming extends ThreadCreateAndRunParamsBase {\n  /**\n   * If `true`, returns a stream of events that happen during the Run as server-sent\n   * events, terminating when the Run enters a terminal state with a `data: [DONE]`\n   * message.\n   */\n  stream: true;\n}\n\nexport interface ThreadCreateAndRunPollParams {\n  /**\n   * The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) to use to\n   * execute this run.\n   */\n  assistant_id: string;\n\n  /**\n   * Override the default system message of the assistant. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  instructions?: string | null;\n\n  /**\n   * The maximum number of completion tokens that may be used over the course of the\n   * run. The run will make a best effort to use only the number of completion tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * completion tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * The maximum number of prompt tokens that may be used over the course of the run.\n   * The run will make a best effort to use only the number of prompt tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * prompt tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_prompt_tokens?: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format. Keys\n   * can be a maximum of 64 characters long and values can be a maxium of 512\n   * characters long.\n   */\n  metadata?: unknown | null;\n\n  /**\n   * The ID of the [Model](https://platform.openai.com/docs/api-reference/models) to\n   * be used to execute this run. If a value is provided here, it will override the\n   * model associated with the assistant. If not, the model associated with the\n   * assistant will be used.\n   */\n  model?:\n    | (string & {})\n    | 'gpt-4o'\n    | 'gpt-4o-2024-05-13'\n    | 'gpt-4-turbo'\n    | 'gpt-4-turbo-2024-04-09'\n    | 'gpt-4-0125-preview'\n    | 'gpt-4-turbo-preview'\n    | 'gpt-4-1106-preview'\n    | 'gpt-4-vision-preview'\n    | 'gpt-4'\n    | 'gpt-4-0314'\n    | 'gpt-4-0613'\n    | 'gpt-4-32k'\n    | 'gpt-4-32k-0314'\n    | 'gpt-4-32k-0613'\n    | 'gpt-3.5-turbo'\n    | 'gpt-3.5-turbo-16k'\n    | 'gpt-3.5-turbo-0613'\n    | 'gpt-3.5-turbo-1106'\n    | 'gpt-3.5-turbo-0125'\n    | 'gpt-3.5-turbo-16k-0613'\n    | null;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models/gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models/gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which guarantees the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: AssistantResponseFormatOption | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * If no thread is provided, an empty thread will be created.\n   */\n  thread?: ThreadCreateAndRunPollParams.Thread;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tools and instead generates a message. `auto` is the default value\n   * and means the model can pick between generating a message or calling one or more\n   * tools. `required` means the model must call one or more tools before responding\n   * to the user. Specifying a particular tool like `{\"type\": \"file_search\"}` or\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   */\n  tool_choice?: AssistantToolChoiceOption | null;\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  tool_resources?: ThreadCreateAndRunPollParams.ToolResources | null;\n\n  /**\n   * Override the tools the assistant can use for this run. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  tools?: Array<\n    AssistantsAPI.CodeInterpreterTool | AssistantsAPI.FileSearchTool | AssistantsAPI.FunctionTool\n  > | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  truncation_strategy?: ThreadCreateAndRunPollParams.TruncationStrategy | null;\n}\n\nexport namespace ThreadCreateAndRunPollParams {\n  /**\n   * If no thread is provided, an empty thread will be created.\n   */\n  export interface Thread {\n    /**\n     * A list of [messages](https://platform.openai.com/docs/api-reference/messages) to\n     * start the thread with.\n     */\n    messages?: Array<Thread.Message>;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format. Keys\n     * can be a maximum of 64 characters long and values can be a maxium of 512\n     * characters long.\n     */\n    metadata?: unknown | null;\n\n    /**\n     * A set of resources that are made available to the assistant's tools in this\n     * thread. The resources are specific to the type of tool. For example, the\n     * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n     * tool requires a list of vector store IDs.\n     */\n    tool_resources?: Thread.ToolResources | null;\n  }\n\n  export namespace Thread {\n    export interface Message {\n      /**\n       * The text contents of the message.\n       */\n      content: string | Array<MessagesAPI.MessageContentPartParam>;\n\n      /**\n       * The role of the entity that is creating the message. Allowed values include:\n       *\n       * - `user`: Indicates the message is sent by an actual user and should be used in\n       *   most cases to represent user-generated messages.\n       * - `assistant`: Indicates the message is generated by the assistant. Use this\n       *   value to insert messages from the assistant into the conversation.\n       */\n      role: 'user' | 'assistant';\n\n      /**\n       * A list of files attached to the message, and the tools they should be added to.\n       */\n      attachments?: Array<Message.Attachment> | null;\n\n      /**\n       * Set of 16 key-value pairs that can be attached to an object. This can be useful\n       * for storing additional information about the object in a structured format. Keys\n       * can be a maximum of 64 characters long and values can be a maxium of 512\n       * characters long.\n       */\n      metadata?: unknown | null;\n    }\n\n    export namespace Message {\n      export interface Attachment {\n        /**\n         * The ID of the file to attach to the message.\n         */\n        file_id?: string;\n\n        /**\n         * The tools to add this file to.\n         */\n        tools?: Array<AssistantsAPI.CodeInterpreterTool | AssistantsAPI.FileSearchTool>;\n      }\n    }\n\n    /**\n     * A set of resources that are made available to the assistant's tools in this\n     * thread. The resources are specific to the type of tool. For example, the\n     * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n     * tool requires a list of vector store IDs.\n     */\n    export interface ToolResources {\n      code_interpreter?: ToolResources.CodeInterpreter;\n\n      file_search?: ToolResources.FileSearch;\n    }\n\n    export namespace ToolResources {\n      export interface CodeInterpreter {\n        /**\n         * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n         * available to the `code_interpreter` tool. There can be a maximum of 20 files\n         * associated with the tool.\n         */\n        file_ids?: Array<string>;\n      }\n\n      export interface FileSearch {\n        /**\n         * The\n         * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n         * attached to this thread. There can be a maximum of 1 vector store attached to\n         * the thread.\n         */\n        vector_store_ids?: Array<string>;\n\n        /**\n         * A helper to create a\n         * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n         * with file_ids and attach it to this thread. There can be a maximum of 1 vector\n         * store attached to the thread.\n         */\n        vector_stores?: Array<FileSearch.VectorStore>;\n      }\n\n      export namespace FileSearch {\n        export interface VectorStore {\n          /**\n           * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs to\n           * add to the vector store. There can be a maximum of 10000 files in a vector\n           * store.\n           */\n          file_ids?: Array<string>;\n\n          /**\n           * Set of 16 key-value pairs that can be attached to a vector store. This can be\n           * useful for storing additional information about the vector store in a structured\n           * format. Keys can be a maximum of 64 characters long and values can be a maxium\n           * of 512 characters long.\n           */\n          metadata?: unknown;\n        }\n      }\n    }\n  }\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The ID of the\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this assistant. There can be a maximum of 1 vector store attached to\n       * the assistant.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  export interface TruncationStrategy {\n    /**\n     * The truncation strategy to use for the thread. The default is `auto`. If set to\n     * `last_messages`, the thread will be truncated to the n most recent messages in\n     * the thread. When set to `auto`, messages in the middle of the thread will be\n     * dropped to fit the context length of the model, `max_prompt_tokens`.\n     */\n    type: 'auto' | 'last_messages';\n\n    /**\n     * The number of most recent messages from the thread when constructing the context\n     * for the run.\n     */\n    last_messages?: number | null;\n  }\n}\n\nexport type ThreadCreateAndRunStreamParams = ThreadCreateAndRunParamsBaseStream;\n\nThreads.Runs = Runs;\nThreads.Messages = Messages;\n\nexport declare namespace Threads {\n  export {\n    type AssistantResponseFormatOption as AssistantResponseFormatOption,\n    type AssistantToolChoice as AssistantToolChoice,\n    type AssistantToolChoiceFunction as AssistantToolChoiceFunction,\n    type AssistantToolChoiceOption as AssistantToolChoiceOption,\n    type Thread as Thread,\n    type ThreadDeleted as ThreadDeleted,\n    type ThreadCreateParams as ThreadCreateParams,\n    type ThreadUpdateParams as ThreadUpdateParams,\n    type ThreadCreateAndRunParams as ThreadCreateAndRunParams,\n    type ThreadCreateAndRunParamsNonStreaming as ThreadCreateAndRunParamsNonStreaming,\n    type ThreadCreateAndRunParamsStreaming as ThreadCreateAndRunParamsStreaming,\n    type ThreadCreateAndRunPollParams,\n    type ThreadCreateAndRunStreamParams,\n  };\n\n  export {\n    Runs as Runs,\n    type RequiredActionFunctionToolCall as RequiredActionFunctionToolCall,\n    type Run as Run,\n    type RunStatus as RunStatus,\n    type RunsPage as RunsPage,\n    type RunCreateParams as RunCreateParams,\n    type RunCreateParamsNonStreaming as RunCreateParamsNonStreaming,\n    type RunCreateParamsStreaming as RunCreateParamsStreaming,\n    type RunRetrieveParams as RunRetrieveParams,\n    type RunUpdateParams as RunUpdateParams,\n    type RunListParams as RunListParams,\n    type RunCancelParams as RunCancelParams,\n    type RunCreateAndPollParams,\n    type RunCreateAndStreamParams,\n    type RunStreamParams,\n    type RunSubmitToolOutputsParams as RunSubmitToolOutputsParams,\n    type RunSubmitToolOutputsParamsNonStreaming as RunSubmitToolOutputsParamsNonStreaming,\n    type RunSubmitToolOutputsParamsStreaming as RunSubmitToolOutputsParamsStreaming,\n    type RunSubmitToolOutputsAndPollParams,\n    type RunSubmitToolOutputsStreamParams,\n  };\n\n  export {\n    Messages as Messages,\n    type Annotation as Annotation,\n    type AnnotationDelta as AnnotationDelta,\n    type FileCitationAnnotation as FileCitationAnnotation,\n    type FileCitationDeltaAnnotation as FileCitationDeltaAnnotation,\n    type FilePathAnnotation as FilePathAnnotation,\n    type FilePathDeltaAnnotation as FilePathDeltaAnnotation,\n    type ImageFile as ImageFile,\n    type ImageFileContentBlock as ImageFileContentBlock,\n    type ImageFileDelta as ImageFileDelta,\n    type ImageFileDeltaBlock as ImageFileDeltaBlock,\n    type ImageURL as ImageURL,\n    type ImageURLContentBlock as ImageURLContentBlock,\n    type ImageURLDelta as ImageURLDelta,\n    type ImageURLDeltaBlock as ImageURLDeltaBlock,\n    type MessagesAPIMessage as Message,\n    type MessageContent as MessageContent,\n    type MessageContentDelta as MessageContentDelta,\n    type MessageContentPartParam as MessageContentPartParam,\n    type MessageDeleted as MessageDeleted,\n    type MessageDelta as MessageDelta,\n    type MessageDeltaEvent as MessageDeltaEvent,\n    type RefusalContentBlock as RefusalContentBlock,\n    type RefusalDeltaBlock as RefusalDeltaBlock,\n    type Text as Text,\n    type TextContentBlock as TextContentBlock,\n    type TextContentBlockParam as TextContentBlockParam,\n    type TextDelta as TextDelta,\n    type TextDeltaBlock as TextDeltaBlock,\n    type MessagesPage as MessagesPage,\n    type MessageCreateParams as MessageCreateParams,\n    type MessageRetrieveParams as MessageRetrieveParams,\n    type MessageUpdateParams as MessageUpdateParams,\n    type MessageListParams as MessageListParams,\n    type MessageDeleteParams as MessageDeleteParams,\n  };\n\n  export { AssistantStream };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as AssistantsAPI from './assistants';\nimport {\n  Assistant,\n  AssistantCreateParams,\n  AssistantDeleted,\n  AssistantListParams,\n  AssistantStreamEvent,\n  AssistantTool,\n  AssistantUpdateParams,\n  Assistants,\n  AssistantsPage,\n  CodeInterpreterTool,\n  FileSearchTool,\n  FunctionTool,\n  MessageStreamEvent,\n  RunStepStreamEvent,\n  RunStreamEvent,\n  ThreadStreamEvent,\n} from './assistants';\nimport * as RealtimeAPI from './realtime/realtime';\nimport {\n  ConversationCreatedEvent,\n  ConversationItem,\n  ConversationItemContent,\n  ConversationItemCreateEvent,\n  ConversationItemCreatedEvent,\n  ConversationItemDeleteEvent,\n  ConversationItemDeletedEvent,\n  ConversationItemInputAudioTranscriptionCompletedEvent,\n  ConversationItemInputAudioTranscriptionDeltaEvent,\n  ConversationItemInputAudioTranscriptionFailedEvent,\n  ConversationItemRetrieveEvent,\n  ConversationItemTruncateEvent,\n  ConversationItemTruncatedEvent,\n  ConversationItemWithReference,\n  ErrorEvent,\n  InputAudioBufferAppendEvent,\n  InputAudioBufferClearEvent,\n  InputAudioBufferClearedEvent,\n  InputAudioBufferCommitEvent,\n  InputAudioBufferCommittedEvent,\n  InputAudioBufferSpeechStartedEvent,\n  InputAudioBufferSpeechStoppedEvent,\n  RateLimitsUpdatedEvent,\n  Realtime,\n  RealtimeClientEvent,\n  RealtimeResponse,\n  RealtimeResponseStatus,\n  RealtimeResponseUsage,\n  RealtimeServerEvent,\n  ResponseAudioDeltaEvent,\n  ResponseAudioDoneEvent,\n  ResponseAudioTranscriptDeltaEvent,\n  ResponseAudioTranscriptDoneEvent,\n  ResponseCancelEvent,\n  ResponseContentPartAddedEvent,\n  ResponseContentPartDoneEvent,\n  ResponseCreateEvent,\n  ResponseCreatedEvent,\n  ResponseDoneEvent,\n  ResponseFunctionCallArgumentsDeltaEvent,\n  ResponseFunctionCallArgumentsDoneEvent,\n  ResponseOutputItemAddedEvent,\n  ResponseOutputItemDoneEvent,\n  ResponseTextDeltaEvent,\n  ResponseTextDoneEvent,\n  SessionCreatedEvent,\n  SessionUpdateEvent,\n  SessionUpdatedEvent,\n  TranscriptionSessionUpdate,\n  TranscriptionSessionUpdatedEvent,\n} from './realtime/realtime';\nimport * as ThreadsAPI from './threads/threads';\nimport {\n  AssistantResponseFormatOption,\n  AssistantToolChoice,\n  AssistantToolChoiceFunction,\n  AssistantToolChoiceOption,\n  Thread,\n  ThreadCreateAndRunParams,\n  ThreadCreateAndRunParamsNonStreaming,\n  ThreadCreateAndRunParamsStreaming,\n  ThreadCreateAndRunPollParams,\n  ThreadCreateAndRunStreamParams,\n  ThreadCreateParams,\n  ThreadDeleted,\n  ThreadUpdateParams,\n  Threads,\n} from './threads/threads';\n\nexport class Beta extends APIResource {\n  realtime: RealtimeAPI.Realtime = new RealtimeAPI.Realtime(this._client);\n  assistants: AssistantsAPI.Assistants = new AssistantsAPI.Assistants(this._client);\n  threads: ThreadsAPI.Threads = new ThreadsAPI.Threads(this._client);\n}\n\nBeta.Realtime = Realtime;\nBeta.Assistants = Assistants;\nBeta.Threads = Threads;\n\nexport declare namespace Beta {\n  export {\n    Realtime as Realtime,\n    type ConversationCreatedEvent as ConversationCreatedEvent,\n    type ConversationItem as ConversationItem,\n    type ConversationItemContent as ConversationItemContent,\n    type ConversationItemCreateEvent as ConversationItemCreateEvent,\n    type ConversationItemCreatedEvent as ConversationItemCreatedEvent,\n    type ConversationItemDeleteEvent as ConversationItemDeleteEvent,\n    type ConversationItemDeletedEvent as ConversationItemDeletedEvent,\n    type ConversationItemInputAudioTranscriptionCompletedEvent as ConversationItemInputAudioTranscriptionCompletedEvent,\n    type ConversationItemInputAudioTranscriptionDeltaEvent as ConversationItemInputAudioTranscriptionDeltaEvent,\n    type ConversationItemInputAudioTranscriptionFailedEvent as ConversationItemInputAudioTranscriptionFailedEvent,\n    type ConversationItemRetrieveEvent as ConversationItemRetrieveEvent,\n    type ConversationItemTruncateEvent as ConversationItemTruncateEvent,\n    type ConversationItemTruncatedEvent as ConversationItemTruncatedEvent,\n    type ConversationItemWithReference as ConversationItemWithReference,\n    type ErrorEvent as ErrorEvent,\n    type InputAudioBufferAppendEvent as InputAudioBufferAppendEvent,\n    type InputAudioBufferClearEvent as InputAudioBufferClearEvent,\n    type InputAudioBufferClearedEvent as InputAudioBufferClearedEvent,\n    type InputAudioBufferCommitEvent as InputAudioBufferCommitEvent,\n    type InputAudioBufferCommittedEvent as InputAudioBufferCommittedEvent,\n    type InputAudioBufferSpeechStartedEvent as InputAudioBufferSpeechStartedEvent,\n    type InputAudioBufferSpeechStoppedEvent as InputAudioBufferSpeechStoppedEvent,\n    type RateLimitsUpdatedEvent as RateLimitsUpdatedEvent,\n    type RealtimeClientEvent as RealtimeClientEvent,\n    type RealtimeResponse as RealtimeResponse,\n    type RealtimeResponseStatus as RealtimeResponseStatus,\n    type RealtimeResponseUsage as RealtimeResponseUsage,\n    type RealtimeServerEvent as RealtimeServerEvent,\n    type ResponseAudioDeltaEvent as ResponseAudioDeltaEvent,\n    type ResponseAudioDoneEvent as ResponseAudioDoneEvent,\n    type ResponseAudioTranscriptDeltaEvent as ResponseAudioTranscriptDeltaEvent,\n    type ResponseAudioTranscriptDoneEvent as ResponseAudioTranscriptDoneEvent,\n    type ResponseCancelEvent as ResponseCancelEvent,\n    type ResponseContentPartAddedEvent as ResponseContentPartAddedEvent,\n    type ResponseContentPartDoneEvent as ResponseContentPartDoneEvent,\n    type ResponseCreateEvent as ResponseCreateEvent,\n    type ResponseCreatedEvent as ResponseCreatedEvent,\n    type ResponseDoneEvent as ResponseDoneEvent,\n    type ResponseFunctionCallArgumentsDeltaEvent as ResponseFunctionCallArgumentsDeltaEvent,\n    type ResponseFunctionCallArgumentsDoneEvent as ResponseFunctionCallArgumentsDoneEvent,\n    type ResponseOutputItemAddedEvent as ResponseOutputItemAddedEvent,\n    type ResponseOutputItemDoneEvent as ResponseOutputItemDoneEvent,\n    type ResponseTextDeltaEvent as ResponseTextDeltaEvent,\n    type ResponseTextDoneEvent as ResponseTextDoneEvent,\n    type SessionCreatedEvent as SessionCreatedEvent,\n    type SessionUpdateEvent as SessionUpdateEvent,\n    type SessionUpdatedEvent as SessionUpdatedEvent,\n    type TranscriptionSessionUpdate as TranscriptionSessionUpdate,\n    type TranscriptionSessionUpdatedEvent as TranscriptionSessionUpdatedEvent,\n  };\n\n  export {\n    Assistants as Assistants,\n    type Assistant as Assistant,\n    type AssistantDeleted as AssistantDeleted,\n    type AssistantStreamEvent as AssistantStreamEvent,\n    type AssistantTool as AssistantTool,\n    type CodeInterpreterTool as CodeInterpreterTool,\n    type FileSearchTool as FileSearchTool,\n    type FunctionTool as FunctionTool,\n    type MessageStreamEvent as MessageStreamEvent,\n    type RunStepStreamEvent as RunStepStreamEvent,\n    type RunStreamEvent as RunStreamEvent,\n    type ThreadStreamEvent as ThreadStreamEvent,\n    type AssistantsPage as AssistantsPage,\n    type AssistantCreateParams as AssistantCreateParams,\n    type AssistantUpdateParams as AssistantUpdateParams,\n    type AssistantListParams as AssistantListParams,\n  };\n\n  export {\n    Threads as Threads,\n    type AssistantResponseFormatOption as AssistantResponseFormatOption,\n    type AssistantToolChoice as AssistantToolChoice,\n    type AssistantToolChoiceFunction as AssistantToolChoiceFunction,\n    type AssistantToolChoiceOption as AssistantToolChoiceOption,\n    type Thread as Thread,\n    type ThreadDeleted as ThreadDeleted,\n    type ThreadCreateParams as ThreadCreateParams,\n    type ThreadUpdateParams as ThreadUpdateParams,\n    type ThreadCreateAndRunParams as ThreadCreateAndRunParams,\n    type ThreadCreateAndRunParamsNonStreaming as ThreadCreateAndRunParamsNonStreaming,\n    type ThreadCreateAndRunParamsStreaming as ThreadCreateAndRunParamsStreaming,\n    type ThreadCreateAndRunPollParams,\n    type ThreadCreateAndRunStreamParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../core/resource';\nimport * as CompletionsAPI from './completions';\nimport * as CompletionsCompletionsAPI from './chat/completions/completions';\nimport { APIPromise } from '../core/api-promise';\nimport { Stream } from '../core/streaming';\nimport { RequestOptions } from '../internal/request-options';\n\nexport class Completions extends APIResource {\n  /**\n   * Creates a completion for the provided prompt and parameters.\n   *\n   * @example\n   * ```ts\n   * const completion = await client.completions.create({\n   *   model: 'string',\n   *   prompt: 'This is a test.',\n   * });\n   * ```\n   */\n  create(body: CompletionCreateParamsNonStreaming, options?: RequestOptions): APIPromise<Completion>;\n  create(body: CompletionCreateParamsStreaming, options?: RequestOptions): APIPromise<Stream<Completion>>;\n  create(\n    body: CompletionCreateParamsBase,\n    options?: RequestOptions,\n  ): APIPromise<Stream<Completion> | Completion>;\n  create(\n    body: CompletionCreateParams,\n    options?: RequestOptions,\n  ): APIPromise<Completion> | APIPromise<Stream<Completion>> {\n    return this._client.post('/completions', { body, ...options, stream: body.stream ?? false }) as\n      | APIPromise<Completion>\n      | APIPromise<Stream<Completion>>;\n  }\n}\n\n/**\n * Represents a completion response from the API. Note: both the streamed and\n * non-streamed response objects share the same shape (unlike the chat endpoint).\n */\nexport interface Completion {\n  /**\n   * A unique identifier for the completion.\n   */\n  id: string;\n\n  /**\n   * The list of completion choices the model generated for the input prompt.\n   */\n  choices: Array<CompletionChoice>;\n\n  /**\n   * The Unix timestamp (in seconds) of when the completion was created.\n   */\n  created: number;\n\n  /**\n   * The model used for completion.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always \"text_completion\"\n   */\n  object: 'text_completion';\n\n  /**\n   * This fingerprint represents the backend configuration that the model runs with.\n   *\n   * Can be used in conjunction with the `seed` request parameter to understand when\n   * backend changes have been made that might impact determinism.\n   */\n  system_fingerprint?: string;\n\n  /**\n   * Usage statistics for the completion request.\n   */\n  usage?: CompletionUsage;\n}\n\nexport interface CompletionChoice {\n  /**\n   * The reason the model stopped generating tokens. This will be `stop` if the model\n   * hit a natural stop point or a provided stop sequence, `length` if the maximum\n   * number of tokens specified in the request was reached, or `content_filter` if\n   * content was omitted due to a flag from our content filters.\n   */\n  finish_reason: 'stop' | 'length' | 'content_filter';\n\n  index: number;\n\n  logprobs: CompletionChoice.Logprobs | null;\n\n  text: string;\n}\n\nexport namespace CompletionChoice {\n  export interface Logprobs {\n    text_offset?: Array<number>;\n\n    token_logprobs?: Array<number>;\n\n    tokens?: Array<string>;\n\n    top_logprobs?: Array<Record<string, number>>;\n  }\n}\n\n/**\n * Usage statistics for the completion request.\n */\nexport interface CompletionUsage {\n  /**\n   * Number of tokens in the generated completion.\n   */\n  completion_tokens: number;\n\n  /**\n   * Number of tokens in the prompt.\n   */\n  prompt_tokens: number;\n\n  /**\n   * Total number of tokens used in the request (prompt + completion).\n   */\n  total_tokens: number;\n\n  /**\n   * Breakdown of tokens used in a completion.\n   */\n  completion_tokens_details?: CompletionUsage.CompletionTokensDetails;\n\n  /**\n   * Breakdown of tokens used in the prompt.\n   */\n  prompt_tokens_details?: CompletionUsage.PromptTokensDetails;\n}\n\nexport namespace CompletionUsage {\n  /**\n   * Breakdown of tokens used in a completion.\n   */\n  export interface CompletionTokensDetails {\n    /**\n     * When using Predicted Outputs, the number of tokens in the prediction that\n     * appeared in the completion.\n     */\n    accepted_prediction_tokens?: number;\n\n    /**\n     * Audio input tokens generated by the model.\n     */\n    audio_tokens?: number;\n\n    /**\n     * Tokens generated by the model for reasoning.\n     */\n    reasoning_tokens?: number;\n\n    /**\n     * When using Predicted Outputs, the number of tokens in the prediction that did\n     * not appear in the completion. However, like reasoning tokens, these tokens are\n     * still counted in the total completion tokens for purposes of billing, output,\n     * and context window limits.\n     */\n    rejected_prediction_tokens?: number;\n  }\n\n  /**\n   * Breakdown of tokens used in the prompt.\n   */\n  export interface PromptTokensDetails {\n    /**\n     * Audio input tokens present in the prompt.\n     */\n    audio_tokens?: number;\n\n    /**\n     * Cached tokens present in the prompt.\n     */\n    cached_tokens?: number;\n  }\n}\n\nexport type CompletionCreateParams = CompletionCreateParamsNonStreaming | CompletionCreateParamsStreaming;\n\nexport interface CompletionCreateParamsBase {\n  /**\n   * ID of the model to use. You can use the\n   * [List models](https://platform.openai.com/docs/api-reference/models/list) API to\n   * see all of your available models, or see our\n   * [Model overview](https://platform.openai.com/docs/models) for descriptions of\n   * them.\n   */\n  model: (string & {}) | 'gpt-3.5-turbo-instruct' | 'davinci-002' | 'babbage-002';\n\n  /**\n   * The prompt(s) to generate completions for, encoded as a string, array of\n   * strings, array of tokens, or array of token arrays.\n   *\n   * Note that <|endoftext|> is the document separator that the model sees during\n   * training, so if a prompt is not specified the model will generate as if from the\n   * beginning of a new document.\n   */\n  prompt: string | Array<string> | Array<number> | Array<Array<number>> | null;\n\n  /**\n   * Generates `best_of` completions server-side and returns the \"best\" (the one with\n   * the highest log probability per token). Results cannot be streamed.\n   *\n   * When used with `n`, `best_of` controls the number of candidate completions and\n   * `n` specifies how many to return – `best_of` must be greater than `n`.\n   *\n   * **Note:** Because this parameter generates many completions, it can quickly\n   * consume your token quota. Use carefully and ensure that you have reasonable\n   * settings for `max_tokens` and `stop`.\n   */\n  best_of?: number | null;\n\n  /**\n   * Echo back the prompt in addition to the completion\n   */\n  echo?: boolean | null;\n\n  /**\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on their\n   * existing frequency in the text so far, decreasing the model's likelihood to\n   * repeat the same line verbatim.\n   *\n   * [See more information about frequency and presence penalties.](https://platform.openai.com/docs/guides/text-generation)\n   */\n  frequency_penalty?: number | null;\n\n  /**\n   * Modify the likelihood of specified tokens appearing in the completion.\n   *\n   * Accepts a JSON object that maps tokens (specified by their token ID in the GPT\n   * tokenizer) to an associated bias value from -100 to 100. You can use this\n   * [tokenizer tool](/tokenizer?view=bpe) to convert text to token IDs.\n   * Mathematically, the bias is added to the logits generated by the model prior to\n   * sampling. The exact effect will vary per model, but values between -1 and 1\n   * should decrease or increase likelihood of selection; values like -100 or 100\n   * should result in a ban or exclusive selection of the relevant token.\n   *\n   * As an example, you can pass `{\"50256\": -100}` to prevent the <|endoftext|> token\n   * from being generated.\n   */\n  logit_bias?: Record<string, number> | null;\n\n  /**\n   * Include the log probabilities on the `logprobs` most likely output tokens, as\n   * well the chosen tokens. For example, if `logprobs` is 5, the API will return a\n   * list of the 5 most likely tokens. The API will always return the `logprob` of\n   * the sampled token, so there may be up to `logprobs+1` elements in the response.\n   *\n   * The maximum value for `logprobs` is 5.\n   */\n  logprobs?: number | null;\n\n  /**\n   * The maximum number of [tokens](/tokenizer) that can be generated in the\n   * completion.\n   *\n   * The token count of your prompt plus `max_tokens` cannot exceed the model's\n   * context length.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken)\n   * for counting tokens.\n   */\n  max_tokens?: number | null;\n\n  /**\n   * How many completions to generate for each prompt.\n   *\n   * **Note:** Because this parameter generates many completions, it can quickly\n   * consume your token quota. Use carefully and ensure that you have reasonable\n   * settings for `max_tokens` and `stop`.\n   */\n  n?: number | null;\n\n  /**\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on\n   * whether they appear in the text so far, increasing the model's likelihood to\n   * talk about new topics.\n   *\n   * [See more information about frequency and presence penalties.](https://platform.openai.com/docs/guides/text-generation)\n   */\n  presence_penalty?: number | null;\n\n  /**\n   * If specified, our system will make a best effort to sample deterministically,\n   * such that repeated requests with the same `seed` and parameters should return\n   * the same result.\n   *\n   * Determinism is not guaranteed, and you should refer to the `system_fingerprint`\n   * response parameter to monitor changes in the backend.\n   */\n  seed?: number | null;\n\n  /**\n   * Not supported with latest reasoning models `o3` and `o4-mini`.\n   *\n   * Up to 4 sequences where the API will stop generating further tokens. The\n   * returned text will not contain the stop sequence.\n   */\n  stop?: string | null | Array<string>;\n\n  /**\n   * Whether to stream back partial progress. If set, tokens will be sent as\n   * data-only\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\n   * as they become available, with the stream terminated by a `data: [DONE]`\n   * message.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).\n   */\n  stream?: boolean | null;\n\n  /**\n   * Options for streaming response. Only set this when you set `stream: true`.\n   */\n  stream_options?: CompletionsCompletionsAPI.ChatCompletionStreamOptions | null;\n\n  /**\n   * The suffix that comes after a completion of inserted text.\n   *\n   * This parameter is only supported for `gpt-3.5-turbo-instruct`.\n   */\n  suffix?: string | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   *\n   * We generally recommend altering this or `top_p` but not both.\n   */\n  temperature?: number | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or `temperature` but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport namespace CompletionCreateParams {\n  export type CompletionCreateParamsNonStreaming = CompletionsAPI.CompletionCreateParamsNonStreaming;\n  export type CompletionCreateParamsStreaming = CompletionsAPI.CompletionCreateParamsStreaming;\n}\n\nexport interface CompletionCreateParamsNonStreaming extends CompletionCreateParamsBase {\n  /**\n   * Whether to stream back partial progress. If set, tokens will be sent as\n   * data-only\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\n   * as they become available, with the stream terminated by a `data: [DONE]`\n   * message.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).\n   */\n  stream?: false | null;\n}\n\nexport interface CompletionCreateParamsStreaming extends CompletionCreateParamsBase {\n  /**\n   * Whether to stream back partial progress. If set, tokens will be sent as\n   * data-only\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\n   * as they become available, with the stream terminated by a `data: [DONE]`\n   * message.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).\n   */\n  stream: true;\n}\n\nexport declare namespace Completions {\n  export {\n    type Completion as Completion,\n    type CompletionChoice as CompletionChoice,\n    type CompletionUsage as CompletionUsage,\n    type CompletionCreateParams as CompletionCreateParams,\n    type CompletionCreateParamsNonStreaming as CompletionCreateParamsNonStreaming,\n    type CompletionCreateParamsStreaming as CompletionCreateParamsStreaming,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport { APIPromise } from '../../../core/api-promise';\nimport { buildHeaders } from '../../../internal/headers';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { path } from '../../../internal/utils/path';\n\nexport class Content extends APIResource {\n  /**\n   * Retrieve Container File Content\n   */\n  retrieve(fileID: string, params: ContentRetrieveParams, options?: RequestOptions): APIPromise<Response> {\n    const { container_id } = params;\n    return this._client.get(path`/containers/${container_id}/files/${fileID}/content`, {\n      ...options,\n      headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n      __binaryResponse: true,\n    });\n  }\n}\n\nexport interface ContentRetrieveParams {\n  container_id: string;\n}\n\nexport declare namespace Content {\n  export { type ContentRetrieveParams as ContentRetrieveParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as ContentAPI from './content';\nimport { Content, ContentRetrieveParams } from './content';\nimport { APIPromise } from '../../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../../core/pagination';\nimport { type Uploadable } from '../../../core/uploads';\nimport { buildHeaders } from '../../../internal/headers';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { multipartFormRequestOptions } from '../../../internal/uploads';\nimport { path } from '../../../internal/utils/path';\n\nexport class Files extends APIResource {\n  content: ContentAPI.Content = new ContentAPI.Content(this._client);\n\n  /**\n   * Create a Container File\n   *\n   * You can send either a multipart/form-data request with the raw file content, or\n   * a JSON request with a file ID.\n   */\n  create(\n    containerID: string,\n    body: FileCreateParams,\n    options?: RequestOptions,\n  ): APIPromise<FileCreateResponse> {\n    return this._client.post(\n      path`/containers/${containerID}/files`,\n      multipartFormRequestOptions({ body, ...options }, this._client),\n    );\n  }\n\n  /**\n   * Retrieve Container File\n   */\n  retrieve(\n    fileID: string,\n    params: FileRetrieveParams,\n    options?: RequestOptions,\n  ): APIPromise<FileRetrieveResponse> {\n    const { container_id } = params;\n    return this._client.get(path`/containers/${container_id}/files/${fileID}`, options);\n  }\n\n  /**\n   * List Container files\n   */\n  list(\n    containerID: string,\n    query: FileListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<FileListResponsesPage, FileListResponse> {\n    return this._client.getAPIList(path`/containers/${containerID}/files`, CursorPage<FileListResponse>, {\n      query,\n      ...options,\n    });\n  }\n\n  /**\n   * Delete Container File\n   */\n  delete(fileID: string, params: FileDeleteParams, options?: RequestOptions): APIPromise<void> {\n    const { container_id } = params;\n    return this._client.delete(path`/containers/${container_id}/files/${fileID}`, {\n      ...options,\n      headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n    });\n  }\n}\n\nexport type FileListResponsesPage = CursorPage<FileListResponse>;\n\nexport interface FileCreateResponse {\n  /**\n   * Unique identifier for the file.\n   */\n  id: string;\n\n  /**\n   * Size of the file in bytes.\n   */\n  bytes: number;\n\n  /**\n   * The container this file belongs to.\n   */\n  container_id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the file was created.\n   */\n  created_at: number;\n\n  /**\n   * The type of this object (`container.file`).\n   */\n  object: 'container.file';\n\n  /**\n   * Path of the file in the container.\n   */\n  path: string;\n\n  /**\n   * Source of the file (e.g., `user`, `assistant`).\n   */\n  source: string;\n}\n\nexport interface FileRetrieveResponse {\n  /**\n   * Unique identifier for the file.\n   */\n  id: string;\n\n  /**\n   * Size of the file in bytes.\n   */\n  bytes: number;\n\n  /**\n   * The container this file belongs to.\n   */\n  container_id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the file was created.\n   */\n  created_at: number;\n\n  /**\n   * The type of this object (`container.file`).\n   */\n  object: 'container.file';\n\n  /**\n   * Path of the file in the container.\n   */\n  path: string;\n\n  /**\n   * Source of the file (e.g., `user`, `assistant`).\n   */\n  source: string;\n}\n\nexport interface FileListResponse {\n  /**\n   * Unique identifier for the file.\n   */\n  id: string;\n\n  /**\n   * Size of the file in bytes.\n   */\n  bytes: number;\n\n  /**\n   * The container this file belongs to.\n   */\n  container_id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the file was created.\n   */\n  created_at: number;\n\n  /**\n   * The type of this object (`container.file`).\n   */\n  object: 'container.file';\n\n  /**\n   * Path of the file in the container.\n   */\n  path: string;\n\n  /**\n   * Source of the file (e.g., `user`, `assistant`).\n   */\n  source: string;\n}\n\nexport interface FileCreateParams {\n  /**\n   * The File object (not file name) to be uploaded.\n   */\n  file?: Uploadable;\n\n  /**\n   * Name of the file to create.\n   */\n  file_id?: string;\n}\n\nexport interface FileRetrieveParams {\n  container_id: string;\n}\n\nexport interface FileListParams extends CursorPageParams {\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport interface FileDeleteParams {\n  container_id: string;\n}\n\nFiles.Content = Content;\n\nexport declare namespace Files {\n  export {\n    type FileCreateResponse as FileCreateResponse,\n    type FileRetrieveResponse as FileRetrieveResponse,\n    type FileListResponse as FileListResponse,\n    type FileListResponsesPage as FileListResponsesPage,\n    type FileCreateParams as FileCreateParams,\n    type FileRetrieveParams as FileRetrieveParams,\n    type FileListParams as FileListParams,\n    type FileDeleteParams as FileDeleteParams,\n  };\n\n  export { Content as Content, type ContentRetrieveParams as ContentRetrieveParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as FilesAPI from './files/files';\nimport {\n  FileCreateParams,\n  FileCreateResponse,\n  FileDeleteParams,\n  FileListParams,\n  FileListResponse,\n  FileListResponsesPage,\n  FileRetrieveParams,\n  FileRetrieveResponse,\n  Files,\n} from './files/files';\nimport { APIPromise } from '../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../core/pagination';\nimport { buildHeaders } from '../../internal/headers';\nimport { RequestOptions } from '../../internal/request-options';\nimport { path } from '../../internal/utils/path';\n\nexport class Containers extends APIResource {\n  files: FilesAPI.Files = new FilesAPI.Files(this._client);\n\n  /**\n   * Create Container\n   */\n  create(body: ContainerCreateParams, options?: RequestOptions): APIPromise<ContainerCreateResponse> {\n    return this._client.post('/containers', { body, ...options });\n  }\n\n  /**\n   * Retrieve Container\n   */\n  retrieve(containerID: string, options?: RequestOptions): APIPromise<ContainerRetrieveResponse> {\n    return this._client.get(path`/containers/${containerID}`, options);\n  }\n\n  /**\n   * List Containers\n   */\n  list(\n    query: ContainerListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<ContainerListResponsesPage, ContainerListResponse> {\n    return this._client.getAPIList('/containers', CursorPage<ContainerListResponse>, { query, ...options });\n  }\n\n  /**\n   * Delete Container\n   */\n  delete(containerID: string, options?: RequestOptions): APIPromise<void> {\n    return this._client.delete(path`/containers/${containerID}`, {\n      ...options,\n      headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n    });\n  }\n}\n\nexport type ContainerListResponsesPage = CursorPage<ContainerListResponse>;\n\nexport interface ContainerCreateResponse {\n  /**\n   * Unique identifier for the container.\n   */\n  id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the container was created.\n   */\n  created_at: number;\n\n  /**\n   * Name of the container.\n   */\n  name: string;\n\n  /**\n   * The type of this object.\n   */\n  object: string;\n\n  /**\n   * Status of the container (e.g., active, deleted).\n   */\n  status: string;\n\n  /**\n   * The container will expire after this time period. The anchor is the reference\n   * point for the expiration. The minutes is the number of minutes after the anchor\n   * before the container expires.\n   */\n  expires_after?: ContainerCreateResponse.ExpiresAfter;\n}\n\nexport namespace ContainerCreateResponse {\n  /**\n   * The container will expire after this time period. The anchor is the reference\n   * point for the expiration. The minutes is the number of minutes after the anchor\n   * before the container expires.\n   */\n  export interface ExpiresAfter {\n    /**\n     * The reference point for the expiration.\n     */\n    anchor?: 'last_active_at';\n\n    /**\n     * The number of minutes after the anchor before the container expires.\n     */\n    minutes?: number;\n  }\n}\n\nexport interface ContainerRetrieveResponse {\n  /**\n   * Unique identifier for the container.\n   */\n  id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the container was created.\n   */\n  created_at: number;\n\n  /**\n   * Name of the container.\n   */\n  name: string;\n\n  /**\n   * The type of this object.\n   */\n  object: string;\n\n  /**\n   * Status of the container (e.g., active, deleted).\n   */\n  status: string;\n\n  /**\n   * The container will expire after this time period. The anchor is the reference\n   * point for the expiration. The minutes is the number of minutes after the anchor\n   * before the container expires.\n   */\n  expires_after?: ContainerRetrieveResponse.ExpiresAfter;\n}\n\nexport namespace ContainerRetrieveResponse {\n  /**\n   * The container will expire after this time period. The anchor is the reference\n   * point for the expiration. The minutes is the number of minutes after the anchor\n   * before the container expires.\n   */\n  export interface ExpiresAfter {\n    /**\n     * The reference point for the expiration.\n     */\n    anchor?: 'last_active_at';\n\n    /**\n     * The number of minutes after the anchor before the container expires.\n     */\n    minutes?: number;\n  }\n}\n\nexport interface ContainerListResponse {\n  /**\n   * Unique identifier for the container.\n   */\n  id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the container was created.\n   */\n  created_at: number;\n\n  /**\n   * Name of the container.\n   */\n  name: string;\n\n  /**\n   * The type of this object.\n   */\n  object: string;\n\n  /**\n   * Status of the container (e.g., active, deleted).\n   */\n  status: string;\n\n  /**\n   * The container will expire after this time period. The anchor is the reference\n   * point for the expiration. The minutes is the number of minutes after the anchor\n   * before the container expires.\n   */\n  expires_after?: ContainerListResponse.ExpiresAfter;\n}\n\nexport namespace ContainerListResponse {\n  /**\n   * The container will expire after this time period. The anchor is the reference\n   * point for the expiration. The minutes is the number of minutes after the anchor\n   * before the container expires.\n   */\n  export interface ExpiresAfter {\n    /**\n     * The reference point for the expiration.\n     */\n    anchor?: 'last_active_at';\n\n    /**\n     * The number of minutes after the anchor before the container expires.\n     */\n    minutes?: number;\n  }\n}\n\nexport interface ContainerCreateParams {\n  /**\n   * Name of the container to create.\n   */\n  name: string;\n\n  /**\n   * Container expiration time in seconds relative to the 'anchor' time.\n   */\n  expires_after?: ContainerCreateParams.ExpiresAfter;\n\n  /**\n   * IDs of files to copy to the container.\n   */\n  file_ids?: Array<string>;\n}\n\nexport namespace ContainerCreateParams {\n  /**\n   * Container expiration time in seconds relative to the 'anchor' time.\n   */\n  export interface ExpiresAfter {\n    /**\n     * Time anchor for the expiration time. Currently only 'last_active_at' is\n     * supported.\n     */\n    anchor: 'last_active_at';\n\n    minutes: number;\n  }\n}\n\nexport interface ContainerListParams extends CursorPageParams {\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nContainers.Files = Files;\n\nexport declare namespace Containers {\n  export {\n    type ContainerCreateResponse as ContainerCreateResponse,\n    type ContainerRetrieveResponse as ContainerRetrieveResponse,\n    type ContainerListResponse as ContainerListResponse,\n    type ContainerListResponsesPage as ContainerListResponsesPage,\n    type ContainerCreateParams as ContainerCreateParams,\n    type ContainerListParams as ContainerListParams,\n  };\n\n  export {\n    Files as Files,\n    type FileCreateResponse as FileCreateResponse,\n    type FileRetrieveResponse as FileRetrieveResponse,\n    type FileListResponse as FileListResponse,\n    type FileListResponsesPage as FileListResponsesPage,\n    type FileCreateParams as FileCreateParams,\n    type FileRetrieveParams as FileRetrieveParams,\n    type FileListParams as FileListParams,\n    type FileDeleteParams as FileDeleteParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../core/resource';\nimport { APIPromise } from '../core/api-promise';\nimport { RequestOptions } from '../internal/request-options';\nimport { loggerFor, toFloat32Array } from '../internal/utils';\n\nexport class Embeddings extends APIResource {\n  /**\n   * Creates an embedding vector representing the input text.\n   *\n   * @example\n   * ```ts\n   * const createEmbeddingResponse =\n   *   await client.embeddings.create({\n   *     input: 'The quick brown fox jumped over the lazy dog',\n   *     model: 'text-embedding-3-small',\n   *   });\n   * ```\n   */\n  create(body: EmbeddingCreateParams, options?: RequestOptions): APIPromise<CreateEmbeddingResponse> {\n    const hasUserProvidedEncodingFormat = !!body.encoding_format;\n    // No encoding_format specified, defaulting to base64 for performance reasons\n    // See https://github.com/openai/openai-node/pull/1312\n    let encoding_format: EmbeddingCreateParams['encoding_format'] =\n      hasUserProvidedEncodingFormat ? body.encoding_format : 'base64';\n\n    if (hasUserProvidedEncodingFormat) {\n      loggerFor(this._client).debug('embeddings/user defined encoding_format:', body.encoding_format);\n    }\n\n    const response: APIPromise<CreateEmbeddingResponse> = this._client.post('/embeddings', {\n      body: {\n        ...body,\n        encoding_format: encoding_format as EmbeddingCreateParams['encoding_format'],\n      },\n      ...options,\n    });\n\n    // if the user specified an encoding_format, return the response as-is\n    if (hasUserProvidedEncodingFormat) {\n      return response;\n    }\n\n    // in this stage, we are sure the user did not specify an encoding_format\n    // and we defaulted to base64 for performance reasons\n    // we are sure then that the response is base64 encoded, let's decode it\n    // the returned result will be a float32 array since this is OpenAI API's default encoding\n    loggerFor(this._client).debug('embeddings/decoding base64 embeddings from base64');\n\n    return (response as APIPromise<CreateEmbeddingResponse>)._thenUnwrap((response) => {\n      if (response && response.data) {\n        response.data.forEach((embeddingBase64Obj) => {\n          const embeddingBase64Str = embeddingBase64Obj.embedding as unknown as string;\n          embeddingBase64Obj.embedding = toFloat32Array(embeddingBase64Str);\n        });\n      }\n\n      return response;\n    });\n  }\n}\n\nexport interface CreateEmbeddingResponse {\n  /**\n   * The list of embeddings generated by the model.\n   */\n  data: Array<Embedding>;\n\n  /**\n   * The name of the model used to generate the embedding.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always \"list\".\n   */\n  object: 'list';\n\n  /**\n   * The usage information for the request.\n   */\n  usage: CreateEmbeddingResponse.Usage;\n}\n\nexport namespace CreateEmbeddingResponse {\n  /**\n   * The usage information for the request.\n   */\n  export interface Usage {\n    /**\n     * The number of tokens used by the prompt.\n     */\n    prompt_tokens: number;\n\n    /**\n     * The total number of tokens used by the request.\n     */\n    total_tokens: number;\n  }\n}\n\n/**\n * Represents an embedding vector returned by embedding endpoint.\n */\nexport interface Embedding {\n  /**\n   * The embedding vector, which is a list of floats. The length of vector depends on\n   * the model as listed in the\n   * [embedding guide](https://platform.openai.com/docs/guides/embeddings).\n   */\n  embedding: Array<number>;\n\n  /**\n   * The index of the embedding in the list of embeddings.\n   */\n  index: number;\n\n  /**\n   * The object type, which is always \"embedding\".\n   */\n  object: 'embedding';\n}\n\nexport type EmbeddingModel = 'text-embedding-ada-002' | 'text-embedding-3-small' | 'text-embedding-3-large';\n\nexport interface EmbeddingCreateParams {\n  /**\n   * Input text to embed, encoded as a string or array of tokens. To embed multiple\n   * inputs in a single request, pass an array of strings or array of token arrays.\n   * The input must not exceed the max input tokens for the model (8192 tokens for\n   * all embedding models), cannot be an empty string, and any array must be 2048\n   * dimensions or less.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken)\n   * for counting tokens. In addition to the per-input token limit, all embedding\n   * models enforce a maximum of 300,000 tokens summed across all inputs in a single\n   * request.\n   */\n  input: string | Array<string> | Array<number> | Array<Array<number>>;\n\n  /**\n   * ID of the model to use. You can use the\n   * [List models](https://platform.openai.com/docs/api-reference/models/list) API to\n   * see all of your available models, or see our\n   * [Model overview](https://platform.openai.com/docs/models) for descriptions of\n   * them.\n   */\n  model: (string & {}) | EmbeddingModel;\n\n  /**\n   * The number of dimensions the resulting output embeddings should have. Only\n   * supported in `text-embedding-3` and later models.\n   */\n  dimensions?: number;\n\n  /**\n   * The format to return the embeddings in. Can be either `float` or\n   * [`base64`](https://pypi.org/project/pybase64/).\n   */\n  encoding_format?: 'float' | 'base64';\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport declare namespace Embeddings {\n  export {\n    type CreateEmbeddingResponse as CreateEmbeddingResponse,\n    type Embedding as Embedding,\n    type EmbeddingModel as EmbeddingModel,\n    type EmbeddingCreateParams as EmbeddingCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as RunsAPI from './runs';\nimport { APIPromise } from '../../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../../core/pagination';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { path } from '../../../internal/utils/path';\n\nexport class OutputItems extends APIResource {\n  /**\n   * Get an evaluation run output item by ID.\n   */\n  retrieve(\n    outputItemID: string,\n    params: OutputItemRetrieveParams,\n    options?: RequestOptions,\n  ): APIPromise<OutputItemRetrieveResponse> {\n    const { eval_id, run_id } = params;\n    return this._client.get(path`/evals/${eval_id}/runs/${run_id}/output_items/${outputItemID}`, options);\n  }\n\n  /**\n   * Get a list of output items for an evaluation run.\n   */\n  list(\n    runID: string,\n    params: OutputItemListParams,\n    options?: RequestOptions,\n  ): PagePromise<OutputItemListResponsesPage, OutputItemListResponse> {\n    const { eval_id, ...query } = params;\n    return this._client.getAPIList(\n      path`/evals/${eval_id}/runs/${runID}/output_items`,\n      CursorPage<OutputItemListResponse>,\n      { query, ...options },\n    );\n  }\n}\n\nexport type OutputItemListResponsesPage = CursorPage<OutputItemListResponse>;\n\n/**\n * A schema representing an evaluation run output item.\n */\nexport interface OutputItemRetrieveResponse {\n  /**\n   * Unique identifier for the evaluation run output item.\n   */\n  id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the evaluation run was created.\n   */\n  created_at: number;\n\n  /**\n   * Details of the input data source item.\n   */\n  datasource_item: Record<string, unknown>;\n\n  /**\n   * The identifier for the data source item.\n   */\n  datasource_item_id: number;\n\n  /**\n   * The identifier of the evaluation group.\n   */\n  eval_id: string;\n\n  /**\n   * The type of the object. Always \"eval.run.output_item\".\n   */\n  object: 'eval.run.output_item';\n\n  /**\n   * A list of results from the evaluation run.\n   */\n  results: Array<Record<string, unknown>>;\n\n  /**\n   * The identifier of the evaluation run associated with this output item.\n   */\n  run_id: string;\n\n  /**\n   * A sample containing the input and output of the evaluation run.\n   */\n  sample: OutputItemRetrieveResponse.Sample;\n\n  /**\n   * The status of the evaluation run.\n   */\n  status: string;\n}\n\nexport namespace OutputItemRetrieveResponse {\n  /**\n   * A sample containing the input and output of the evaluation run.\n   */\n  export interface Sample {\n    /**\n     * An object representing an error response from the Eval API.\n     */\n    error: RunsAPI.EvalAPIError;\n\n    /**\n     * The reason why the sample generation was finished.\n     */\n    finish_reason: string;\n\n    /**\n     * An array of input messages.\n     */\n    input: Array<Sample.Input>;\n\n    /**\n     * The maximum number of tokens allowed for completion.\n     */\n    max_completion_tokens: number;\n\n    /**\n     * The model used for generating the sample.\n     */\n    model: string;\n\n    /**\n     * An array of output messages.\n     */\n    output: Array<Sample.Output>;\n\n    /**\n     * The seed used for generating the sample.\n     */\n    seed: number;\n\n    /**\n     * The sampling temperature used.\n     */\n    temperature: number;\n\n    /**\n     * The top_p value used for sampling.\n     */\n    top_p: number;\n\n    /**\n     * Token usage details for the sample.\n     */\n    usage: Sample.Usage;\n  }\n\n  export namespace Sample {\n    /**\n     * An input message.\n     */\n    export interface Input {\n      /**\n       * The content of the message.\n       */\n      content: string;\n\n      /**\n       * The role of the message sender (e.g., system, user, developer).\n       */\n      role: string;\n    }\n\n    export interface Output {\n      /**\n       * The content of the message.\n       */\n      content?: string;\n\n      /**\n       * The role of the message (e.g. \"system\", \"assistant\", \"user\").\n       */\n      role?: string;\n    }\n\n    /**\n     * Token usage details for the sample.\n     */\n    export interface Usage {\n      /**\n       * The number of tokens retrieved from cache.\n       */\n      cached_tokens: number;\n\n      /**\n       * The number of completion tokens generated.\n       */\n      completion_tokens: number;\n\n      /**\n       * The number of prompt tokens used.\n       */\n      prompt_tokens: number;\n\n      /**\n       * The total number of tokens used.\n       */\n      total_tokens: number;\n    }\n  }\n}\n\n/**\n * A schema representing an evaluation run output item.\n */\nexport interface OutputItemListResponse {\n  /**\n   * Unique identifier for the evaluation run output item.\n   */\n  id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the evaluation run was created.\n   */\n  created_at: number;\n\n  /**\n   * Details of the input data source item.\n   */\n  datasource_item: Record<string, unknown>;\n\n  /**\n   * The identifier for the data source item.\n   */\n  datasource_item_id: number;\n\n  /**\n   * The identifier of the evaluation group.\n   */\n  eval_id: string;\n\n  /**\n   * The type of the object. Always \"eval.run.output_item\".\n   */\n  object: 'eval.run.output_item';\n\n  /**\n   * A list of results from the evaluation run.\n   */\n  results: Array<Record<string, unknown>>;\n\n  /**\n   * The identifier of the evaluation run associated with this output item.\n   */\n  run_id: string;\n\n  /**\n   * A sample containing the input and output of the evaluation run.\n   */\n  sample: OutputItemListResponse.Sample;\n\n  /**\n   * The status of the evaluation run.\n   */\n  status: string;\n}\n\nexport namespace OutputItemListResponse {\n  /**\n   * A sample containing the input and output of the evaluation run.\n   */\n  export interface Sample {\n    /**\n     * An object representing an error response from the Eval API.\n     */\n    error: RunsAPI.EvalAPIError;\n\n    /**\n     * The reason why the sample generation was finished.\n     */\n    finish_reason: string;\n\n    /**\n     * An array of input messages.\n     */\n    input: Array<Sample.Input>;\n\n    /**\n     * The maximum number of tokens allowed for completion.\n     */\n    max_completion_tokens: number;\n\n    /**\n     * The model used for generating the sample.\n     */\n    model: string;\n\n    /**\n     * An array of output messages.\n     */\n    output: Array<Sample.Output>;\n\n    /**\n     * The seed used for generating the sample.\n     */\n    seed: number;\n\n    /**\n     * The sampling temperature used.\n     */\n    temperature: number;\n\n    /**\n     * The top_p value used for sampling.\n     */\n    top_p: number;\n\n    /**\n     * Token usage details for the sample.\n     */\n    usage: Sample.Usage;\n  }\n\n  export namespace Sample {\n    /**\n     * An input message.\n     */\n    export interface Input {\n      /**\n       * The content of the message.\n       */\n      content: string;\n\n      /**\n       * The role of the message sender (e.g., system, user, developer).\n       */\n      role: string;\n    }\n\n    export interface Output {\n      /**\n       * The content of the message.\n       */\n      content?: string;\n\n      /**\n       * The role of the message (e.g. \"system\", \"assistant\", \"user\").\n       */\n      role?: string;\n    }\n\n    /**\n     * Token usage details for the sample.\n     */\n    export interface Usage {\n      /**\n       * The number of tokens retrieved from cache.\n       */\n      cached_tokens: number;\n\n      /**\n       * The number of completion tokens generated.\n       */\n      completion_tokens: number;\n\n      /**\n       * The number of prompt tokens used.\n       */\n      prompt_tokens: number;\n\n      /**\n       * The total number of tokens used.\n       */\n      total_tokens: number;\n    }\n  }\n}\n\nexport interface OutputItemRetrieveParams {\n  /**\n   * The ID of the evaluation to retrieve runs for.\n   */\n  eval_id: string;\n\n  /**\n   * The ID of the run to retrieve.\n   */\n  run_id: string;\n}\n\nexport interface OutputItemListParams extends CursorPageParams {\n  /**\n   * Path param: The ID of the evaluation to retrieve runs for.\n   */\n  eval_id: string;\n\n  /**\n   * Query param: Sort order for output items by timestamp. Use `asc` for ascending\n   * order or `desc` for descending order. Defaults to `asc`.\n   */\n  order?: 'asc' | 'desc';\n\n  /**\n   * Query param: Filter output items by status. Use `failed` to filter by failed\n   * output items or `pass` to filter by passed output items.\n   */\n  status?: 'fail' | 'pass';\n}\n\nexport declare namespace OutputItems {\n  export {\n    type OutputItemRetrieveResponse as OutputItemRetrieveResponse,\n    type OutputItemListResponse as OutputItemListResponse,\n    type OutputItemListResponsesPage as OutputItemListResponsesPage,\n    type OutputItemRetrieveParams as OutputItemRetrieveParams,\n    type OutputItemListParams as OutputItemListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as Shared from '../../shared';\nimport * as ResponsesAPI from '../../responses/responses';\nimport * as CompletionsAPI from '../../chat/completions/completions';\nimport * as OutputItemsAPI from './output-items';\nimport {\n  OutputItemListParams,\n  OutputItemListResponse,\n  OutputItemListResponsesPage,\n  OutputItemRetrieveParams,\n  OutputItemRetrieveResponse,\n  OutputItems,\n} from './output-items';\nimport { APIPromise } from '../../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../../core/pagination';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { path } from '../../../internal/utils/path';\n\nexport class Runs extends APIResource {\n  outputItems: OutputItemsAPI.OutputItems = new OutputItemsAPI.OutputItems(this._client);\n\n  /**\n   * Kicks off a new run for a given evaluation, specifying the data source, and what\n   * model configuration to use to test. The datasource will be validated against the\n   * schema specified in the config of the evaluation.\n   */\n  create(evalID: string, body: RunCreateParams, options?: RequestOptions): APIPromise<RunCreateResponse> {\n    return this._client.post(path`/evals/${evalID}/runs`, { body, ...options });\n  }\n\n  /**\n   * Get an evaluation run by ID.\n   */\n  retrieve(\n    runID: string,\n    params: RunRetrieveParams,\n    options?: RequestOptions,\n  ): APIPromise<RunRetrieveResponse> {\n    const { eval_id } = params;\n    return this._client.get(path`/evals/${eval_id}/runs/${runID}`, options);\n  }\n\n  /**\n   * Get a list of runs for an evaluation.\n   */\n  list(\n    evalID: string,\n    query: RunListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<RunListResponsesPage, RunListResponse> {\n    return this._client.getAPIList(path`/evals/${evalID}/runs`, CursorPage<RunListResponse>, {\n      query,\n      ...options,\n    });\n  }\n\n  /**\n   * Delete an eval run.\n   */\n  delete(runID: string, params: RunDeleteParams, options?: RequestOptions): APIPromise<RunDeleteResponse> {\n    const { eval_id } = params;\n    return this._client.delete(path`/evals/${eval_id}/runs/${runID}`, options);\n  }\n\n  /**\n   * Cancel an ongoing evaluation run.\n   */\n  cancel(runID: string, params: RunCancelParams, options?: RequestOptions): APIPromise<RunCancelResponse> {\n    const { eval_id } = params;\n    return this._client.post(path`/evals/${eval_id}/runs/${runID}`, options);\n  }\n}\n\nexport type RunListResponsesPage = CursorPage<RunListResponse>;\n\n/**\n * A CompletionsRunDataSource object describing a model sampling configuration.\n */\nexport interface CreateEvalCompletionsRunDataSource {\n  /**\n   * Determines what populates the `item` namespace in this run's data source.\n   */\n  source:\n    | CreateEvalCompletionsRunDataSource.FileContent\n    | CreateEvalCompletionsRunDataSource.FileID\n    | CreateEvalCompletionsRunDataSource.StoredCompletions;\n\n  /**\n   * The type of run data source. Always `completions`.\n   */\n  type: 'completions';\n\n  /**\n   * Used when sampling from a model. Dictates the structure of the messages passed\n   * into the model. Can either be a reference to a prebuilt trajectory (ie,\n   * `item.input_trajectory`), or a template with variable references to the `item`\n   * namespace.\n   */\n  input_messages?:\n    | CreateEvalCompletionsRunDataSource.Template\n    | CreateEvalCompletionsRunDataSource.ItemReference;\n\n  /**\n   * The name of the model to use for generating completions (e.g. \"o3-mini\").\n   */\n  model?: string;\n\n  sampling_params?: CreateEvalCompletionsRunDataSource.SamplingParams;\n}\n\nexport namespace CreateEvalCompletionsRunDataSource {\n  export interface FileContent {\n    /**\n     * The content of the jsonl file.\n     */\n    content: Array<FileContent.Content>;\n\n    /**\n     * The type of jsonl source. Always `file_content`.\n     */\n    type: 'file_content';\n  }\n\n  export namespace FileContent {\n    export interface Content {\n      item: Record<string, unknown>;\n\n      sample?: Record<string, unknown>;\n    }\n  }\n\n  export interface FileID {\n    /**\n     * The identifier of the file.\n     */\n    id: string;\n\n    /**\n     * The type of jsonl source. Always `file_id`.\n     */\n    type: 'file_id';\n  }\n\n  /**\n   * A StoredCompletionsRunDataSource configuration describing a set of filters\n   */\n  export interface StoredCompletions {\n    /**\n     * The type of source. Always `stored_completions`.\n     */\n    type: 'stored_completions';\n\n    /**\n     * An optional Unix timestamp to filter items created after this time.\n     */\n    created_after?: number | null;\n\n    /**\n     * An optional Unix timestamp to filter items created before this time.\n     */\n    created_before?: number | null;\n\n    /**\n     * An optional maximum number of items to return.\n     */\n    limit?: number | null;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n\n    /**\n     * An optional model to filter by (e.g., 'gpt-4o').\n     */\n    model?: string | null;\n  }\n\n  export interface Template {\n    /**\n     * A list of chat messages forming the prompt or context. May include variable\n     * references to the `item` namespace, ie {{item.name}}.\n     */\n    template: Array<ResponsesAPI.EasyInputMessage | Template.Message>;\n\n    /**\n     * The type of input messages. Always `template`.\n     */\n    type: 'template';\n  }\n\n  export namespace Template {\n    /**\n     * A message input to the model with a role indicating instruction following\n     * hierarchy. Instructions given with the `developer` or `system` role take\n     * precedence over instructions given with the `user` role. Messages with the\n     * `assistant` role are presumed to have been generated by the model in previous\n     * interactions.\n     */\n    export interface Message {\n      /**\n       * Text inputs to the model - can contain template strings.\n       */\n      content: string | ResponsesAPI.ResponseInputText | Message.OutputText;\n\n      /**\n       * The role of the message input. One of `user`, `assistant`, `system`, or\n       * `developer`.\n       */\n      role: 'user' | 'assistant' | 'system' | 'developer';\n\n      /**\n       * The type of the message input. Always `message`.\n       */\n      type?: 'message';\n    }\n\n    export namespace Message {\n      /**\n       * A text output from the model.\n       */\n      export interface OutputText {\n        /**\n         * The text output from the model.\n         */\n        text: string;\n\n        /**\n         * The type of the output text. Always `output_text`.\n         */\n        type: 'output_text';\n      }\n    }\n  }\n\n  export interface ItemReference {\n    /**\n     * A reference to a variable in the `item` namespace. Ie, \"item.input_trajectory\"\n     */\n    item_reference: string;\n\n    /**\n     * The type of input messages. Always `item_reference`.\n     */\n    type: 'item_reference';\n  }\n\n  export interface SamplingParams {\n    /**\n     * The maximum number of tokens in the generated output.\n     */\n    max_completion_tokens?: number;\n\n    /**\n     * An object specifying the format that the model must output.\n     *\n     * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n     * Outputs which ensures the model will match your supplied JSON schema. Learn more\n     * in the\n     * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n     *\n     * Setting to `{ \"type\": \"json_object\" }` enables the older JSON mode, which\n     * ensures the message the model generates is valid JSON. Using `json_schema` is\n     * preferred for models that support it.\n     */\n    response_format?:\n      | Shared.ResponseFormatText\n      | Shared.ResponseFormatJSONSchema\n      | Shared.ResponseFormatJSONObject;\n\n    /**\n     * A seed value to initialize the randomness, during sampling.\n     */\n    seed?: number;\n\n    /**\n     * A higher temperature increases randomness in the outputs.\n     */\n    temperature?: number;\n\n    /**\n     * A list of tools the model may call. Currently, only functions are supported as a\n     * tool. Use this to provide a list of functions the model may generate JSON inputs\n     * for. A max of 128 functions are supported.\n     */\n    tools?: Array<CompletionsAPI.ChatCompletionTool>;\n\n    /**\n     * An alternative to temperature for nucleus sampling; 1.0 includes all tokens.\n     */\n    top_p?: number;\n  }\n}\n\n/**\n * A JsonlRunDataSource object with that specifies a JSONL file that matches the\n * eval\n */\nexport interface CreateEvalJSONLRunDataSource {\n  /**\n   * Determines what populates the `item` namespace in the data source.\n   */\n  source: CreateEvalJSONLRunDataSource.FileContent | CreateEvalJSONLRunDataSource.FileID;\n\n  /**\n   * The type of data source. Always `jsonl`.\n   */\n  type: 'jsonl';\n}\n\nexport namespace CreateEvalJSONLRunDataSource {\n  export interface FileContent {\n    /**\n     * The content of the jsonl file.\n     */\n    content: Array<FileContent.Content>;\n\n    /**\n     * The type of jsonl source. Always `file_content`.\n     */\n    type: 'file_content';\n  }\n\n  export namespace FileContent {\n    export interface Content {\n      item: Record<string, unknown>;\n\n      sample?: Record<string, unknown>;\n    }\n  }\n\n  export interface FileID {\n    /**\n     * The identifier of the file.\n     */\n    id: string;\n\n    /**\n     * The type of jsonl source. Always `file_id`.\n     */\n    type: 'file_id';\n  }\n}\n\n/**\n * An object representing an error response from the Eval API.\n */\nexport interface EvalAPIError {\n  /**\n   * The error code.\n   */\n  code: string;\n\n  /**\n   * The error message.\n   */\n  message: string;\n}\n\n/**\n * A schema representing an evaluation run.\n */\nexport interface RunCreateResponse {\n  /**\n   * Unique identifier for the evaluation run.\n   */\n  id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the evaluation run was created.\n   */\n  created_at: number;\n\n  /**\n   * Information about the run's data source.\n   */\n  data_source:\n    | CreateEvalJSONLRunDataSource\n    | CreateEvalCompletionsRunDataSource\n    | RunCreateResponse.Responses;\n\n  /**\n   * An object representing an error response from the Eval API.\n   */\n  error: EvalAPIError;\n\n  /**\n   * The identifier of the associated evaluation.\n   */\n  eval_id: string;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The model that is evaluated, if applicable.\n   */\n  model: string;\n\n  /**\n   * The name of the evaluation run.\n   */\n  name: string;\n\n  /**\n   * The type of the object. Always \"eval.run\".\n   */\n  object: 'eval.run';\n\n  /**\n   * Usage statistics for each model during the evaluation run.\n   */\n  per_model_usage: Array<RunCreateResponse.PerModelUsage>;\n\n  /**\n   * Results per testing criteria applied during the evaluation run.\n   */\n  per_testing_criteria_results: Array<RunCreateResponse.PerTestingCriteriaResult>;\n\n  /**\n   * The URL to the rendered evaluation run report on the UI dashboard.\n   */\n  report_url: string;\n\n  /**\n   * Counters summarizing the outcomes of the evaluation run.\n   */\n  result_counts: RunCreateResponse.ResultCounts;\n\n  /**\n   * The status of the evaluation run.\n   */\n  status: string;\n}\n\nexport namespace RunCreateResponse {\n  /**\n   * A ResponsesRunDataSource object describing a model sampling configuration.\n   */\n  export interface Responses {\n    /**\n     * Determines what populates the `item` namespace in this run's data source.\n     */\n    source: Responses.FileContent | Responses.FileID | Responses.Responses;\n\n    /**\n     * The type of run data source. Always `responses`.\n     */\n    type: 'responses';\n\n    /**\n     * Used when sampling from a model. Dictates the structure of the messages passed\n     * into the model. Can either be a reference to a prebuilt trajectory (ie,\n     * `item.input_trajectory`), or a template with variable references to the `item`\n     * namespace.\n     */\n    input_messages?: Responses.Template | Responses.ItemReference;\n\n    /**\n     * The name of the model to use for generating completions (e.g. \"o3-mini\").\n     */\n    model?: string;\n\n    sampling_params?: Responses.SamplingParams;\n  }\n\n  export namespace Responses {\n    export interface FileContent {\n      /**\n       * The content of the jsonl file.\n       */\n      content: Array<FileContent.Content>;\n\n      /**\n       * The type of jsonl source. Always `file_content`.\n       */\n      type: 'file_content';\n    }\n\n    export namespace FileContent {\n      export interface Content {\n        item: Record<string, unknown>;\n\n        sample?: Record<string, unknown>;\n      }\n    }\n\n    export interface FileID {\n      /**\n       * The identifier of the file.\n       */\n      id: string;\n\n      /**\n       * The type of jsonl source. Always `file_id`.\n       */\n      type: 'file_id';\n    }\n\n    /**\n     * A EvalResponsesSource object describing a run data source configuration.\n     */\n    export interface Responses {\n      /**\n       * The type of run data source. Always `responses`.\n       */\n      type: 'responses';\n\n      /**\n       * Only include items created after this timestamp (inclusive). This is a query\n       * parameter used to select responses.\n       */\n      created_after?: number | null;\n\n      /**\n       * Only include items created before this timestamp (inclusive). This is a query\n       * parameter used to select responses.\n       */\n      created_before?: number | null;\n\n      /**\n       * Optional string to search the 'instructions' field. This is a query parameter\n       * used to select responses.\n       */\n      instructions_search?: string | null;\n\n      /**\n       * Metadata filter for the responses. This is a query parameter used to select\n       * responses.\n       */\n      metadata?: unknown | null;\n\n      /**\n       * The name of the model to find responses for. This is a query parameter used to\n       * select responses.\n       */\n      model?: string | null;\n\n      /**\n       * Optional reasoning effort parameter. This is a query parameter used to select\n       * responses.\n       */\n      reasoning_effort?: Shared.ReasoningEffort | null;\n\n      /**\n       * Sampling temperature. This is a query parameter used to select responses.\n       */\n      temperature?: number | null;\n\n      /**\n       * List of tool names. This is a query parameter used to select responses.\n       */\n      tools?: Array<string> | null;\n\n      /**\n       * Nucleus sampling parameter. This is a query parameter used to select responses.\n       */\n      top_p?: number | null;\n\n      /**\n       * List of user identifiers. This is a query parameter used to select responses.\n       */\n      users?: Array<string> | null;\n    }\n\n    export interface Template {\n      /**\n       * A list of chat messages forming the prompt or context. May include variable\n       * references to the `item` namespace, ie {{item.name}}.\n       */\n      template: Array<Template.ChatMessage | Template.EvalItem>;\n\n      /**\n       * The type of input messages. Always `template`.\n       */\n      type: 'template';\n    }\n\n    export namespace Template {\n      export interface ChatMessage {\n        /**\n         * The content of the message.\n         */\n        content: string;\n\n        /**\n         * The role of the message (e.g. \"system\", \"assistant\", \"user\").\n         */\n        role: string;\n      }\n\n      /**\n       * A message input to the model with a role indicating instruction following\n       * hierarchy. Instructions given with the `developer` or `system` role take\n       * precedence over instructions given with the `user` role. Messages with the\n       * `assistant` role are presumed to have been generated by the model in previous\n       * interactions.\n       */\n      export interface EvalItem {\n        /**\n         * Text inputs to the model - can contain template strings.\n         */\n        content: string | ResponsesAPI.ResponseInputText | EvalItem.OutputText;\n\n        /**\n         * The role of the message input. One of `user`, `assistant`, `system`, or\n         * `developer`.\n         */\n        role: 'user' | 'assistant' | 'system' | 'developer';\n\n        /**\n         * The type of the message input. Always `message`.\n         */\n        type?: 'message';\n      }\n\n      export namespace EvalItem {\n        /**\n         * A text output from the model.\n         */\n        export interface OutputText {\n          /**\n           * The text output from the model.\n           */\n          text: string;\n\n          /**\n           * The type of the output text. Always `output_text`.\n           */\n          type: 'output_text';\n        }\n      }\n    }\n\n    export interface ItemReference {\n      /**\n       * A reference to a variable in the `item` namespace. Ie, \"item.name\"\n       */\n      item_reference: string;\n\n      /**\n       * The type of input messages. Always `item_reference`.\n       */\n      type: 'item_reference';\n    }\n\n    export interface SamplingParams {\n      /**\n       * The maximum number of tokens in the generated output.\n       */\n      max_completion_tokens?: number;\n\n      /**\n       * A seed value to initialize the randomness, during sampling.\n       */\n      seed?: number;\n\n      /**\n       * A higher temperature increases randomness in the outputs.\n       */\n      temperature?: number;\n\n      /**\n       * Configuration options for a text response from the model. Can be plain text or\n       * structured JSON data. Learn more:\n       *\n       * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n       * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n       */\n      text?: SamplingParams.Text;\n\n      /**\n       * An array of tools the model may call while generating a response. You can\n       * specify which tool to use by setting the `tool_choice` parameter.\n       *\n       * The two categories of tools you can provide the model are:\n       *\n       * - **Built-in tools**: Tools that are provided by OpenAI that extend the model's\n       *   capabilities, like\n       *   [web search](https://platform.openai.com/docs/guides/tools-web-search) or\n       *   [file search](https://platform.openai.com/docs/guides/tools-file-search).\n       *   Learn more about\n       *   [built-in tools](https://platform.openai.com/docs/guides/tools).\n       * - **Function calls (custom tools)**: Functions that are defined by you, enabling\n       *   the model to call your own code. Learn more about\n       *   [function calling](https://platform.openai.com/docs/guides/function-calling).\n       */\n      tools?: Array<ResponsesAPI.Tool>;\n\n      /**\n       * An alternative to temperature for nucleus sampling; 1.0 includes all tokens.\n       */\n      top_p?: number;\n    }\n\n    export namespace SamplingParams {\n      /**\n       * Configuration options for a text response from the model. Can be plain text or\n       * structured JSON data. Learn more:\n       *\n       * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n       * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n       */\n      export interface Text {\n        /**\n         * An object specifying the format that the model must output.\n         *\n         * Configuring `{ \"type\": \"json_schema\" }` enables Structured Outputs, which\n         * ensures the model will match your supplied JSON schema. Learn more in the\n         * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n         *\n         * The default format is `{ \"type\": \"text\" }` with no additional options.\n         *\n         * **Not recommended for gpt-4o and newer models:**\n         *\n         * Setting to `{ \"type\": \"json_object\" }` enables the older JSON mode, which\n         * ensures the message the model generates is valid JSON. Using `json_schema` is\n         * preferred for models that support it.\n         */\n        format?: ResponsesAPI.ResponseFormatTextConfig;\n      }\n    }\n  }\n\n  export interface PerModelUsage {\n    /**\n     * The number of tokens retrieved from cache.\n     */\n    cached_tokens: number;\n\n    /**\n     * The number of completion tokens generated.\n     */\n    completion_tokens: number;\n\n    /**\n     * The number of invocations.\n     */\n    invocation_count: number;\n\n    /**\n     * The name of the model.\n     */\n    model_name: string;\n\n    /**\n     * The number of prompt tokens used.\n     */\n    prompt_tokens: number;\n\n    /**\n     * The total number of tokens used.\n     */\n    total_tokens: number;\n  }\n\n  export interface PerTestingCriteriaResult {\n    /**\n     * Number of tests failed for this criteria.\n     */\n    failed: number;\n\n    /**\n     * Number of tests passed for this criteria.\n     */\n    passed: number;\n\n    /**\n     * A description of the testing criteria.\n     */\n    testing_criteria: string;\n  }\n\n  /**\n   * Counters summarizing the outcomes of the evaluation run.\n   */\n  export interface ResultCounts {\n    /**\n     * Number of output items that resulted in an error.\n     */\n    errored: number;\n\n    /**\n     * Number of output items that failed to pass the evaluation.\n     */\n    failed: number;\n\n    /**\n     * Number of output items that passed the evaluation.\n     */\n    passed: number;\n\n    /**\n     * Total number of executed output items.\n     */\n    total: number;\n  }\n}\n\n/**\n * A schema representing an evaluation run.\n */\nexport interface RunRetrieveResponse {\n  /**\n   * Unique identifier for the evaluation run.\n   */\n  id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the evaluation run was created.\n   */\n  created_at: number;\n\n  /**\n   * Information about the run's data source.\n   */\n  data_source:\n    | CreateEvalJSONLRunDataSource\n    | CreateEvalCompletionsRunDataSource\n    | RunRetrieveResponse.Responses;\n\n  /**\n   * An object representing an error response from the Eval API.\n   */\n  error: EvalAPIError;\n\n  /**\n   * The identifier of the associated evaluation.\n   */\n  eval_id: string;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The model that is evaluated, if applicable.\n   */\n  model: string;\n\n  /**\n   * The name of the evaluation run.\n   */\n  name: string;\n\n  /**\n   * The type of the object. Always \"eval.run\".\n   */\n  object: 'eval.run';\n\n  /**\n   * Usage statistics for each model during the evaluation run.\n   */\n  per_model_usage: Array<RunRetrieveResponse.PerModelUsage>;\n\n  /**\n   * Results per testing criteria applied during the evaluation run.\n   */\n  per_testing_criteria_results: Array<RunRetrieveResponse.PerTestingCriteriaResult>;\n\n  /**\n   * The URL to the rendered evaluation run report on the UI dashboard.\n   */\n  report_url: string;\n\n  /**\n   * Counters summarizing the outcomes of the evaluation run.\n   */\n  result_counts: RunRetrieveResponse.ResultCounts;\n\n  /**\n   * The status of the evaluation run.\n   */\n  status: string;\n}\n\nexport namespace RunRetrieveResponse {\n  /**\n   * A ResponsesRunDataSource object describing a model sampling configuration.\n   */\n  export interface Responses {\n    /**\n     * Determines what populates the `item` namespace in this run's data source.\n     */\n    source: Responses.FileContent | Responses.FileID | Responses.Responses;\n\n    /**\n     * The type of run data source. Always `responses`.\n     */\n    type: 'responses';\n\n    /**\n     * Used when sampling from a model. Dictates the structure of the messages passed\n     * into the model. Can either be a reference to a prebuilt trajectory (ie,\n     * `item.input_trajectory`), or a template with variable references to the `item`\n     * namespace.\n     */\n    input_messages?: Responses.Template | Responses.ItemReference;\n\n    /**\n     * The name of the model to use for generating completions (e.g. \"o3-mini\").\n     */\n    model?: string;\n\n    sampling_params?: Responses.SamplingParams;\n  }\n\n  export namespace Responses {\n    export interface FileContent {\n      /**\n       * The content of the jsonl file.\n       */\n      content: Array<FileContent.Content>;\n\n      /**\n       * The type of jsonl source. Always `file_content`.\n       */\n      type: 'file_content';\n    }\n\n    export namespace FileContent {\n      export interface Content {\n        item: Record<string, unknown>;\n\n        sample?: Record<string, unknown>;\n      }\n    }\n\n    export interface FileID {\n      /**\n       * The identifier of the file.\n       */\n      id: string;\n\n      /**\n       * The type of jsonl source. Always `file_id`.\n       */\n      type: 'file_id';\n    }\n\n    /**\n     * A EvalResponsesSource object describing a run data source configuration.\n     */\n    export interface Responses {\n      /**\n       * The type of run data source. Always `responses`.\n       */\n      type: 'responses';\n\n      /**\n       * Only include items created after this timestamp (inclusive). This is a query\n       * parameter used to select responses.\n       */\n      created_after?: number | null;\n\n      /**\n       * Only include items created before this timestamp (inclusive). This is a query\n       * parameter used to select responses.\n       */\n      created_before?: number | null;\n\n      /**\n       * Optional string to search the 'instructions' field. This is a query parameter\n       * used to select responses.\n       */\n      instructions_search?: string | null;\n\n      /**\n       * Metadata filter for the responses. This is a query parameter used to select\n       * responses.\n       */\n      metadata?: unknown | null;\n\n      /**\n       * The name of the model to find responses for. This is a query parameter used to\n       * select responses.\n       */\n      model?: string | null;\n\n      /**\n       * Optional reasoning effort parameter. This is a query parameter used to select\n       * responses.\n       */\n      reasoning_effort?: Shared.ReasoningEffort | null;\n\n      /**\n       * Sampling temperature. This is a query parameter used to select responses.\n       */\n      temperature?: number | null;\n\n      /**\n       * List of tool names. This is a query parameter used to select responses.\n       */\n      tools?: Array<string> | null;\n\n      /**\n       * Nucleus sampling parameter. This is a query parameter used to select responses.\n       */\n      top_p?: number | null;\n\n      /**\n       * List of user identifiers. This is a query parameter used to select responses.\n       */\n      users?: Array<string> | null;\n    }\n\n    export interface Template {\n      /**\n       * A list of chat messages forming the prompt or context. May include variable\n       * references to the `item` namespace, ie {{item.name}}.\n       */\n      template: Array<Template.ChatMessage | Template.EvalItem>;\n\n      /**\n       * The type of input messages. Always `template`.\n       */\n      type: 'template';\n    }\n\n    export namespace Template {\n      export interface ChatMessage {\n        /**\n         * The content of the message.\n         */\n        content: string;\n\n        /**\n         * The role of the message (e.g. \"system\", \"assistant\", \"user\").\n         */\n        role: string;\n      }\n\n      /**\n       * A message input to the model with a role indicating instruction following\n       * hierarchy. Instructions given with the `developer` or `system` role take\n       * precedence over instructions given with the `user` role. Messages with the\n       * `assistant` role are presumed to have been generated by the model in previous\n       * interactions.\n       */\n      export interface EvalItem {\n        /**\n         * Text inputs to the model - can contain template strings.\n         */\n        content: string | ResponsesAPI.ResponseInputText | EvalItem.OutputText;\n\n        /**\n         * The role of the message input. One of `user`, `assistant`, `system`, or\n         * `developer`.\n         */\n        role: 'user' | 'assistant' | 'system' | 'developer';\n\n        /**\n         * The type of the message input. Always `message`.\n         */\n        type?: 'message';\n      }\n\n      export namespace EvalItem {\n        /**\n         * A text output from the model.\n         */\n        export interface OutputText {\n          /**\n           * The text output from the model.\n           */\n          text: string;\n\n          /**\n           * The type of the output text. Always `output_text`.\n           */\n          type: 'output_text';\n        }\n      }\n    }\n\n    export interface ItemReference {\n      /**\n       * A reference to a variable in the `item` namespace. Ie, \"item.name\"\n       */\n      item_reference: string;\n\n      /**\n       * The type of input messages. Always `item_reference`.\n       */\n      type: 'item_reference';\n    }\n\n    export interface SamplingParams {\n      /**\n       * The maximum number of tokens in the generated output.\n       */\n      max_completion_tokens?: number;\n\n      /**\n       * A seed value to initialize the randomness, during sampling.\n       */\n      seed?: number;\n\n      /**\n       * A higher temperature increases randomness in the outputs.\n       */\n      temperature?: number;\n\n      /**\n       * Configuration options for a text response from the model. Can be plain text or\n       * structured JSON data. Learn more:\n       *\n       * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n       * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n       */\n      text?: SamplingParams.Text;\n\n      /**\n       * An array of tools the model may call while generating a response. You can\n       * specify which tool to use by setting the `tool_choice` parameter.\n       *\n       * The two categories of tools you can provide the model are:\n       *\n       * - **Built-in tools**: Tools that are provided by OpenAI that extend the model's\n       *   capabilities, like\n       *   [web search](https://platform.openai.com/docs/guides/tools-web-search) or\n       *   [file search](https://platform.openai.com/docs/guides/tools-file-search).\n       *   Learn more about\n       *   [built-in tools](https://platform.openai.com/docs/guides/tools).\n       * - **Function calls (custom tools)**: Functions that are defined by you, enabling\n       *   the model to call your own code. Learn more about\n       *   [function calling](https://platform.openai.com/docs/guides/function-calling).\n       */\n      tools?: Array<ResponsesAPI.Tool>;\n\n      /**\n       * An alternative to temperature for nucleus sampling; 1.0 includes all tokens.\n       */\n      top_p?: number;\n    }\n\n    export namespace SamplingParams {\n      /**\n       * Configuration options for a text response from the model. Can be plain text or\n       * structured JSON data. Learn more:\n       *\n       * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n       * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n       */\n      export interface Text {\n        /**\n         * An object specifying the format that the model must output.\n         *\n         * Configuring `{ \"type\": \"json_schema\" }` enables Structured Outputs, which\n         * ensures the model will match your supplied JSON schema. Learn more in the\n         * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n         *\n         * The default format is `{ \"type\": \"text\" }` with no additional options.\n         *\n         * **Not recommended for gpt-4o and newer models:**\n         *\n         * Setting to `{ \"type\": \"json_object\" }` enables the older JSON mode, which\n         * ensures the message the model generates is valid JSON. Using `json_schema` is\n         * preferred for models that support it.\n         */\n        format?: ResponsesAPI.ResponseFormatTextConfig;\n      }\n    }\n  }\n\n  export interface PerModelUsage {\n    /**\n     * The number of tokens retrieved from cache.\n     */\n    cached_tokens: number;\n\n    /**\n     * The number of completion tokens generated.\n     */\n    completion_tokens: number;\n\n    /**\n     * The number of invocations.\n     */\n    invocation_count: number;\n\n    /**\n     * The name of the model.\n     */\n    model_name: string;\n\n    /**\n     * The number of prompt tokens used.\n     */\n    prompt_tokens: number;\n\n    /**\n     * The total number of tokens used.\n     */\n    total_tokens: number;\n  }\n\n  export interface PerTestingCriteriaResult {\n    /**\n     * Number of tests failed for this criteria.\n     */\n    failed: number;\n\n    /**\n     * Number of tests passed for this criteria.\n     */\n    passed: number;\n\n    /**\n     * A description of the testing criteria.\n     */\n    testing_criteria: string;\n  }\n\n  /**\n   * Counters summarizing the outcomes of the evaluation run.\n   */\n  export interface ResultCounts {\n    /**\n     * Number of output items that resulted in an error.\n     */\n    errored: number;\n\n    /**\n     * Number of output items that failed to pass the evaluation.\n     */\n    failed: number;\n\n    /**\n     * Number of output items that passed the evaluation.\n     */\n    passed: number;\n\n    /**\n     * Total number of executed output items.\n     */\n    total: number;\n  }\n}\n\n/**\n * A schema representing an evaluation run.\n */\nexport interface RunListResponse {\n  /**\n   * Unique identifier for the evaluation run.\n   */\n  id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the evaluation run was created.\n   */\n  created_at: number;\n\n  /**\n   * Information about the run's data source.\n   */\n  data_source: CreateEvalJSONLRunDataSource | CreateEvalCompletionsRunDataSource | RunListResponse.Responses;\n\n  /**\n   * An object representing an error response from the Eval API.\n   */\n  error: EvalAPIError;\n\n  /**\n   * The identifier of the associated evaluation.\n   */\n  eval_id: string;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The model that is evaluated, if applicable.\n   */\n  model: string;\n\n  /**\n   * The name of the evaluation run.\n   */\n  name: string;\n\n  /**\n   * The type of the object. Always \"eval.run\".\n   */\n  object: 'eval.run';\n\n  /**\n   * Usage statistics for each model during the evaluation run.\n   */\n  per_model_usage: Array<RunListResponse.PerModelUsage>;\n\n  /**\n   * Results per testing criteria applied during the evaluation run.\n   */\n  per_testing_criteria_results: Array<RunListResponse.PerTestingCriteriaResult>;\n\n  /**\n   * The URL to the rendered evaluation run report on the UI dashboard.\n   */\n  report_url: string;\n\n  /**\n   * Counters summarizing the outcomes of the evaluation run.\n   */\n  result_counts: RunListResponse.ResultCounts;\n\n  /**\n   * The status of the evaluation run.\n   */\n  status: string;\n}\n\nexport namespace RunListResponse {\n  /**\n   * A ResponsesRunDataSource object describing a model sampling configuration.\n   */\n  export interface Responses {\n    /**\n     * Determines what populates the `item` namespace in this run's data source.\n     */\n    source: Responses.FileContent | Responses.FileID | Responses.Responses;\n\n    /**\n     * The type of run data source. Always `responses`.\n     */\n    type: 'responses';\n\n    /**\n     * Used when sampling from a model. Dictates the structure of the messages passed\n     * into the model. Can either be a reference to a prebuilt trajectory (ie,\n     * `item.input_trajectory`), or a template with variable references to the `item`\n     * namespace.\n     */\n    input_messages?: Responses.Template | Responses.ItemReference;\n\n    /**\n     * The name of the model to use for generating completions (e.g. \"o3-mini\").\n     */\n    model?: string;\n\n    sampling_params?: Responses.SamplingParams;\n  }\n\n  export namespace Responses {\n    export interface FileContent {\n      /**\n       * The content of the jsonl file.\n       */\n      content: Array<FileContent.Content>;\n\n      /**\n       * The type of jsonl source. Always `file_content`.\n       */\n      type: 'file_content';\n    }\n\n    export namespace FileContent {\n      export interface Content {\n        item: Record<string, unknown>;\n\n        sample?: Record<string, unknown>;\n      }\n    }\n\n    export interface FileID {\n      /**\n       * The identifier of the file.\n       */\n      id: string;\n\n      /**\n       * The type of jsonl source. Always `file_id`.\n       */\n      type: 'file_id';\n    }\n\n    /**\n     * A EvalResponsesSource object describing a run data source configuration.\n     */\n    export interface Responses {\n      /**\n       * The type of run data source. Always `responses`.\n       */\n      type: 'responses';\n\n      /**\n       * Only include items created after this timestamp (inclusive). This is a query\n       * parameter used to select responses.\n       */\n      created_after?: number | null;\n\n      /**\n       * Only include items created before this timestamp (inclusive). This is a query\n       * parameter used to select responses.\n       */\n      created_before?: number | null;\n\n      /**\n       * Optional string to search the 'instructions' field. This is a query parameter\n       * used to select responses.\n       */\n      instructions_search?: string | null;\n\n      /**\n       * Metadata filter for the responses. This is a query parameter used to select\n       * responses.\n       */\n      metadata?: unknown | null;\n\n      /**\n       * The name of the model to find responses for. This is a query parameter used to\n       * select responses.\n       */\n      model?: string | null;\n\n      /**\n       * Optional reasoning effort parameter. This is a query parameter used to select\n       * responses.\n       */\n      reasoning_effort?: Shared.ReasoningEffort | null;\n\n      /**\n       * Sampling temperature. This is a query parameter used to select responses.\n       */\n      temperature?: number | null;\n\n      /**\n       * List of tool names. This is a query parameter used to select responses.\n       */\n      tools?: Array<string> | null;\n\n      /**\n       * Nucleus sampling parameter. This is a query parameter used to select responses.\n       */\n      top_p?: number | null;\n\n      /**\n       * List of user identifiers. This is a query parameter used to select responses.\n       */\n      users?: Array<string> | null;\n    }\n\n    export interface Template {\n      /**\n       * A list of chat messages forming the prompt or context. May include variable\n       * references to the `item` namespace, ie {{item.name}}.\n       */\n      template: Array<Template.ChatMessage | Template.EvalItem>;\n\n      /**\n       * The type of input messages. Always `template`.\n       */\n      type: 'template';\n    }\n\n    export namespace Template {\n      export interface ChatMessage {\n        /**\n         * The content of the message.\n         */\n        content: string;\n\n        /**\n         * The role of the message (e.g. \"system\", \"assistant\", \"user\").\n         */\n        role: string;\n      }\n\n      /**\n       * A message input to the model with a role indicating instruction following\n       * hierarchy. Instructions given with the `developer` or `system` role take\n       * precedence over instructions given with the `user` role. Messages with the\n       * `assistant` role are presumed to have been generated by the model in previous\n       * interactions.\n       */\n      export interface EvalItem {\n        /**\n         * Text inputs to the model - can contain template strings.\n         */\n        content: string | ResponsesAPI.ResponseInputText | EvalItem.OutputText;\n\n        /**\n         * The role of the message input. One of `user`, `assistant`, `system`, or\n         * `developer`.\n         */\n        role: 'user' | 'assistant' | 'system' | 'developer';\n\n        /**\n         * The type of the message input. Always `message`.\n         */\n        type?: 'message';\n      }\n\n      export namespace EvalItem {\n        /**\n         * A text output from the model.\n         */\n        export interface OutputText {\n          /**\n           * The text output from the model.\n           */\n          text: string;\n\n          /**\n           * The type of the output text. Always `output_text`.\n           */\n          type: 'output_text';\n        }\n      }\n    }\n\n    export interface ItemReference {\n      /**\n       * A reference to a variable in the `item` namespace. Ie, \"item.name\"\n       */\n      item_reference: string;\n\n      /**\n       * The type of input messages. Always `item_reference`.\n       */\n      type: 'item_reference';\n    }\n\n    export interface SamplingParams {\n      /**\n       * The maximum number of tokens in the generated output.\n       */\n      max_completion_tokens?: number;\n\n      /**\n       * A seed value to initialize the randomness, during sampling.\n       */\n      seed?: number;\n\n      /**\n       * A higher temperature increases randomness in the outputs.\n       */\n      temperature?: number;\n\n      /**\n       * Configuration options for a text response from the model. Can be plain text or\n       * structured JSON data. Learn more:\n       *\n       * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n       * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n       */\n      text?: SamplingParams.Text;\n\n      /**\n       * An array of tools the model may call while generating a response. You can\n       * specify which tool to use by setting the `tool_choice` parameter.\n       *\n       * The two categories of tools you can provide the model are:\n       *\n       * - **Built-in tools**: Tools that are provided by OpenAI that extend the model's\n       *   capabilities, like\n       *   [web search](https://platform.openai.com/docs/guides/tools-web-search) or\n       *   [file search](https://platform.openai.com/docs/guides/tools-file-search).\n       *   Learn more about\n       *   [built-in tools](https://platform.openai.com/docs/guides/tools).\n       * - **Function calls (custom tools)**: Functions that are defined by you, enabling\n       *   the model to call your own code. Learn more about\n       *   [function calling](https://platform.openai.com/docs/guides/function-calling).\n       */\n      tools?: Array<ResponsesAPI.Tool>;\n\n      /**\n       * An alternative to temperature for nucleus sampling; 1.0 includes all tokens.\n       */\n      top_p?: number;\n    }\n\n    export namespace SamplingParams {\n      /**\n       * Configuration options for a text response from the model. Can be plain text or\n       * structured JSON data. Learn more:\n       *\n       * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n       * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n       */\n      export interface Text {\n        /**\n         * An object specifying the format that the model must output.\n         *\n         * Configuring `{ \"type\": \"json_schema\" }` enables Structured Outputs, which\n         * ensures the model will match your supplied JSON schema. Learn more in the\n         * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n         *\n         * The default format is `{ \"type\": \"text\" }` with no additional options.\n         *\n         * **Not recommended for gpt-4o and newer models:**\n         *\n         * Setting to `{ \"type\": \"json_object\" }` enables the older JSON mode, which\n         * ensures the message the model generates is valid JSON. Using `json_schema` is\n         * preferred for models that support it.\n         */\n        format?: ResponsesAPI.ResponseFormatTextConfig;\n      }\n    }\n  }\n\n  export interface PerModelUsage {\n    /**\n     * The number of tokens retrieved from cache.\n     */\n    cached_tokens: number;\n\n    /**\n     * The number of completion tokens generated.\n     */\n    completion_tokens: number;\n\n    /**\n     * The number of invocations.\n     */\n    invocation_count: number;\n\n    /**\n     * The name of the model.\n     */\n    model_name: string;\n\n    /**\n     * The number of prompt tokens used.\n     */\n    prompt_tokens: number;\n\n    /**\n     * The total number of tokens used.\n     */\n    total_tokens: number;\n  }\n\n  export interface PerTestingCriteriaResult {\n    /**\n     * Number of tests failed for this criteria.\n     */\n    failed: number;\n\n    /**\n     * Number of tests passed for this criteria.\n     */\n    passed: number;\n\n    /**\n     * A description of the testing criteria.\n     */\n    testing_criteria: string;\n  }\n\n  /**\n   * Counters summarizing the outcomes of the evaluation run.\n   */\n  export interface ResultCounts {\n    /**\n     * Number of output items that resulted in an error.\n     */\n    errored: number;\n\n    /**\n     * Number of output items that failed to pass the evaluation.\n     */\n    failed: number;\n\n    /**\n     * Number of output items that passed the evaluation.\n     */\n    passed: number;\n\n    /**\n     * Total number of executed output items.\n     */\n    total: number;\n  }\n}\n\nexport interface RunDeleteResponse {\n  deleted?: boolean;\n\n  object?: string;\n\n  run_id?: string;\n}\n\n/**\n * A schema representing an evaluation run.\n */\nexport interface RunCancelResponse {\n  /**\n   * Unique identifier for the evaluation run.\n   */\n  id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the evaluation run was created.\n   */\n  created_at: number;\n\n  /**\n   * Information about the run's data source.\n   */\n  data_source:\n    | CreateEvalJSONLRunDataSource\n    | CreateEvalCompletionsRunDataSource\n    | RunCancelResponse.Responses;\n\n  /**\n   * An object representing an error response from the Eval API.\n   */\n  error: EvalAPIError;\n\n  /**\n   * The identifier of the associated evaluation.\n   */\n  eval_id: string;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The model that is evaluated, if applicable.\n   */\n  model: string;\n\n  /**\n   * The name of the evaluation run.\n   */\n  name: string;\n\n  /**\n   * The type of the object. Always \"eval.run\".\n   */\n  object: 'eval.run';\n\n  /**\n   * Usage statistics for each model during the evaluation run.\n   */\n  per_model_usage: Array<RunCancelResponse.PerModelUsage>;\n\n  /**\n   * Results per testing criteria applied during the evaluation run.\n   */\n  per_testing_criteria_results: Array<RunCancelResponse.PerTestingCriteriaResult>;\n\n  /**\n   * The URL to the rendered evaluation run report on the UI dashboard.\n   */\n  report_url: string;\n\n  /**\n   * Counters summarizing the outcomes of the evaluation run.\n   */\n  result_counts: RunCancelResponse.ResultCounts;\n\n  /**\n   * The status of the evaluation run.\n   */\n  status: string;\n}\n\nexport namespace RunCancelResponse {\n  /**\n   * A ResponsesRunDataSource object describing a model sampling configuration.\n   */\n  export interface Responses {\n    /**\n     * Determines what populates the `item` namespace in this run's data source.\n     */\n    source: Responses.FileContent | Responses.FileID | Responses.Responses;\n\n    /**\n     * The type of run data source. Always `responses`.\n     */\n    type: 'responses';\n\n    /**\n     * Used when sampling from a model. Dictates the structure of the messages passed\n     * into the model. Can either be a reference to a prebuilt trajectory (ie,\n     * `item.input_trajectory`), or a template with variable references to the `item`\n     * namespace.\n     */\n    input_messages?: Responses.Template | Responses.ItemReference;\n\n    /**\n     * The name of the model to use for generating completions (e.g. \"o3-mini\").\n     */\n    model?: string;\n\n    sampling_params?: Responses.SamplingParams;\n  }\n\n  export namespace Responses {\n    export interface FileContent {\n      /**\n       * The content of the jsonl file.\n       */\n      content: Array<FileContent.Content>;\n\n      /**\n       * The type of jsonl source. Always `file_content`.\n       */\n      type: 'file_content';\n    }\n\n    export namespace FileContent {\n      export interface Content {\n        item: Record<string, unknown>;\n\n        sample?: Record<string, unknown>;\n      }\n    }\n\n    export interface FileID {\n      /**\n       * The identifier of the file.\n       */\n      id: string;\n\n      /**\n       * The type of jsonl source. Always `file_id`.\n       */\n      type: 'file_id';\n    }\n\n    /**\n     * A EvalResponsesSource object describing a run data source configuration.\n     */\n    export interface Responses {\n      /**\n       * The type of run data source. Always `responses`.\n       */\n      type: 'responses';\n\n      /**\n       * Only include items created after this timestamp (inclusive). This is a query\n       * parameter used to select responses.\n       */\n      created_after?: number | null;\n\n      /**\n       * Only include items created before this timestamp (inclusive). This is a query\n       * parameter used to select responses.\n       */\n      created_before?: number | null;\n\n      /**\n       * Optional string to search the 'instructions' field. This is a query parameter\n       * used to select responses.\n       */\n      instructions_search?: string | null;\n\n      /**\n       * Metadata filter for the responses. This is a query parameter used to select\n       * responses.\n       */\n      metadata?: unknown | null;\n\n      /**\n       * The name of the model to find responses for. This is a query parameter used to\n       * select responses.\n       */\n      model?: string | null;\n\n      /**\n       * Optional reasoning effort parameter. This is a query parameter used to select\n       * responses.\n       */\n      reasoning_effort?: Shared.ReasoningEffort | null;\n\n      /**\n       * Sampling temperature. This is a query parameter used to select responses.\n       */\n      temperature?: number | null;\n\n      /**\n       * List of tool names. This is a query parameter used to select responses.\n       */\n      tools?: Array<string> | null;\n\n      /**\n       * Nucleus sampling parameter. This is a query parameter used to select responses.\n       */\n      top_p?: number | null;\n\n      /**\n       * List of user identifiers. This is a query parameter used to select responses.\n       */\n      users?: Array<string> | null;\n    }\n\n    export interface Template {\n      /**\n       * A list of chat messages forming the prompt or context. May include variable\n       * references to the `item` namespace, ie {{item.name}}.\n       */\n      template: Array<Template.ChatMessage | Template.EvalItem>;\n\n      /**\n       * The type of input messages. Always `template`.\n       */\n      type: 'template';\n    }\n\n    export namespace Template {\n      export interface ChatMessage {\n        /**\n         * The content of the message.\n         */\n        content: string;\n\n        /**\n         * The role of the message (e.g. \"system\", \"assistant\", \"user\").\n         */\n        role: string;\n      }\n\n      /**\n       * A message input to the model with a role indicating instruction following\n       * hierarchy. Instructions given with the `developer` or `system` role take\n       * precedence over instructions given with the `user` role. Messages with the\n       * `assistant` role are presumed to have been generated by the model in previous\n       * interactions.\n       */\n      export interface EvalItem {\n        /**\n         * Text inputs to the model - can contain template strings.\n         */\n        content: string | ResponsesAPI.ResponseInputText | EvalItem.OutputText;\n\n        /**\n         * The role of the message input. One of `user`, `assistant`, `system`, or\n         * `developer`.\n         */\n        role: 'user' | 'assistant' | 'system' | 'developer';\n\n        /**\n         * The type of the message input. Always `message`.\n         */\n        type?: 'message';\n      }\n\n      export namespace EvalItem {\n        /**\n         * A text output from the model.\n         */\n        export interface OutputText {\n          /**\n           * The text output from the model.\n           */\n          text: string;\n\n          /**\n           * The type of the output text. Always `output_text`.\n           */\n          type: 'output_text';\n        }\n      }\n    }\n\n    export interface ItemReference {\n      /**\n       * A reference to a variable in the `item` namespace. Ie, \"item.name\"\n       */\n      item_reference: string;\n\n      /**\n       * The type of input messages. Always `item_reference`.\n       */\n      type: 'item_reference';\n    }\n\n    export interface SamplingParams {\n      /**\n       * The maximum number of tokens in the generated output.\n       */\n      max_completion_tokens?: number;\n\n      /**\n       * A seed value to initialize the randomness, during sampling.\n       */\n      seed?: number;\n\n      /**\n       * A higher temperature increases randomness in the outputs.\n       */\n      temperature?: number;\n\n      /**\n       * Configuration options for a text response from the model. Can be plain text or\n       * structured JSON data. Learn more:\n       *\n       * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n       * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n       */\n      text?: SamplingParams.Text;\n\n      /**\n       * An array of tools the model may call while generating a response. You can\n       * specify which tool to use by setting the `tool_choice` parameter.\n       *\n       * The two categories of tools you can provide the model are:\n       *\n       * - **Built-in tools**: Tools that are provided by OpenAI that extend the model's\n       *   capabilities, like\n       *   [web search](https://platform.openai.com/docs/guides/tools-web-search) or\n       *   [file search](https://platform.openai.com/docs/guides/tools-file-search).\n       *   Learn more about\n       *   [built-in tools](https://platform.openai.com/docs/guides/tools).\n       * - **Function calls (custom tools)**: Functions that are defined by you, enabling\n       *   the model to call your own code. Learn more about\n       *   [function calling](https://platform.openai.com/docs/guides/function-calling).\n       */\n      tools?: Array<ResponsesAPI.Tool>;\n\n      /**\n       * An alternative to temperature for nucleus sampling; 1.0 includes all tokens.\n       */\n      top_p?: number;\n    }\n\n    export namespace SamplingParams {\n      /**\n       * Configuration options for a text response from the model. Can be plain text or\n       * structured JSON data. Learn more:\n       *\n       * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n       * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n       */\n      export interface Text {\n        /**\n         * An object specifying the format that the model must output.\n         *\n         * Configuring `{ \"type\": \"json_schema\" }` enables Structured Outputs, which\n         * ensures the model will match your supplied JSON schema. Learn more in the\n         * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n         *\n         * The default format is `{ \"type\": \"text\" }` with no additional options.\n         *\n         * **Not recommended for gpt-4o and newer models:**\n         *\n         * Setting to `{ \"type\": \"json_object\" }` enables the older JSON mode, which\n         * ensures the message the model generates is valid JSON. Using `json_schema` is\n         * preferred for models that support it.\n         */\n        format?: ResponsesAPI.ResponseFormatTextConfig;\n      }\n    }\n  }\n\n  export interface PerModelUsage {\n    /**\n     * The number of tokens retrieved from cache.\n     */\n    cached_tokens: number;\n\n    /**\n     * The number of completion tokens generated.\n     */\n    completion_tokens: number;\n\n    /**\n     * The number of invocations.\n     */\n    invocation_count: number;\n\n    /**\n     * The name of the model.\n     */\n    model_name: string;\n\n    /**\n     * The number of prompt tokens used.\n     */\n    prompt_tokens: number;\n\n    /**\n     * The total number of tokens used.\n     */\n    total_tokens: number;\n  }\n\n  export interface PerTestingCriteriaResult {\n    /**\n     * Number of tests failed for this criteria.\n     */\n    failed: number;\n\n    /**\n     * Number of tests passed for this criteria.\n     */\n    passed: number;\n\n    /**\n     * A description of the testing criteria.\n     */\n    testing_criteria: string;\n  }\n\n  /**\n   * Counters summarizing the outcomes of the evaluation run.\n   */\n  export interface ResultCounts {\n    /**\n     * Number of output items that resulted in an error.\n     */\n    errored: number;\n\n    /**\n     * Number of output items that failed to pass the evaluation.\n     */\n    failed: number;\n\n    /**\n     * Number of output items that passed the evaluation.\n     */\n    passed: number;\n\n    /**\n     * Total number of executed output items.\n     */\n    total: number;\n  }\n}\n\nexport interface RunCreateParams {\n  /**\n   * Details about the run's data source.\n   */\n  data_source:\n    | CreateEvalJSONLRunDataSource\n    | CreateEvalCompletionsRunDataSource\n    | RunCreateParams.CreateEvalResponsesRunDataSource;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The name of the run.\n   */\n  name?: string;\n}\n\nexport namespace RunCreateParams {\n  /**\n   * A ResponsesRunDataSource object describing a model sampling configuration.\n   */\n  export interface CreateEvalResponsesRunDataSource {\n    /**\n     * Determines what populates the `item` namespace in this run's data source.\n     */\n    source:\n      | CreateEvalResponsesRunDataSource.FileContent\n      | CreateEvalResponsesRunDataSource.FileID\n      | CreateEvalResponsesRunDataSource.Responses;\n\n    /**\n     * The type of run data source. Always `responses`.\n     */\n    type: 'responses';\n\n    /**\n     * Used when sampling from a model. Dictates the structure of the messages passed\n     * into the model. Can either be a reference to a prebuilt trajectory (ie,\n     * `item.input_trajectory`), or a template with variable references to the `item`\n     * namespace.\n     */\n    input_messages?:\n      | CreateEvalResponsesRunDataSource.Template\n      | CreateEvalResponsesRunDataSource.ItemReference;\n\n    /**\n     * The name of the model to use for generating completions (e.g. \"o3-mini\").\n     */\n    model?: string;\n\n    sampling_params?: CreateEvalResponsesRunDataSource.SamplingParams;\n  }\n\n  export namespace CreateEvalResponsesRunDataSource {\n    export interface FileContent {\n      /**\n       * The content of the jsonl file.\n       */\n      content: Array<FileContent.Content>;\n\n      /**\n       * The type of jsonl source. Always `file_content`.\n       */\n      type: 'file_content';\n    }\n\n    export namespace FileContent {\n      export interface Content {\n        item: Record<string, unknown>;\n\n        sample?: Record<string, unknown>;\n      }\n    }\n\n    export interface FileID {\n      /**\n       * The identifier of the file.\n       */\n      id: string;\n\n      /**\n       * The type of jsonl source. Always `file_id`.\n       */\n      type: 'file_id';\n    }\n\n    /**\n     * A EvalResponsesSource object describing a run data source configuration.\n     */\n    export interface Responses {\n      /**\n       * The type of run data source. Always `responses`.\n       */\n      type: 'responses';\n\n      /**\n       * Only include items created after this timestamp (inclusive). This is a query\n       * parameter used to select responses.\n       */\n      created_after?: number | null;\n\n      /**\n       * Only include items created before this timestamp (inclusive). This is a query\n       * parameter used to select responses.\n       */\n      created_before?: number | null;\n\n      /**\n       * Optional string to search the 'instructions' field. This is a query parameter\n       * used to select responses.\n       */\n      instructions_search?: string | null;\n\n      /**\n       * Metadata filter for the responses. This is a query parameter used to select\n       * responses.\n       */\n      metadata?: unknown | null;\n\n      /**\n       * The name of the model to find responses for. This is a query parameter used to\n       * select responses.\n       */\n      model?: string | null;\n\n      /**\n       * Optional reasoning effort parameter. This is a query parameter used to select\n       * responses.\n       */\n      reasoning_effort?: Shared.ReasoningEffort | null;\n\n      /**\n       * Sampling temperature. This is a query parameter used to select responses.\n       */\n      temperature?: number | null;\n\n      /**\n       * List of tool names. This is a query parameter used to select responses.\n       */\n      tools?: Array<string> | null;\n\n      /**\n       * Nucleus sampling parameter. This is a query parameter used to select responses.\n       */\n      top_p?: number | null;\n\n      /**\n       * List of user identifiers. This is a query parameter used to select responses.\n       */\n      users?: Array<string> | null;\n    }\n\n    export interface Template {\n      /**\n       * A list of chat messages forming the prompt or context. May include variable\n       * references to the `item` namespace, ie {{item.name}}.\n       */\n      template: Array<Template.ChatMessage | Template.EvalItem>;\n\n      /**\n       * The type of input messages. Always `template`.\n       */\n      type: 'template';\n    }\n\n    export namespace Template {\n      export interface ChatMessage {\n        /**\n         * The content of the message.\n         */\n        content: string;\n\n        /**\n         * The role of the message (e.g. \"system\", \"assistant\", \"user\").\n         */\n        role: string;\n      }\n\n      /**\n       * A message input to the model with a role indicating instruction following\n       * hierarchy. Instructions given with the `developer` or `system` role take\n       * precedence over instructions given with the `user` role. Messages with the\n       * `assistant` role are presumed to have been generated by the model in previous\n       * interactions.\n       */\n      export interface EvalItem {\n        /**\n         * Text inputs to the model - can contain template strings.\n         */\n        content: string | ResponsesAPI.ResponseInputText | EvalItem.OutputText;\n\n        /**\n         * The role of the message input. One of `user`, `assistant`, `system`, or\n         * `developer`.\n         */\n        role: 'user' | 'assistant' | 'system' | 'developer';\n\n        /**\n         * The type of the message input. Always `message`.\n         */\n        type?: 'message';\n      }\n\n      export namespace EvalItem {\n        /**\n         * A text output from the model.\n         */\n        export interface OutputText {\n          /**\n           * The text output from the model.\n           */\n          text: string;\n\n          /**\n           * The type of the output text. Always `output_text`.\n           */\n          type: 'output_text';\n        }\n      }\n    }\n\n    export interface ItemReference {\n      /**\n       * A reference to a variable in the `item` namespace. Ie, \"item.name\"\n       */\n      item_reference: string;\n\n      /**\n       * The type of input messages. Always `item_reference`.\n       */\n      type: 'item_reference';\n    }\n\n    export interface SamplingParams {\n      /**\n       * The maximum number of tokens in the generated output.\n       */\n      max_completion_tokens?: number;\n\n      /**\n       * A seed value to initialize the randomness, during sampling.\n       */\n      seed?: number;\n\n      /**\n       * A higher temperature increases randomness in the outputs.\n       */\n      temperature?: number;\n\n      /**\n       * Configuration options for a text response from the model. Can be plain text or\n       * structured JSON data. Learn more:\n       *\n       * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n       * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n       */\n      text?: SamplingParams.Text;\n\n      /**\n       * An array of tools the model may call while generating a response. You can\n       * specify which tool to use by setting the `tool_choice` parameter.\n       *\n       * The two categories of tools you can provide the model are:\n       *\n       * - **Built-in tools**: Tools that are provided by OpenAI that extend the model's\n       *   capabilities, like\n       *   [web search](https://platform.openai.com/docs/guides/tools-web-search) or\n       *   [file search](https://platform.openai.com/docs/guides/tools-file-search).\n       *   Learn more about\n       *   [built-in tools](https://platform.openai.com/docs/guides/tools).\n       * - **Function calls (custom tools)**: Functions that are defined by you, enabling\n       *   the model to call your own code. Learn more about\n       *   [function calling](https://platform.openai.com/docs/guides/function-calling).\n       */\n      tools?: Array<ResponsesAPI.Tool>;\n\n      /**\n       * An alternative to temperature for nucleus sampling; 1.0 includes all tokens.\n       */\n      top_p?: number;\n    }\n\n    export namespace SamplingParams {\n      /**\n       * Configuration options for a text response from the model. Can be plain text or\n       * structured JSON data. Learn more:\n       *\n       * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n       * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n       */\n      export interface Text {\n        /**\n         * An object specifying the format that the model must output.\n         *\n         * Configuring `{ \"type\": \"json_schema\" }` enables Structured Outputs, which\n         * ensures the model will match your supplied JSON schema. Learn more in the\n         * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n         *\n         * The default format is `{ \"type\": \"text\" }` with no additional options.\n         *\n         * **Not recommended for gpt-4o and newer models:**\n         *\n         * Setting to `{ \"type\": \"json_object\" }` enables the older JSON mode, which\n         * ensures the message the model generates is valid JSON. Using `json_schema` is\n         * preferred for models that support it.\n         */\n        format?: ResponsesAPI.ResponseFormatTextConfig;\n      }\n    }\n  }\n}\n\nexport interface RunRetrieveParams {\n  /**\n   * The ID of the evaluation to retrieve runs for.\n   */\n  eval_id: string;\n}\n\nexport interface RunListParams extends CursorPageParams {\n  /**\n   * Sort order for runs by timestamp. Use `asc` for ascending order or `desc` for\n   * descending order. Defaults to `asc`.\n   */\n  order?: 'asc' | 'desc';\n\n  /**\n   * Filter runs by status. One of `queued` | `in_progress` | `failed` | `completed`\n   * | `canceled`.\n   */\n  status?: 'queued' | 'in_progress' | 'completed' | 'canceled' | 'failed';\n}\n\nexport interface RunDeleteParams {\n  /**\n   * The ID of the evaluation to delete the run from.\n   */\n  eval_id: string;\n}\n\nexport interface RunCancelParams {\n  /**\n   * The ID of the evaluation whose run you want to cancel.\n   */\n  eval_id: string;\n}\n\nRuns.OutputItems = OutputItems;\n\nexport declare namespace Runs {\n  export {\n    type CreateEvalCompletionsRunDataSource as CreateEvalCompletionsRunDataSource,\n    type CreateEvalJSONLRunDataSource as CreateEvalJSONLRunDataSource,\n    type EvalAPIError as EvalAPIError,\n    type RunCreateResponse as RunCreateResponse,\n    type RunRetrieveResponse as RunRetrieveResponse,\n    type RunListResponse as RunListResponse,\n    type RunDeleteResponse as RunDeleteResponse,\n    type RunCancelResponse as RunCancelResponse,\n    type RunListResponsesPage as RunListResponsesPage,\n    type RunCreateParams as RunCreateParams,\n    type RunRetrieveParams as RunRetrieveParams,\n    type RunListParams as RunListParams,\n    type RunDeleteParams as RunDeleteParams,\n    type RunCancelParams as RunCancelParams,\n  };\n\n  export {\n    OutputItems as OutputItems,\n    type OutputItemRetrieveResponse as OutputItemRetrieveResponse,\n    type OutputItemListResponse as OutputItemListResponse,\n    type OutputItemListResponsesPage as OutputItemListResponsesPage,\n    type OutputItemRetrieveParams as OutputItemRetrieveParams,\n    type OutputItemListParams as OutputItemListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as Shared from '../shared';\nimport * as GraderModelsAPI from '../graders/grader-models';\nimport * as ResponsesAPI from '../responses/responses';\nimport * as RunsAPI from './runs/runs';\nimport {\n  CreateEvalCompletionsRunDataSource,\n  CreateEvalJSONLRunDataSource,\n  EvalAPIError,\n  RunCancelParams,\n  RunCancelResponse,\n  RunCreateParams,\n  RunCreateResponse,\n  RunDeleteParams,\n  RunDeleteResponse,\n  RunListParams,\n  RunListResponse,\n  RunListResponsesPage,\n  RunRetrieveParams,\n  RunRetrieveResponse,\n  Runs,\n} from './runs/runs';\nimport { APIPromise } from '../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../core/pagination';\nimport { RequestOptions } from '../../internal/request-options';\nimport { path } from '../../internal/utils/path';\n\nexport class Evals extends APIResource {\n  runs: RunsAPI.Runs = new RunsAPI.Runs(this._client);\n\n  /**\n   * Create the structure of an evaluation that can be used to test a model's\n   * performance. An evaluation is a set of testing criteria and the config for a\n   * data source, which dictates the schema of the data used in the evaluation. After\n   * creating an evaluation, you can run it on different models and model parameters.\n   * We support several types of graders and datasources. For more information, see\n   * the [Evals guide](https://platform.openai.com/docs/guides/evals).\n   */\n  create(body: EvalCreateParams, options?: RequestOptions): APIPromise<EvalCreateResponse> {\n    return this._client.post('/evals', { body, ...options });\n  }\n\n  /**\n   * Get an evaluation by ID.\n   */\n  retrieve(evalID: string, options?: RequestOptions): APIPromise<EvalRetrieveResponse> {\n    return this._client.get(path`/evals/${evalID}`, options);\n  }\n\n  /**\n   * Update certain properties of an evaluation.\n   */\n  update(evalID: string, body: EvalUpdateParams, options?: RequestOptions): APIPromise<EvalUpdateResponse> {\n    return this._client.post(path`/evals/${evalID}`, { body, ...options });\n  }\n\n  /**\n   * List evaluations for a project.\n   */\n  list(\n    query: EvalListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<EvalListResponsesPage, EvalListResponse> {\n    return this._client.getAPIList('/evals', CursorPage<EvalListResponse>, { query, ...options });\n  }\n\n  /**\n   * Delete an evaluation.\n   */\n  delete(evalID: string, options?: RequestOptions): APIPromise<EvalDeleteResponse> {\n    return this._client.delete(path`/evals/${evalID}`, options);\n  }\n}\n\nexport type EvalListResponsesPage = CursorPage<EvalListResponse>;\n\n/**\n * A CustomDataSourceConfig which specifies the schema of your `item` and\n * optionally `sample` namespaces. The response schema defines the shape of the\n * data that will be:\n *\n * - Used to define your testing criteria and\n * - What data is required when creating a run\n */\nexport interface EvalCustomDataSourceConfig {\n  /**\n   * The json schema for the run data source items. Learn how to build JSON schemas\n   * [here](https://json-schema.org/).\n   */\n  schema: Record<string, unknown>;\n\n  /**\n   * The type of data source. Always `custom`.\n   */\n  type: 'custom';\n}\n\n/**\n * @deprecated Deprecated in favor of LogsDataSourceConfig.\n */\nexport interface EvalStoredCompletionsDataSourceConfig {\n  /**\n   * The json schema for the run data source items. Learn how to build JSON schemas\n   * [here](https://json-schema.org/).\n   */\n  schema: Record<string, unknown>;\n\n  /**\n   * The type of data source. Always `stored_completions`.\n   */\n  type: 'stored_completions';\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n}\n\n/**\n * An Eval object with a data source config and testing criteria. An Eval\n * represents a task to be done for your LLM integration. Like:\n *\n * - Improve the quality of my chatbot\n * - See how well my chatbot handles customer support\n * - Check if o4-mini is better at my usecase than gpt-4o\n */\nexport interface EvalCreateResponse {\n  /**\n   * Unique identifier for the evaluation.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the eval was created.\n   */\n  created_at: number;\n\n  /**\n   * Configuration of data sources used in runs of the evaluation.\n   */\n  data_source_config:\n    | EvalCustomDataSourceConfig\n    | EvalCreateResponse.Logs\n    | EvalStoredCompletionsDataSourceConfig;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The name of the evaluation.\n   */\n  name: string;\n\n  /**\n   * The object type.\n   */\n  object: 'eval';\n\n  /**\n   * A list of testing criteria.\n   */\n  testing_criteria: Array<\n    | GraderModelsAPI.LabelModelGrader\n    | GraderModelsAPI.StringCheckGrader\n    | EvalCreateResponse.EvalGraderTextSimilarity\n    | EvalCreateResponse.EvalGraderPython\n    | EvalCreateResponse.EvalGraderScoreModel\n  >;\n}\n\nexport namespace EvalCreateResponse {\n  /**\n   * A LogsDataSourceConfig which specifies the metadata property of your logs query.\n   * This is usually metadata like `usecase=chatbot` or `prompt-version=v2`, etc. The\n   * schema returned by this data source config is used to defined what variables are\n   * available in your evals. `item` and `sample` are both defined when using this\n   * data source config.\n   */\n  export interface Logs {\n    /**\n     * The json schema for the run data source items. Learn how to build JSON schemas\n     * [here](https://json-schema.org/).\n     */\n    schema: Record<string, unknown>;\n\n    /**\n     * The type of data source. Always `logs`.\n     */\n    type: 'logs';\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n  }\n\n  /**\n   * A TextSimilarityGrader object which grades text based on similarity metrics.\n   */\n  export interface EvalGraderTextSimilarity extends GraderModelsAPI.TextSimilarityGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold: number;\n  }\n\n  /**\n   * A PythonGrader object that runs a python script on the input.\n   */\n  export interface EvalGraderPython extends GraderModelsAPI.PythonGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold?: number;\n  }\n\n  /**\n   * A ScoreModelGrader object that uses a model to assign a score to the input.\n   */\n  export interface EvalGraderScoreModel extends GraderModelsAPI.ScoreModelGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold?: number;\n  }\n}\n\n/**\n * An Eval object with a data source config and testing criteria. An Eval\n * represents a task to be done for your LLM integration. Like:\n *\n * - Improve the quality of my chatbot\n * - See how well my chatbot handles customer support\n * - Check if o4-mini is better at my usecase than gpt-4o\n */\nexport interface EvalRetrieveResponse {\n  /**\n   * Unique identifier for the evaluation.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the eval was created.\n   */\n  created_at: number;\n\n  /**\n   * Configuration of data sources used in runs of the evaluation.\n   */\n  data_source_config:\n    | EvalCustomDataSourceConfig\n    | EvalRetrieveResponse.Logs\n    | EvalStoredCompletionsDataSourceConfig;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The name of the evaluation.\n   */\n  name: string;\n\n  /**\n   * The object type.\n   */\n  object: 'eval';\n\n  /**\n   * A list of testing criteria.\n   */\n  testing_criteria: Array<\n    | GraderModelsAPI.LabelModelGrader\n    | GraderModelsAPI.StringCheckGrader\n    | EvalRetrieveResponse.EvalGraderTextSimilarity\n    | EvalRetrieveResponse.EvalGraderPython\n    | EvalRetrieveResponse.EvalGraderScoreModel\n  >;\n}\n\nexport namespace EvalRetrieveResponse {\n  /**\n   * A LogsDataSourceConfig which specifies the metadata property of your logs query.\n   * This is usually metadata like `usecase=chatbot` or `prompt-version=v2`, etc. The\n   * schema returned by this data source config is used to defined what variables are\n   * available in your evals. `item` and `sample` are both defined when using this\n   * data source config.\n   */\n  export interface Logs {\n    /**\n     * The json schema for the run data source items. Learn how to build JSON schemas\n     * [here](https://json-schema.org/).\n     */\n    schema: Record<string, unknown>;\n\n    /**\n     * The type of data source. Always `logs`.\n     */\n    type: 'logs';\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n  }\n\n  /**\n   * A TextSimilarityGrader object which grades text based on similarity metrics.\n   */\n  export interface EvalGraderTextSimilarity extends GraderModelsAPI.TextSimilarityGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold: number;\n  }\n\n  /**\n   * A PythonGrader object that runs a python script on the input.\n   */\n  export interface EvalGraderPython extends GraderModelsAPI.PythonGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold?: number;\n  }\n\n  /**\n   * A ScoreModelGrader object that uses a model to assign a score to the input.\n   */\n  export interface EvalGraderScoreModel extends GraderModelsAPI.ScoreModelGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold?: number;\n  }\n}\n\n/**\n * An Eval object with a data source config and testing criteria. An Eval\n * represents a task to be done for your LLM integration. Like:\n *\n * - Improve the quality of my chatbot\n * - See how well my chatbot handles customer support\n * - Check if o4-mini is better at my usecase than gpt-4o\n */\nexport interface EvalUpdateResponse {\n  /**\n   * Unique identifier for the evaluation.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the eval was created.\n   */\n  created_at: number;\n\n  /**\n   * Configuration of data sources used in runs of the evaluation.\n   */\n  data_source_config:\n    | EvalCustomDataSourceConfig\n    | EvalUpdateResponse.Logs\n    | EvalStoredCompletionsDataSourceConfig;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The name of the evaluation.\n   */\n  name: string;\n\n  /**\n   * The object type.\n   */\n  object: 'eval';\n\n  /**\n   * A list of testing criteria.\n   */\n  testing_criteria: Array<\n    | GraderModelsAPI.LabelModelGrader\n    | GraderModelsAPI.StringCheckGrader\n    | EvalUpdateResponse.EvalGraderTextSimilarity\n    | EvalUpdateResponse.EvalGraderPython\n    | EvalUpdateResponse.EvalGraderScoreModel\n  >;\n}\n\nexport namespace EvalUpdateResponse {\n  /**\n   * A LogsDataSourceConfig which specifies the metadata property of your logs query.\n   * This is usually metadata like `usecase=chatbot` or `prompt-version=v2`, etc. The\n   * schema returned by this data source config is used to defined what variables are\n   * available in your evals. `item` and `sample` are both defined when using this\n   * data source config.\n   */\n  export interface Logs {\n    /**\n     * The json schema for the run data source items. Learn how to build JSON schemas\n     * [here](https://json-schema.org/).\n     */\n    schema: Record<string, unknown>;\n\n    /**\n     * The type of data source. Always `logs`.\n     */\n    type: 'logs';\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n  }\n\n  /**\n   * A TextSimilarityGrader object which grades text based on similarity metrics.\n   */\n  export interface EvalGraderTextSimilarity extends GraderModelsAPI.TextSimilarityGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold: number;\n  }\n\n  /**\n   * A PythonGrader object that runs a python script on the input.\n   */\n  export interface EvalGraderPython extends GraderModelsAPI.PythonGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold?: number;\n  }\n\n  /**\n   * A ScoreModelGrader object that uses a model to assign a score to the input.\n   */\n  export interface EvalGraderScoreModel extends GraderModelsAPI.ScoreModelGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold?: number;\n  }\n}\n\n/**\n * An Eval object with a data source config and testing criteria. An Eval\n * represents a task to be done for your LLM integration. Like:\n *\n * - Improve the quality of my chatbot\n * - See how well my chatbot handles customer support\n * - Check if o4-mini is better at my usecase than gpt-4o\n */\nexport interface EvalListResponse {\n  /**\n   * Unique identifier for the evaluation.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the eval was created.\n   */\n  created_at: number;\n\n  /**\n   * Configuration of data sources used in runs of the evaluation.\n   */\n  data_source_config:\n    | EvalCustomDataSourceConfig\n    | EvalListResponse.Logs\n    | EvalStoredCompletionsDataSourceConfig;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The name of the evaluation.\n   */\n  name: string;\n\n  /**\n   * The object type.\n   */\n  object: 'eval';\n\n  /**\n   * A list of testing criteria.\n   */\n  testing_criteria: Array<\n    | GraderModelsAPI.LabelModelGrader\n    | GraderModelsAPI.StringCheckGrader\n    | EvalListResponse.EvalGraderTextSimilarity\n    | EvalListResponse.EvalGraderPython\n    | EvalListResponse.EvalGraderScoreModel\n  >;\n}\n\nexport namespace EvalListResponse {\n  /**\n   * A LogsDataSourceConfig which specifies the metadata property of your logs query.\n   * This is usually metadata like `usecase=chatbot` or `prompt-version=v2`, etc. The\n   * schema returned by this data source config is used to defined what variables are\n   * available in your evals. `item` and `sample` are both defined when using this\n   * data source config.\n   */\n  export interface Logs {\n    /**\n     * The json schema for the run data source items. Learn how to build JSON schemas\n     * [here](https://json-schema.org/).\n     */\n    schema: Record<string, unknown>;\n\n    /**\n     * The type of data source. Always `logs`.\n     */\n    type: 'logs';\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n  }\n\n  /**\n   * A TextSimilarityGrader object which grades text based on similarity metrics.\n   */\n  export interface EvalGraderTextSimilarity extends GraderModelsAPI.TextSimilarityGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold: number;\n  }\n\n  /**\n   * A PythonGrader object that runs a python script on the input.\n   */\n  export interface EvalGraderPython extends GraderModelsAPI.PythonGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold?: number;\n  }\n\n  /**\n   * A ScoreModelGrader object that uses a model to assign a score to the input.\n   */\n  export interface EvalGraderScoreModel extends GraderModelsAPI.ScoreModelGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold?: number;\n  }\n}\n\nexport interface EvalDeleteResponse {\n  deleted: boolean;\n\n  eval_id: string;\n\n  object: string;\n}\n\nexport interface EvalCreateParams {\n  /**\n   * The configuration for the data source used for the evaluation runs. Dictates the\n   * schema of the data used in the evaluation.\n   */\n  data_source_config: EvalCreateParams.Custom | EvalCreateParams.Logs | EvalCreateParams.StoredCompletions;\n\n  /**\n   * A list of graders for all eval runs in this group. Graders can reference\n   * variables in the data source using double curly braces notation, like\n   * `{{item.variable_name}}`. To reference the model's output, use the `sample`\n   * namespace (ie, `{{sample.output_text}}`).\n   */\n  testing_criteria: Array<\n    | EvalCreateParams.LabelModel\n    | GraderModelsAPI.StringCheckGrader\n    | EvalCreateParams.TextSimilarity\n    | EvalCreateParams.Python\n    | EvalCreateParams.ScoreModel\n  >;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The name of the evaluation.\n   */\n  name?: string;\n}\n\nexport namespace EvalCreateParams {\n  /**\n   * A CustomDataSourceConfig object that defines the schema for the data source used\n   * for the evaluation runs. This schema is used to define the shape of the data\n   * that will be:\n   *\n   * - Used to define your testing criteria and\n   * - What data is required when creating a run\n   */\n  export interface Custom {\n    /**\n     * The json schema for each row in the data source.\n     */\n    item_schema: Record<string, unknown>;\n\n    /**\n     * The type of data source. Always `custom`.\n     */\n    type: 'custom';\n\n    /**\n     * Whether the eval should expect you to populate the sample namespace (ie, by\n     * generating responses off of your data source)\n     */\n    include_sample_schema?: boolean;\n  }\n\n  /**\n   * A data source config which specifies the metadata property of your logs query.\n   * This is usually metadata like `usecase=chatbot` or `prompt-version=v2`, etc.\n   */\n  export interface Logs {\n    /**\n     * The type of data source. Always `logs`.\n     */\n    type: 'logs';\n\n    /**\n     * Metadata filters for the logs data source.\n     */\n    metadata?: Record<string, unknown>;\n  }\n\n  /**\n   * @deprecated Deprecated in favor of LogsDataSourceConfig.\n   */\n  export interface StoredCompletions {\n    /**\n     * The type of data source. Always `stored_completions`.\n     */\n    type: 'stored_completions';\n\n    /**\n     * Metadata filters for the stored completions data source.\n     */\n    metadata?: Record<string, unknown>;\n  }\n\n  /**\n   * A LabelModelGrader object which uses a model to assign labels to each item in\n   * the evaluation.\n   */\n  export interface LabelModel {\n    /**\n     * A list of chat messages forming the prompt or context. May include variable\n     * references to the `item` namespace, ie {{item.name}}.\n     */\n    input: Array<LabelModel.SimpleInputMessage | LabelModel.EvalItem>;\n\n    /**\n     * The labels to classify to each item in the evaluation.\n     */\n    labels: Array<string>;\n\n    /**\n     * The model to use for the evaluation. Must support structured outputs.\n     */\n    model: string;\n\n    /**\n     * The name of the grader.\n     */\n    name: string;\n\n    /**\n     * The labels that indicate a passing result. Must be a subset of labels.\n     */\n    passing_labels: Array<string>;\n\n    /**\n     * The object type, which is always `label_model`.\n     */\n    type: 'label_model';\n  }\n\n  export namespace LabelModel {\n    export interface SimpleInputMessage {\n      /**\n       * The content of the message.\n       */\n      content: string;\n\n      /**\n       * The role of the message (e.g. \"system\", \"assistant\", \"user\").\n       */\n      role: string;\n    }\n\n    /**\n     * A message input to the model with a role indicating instruction following\n     * hierarchy. Instructions given with the `developer` or `system` role take\n     * precedence over instructions given with the `user` role. Messages with the\n     * `assistant` role are presumed to have been generated by the model in previous\n     * interactions.\n     */\n    export interface EvalItem {\n      /**\n       * Text inputs to the model - can contain template strings.\n       */\n      content: string | ResponsesAPI.ResponseInputText | EvalItem.OutputText;\n\n      /**\n       * The role of the message input. One of `user`, `assistant`, `system`, or\n       * `developer`.\n       */\n      role: 'user' | 'assistant' | 'system' | 'developer';\n\n      /**\n       * The type of the message input. Always `message`.\n       */\n      type?: 'message';\n    }\n\n    export namespace EvalItem {\n      /**\n       * A text output from the model.\n       */\n      export interface OutputText {\n        /**\n         * The text output from the model.\n         */\n        text: string;\n\n        /**\n         * The type of the output text. Always `output_text`.\n         */\n        type: 'output_text';\n      }\n    }\n  }\n\n  /**\n   * A TextSimilarityGrader object which grades text based on similarity metrics.\n   */\n  export interface TextSimilarity extends GraderModelsAPI.TextSimilarityGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold: number;\n  }\n\n  /**\n   * A PythonGrader object that runs a python script on the input.\n   */\n  export interface Python extends GraderModelsAPI.PythonGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold?: number;\n  }\n\n  /**\n   * A ScoreModelGrader object that uses a model to assign a score to the input.\n   */\n  export interface ScoreModel extends GraderModelsAPI.ScoreModelGrader {\n    /**\n     * The threshold for the score.\n     */\n    pass_threshold?: number;\n  }\n}\n\nexport interface EvalUpdateParams {\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * Rename the evaluation.\n   */\n  name?: string;\n}\n\nexport interface EvalListParams extends CursorPageParams {\n  /**\n   * Sort order for evals by timestamp. Use `asc` for ascending order or `desc` for\n   * descending order.\n   */\n  order?: 'asc' | 'desc';\n\n  /**\n   * Evals can be ordered by creation time or last updated time. Use `created_at` for\n   * creation time or `updated_at` for last updated time.\n   */\n  order_by?: 'created_at' | 'updated_at';\n}\n\nEvals.Runs = Runs;\n\nexport declare namespace Evals {\n  export {\n    type EvalCustomDataSourceConfig as EvalCustomDataSourceConfig,\n    type EvalStoredCompletionsDataSourceConfig as EvalStoredCompletionsDataSourceConfig,\n    type EvalCreateResponse as EvalCreateResponse,\n    type EvalRetrieveResponse as EvalRetrieveResponse,\n    type EvalUpdateResponse as EvalUpdateResponse,\n    type EvalListResponse as EvalListResponse,\n    type EvalDeleteResponse as EvalDeleteResponse,\n    type EvalListResponsesPage as EvalListResponsesPage,\n    type EvalCreateParams as EvalCreateParams,\n    type EvalUpdateParams as EvalUpdateParams,\n    type EvalListParams as EvalListParams,\n  };\n\n  export {\n    Runs as Runs,\n    type CreateEvalCompletionsRunDataSource as CreateEvalCompletionsRunDataSource,\n    type CreateEvalJSONLRunDataSource as CreateEvalJSONLRunDataSource,\n    type EvalAPIError as EvalAPIError,\n    type RunCreateResponse as RunCreateResponse,\n    type RunRetrieveResponse as RunRetrieveResponse,\n    type RunListResponse as RunListResponse,\n    type RunDeleteResponse as RunDeleteResponse,\n    type RunCancelResponse as RunCancelResponse,\n    type RunListResponsesPage as RunListResponsesPage,\n    type RunCreateParams as RunCreateParams,\n    type RunRetrieveParams as RunRetrieveParams,\n    type RunListParams as RunListParams,\n    type RunDeleteParams as RunDeleteParams,\n    type RunCancelParams as RunCancelParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../core/resource';\nimport { APIPromise } from '../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../core/pagination';\nimport { type Uploadable } from '../core/uploads';\nimport { buildHeaders } from '../internal/headers';\nimport { RequestOptions } from '../internal/request-options';\nimport { sleep } from '../internal/utils/sleep';\nimport { APIConnectionTimeoutError } from '../error';\nimport { multipartFormRequestOptions } from '../internal/uploads';\nimport { path } from '../internal/utils/path';\n\nexport class Files extends APIResource {\n  /**\n   * Upload a file that can be used across various endpoints. Individual files can be\n   * up to 512 MB, and the size of all files uploaded by one organization can be up\n   * to 100 GB.\n   *\n   * The Assistants API supports files up to 2 million tokens and of specific file\n   * types. See the\n   * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n   * details.\n   *\n   * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n   * required formats for fine-tuning\n   * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n   * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n   * models.\n   *\n   * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n   * has a specific required\n   * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n   *\n   * Please [contact us](https://help.openai.com/) if you need to increase these\n   * storage limits.\n   */\n  create(body: FileCreateParams, options?: RequestOptions): APIPromise<FileObject> {\n    return this._client.post('/files', multipartFormRequestOptions({ body, ...options }, this._client));\n  }\n\n  /**\n   * Returns information about a specific file.\n   */\n  retrieve(fileID: string, options?: RequestOptions): APIPromise<FileObject> {\n    return this._client.get(path`/files/${fileID}`, options);\n  }\n\n  /**\n   * Returns a list of files.\n   */\n  list(\n    query: FileListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<FileObjectsPage, FileObject> {\n    return this._client.getAPIList('/files', CursorPage<FileObject>, { query, ...options });\n  }\n\n  /**\n   * Delete a file.\n   */\n  delete(fileID: string, options?: RequestOptions): APIPromise<FileDeleted> {\n    return this._client.delete(path`/files/${fileID}`, options);\n  }\n\n  /**\n   * Returns the contents of the specified file.\n   */\n  content(fileID: string, options?: RequestOptions): APIPromise<Response> {\n    return this._client.get(path`/files/${fileID}/content`, {\n      ...options,\n      headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n      __binaryResponse: true,\n    });\n  }\n\n  /**\n   * Waits for the given file to be processed, default timeout is 30 mins.\n   */\n  async waitForProcessing(\n    id: string,\n    { pollInterval = 5000, maxWait = 30 * 60 * 1000 }: { pollInterval?: number; maxWait?: number } = {},\n  ): Promise<FileObject> {\n    const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n\n    const start = Date.now();\n    let file = await this.retrieve(id);\n\n    while (!file.status || !TERMINAL_STATES.has(file.status)) {\n      await sleep(pollInterval);\n\n      file = await this.retrieve(id);\n      if (Date.now() - start > maxWait) {\n        throw new APIConnectionTimeoutError({\n          message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n        });\n      }\n    }\n\n    return file;\n  }\n}\n\nexport type FileObjectsPage = CursorPage<FileObject>;\n\nexport type FileContent = string;\n\nexport interface FileDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'file';\n}\n\n/**\n * The `File` object represents a document that has been uploaded to OpenAI.\n */\nexport interface FileObject {\n  /**\n   * The file identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The size of the file, in bytes.\n   */\n  bytes: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the file was created.\n   */\n  created_at: number;\n\n  /**\n   * The name of the file.\n   */\n  filename: string;\n\n  /**\n   * The object type, which is always `file`.\n   */\n  object: 'file';\n\n  /**\n   * The intended purpose of the file. Supported values are `assistants`,\n   * `assistants_output`, `batch`, `batch_output`, `fine-tune`, `fine-tune-results`\n   * and `vision`.\n   */\n  purpose:\n    | 'assistants'\n    | 'assistants_output'\n    | 'batch'\n    | 'batch_output'\n    | 'fine-tune'\n    | 'fine-tune-results'\n    | 'vision';\n\n  /**\n   * @deprecated Deprecated. The current status of the file, which can be either\n   * `uploaded`, `processed`, or `error`.\n   */\n  status: 'uploaded' | 'processed' | 'error';\n\n  /**\n   * The Unix timestamp (in seconds) for when the file will expire.\n   */\n  expires_at?: number;\n\n  /**\n   * @deprecated Deprecated. For details on why a fine-tuning training file failed\n   * validation, see the `error` field on `fine_tuning.job`.\n   */\n  status_details?: string;\n}\n\n/**\n * The intended purpose of the uploaded file. One of: - `assistants`: Used in the\n * Assistants API - `batch`: Used in the Batch API - `fine-tune`: Used for\n * fine-tuning - `vision`: Images used for vision fine-tuning - `user_data`:\n * Flexible file type for any purpose - `evals`: Used for eval data sets\n */\nexport type FilePurpose = 'assistants' | 'batch' | 'fine-tune' | 'vision' | 'user_data' | 'evals';\n\nexport interface FileCreateParams {\n  /**\n   * The File object (not file name) to be uploaded.\n   */\n  file: Uploadable;\n\n  /**\n   * The intended purpose of the uploaded file. One of: - `assistants`: Used in the\n   * Assistants API - `batch`: Used in the Batch API - `fine-tune`: Used for\n   * fine-tuning - `vision`: Images used for vision fine-tuning - `user_data`:\n   * Flexible file type for any purpose - `evals`: Used for eval data sets\n   */\n  purpose: FilePurpose;\n}\n\nexport interface FileListParams extends CursorPageParams {\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n\n  /**\n   * Only return files with the given purpose.\n   */\n  purpose?: string;\n}\n\nexport declare namespace Files {\n  export {\n    type FileContent as FileContent,\n    type FileDeleted as FileDeleted,\n    type FileObject as FileObject,\n    type FilePurpose as FilePurpose,\n    type FileObjectsPage as FileObjectsPage,\n    type FileCreateParams as FileCreateParams,\n    type FileListParams as FileListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as GraderModelsAPI from '../graders/grader-models';\n\nexport class Methods extends APIResource {}\n\n/**\n * The hyperparameters used for the DPO fine-tuning job.\n */\nexport interface DpoHyperparameters {\n  /**\n   * Number of examples in each batch. A larger batch size means that model\n   * parameters are updated less frequently, but with lower variance.\n   */\n  batch_size?: 'auto' | number;\n\n  /**\n   * The beta value for the DPO method. A higher beta value will increase the weight\n   * of the penalty between the policy and reference model.\n   */\n  beta?: 'auto' | number;\n\n  /**\n   * Scaling factor for the learning rate. A smaller learning rate may be useful to\n   * avoid overfitting.\n   */\n  learning_rate_multiplier?: 'auto' | number;\n\n  /**\n   * The number of epochs to train the model for. An epoch refers to one full cycle\n   * through the training dataset.\n   */\n  n_epochs?: 'auto' | number;\n}\n\n/**\n * Configuration for the DPO fine-tuning method.\n */\nexport interface DpoMethod {\n  /**\n   * The hyperparameters used for the DPO fine-tuning job.\n   */\n  hyperparameters?: DpoHyperparameters;\n}\n\n/**\n * The hyperparameters used for the reinforcement fine-tuning job.\n */\nexport interface ReinforcementHyperparameters {\n  /**\n   * Number of examples in each batch. A larger batch size means that model\n   * parameters are updated less frequently, but with lower variance.\n   */\n  batch_size?: 'auto' | number;\n\n  /**\n   * Multiplier on amount of compute used for exploring search space during training.\n   */\n  compute_multiplier?: 'auto' | number;\n\n  /**\n   * The number of training steps between evaluation runs.\n   */\n  eval_interval?: 'auto' | number;\n\n  /**\n   * Number of evaluation samples to generate per training step.\n   */\n  eval_samples?: 'auto' | number;\n\n  /**\n   * Scaling factor for the learning rate. A smaller learning rate may be useful to\n   * avoid overfitting.\n   */\n  learning_rate_multiplier?: 'auto' | number;\n\n  /**\n   * The number of epochs to train the model for. An epoch refers to one full cycle\n   * through the training dataset.\n   */\n  n_epochs?: 'auto' | number;\n\n  /**\n   * Level of reasoning effort.\n   */\n  reasoning_effort?: 'default' | 'low' | 'medium' | 'high';\n}\n\n/**\n * Configuration for the reinforcement fine-tuning method.\n */\nexport interface ReinforcementMethod {\n  /**\n   * The grader used for the fine-tuning job.\n   */\n  grader:\n    | GraderModelsAPI.StringCheckGrader\n    | GraderModelsAPI.TextSimilarityGrader\n    | GraderModelsAPI.PythonGrader\n    | GraderModelsAPI.ScoreModelGrader\n    | GraderModelsAPI.MultiGrader;\n\n  /**\n   * The hyperparameters used for the reinforcement fine-tuning job.\n   */\n  hyperparameters?: ReinforcementHyperparameters;\n}\n\n/**\n * The hyperparameters used for the fine-tuning job.\n */\nexport interface SupervisedHyperparameters {\n  /**\n   * Number of examples in each batch. A larger batch size means that model\n   * parameters are updated less frequently, but with lower variance.\n   */\n  batch_size?: 'auto' | number;\n\n  /**\n   * Scaling factor for the learning rate. A smaller learning rate may be useful to\n   * avoid overfitting.\n   */\n  learning_rate_multiplier?: 'auto' | number;\n\n  /**\n   * The number of epochs to train the model for. An epoch refers to one full cycle\n   * through the training dataset.\n   */\n  n_epochs?: 'auto' | number;\n}\n\n/**\n * Configuration for the supervised fine-tuning method.\n */\nexport interface SupervisedMethod {\n  /**\n   * The hyperparameters used for the fine-tuning job.\n   */\n  hyperparameters?: SupervisedHyperparameters;\n}\n\nexport declare namespace Methods {\n  export {\n    type DpoHyperparameters as DpoHyperparameters,\n    type DpoMethod as DpoMethod,\n    type ReinforcementHyperparameters as ReinforcementHyperparameters,\n    type ReinforcementMethod as ReinforcementMethod,\n    type SupervisedHyperparameters as SupervisedHyperparameters,\n    type SupervisedMethod as SupervisedMethod,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as GraderModelsAPI from '../../graders/grader-models';\nimport { APIPromise } from '../../../core/api-promise';\nimport { RequestOptions } from '../../../internal/request-options';\n\nexport class Graders extends APIResource {\n  /**\n   * Run a grader.\n   *\n   * @example\n   * ```ts\n   * const response = await client.fineTuning.alpha.graders.run({\n   *   grader: {\n   *     input: 'input',\n   *     name: 'name',\n   *     operation: 'eq',\n   *     reference: 'reference',\n   *     type: 'string_check',\n   *   },\n   *   model_sample: 'model_sample',\n   * });\n   * ```\n   */\n  run(body: GraderRunParams, options?: RequestOptions): APIPromise<GraderRunResponse> {\n    return this._client.post('/fine_tuning/alpha/graders/run', { body, ...options });\n  }\n\n  /**\n   * Validate a grader.\n   *\n   * @example\n   * ```ts\n   * const response =\n   *   await client.fineTuning.alpha.graders.validate({\n   *     grader: {\n   *       input: 'input',\n   *       name: 'name',\n   *       operation: 'eq',\n   *       reference: 'reference',\n   *       type: 'string_check',\n   *     },\n   *   });\n   * ```\n   */\n  validate(body: GraderValidateParams, options?: RequestOptions): APIPromise<GraderValidateResponse> {\n    return this._client.post('/fine_tuning/alpha/graders/validate', { body, ...options });\n  }\n}\n\nexport interface GraderRunResponse {\n  metadata: GraderRunResponse.Metadata;\n\n  model_grader_token_usage_per_model: Record<string, unknown>;\n\n  reward: number;\n\n  sub_rewards: Record<string, unknown>;\n}\n\nexport namespace GraderRunResponse {\n  export interface Metadata {\n    errors: Metadata.Errors;\n\n    execution_time: number;\n\n    name: string;\n\n    sampled_model_name: string | null;\n\n    scores: Record<string, unknown>;\n\n    token_usage: number | null;\n\n    type: string;\n  }\n\n  export namespace Metadata {\n    export interface Errors {\n      formula_parse_error: boolean;\n\n      invalid_variable_error: boolean;\n\n      model_grader_parse_error: boolean;\n\n      model_grader_refusal_error: boolean;\n\n      model_grader_server_error: boolean;\n\n      model_grader_server_error_details: string | null;\n\n      other_error: boolean;\n\n      python_grader_runtime_error: boolean;\n\n      python_grader_runtime_error_details: string | null;\n\n      python_grader_server_error: boolean;\n\n      python_grader_server_error_type: string | null;\n\n      sample_parse_error: boolean;\n\n      truncated_observation_error: boolean;\n\n      unresponsive_reward_error: boolean;\n    }\n  }\n}\n\nexport interface GraderValidateResponse {\n  /**\n   * The grader used for the fine-tuning job.\n   */\n  grader?:\n    | GraderModelsAPI.StringCheckGrader\n    | GraderModelsAPI.TextSimilarityGrader\n    | GraderModelsAPI.PythonGrader\n    | GraderModelsAPI.ScoreModelGrader\n    | GraderModelsAPI.MultiGrader;\n}\n\nexport interface GraderRunParams {\n  /**\n   * The grader used for the fine-tuning job.\n   */\n  grader:\n    | GraderModelsAPI.StringCheckGrader\n    | GraderModelsAPI.TextSimilarityGrader\n    | GraderModelsAPI.PythonGrader\n    | GraderModelsAPI.ScoreModelGrader\n    | GraderModelsAPI.MultiGrader;\n\n  /**\n   * The model sample to be evaluated. This value will be used to populate the\n   * `sample` namespace. See\n   * [the guide](https://platform.openai.com/docs/guides/graders) for more details.\n   * The `output_json` variable will be populated if the model sample is a valid JSON\n   * string.\n   */\n  model_sample: string;\n\n  /**\n   * The dataset item provided to the grader. This will be used to populate the\n   * `item` namespace. See\n   * [the guide](https://platform.openai.com/docs/guides/graders) for more details.\n   */\n  item?: unknown;\n}\n\nexport interface GraderValidateParams {\n  /**\n   * The grader used for the fine-tuning job.\n   */\n  grader:\n    | GraderModelsAPI.StringCheckGrader\n    | GraderModelsAPI.TextSimilarityGrader\n    | GraderModelsAPI.PythonGrader\n    | GraderModelsAPI.ScoreModelGrader\n    | GraderModelsAPI.MultiGrader;\n}\n\nexport declare namespace Graders {\n  export {\n    type GraderRunResponse as GraderRunResponse,\n    type GraderValidateResponse as GraderValidateResponse,\n    type GraderRunParams as GraderRunParams,\n    type GraderValidateParams as GraderValidateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as GradersAPI from './graders';\nimport {\n  GraderRunParams,\n  GraderRunResponse,\n  GraderValidateParams,\n  GraderValidateResponse,\n  Graders,\n} from './graders';\n\nexport class Alpha extends APIResource {\n  graders: GradersAPI.Graders = new GradersAPI.Graders(this._client);\n}\n\nAlpha.Graders = Graders;\n\nexport declare namespace Alpha {\n  export {\n    Graders as Graders,\n    type GraderRunResponse as GraderRunResponse,\n    type GraderValidateResponse as GraderValidateResponse,\n    type GraderRunParams as GraderRunParams,\n    type GraderValidateParams as GraderValidateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport { APIPromise } from '../../../core/api-promise';\nimport { CursorPage, type CursorPageParams, Page, PagePromise } from '../../../core/pagination';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { path } from '../../../internal/utils/path';\n\nexport class Permissions extends APIResource {\n  /**\n   * **NOTE:** Calling this endpoint requires an [admin API key](../admin-api-keys).\n   *\n   * This enables organization owners to share fine-tuned models with other projects\n   * in their organization.\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const permissionCreateResponse of client.fineTuning.checkpoints.permissions.create(\n   *   'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n   *   { project_ids: ['string'] },\n   * )) {\n   *   // ...\n   * }\n   * ```\n   */\n  create(\n    fineTunedModelCheckpoint: string,\n    body: PermissionCreateParams,\n    options?: RequestOptions,\n  ): PagePromise<PermissionCreateResponsesPage, PermissionCreateResponse> {\n    return this._client.getAPIList(\n      path`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`,\n      Page<PermissionCreateResponse>,\n      { body, method: 'post', ...options },\n    );\n  }\n\n  /**\n   * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n   *\n   * Organization owners can use this endpoint to view all permissions for a\n   * fine-tuned model checkpoint.\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const permissionRetrieveResponse of client.fineTuning.checkpoints.permissions.retrieve(\n   *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n   * )) {\n   *   // ...\n   * }\n   * ```\n   */\n  retrieve(\n    fineTunedModelCheckpoint: string,\n    query: PermissionRetrieveParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<PermissionRetrieveResponsesPage, PermissionRetrieveResponse> {\n    return this._client.getAPIList(\n      path`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`,\n      CursorPage<PermissionRetrieveResponse>,\n      { query, ...options },\n    );\n  }\n\n  /**\n   * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n   *\n   * Organization owners can use this endpoint to delete a permission for a\n   * fine-tuned model checkpoint.\n   *\n   * @example\n   * ```ts\n   * const permission =\n   *   await client.fineTuning.checkpoints.permissions.delete(\n   *     'cp_zc4Q7MP6XxulcVzj4MZdwsAB',\n   *     {\n   *       fine_tuned_model_checkpoint:\n   *         'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n   *     },\n   *   );\n   * ```\n   */\n  delete(\n    permissionID: string,\n    params: PermissionDeleteParams,\n    options?: RequestOptions,\n  ): APIPromise<PermissionDeleteResponse> {\n    const { fine_tuned_model_checkpoint } = params;\n    return this._client.delete(\n      path`/fine_tuning/checkpoints/${fine_tuned_model_checkpoint}/permissions/${permissionID}`,\n      options,\n    );\n  }\n}\n\n// Note: no pagination actually occurs yet, this is for forwards-compatibility.\nexport type PermissionCreateResponsesPage = Page<PermissionCreateResponse>;\n\nexport type PermissionRetrieveResponsesPage = CursorPage<PermissionRetrieveResponse>;\n\n/**\n * The `checkpoint.permission` object represents a permission for a fine-tuned\n * model checkpoint.\n */\nexport interface PermissionCreateResponse {\n  /**\n   * The permission identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the permission was created.\n   */\n  created_at: number;\n\n  /**\n   * The object type, which is always \"checkpoint.permission\".\n   */\n  object: 'checkpoint.permission';\n\n  /**\n   * The project identifier that the permission is for.\n   */\n  project_id: string;\n}\n\n/**\n * The `checkpoint.permission` object represents a permission for a fine-tuned\n * model checkpoint.\n */\nexport interface PermissionRetrieveResponse {\n  /**\n   * The permission identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the permission was created.\n   */\n  created_at: number;\n\n  /**\n   * The object type, which is always \"checkpoint.permission\".\n   */\n  object: 'checkpoint.permission';\n\n  /**\n   * The project identifier that the permission is for.\n   */\n  project_id: string;\n}\n\nexport interface PermissionDeleteResponse {\n  /**\n   * The ID of the fine-tuned model checkpoint permission that was deleted.\n   */\n  id: string;\n\n  /**\n   * Whether the fine-tuned model checkpoint permission was successfully deleted.\n   */\n  deleted: boolean;\n\n  /**\n   * The object type, which is always \"checkpoint.permission\".\n   */\n  object: 'checkpoint.permission';\n}\n\nexport interface PermissionCreateParams {\n  /**\n   * The project identifiers to grant access to.\n   */\n  project_ids: Array<string>;\n}\n\nexport interface PermissionRetrieveParams extends CursorPageParams {\n  /**\n   * The order in which to retrieve permissions.\n   */\n  order?: 'ascending' | 'descending';\n\n  /**\n   * The ID of the project to get permissions for.\n   */\n  project_id?: string;\n}\n\nexport interface PermissionDeleteParams {\n  /**\n   * The ID of the fine-tuned model checkpoint to delete a permission for.\n   */\n  fine_tuned_model_checkpoint: string;\n}\n\nexport declare namespace Permissions {\n  export {\n    type PermissionCreateResponse as PermissionCreateResponse,\n    type PermissionRetrieveResponse as PermissionRetrieveResponse,\n    type PermissionDeleteResponse as PermissionDeleteResponse,\n    type PermissionCreateResponsesPage as PermissionCreateResponsesPage,\n    type PermissionRetrieveResponsesPage as PermissionRetrieveResponsesPage,\n    type PermissionCreateParams as PermissionCreateParams,\n    type PermissionRetrieveParams as PermissionRetrieveParams,\n    type PermissionDeleteParams as PermissionDeleteParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as PermissionsAPI from './permissions';\nimport {\n  PermissionCreateParams,\n  PermissionCreateResponse,\n  PermissionCreateResponsesPage,\n  PermissionDeleteParams,\n  PermissionDeleteResponse,\n  PermissionRetrieveParams,\n  PermissionRetrieveResponse,\n  PermissionRetrieveResponsesPage,\n  Permissions,\n} from './permissions';\n\nexport class Checkpoints extends APIResource {\n  permissions: PermissionsAPI.Permissions = new PermissionsAPI.Permissions(this._client);\n}\n\nCheckpoints.Permissions = Permissions;\n\nexport declare namespace Checkpoints {\n  export {\n    Permissions as Permissions,\n    type PermissionCreateResponse as PermissionCreateResponse,\n    type PermissionRetrieveResponse as PermissionRetrieveResponse,\n    type PermissionDeleteResponse as PermissionDeleteResponse,\n    type PermissionCreateResponsesPage as PermissionCreateResponsesPage,\n    type PermissionRetrieveResponsesPage as PermissionRetrieveResponsesPage,\n    type PermissionCreateParams as PermissionCreateParams,\n    type PermissionRetrieveParams as PermissionRetrieveParams,\n    type PermissionDeleteParams as PermissionDeleteParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../../core/pagination';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { path } from '../../../internal/utils/path';\n\nexport class Checkpoints extends APIResource {\n  /**\n   * List checkpoints for a fine-tuning job.\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const fineTuningJobCheckpoint of client.fineTuning.jobs.checkpoints.list(\n   *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n   * )) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    fineTuningJobID: string,\n    query: CheckpointListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<FineTuningJobCheckpointsPage, FineTuningJobCheckpoint> {\n    return this._client.getAPIList(\n      path`/fine_tuning/jobs/${fineTuningJobID}/checkpoints`,\n      CursorPage<FineTuningJobCheckpoint>,\n      { query, ...options },\n    );\n  }\n}\n\nexport type FineTuningJobCheckpointsPage = CursorPage<FineTuningJobCheckpoint>;\n\n/**\n * The `fine_tuning.job.checkpoint` object represents a model checkpoint for a\n * fine-tuning job that is ready to use.\n */\nexport interface FineTuningJobCheckpoint {\n  /**\n   * The checkpoint identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the checkpoint was created.\n   */\n  created_at: number;\n\n  /**\n   * The name of the fine-tuned checkpoint model that is created.\n   */\n  fine_tuned_model_checkpoint: string;\n\n  /**\n   * The name of the fine-tuning job that this checkpoint was created from.\n   */\n  fine_tuning_job_id: string;\n\n  /**\n   * Metrics at the step number during the fine-tuning job.\n   */\n  metrics: FineTuningJobCheckpoint.Metrics;\n\n  /**\n   * The object type, which is always \"fine_tuning.job.checkpoint\".\n   */\n  object: 'fine_tuning.job.checkpoint';\n\n  /**\n   * The step number that the checkpoint was created at.\n   */\n  step_number: number;\n}\n\nexport namespace FineTuningJobCheckpoint {\n  /**\n   * Metrics at the step number during the fine-tuning job.\n   */\n  export interface Metrics {\n    full_valid_loss?: number;\n\n    full_valid_mean_token_accuracy?: number;\n\n    step?: number;\n\n    train_loss?: number;\n\n    train_mean_token_accuracy?: number;\n\n    valid_loss?: number;\n\n    valid_mean_token_accuracy?: number;\n  }\n}\n\nexport interface CheckpointListParams extends CursorPageParams {}\n\nexport declare namespace Checkpoints {\n  export {\n    type FineTuningJobCheckpoint as FineTuningJobCheckpoint,\n    type FineTuningJobCheckpointsPage as FineTuningJobCheckpointsPage,\n    type CheckpointListParams as CheckpointListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as Shared from '../../shared';\nimport * as MethodsAPI from '../methods';\nimport * as CheckpointsAPI from './checkpoints';\nimport {\n  CheckpointListParams,\n  Checkpoints,\n  FineTuningJobCheckpoint,\n  FineTuningJobCheckpointsPage,\n} from './checkpoints';\nimport { APIPromise } from '../../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../../core/pagination';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { path } from '../../../internal/utils/path';\n\nexport class Jobs extends APIResource {\n  checkpoints: CheckpointsAPI.Checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n\n  /**\n   * Creates a fine-tuning job which begins the process of creating a new model from\n   * a given dataset.\n   *\n   * Response includes details of the enqueued job including job status and the name\n   * of the fine-tuned models once complete.\n   *\n   * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n   *\n   * @example\n   * ```ts\n   * const fineTuningJob = await client.fineTuning.jobs.create({\n   *   model: 'gpt-4o-mini',\n   *   training_file: 'file-abc123',\n   * });\n   * ```\n   */\n  create(body: JobCreateParams, options?: RequestOptions): APIPromise<FineTuningJob> {\n    return this._client.post('/fine_tuning/jobs', { body, ...options });\n  }\n\n  /**\n   * Get info about a fine-tuning job.\n   *\n   * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n   *\n   * @example\n   * ```ts\n   * const fineTuningJob = await client.fineTuning.jobs.retrieve(\n   *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n   * );\n   * ```\n   */\n  retrieve(fineTuningJobID: string, options?: RequestOptions): APIPromise<FineTuningJob> {\n    return this._client.get(path`/fine_tuning/jobs/${fineTuningJobID}`, options);\n  }\n\n  /**\n   * List your organization's fine-tuning jobs\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const fineTuningJob of client.fineTuning.jobs.list()) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    query: JobListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<FineTuningJobsPage, FineTuningJob> {\n    return this._client.getAPIList('/fine_tuning/jobs', CursorPage<FineTuningJob>, { query, ...options });\n  }\n\n  /**\n   * Immediately cancel a fine-tune job.\n   *\n   * @example\n   * ```ts\n   * const fineTuningJob = await client.fineTuning.jobs.cancel(\n   *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n   * );\n   * ```\n   */\n  cancel(fineTuningJobID: string, options?: RequestOptions): APIPromise<FineTuningJob> {\n    return this._client.post(path`/fine_tuning/jobs/${fineTuningJobID}/cancel`, options);\n  }\n\n  /**\n   * Get status updates for a fine-tuning job.\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const fineTuningJobEvent of client.fineTuning.jobs.listEvents(\n   *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n   * )) {\n   *   // ...\n   * }\n   * ```\n   */\n  listEvents(\n    fineTuningJobID: string,\n    query: JobListEventsParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<FineTuningJobEventsPage, FineTuningJobEvent> {\n    return this._client.getAPIList(\n      path`/fine_tuning/jobs/${fineTuningJobID}/events`,\n      CursorPage<FineTuningJobEvent>,\n      { query, ...options },\n    );\n  }\n\n  /**\n   * Pause a fine-tune job.\n   *\n   * @example\n   * ```ts\n   * const fineTuningJob = await client.fineTuning.jobs.pause(\n   *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n   * );\n   * ```\n   */\n  pause(fineTuningJobID: string, options?: RequestOptions): APIPromise<FineTuningJob> {\n    return this._client.post(path`/fine_tuning/jobs/${fineTuningJobID}/pause`, options);\n  }\n\n  /**\n   * Resume a fine-tune job.\n   *\n   * @example\n   * ```ts\n   * const fineTuningJob = await client.fineTuning.jobs.resume(\n   *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n   * );\n   * ```\n   */\n  resume(fineTuningJobID: string, options?: RequestOptions): APIPromise<FineTuningJob> {\n    return this._client.post(path`/fine_tuning/jobs/${fineTuningJobID}/resume`, options);\n  }\n}\n\nexport type FineTuningJobsPage = CursorPage<FineTuningJob>;\n\nexport type FineTuningJobEventsPage = CursorPage<FineTuningJobEvent>;\n\n/**\n * The `fine_tuning.job` object represents a fine-tuning job that has been created\n * through the API.\n */\nexport interface FineTuningJob {\n  /**\n   * The object identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the fine-tuning job was created.\n   */\n  created_at: number;\n\n  /**\n   * For fine-tuning jobs that have `failed`, this will contain more information on\n   * the cause of the failure.\n   */\n  error: FineTuningJob.Error | null;\n\n  /**\n   * The name of the fine-tuned model that is being created. The value will be null\n   * if the fine-tuning job is still running.\n   */\n  fine_tuned_model: string | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the fine-tuning job was finished. The\n   * value will be null if the fine-tuning job is still running.\n   */\n  finished_at: number | null;\n\n  /**\n   * The hyperparameters used for the fine-tuning job. This value will only be\n   * returned when running `supervised` jobs.\n   */\n  hyperparameters: FineTuningJob.Hyperparameters;\n\n  /**\n   * The base model that is being fine-tuned.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always \"fine_tuning.job\".\n   */\n  object: 'fine_tuning.job';\n\n  /**\n   * The organization that owns the fine-tuning job.\n   */\n  organization_id: string;\n\n  /**\n   * The compiled results file ID(s) for the fine-tuning job. You can retrieve the\n   * results with the\n   * [Files API](https://platform.openai.com/docs/api-reference/files/retrieve-contents).\n   */\n  result_files: Array<string>;\n\n  /**\n   * The seed used for the fine-tuning job.\n   */\n  seed: number;\n\n  /**\n   * The current status of the fine-tuning job, which can be either\n   * `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.\n   */\n  status: 'validating_files' | 'queued' | 'running' | 'succeeded' | 'failed' | 'cancelled';\n\n  /**\n   * The total number of billable tokens processed by this fine-tuning job. The value\n   * will be null if the fine-tuning job is still running.\n   */\n  trained_tokens: number | null;\n\n  /**\n   * The file ID used for training. You can retrieve the training data with the\n   * [Files API](https://platform.openai.com/docs/api-reference/files/retrieve-contents).\n   */\n  training_file: string;\n\n  /**\n   * The file ID used for validation. You can retrieve the validation results with\n   * the\n   * [Files API](https://platform.openai.com/docs/api-reference/files/retrieve-contents).\n   */\n  validation_file: string | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the fine-tuning job is estimated to\n   * finish. The value will be null if the fine-tuning job is not running.\n   */\n  estimated_finish?: number | null;\n\n  /**\n   * A list of integrations to enable for this fine-tuning job.\n   */\n  integrations?: Array<FineTuningJobWandbIntegrationObject> | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The method used for fine-tuning.\n   */\n  method?: FineTuningJob.Method;\n}\n\nexport namespace FineTuningJob {\n  /**\n   * For fine-tuning jobs that have `failed`, this will contain more information on\n   * the cause of the failure.\n   */\n  export interface Error {\n    /**\n     * A machine-readable error code.\n     */\n    code: string;\n\n    /**\n     * A human-readable error message.\n     */\n    message: string;\n\n    /**\n     * The parameter that was invalid, usually `training_file` or `validation_file`.\n     * This field will be null if the failure was not parameter-specific.\n     */\n    param: string | null;\n  }\n\n  /**\n   * The hyperparameters used for the fine-tuning job. This value will only be\n   * returned when running `supervised` jobs.\n   */\n  export interface Hyperparameters {\n    /**\n     * Number of examples in each batch. A larger batch size means that model\n     * parameters are updated less frequently, but with lower variance.\n     */\n    batch_size?: 'auto' | number | null;\n\n    /**\n     * Scaling factor for the learning rate. A smaller learning rate may be useful to\n     * avoid overfitting.\n     */\n    learning_rate_multiplier?: 'auto' | number;\n\n    /**\n     * The number of epochs to train the model for. An epoch refers to one full cycle\n     * through the training dataset.\n     */\n    n_epochs?: 'auto' | number;\n  }\n\n  /**\n   * The method used for fine-tuning.\n   */\n  export interface Method {\n    /**\n     * The type of method. Is either `supervised`, `dpo`, or `reinforcement`.\n     */\n    type: 'supervised' | 'dpo' | 'reinforcement';\n\n    /**\n     * Configuration for the DPO fine-tuning method.\n     */\n    dpo?: MethodsAPI.DpoMethod;\n\n    /**\n     * Configuration for the reinforcement fine-tuning method.\n     */\n    reinforcement?: MethodsAPI.ReinforcementMethod;\n\n    /**\n     * Configuration for the supervised fine-tuning method.\n     */\n    supervised?: MethodsAPI.SupervisedMethod;\n  }\n}\n\n/**\n * Fine-tuning job event object\n */\nexport interface FineTuningJobEvent {\n  /**\n   * The object identifier.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the fine-tuning job was created.\n   */\n  created_at: number;\n\n  /**\n   * The log level of the event.\n   */\n  level: 'info' | 'warn' | 'error';\n\n  /**\n   * The message of the event.\n   */\n  message: string;\n\n  /**\n   * The object type, which is always \"fine_tuning.job.event\".\n   */\n  object: 'fine_tuning.job.event';\n\n  /**\n   * The data associated with the event.\n   */\n  data?: unknown;\n\n  /**\n   * The type of event.\n   */\n  type?: 'message' | 'metrics';\n}\n\n/**\n * The settings for your integration with Weights and Biases. This payload\n * specifies the project that metrics will be sent to. Optionally, you can set an\n * explicit display name for your run, add tags to your run, and set a default\n * entity (team, username, etc) to be associated with your run.\n */\nexport interface FineTuningJobWandbIntegration {\n  /**\n   * The name of the project that the new run will be created under.\n   */\n  project: string;\n\n  /**\n   * The entity to use for the run. This allows you to set the team or username of\n   * the WandB user that you would like associated with the run. If not set, the\n   * default entity for the registered WandB API key is used.\n   */\n  entity?: string | null;\n\n  /**\n   * A display name to set for the run. If not set, we will use the Job ID as the\n   * name.\n   */\n  name?: string | null;\n\n  /**\n   * A list of tags to be attached to the newly created run. These tags are passed\n   * through directly to WandB. Some default tags are generated by OpenAI:\n   * \"openai/finetune\", \"openai/{base-model}\", \"openai/{ftjob-abcdef}\".\n   */\n  tags?: Array<string>;\n}\n\nexport interface FineTuningJobWandbIntegrationObject {\n  /**\n   * The type of the integration being enabled for the fine-tuning job\n   */\n  type: 'wandb';\n\n  /**\n   * The settings for your integration with Weights and Biases. This payload\n   * specifies the project that metrics will be sent to. Optionally, you can set an\n   * explicit display name for your run, add tags to your run, and set a default\n   * entity (team, username, etc) to be associated with your run.\n   */\n  wandb: FineTuningJobWandbIntegration;\n}\n\nexport type FineTuningJobIntegration = FineTuningJobWandbIntegrationObject;\n\nexport interface JobCreateParams {\n  /**\n   * The name of the model to fine-tune. You can select one of the\n   * [supported models](https://platform.openai.com/docs/guides/fine-tuning#which-models-can-be-fine-tuned).\n   */\n  model: (string & {}) | 'babbage-002' | 'davinci-002' | 'gpt-3.5-turbo' | 'gpt-4o-mini';\n\n  /**\n   * The ID of an uploaded file that contains training data.\n   *\n   * See [upload file](https://platform.openai.com/docs/api-reference/files/create)\n   * for how to upload a file.\n   *\n   * Your dataset must be formatted as a JSONL file. Additionally, you must upload\n   * your file with the purpose `fine-tune`.\n   *\n   * The contents of the file should differ depending on if the model uses the\n   * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input),\n   * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n   * format, or if the fine-tuning method uses the\n   * [preference](https://platform.openai.com/docs/api-reference/fine-tuning/preference-input)\n   * format.\n   *\n   * See the\n   * [fine-tuning guide](https://platform.openai.com/docs/guides/model-optimization)\n   * for more details.\n   */\n  training_file: string;\n\n  /**\n   * @deprecated The hyperparameters used for the fine-tuning job. This value is now\n   * deprecated in favor of `method`, and should be passed in under the `method`\n   * parameter.\n   */\n  hyperparameters?: JobCreateParams.Hyperparameters;\n\n  /**\n   * A list of integrations to enable for your fine-tuning job.\n   */\n  integrations?: Array<JobCreateParams.Integration> | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The method used for fine-tuning.\n   */\n  method?: JobCreateParams.Method;\n\n  /**\n   * The seed controls the reproducibility of the job. Passing in the same seed and\n   * job parameters should produce the same results, but may differ in rare cases. If\n   * a seed is not specified, one will be generated for you.\n   */\n  seed?: number | null;\n\n  /**\n   * A string of up to 64 characters that will be added to your fine-tuned model\n   * name.\n   *\n   * For example, a `suffix` of \"custom-model-name\" would produce a model name like\n   * `ft:gpt-4o-mini:openai:custom-model-name:7p4lURel`.\n   */\n  suffix?: string | null;\n\n  /**\n   * The ID of an uploaded file that contains validation data.\n   *\n   * If you provide this file, the data is used to generate validation metrics\n   * periodically during fine-tuning. These metrics can be viewed in the fine-tuning\n   * results file. The same data should not be present in both train and validation\n   * files.\n   *\n   * Your dataset must be formatted as a JSONL file. You must upload your file with\n   * the purpose `fine-tune`.\n   *\n   * See the\n   * [fine-tuning guide](https://platform.openai.com/docs/guides/model-optimization)\n   * for more details.\n   */\n  validation_file?: string | null;\n}\n\nexport namespace JobCreateParams {\n  /**\n   * @deprecated The hyperparameters used for the fine-tuning job. This value is now\n   * deprecated in favor of `method`, and should be passed in under the `method`\n   * parameter.\n   */\n  export interface Hyperparameters {\n    /**\n     * Number of examples in each batch. A larger batch size means that model\n     * parameters are updated less frequently, but with lower variance.\n     */\n    batch_size?: 'auto' | number;\n\n    /**\n     * Scaling factor for the learning rate. A smaller learning rate may be useful to\n     * avoid overfitting.\n     */\n    learning_rate_multiplier?: 'auto' | number;\n\n    /**\n     * The number of epochs to train the model for. An epoch refers to one full cycle\n     * through the training dataset.\n     */\n    n_epochs?: 'auto' | number;\n  }\n\n  export interface Integration {\n    /**\n     * The type of integration to enable. Currently, only \"wandb\" (Weights and Biases)\n     * is supported.\n     */\n    type: 'wandb';\n\n    /**\n     * The settings for your integration with Weights and Biases. This payload\n     * specifies the project that metrics will be sent to. Optionally, you can set an\n     * explicit display name for your run, add tags to your run, and set a default\n     * entity (team, username, etc) to be associated with your run.\n     */\n    wandb: Integration.Wandb;\n  }\n\n  export namespace Integration {\n    /**\n     * The settings for your integration with Weights and Biases. This payload\n     * specifies the project that metrics will be sent to. Optionally, you can set an\n     * explicit display name for your run, add tags to your run, and set a default\n     * entity (team, username, etc) to be associated with your run.\n     */\n    export interface Wandb {\n      /**\n       * The name of the project that the new run will be created under.\n       */\n      project: string;\n\n      /**\n       * The entity to use for the run. This allows you to set the team or username of\n       * the WandB user that you would like associated with the run. If not set, the\n       * default entity for the registered WandB API key is used.\n       */\n      entity?: string | null;\n\n      /**\n       * A display name to set for the run. If not set, we will use the Job ID as the\n       * name.\n       */\n      name?: string | null;\n\n      /**\n       * A list of tags to be attached to the newly created run. These tags are passed\n       * through directly to WandB. Some default tags are generated by OpenAI:\n       * \"openai/finetune\", \"openai/{base-model}\", \"openai/{ftjob-abcdef}\".\n       */\n      tags?: Array<string>;\n    }\n  }\n\n  /**\n   * The method used for fine-tuning.\n   */\n  export interface Method {\n    /**\n     * The type of method. Is either `supervised`, `dpo`, or `reinforcement`.\n     */\n    type: 'supervised' | 'dpo' | 'reinforcement';\n\n    /**\n     * Configuration for the DPO fine-tuning method.\n     */\n    dpo?: MethodsAPI.DpoMethod;\n\n    /**\n     * Configuration for the reinforcement fine-tuning method.\n     */\n    reinforcement?: MethodsAPI.ReinforcementMethod;\n\n    /**\n     * Configuration for the supervised fine-tuning method.\n     */\n    supervised?: MethodsAPI.SupervisedMethod;\n  }\n}\n\nexport interface JobListParams extends CursorPageParams {\n  /**\n   * Optional metadata filter. To filter, use the syntax `metadata[k]=v`.\n   * Alternatively, set `metadata=null` to indicate no metadata.\n   */\n  metadata?: Record<string, string> | null;\n}\n\nexport interface JobListEventsParams extends CursorPageParams {}\n\nJobs.Checkpoints = Checkpoints;\n\nexport declare namespace Jobs {\n  export {\n    type FineTuningJob as FineTuningJob,\n    type FineTuningJobEvent as FineTuningJobEvent,\n    type FineTuningJobWandbIntegration as FineTuningJobWandbIntegration,\n    type FineTuningJobWandbIntegrationObject as FineTuningJobWandbIntegrationObject,\n    type FineTuningJobIntegration as FineTuningJobIntegration,\n    type FineTuningJobsPage as FineTuningJobsPage,\n    type FineTuningJobEventsPage as FineTuningJobEventsPage,\n    type JobCreateParams as JobCreateParams,\n    type JobListParams as JobListParams,\n    type JobListEventsParams as JobListEventsParams,\n  };\n\n  export {\n    Checkpoints as Checkpoints,\n    type FineTuningJobCheckpoint as FineTuningJobCheckpoint,\n    type FineTuningJobCheckpointsPage as FineTuningJobCheckpointsPage,\n    type CheckpointListParams as CheckpointListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as MethodsAPI from './methods';\nimport {\n  DpoHyperparameters,\n  DpoMethod,\n  Methods,\n  ReinforcementHyperparameters,\n  ReinforcementMethod,\n  SupervisedHyperparameters,\n  SupervisedMethod,\n} from './methods';\nimport * as AlphaAPI from './alpha/alpha';\nimport { Alpha } from './alpha/alpha';\nimport * as CheckpointsAPI from './checkpoints/checkpoints';\nimport { Checkpoints } from './checkpoints/checkpoints';\nimport * as JobsAPI from './jobs/jobs';\nimport {\n  FineTuningJob,\n  FineTuningJobEvent,\n  FineTuningJobEventsPage,\n  FineTuningJobIntegration,\n  FineTuningJobWandbIntegration,\n  FineTuningJobWandbIntegrationObject,\n  FineTuningJobsPage,\n  JobCreateParams,\n  JobListEventsParams,\n  JobListParams,\n  Jobs,\n} from './jobs/jobs';\n\nexport class FineTuning extends APIResource {\n  methods: MethodsAPI.Methods = new MethodsAPI.Methods(this._client);\n  jobs: JobsAPI.Jobs = new JobsAPI.Jobs(this._client);\n  checkpoints: CheckpointsAPI.Checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n  alpha: AlphaAPI.Alpha = new AlphaAPI.Alpha(this._client);\n}\n\nFineTuning.Methods = Methods;\nFineTuning.Jobs = Jobs;\nFineTuning.Checkpoints = Checkpoints;\nFineTuning.Alpha = Alpha;\n\nexport declare namespace FineTuning {\n  export {\n    Methods as Methods,\n    type DpoHyperparameters as DpoHyperparameters,\n    type DpoMethod as DpoMethod,\n    type ReinforcementHyperparameters as ReinforcementHyperparameters,\n    type ReinforcementMethod as ReinforcementMethod,\n    type SupervisedHyperparameters as SupervisedHyperparameters,\n    type SupervisedMethod as SupervisedMethod,\n  };\n\n  export {\n    Jobs as Jobs,\n    type FineTuningJob as FineTuningJob,\n    type FineTuningJobEvent as FineTuningJobEvent,\n    type FineTuningJobWandbIntegration as FineTuningJobWandbIntegration,\n    type FineTuningJobWandbIntegrationObject as FineTuningJobWandbIntegrationObject,\n    type FineTuningJobIntegration as FineTuningJobIntegration,\n    type FineTuningJobsPage as FineTuningJobsPage,\n    type FineTuningJobEventsPage as FineTuningJobEventsPage,\n    type JobCreateParams as JobCreateParams,\n    type JobListParams as JobListParams,\n    type JobListEventsParams as JobListEventsParams,\n  };\n\n  export { Checkpoints as Checkpoints };\n\n  export { Alpha as Alpha };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as ResponsesAPI from '../responses/responses';\n\nexport class GraderModels extends APIResource {}\n\n/**\n * A LabelModelGrader object which uses a model to assign labels to each item in\n * the evaluation.\n */\nexport interface LabelModelGrader {\n  input: Array<LabelModelGrader.Input>;\n\n  /**\n   * The labels to assign to each item in the evaluation.\n   */\n  labels: Array<string>;\n\n  /**\n   * The model to use for the evaluation. Must support structured outputs.\n   */\n  model: string;\n\n  /**\n   * The name of the grader.\n   */\n  name: string;\n\n  /**\n   * The labels that indicate a passing result. Must be a subset of labels.\n   */\n  passing_labels: Array<string>;\n\n  /**\n   * The object type, which is always `label_model`.\n   */\n  type: 'label_model';\n}\n\nexport namespace LabelModelGrader {\n  /**\n   * A message input to the model with a role indicating instruction following\n   * hierarchy. Instructions given with the `developer` or `system` role take\n   * precedence over instructions given with the `user` role. Messages with the\n   * `assistant` role are presumed to have been generated by the model in previous\n   * interactions.\n   */\n  export interface Input {\n    /**\n     * Text inputs to the model - can contain template strings.\n     */\n    content: string | ResponsesAPI.ResponseInputText | Input.OutputText;\n\n    /**\n     * The role of the message input. One of `user`, `assistant`, `system`, or\n     * `developer`.\n     */\n    role: 'user' | 'assistant' | 'system' | 'developer';\n\n    /**\n     * The type of the message input. Always `message`.\n     */\n    type?: 'message';\n  }\n\n  export namespace Input {\n    /**\n     * A text output from the model.\n     */\n    export interface OutputText {\n      /**\n       * The text output from the model.\n       */\n      text: string;\n\n      /**\n       * The type of the output text. Always `output_text`.\n       */\n      type: 'output_text';\n    }\n  }\n}\n\n/**\n * A MultiGrader object combines the output of multiple graders to produce a single\n * score.\n */\nexport interface MultiGrader {\n  /**\n   * A formula to calculate the output based on grader results.\n   */\n  calculate_output: string;\n\n  /**\n   * A StringCheckGrader object that performs a string comparison between input and\n   * reference using a specified operation.\n   */\n  graders: StringCheckGrader | TextSimilarityGrader | PythonGrader | ScoreModelGrader | LabelModelGrader;\n\n  /**\n   * The name of the grader.\n   */\n  name: string;\n\n  /**\n   * The object type, which is always `multi`.\n   */\n  type: 'multi';\n}\n\n/**\n * A PythonGrader object that runs a python script on the input.\n */\nexport interface PythonGrader {\n  /**\n   * The name of the grader.\n   */\n  name: string;\n\n  /**\n   * The source code of the python script.\n   */\n  source: string;\n\n  /**\n   * The object type, which is always `python`.\n   */\n  type: 'python';\n\n  /**\n   * The image tag to use for the python script.\n   */\n  image_tag?: string;\n}\n\n/**\n * A ScoreModelGrader object that uses a model to assign a score to the input.\n */\nexport interface ScoreModelGrader {\n  /**\n   * The input text. This may include template strings.\n   */\n  input: Array<ScoreModelGrader.Input>;\n\n  /**\n   * The model to use for the evaluation.\n   */\n  model: string;\n\n  /**\n   * The name of the grader.\n   */\n  name: string;\n\n  /**\n   * The object type, which is always `score_model`.\n   */\n  type: 'score_model';\n\n  /**\n   * The range of the score. Defaults to `[0, 1]`.\n   */\n  range?: Array<number>;\n\n  /**\n   * The sampling parameters for the model.\n   */\n  sampling_params?: unknown;\n}\n\nexport namespace ScoreModelGrader {\n  /**\n   * A message input to the model with a role indicating instruction following\n   * hierarchy. Instructions given with the `developer` or `system` role take\n   * precedence over instructions given with the `user` role. Messages with the\n   * `assistant` role are presumed to have been generated by the model in previous\n   * interactions.\n   */\n  export interface Input {\n    /**\n     * Text inputs to the model - can contain template strings.\n     */\n    content: string | ResponsesAPI.ResponseInputText | Input.OutputText;\n\n    /**\n     * The role of the message input. One of `user`, `assistant`, `system`, or\n     * `developer`.\n     */\n    role: 'user' | 'assistant' | 'system' | 'developer';\n\n    /**\n     * The type of the message input. Always `message`.\n     */\n    type?: 'message';\n  }\n\n  export namespace Input {\n    /**\n     * A text output from the model.\n     */\n    export interface OutputText {\n      /**\n       * The text output from the model.\n       */\n      text: string;\n\n      /**\n       * The type of the output text. Always `output_text`.\n       */\n      type: 'output_text';\n    }\n  }\n}\n\n/**\n * A StringCheckGrader object that performs a string comparison between input and\n * reference using a specified operation.\n */\nexport interface StringCheckGrader {\n  /**\n   * The input text. This may include template strings.\n   */\n  input: string;\n\n  /**\n   * The name of the grader.\n   */\n  name: string;\n\n  /**\n   * The string check operation to perform. One of `eq`, `ne`, `like`, or `ilike`.\n   */\n  operation: 'eq' | 'ne' | 'like' | 'ilike';\n\n  /**\n   * The reference text. This may include template strings.\n   */\n  reference: string;\n\n  /**\n   * The object type, which is always `string_check`.\n   */\n  type: 'string_check';\n}\n\n/**\n * A TextSimilarityGrader object which grades text based on similarity metrics.\n */\nexport interface TextSimilarityGrader {\n  /**\n   * The evaluation metric to use. One of `fuzzy_match`, `bleu`, `gleu`, `meteor`,\n   * `rouge_1`, `rouge_2`, `rouge_3`, `rouge_4`, `rouge_5`, or `rouge_l`.\n   */\n  evaluation_metric:\n    | 'fuzzy_match'\n    | 'bleu'\n    | 'gleu'\n    | 'meteor'\n    | 'rouge_1'\n    | 'rouge_2'\n    | 'rouge_3'\n    | 'rouge_4'\n    | 'rouge_5'\n    | 'rouge_l';\n\n  /**\n   * The text being graded.\n   */\n  input: string;\n\n  /**\n   * The name of the grader.\n   */\n  name: string;\n\n  /**\n   * The text being graded against.\n   */\n  reference: string;\n\n  /**\n   * The type of grader.\n   */\n  type: 'text_similarity';\n}\n\nexport declare namespace GraderModels {\n  export {\n    type LabelModelGrader as LabelModelGrader,\n    type MultiGrader as MultiGrader,\n    type PythonGrader as PythonGrader,\n    type ScoreModelGrader as ScoreModelGrader,\n    type StringCheckGrader as StringCheckGrader,\n    type TextSimilarityGrader as TextSimilarityGrader,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as GraderModelsAPI from './grader-models';\nimport {\n  GraderModels,\n  LabelModelGrader,\n  MultiGrader,\n  PythonGrader,\n  ScoreModelGrader,\n  StringCheckGrader,\n  TextSimilarityGrader,\n} from './grader-models';\n\nexport class Graders extends APIResource {\n  graderModels: GraderModelsAPI.GraderModels = new GraderModelsAPI.GraderModels(this._client);\n}\n\nGraders.GraderModels = GraderModels;\n\nexport declare namespace Graders {\n  export {\n    GraderModels as GraderModels,\n    type LabelModelGrader as LabelModelGrader,\n    type MultiGrader as MultiGrader,\n    type PythonGrader as PythonGrader,\n    type ScoreModelGrader as ScoreModelGrader,\n    type StringCheckGrader as StringCheckGrader,\n    type TextSimilarityGrader as TextSimilarityGrader,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../core/resource';\nimport { APIPromise } from '../core/api-promise';\nimport { type Uploadable } from '../core/uploads';\nimport { RequestOptions } from '../internal/request-options';\nimport { multipartFormRequestOptions } from '../internal/uploads';\n\nexport class Images extends APIResource {\n  /**\n   * Creates a variation of a given image. This endpoint only supports `dall-e-2`.\n   *\n   * @example\n   * ```ts\n   * const imagesResponse = await client.images.createVariation({\n   *   image: fs.createReadStream('otter.png'),\n   * });\n   * ```\n   */\n  createVariation(body: ImageCreateVariationParams, options?: RequestOptions): APIPromise<ImagesResponse> {\n    return this._client.post(\n      '/images/variations',\n      multipartFormRequestOptions({ body, ...options }, this._client),\n    );\n  }\n\n  /**\n   * Creates an edited or extended image given one or more source images and a\n   * prompt. This endpoint only supports `gpt-image-1` and `dall-e-2`.\n   *\n   * @example\n   * ```ts\n   * const imagesResponse = await client.images.edit({\n   *   image: fs.createReadStream('path/to/file'),\n   *   prompt: 'A cute baby sea otter wearing a beret',\n   * });\n   * ```\n   */\n  edit(body: ImageEditParams, options?: RequestOptions): APIPromise<ImagesResponse> {\n    return this._client.post(\n      '/images/edits',\n      multipartFormRequestOptions({ body, ...options }, this._client),\n    );\n  }\n\n  /**\n   * Creates an image given a prompt.\n   * [Learn more](https://platform.openai.com/docs/guides/images).\n   *\n   * @example\n   * ```ts\n   * const imagesResponse = await client.images.generate({\n   *   prompt: 'A cute baby sea otter',\n   * });\n   * ```\n   */\n  generate(body: ImageGenerateParams, options?: RequestOptions): APIPromise<ImagesResponse> {\n    return this._client.post('/images/generations', { body, ...options });\n  }\n}\n\n/**\n * Represents the content or the URL of an image generated by the OpenAI API.\n */\nexport interface Image {\n  /**\n   * The base64-encoded JSON of the generated image. Default value for `gpt-image-1`,\n   * and only present if `response_format` is set to `b64_json` for `dall-e-2` and\n   * `dall-e-3`.\n   */\n  b64_json?: string;\n\n  /**\n   * For `dall-e-3` only, the revised prompt that was used to generate the image.\n   */\n  revised_prompt?: string;\n\n  /**\n   * When using `dall-e-2` or `dall-e-3`, the URL of the generated image if\n   * `response_format` is set to `url` (default value). Unsupported for\n   * `gpt-image-1`.\n   */\n  url?: string;\n}\n\nexport type ImageModel = 'dall-e-2' | 'dall-e-3' | 'gpt-image-1';\n\n/**\n * The response from the image generation endpoint.\n */\nexport interface ImagesResponse {\n  /**\n   * The Unix timestamp (in seconds) of when the image was created.\n   */\n  created: number;\n\n  /**\n   * The list of generated images.\n   */\n  data?: Array<Image>;\n\n  /**\n   * For `gpt-image-1` only, the token usage information for the image generation.\n   */\n  usage?: ImagesResponse.Usage;\n}\n\nexport namespace ImagesResponse {\n  /**\n   * For `gpt-image-1` only, the token usage information for the image generation.\n   */\n  export interface Usage {\n    /**\n     * The number of tokens (images and text) in the input prompt.\n     */\n    input_tokens: number;\n\n    /**\n     * The input tokens detailed information for the image generation.\n     */\n    input_tokens_details: Usage.InputTokensDetails;\n\n    /**\n     * The number of image tokens in the output image.\n     */\n    output_tokens: number;\n\n    /**\n     * The total number of tokens (images and text) used for the image generation.\n     */\n    total_tokens: number;\n  }\n\n  export namespace Usage {\n    /**\n     * The input tokens detailed information for the image generation.\n     */\n    export interface InputTokensDetails {\n      /**\n       * The number of image tokens in the input prompt.\n       */\n      image_tokens: number;\n\n      /**\n       * The number of text tokens in the input prompt.\n       */\n      text_tokens: number;\n    }\n  }\n}\n\nexport interface ImageCreateVariationParams {\n  /**\n   * The image to use as the basis for the variation(s). Must be a valid PNG file,\n   * less than 4MB, and square.\n   */\n  image: Uploadable;\n\n  /**\n   * The model to use for image generation. Only `dall-e-2` is supported at this\n   * time.\n   */\n  model?: (string & {}) | ImageModel | null;\n\n  /**\n   * The number of images to generate. Must be between 1 and 10.\n   */\n  n?: number | null;\n\n  /**\n   * The format in which the generated images are returned. Must be one of `url` or\n   * `b64_json`. URLs are only valid for 60 minutes after the image has been\n   * generated.\n   */\n  response_format?: 'url' | 'b64_json' | null;\n\n  /**\n   * The size of the generated images. Must be one of `256x256`, `512x512`, or\n   * `1024x1024`.\n   */\n  size?: '256x256' | '512x512' | '1024x1024' | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport interface ImageEditParams {\n  /**\n   * The image(s) to edit. Must be a supported image file or an array of images.\n   *\n   * For `gpt-image-1`, each image should be a `png`, `webp`, or `jpg` file less than\n   * 50MB. You can provide up to 16 images.\n   *\n   * For `dall-e-2`, you can only provide one image, and it should be a square `png`\n   * file less than 4MB.\n   */\n  image: Uploadable | Array<Uploadable>;\n\n  /**\n   * A text description of the desired image(s). The maximum length is 1000\n   * characters for `dall-e-2`, and 32000 characters for `gpt-image-1`.\n   */\n  prompt: string;\n\n  /**\n   * Allows to set transparency for the background of the generated image(s). This\n   * parameter is only supported for `gpt-image-1`. Must be one of `transparent`,\n   * `opaque` or `auto` (default value). When `auto` is used, the model will\n   * automatically determine the best background for the image.\n   *\n   * If `transparent`, the output format needs to support transparency, so it should\n   * be set to either `png` (default value) or `webp`.\n   */\n  background?: 'transparent' | 'opaque' | 'auto' | null;\n\n  /**\n   * An additional image whose fully transparent areas (e.g. where alpha is zero)\n   * indicate where `image` should be edited. If there are multiple images provided,\n   * the mask will be applied on the first image. Must be a valid PNG file, less than\n   * 4MB, and have the same dimensions as `image`.\n   */\n  mask?: Uploadable;\n\n  /**\n   * The model to use for image generation. Only `dall-e-2` and `gpt-image-1` are\n   * supported. Defaults to `dall-e-2` unless a parameter specific to `gpt-image-1`\n   * is used.\n   */\n  model?: (string & {}) | ImageModel | null;\n\n  /**\n   * The number of images to generate. Must be between 1 and 10.\n   */\n  n?: number | null;\n\n  /**\n   * The compression level (0-100%) for the generated images. This parameter is only\n   * supported for `gpt-image-1` with the `webp` or `jpeg` output formats, and\n   * defaults to 100.\n   */\n  output_compression?: number | null;\n\n  /**\n   * The format in which the generated images are returned. This parameter is only\n   * supported for `gpt-image-1`. Must be one of `png`, `jpeg`, or `webp`. The\n   * default value is `png`.\n   */\n  output_format?: 'png' | 'jpeg' | 'webp' | null;\n\n  /**\n   * The quality of the image that will be generated. `high`, `medium` and `low` are\n   * only supported for `gpt-image-1`. `dall-e-2` only supports `standard` quality.\n   * Defaults to `auto`.\n   */\n  quality?: 'standard' | 'low' | 'medium' | 'high' | 'auto' | null;\n\n  /**\n   * The format in which the generated images are returned. Must be one of `url` or\n   * `b64_json`. URLs are only valid for 60 minutes after the image has been\n   * generated. This parameter is only supported for `dall-e-2`, as `gpt-image-1`\n   * will always return base64-encoded images.\n   */\n  response_format?: 'url' | 'b64_json' | null;\n\n  /**\n   * The size of the generated images. Must be one of `1024x1024`, `1536x1024`\n   * (landscape), `1024x1536` (portrait), or `auto` (default value) for\n   * `gpt-image-1`, and one of `256x256`, `512x512`, or `1024x1024` for `dall-e-2`.\n   */\n  size?: '256x256' | '512x512' | '1024x1024' | '1536x1024' | '1024x1536' | 'auto' | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport interface ImageGenerateParams {\n  /**\n   * A text description of the desired image(s). The maximum length is 32000\n   * characters for `gpt-image-1`, 1000 characters for `dall-e-2` and 4000 characters\n   * for `dall-e-3`.\n   */\n  prompt: string;\n\n  /**\n   * Allows to set transparency for the background of the generated image(s). This\n   * parameter is only supported for `gpt-image-1`. Must be one of `transparent`,\n   * `opaque` or `auto` (default value). When `auto` is used, the model will\n   * automatically determine the best background for the image.\n   *\n   * If `transparent`, the output format needs to support transparency, so it should\n   * be set to either `png` (default value) or `webp`.\n   */\n  background?: 'transparent' | 'opaque' | 'auto' | null;\n\n  /**\n   * The model to use for image generation. One of `dall-e-2`, `dall-e-3`, or\n   * `gpt-image-1`. Defaults to `dall-e-2` unless a parameter specific to\n   * `gpt-image-1` is used.\n   */\n  model?: (string & {}) | ImageModel | null;\n\n  /**\n   * Control the content-moderation level for images generated by `gpt-image-1`. Must\n   * be either `low` for less restrictive filtering or `auto` (default value).\n   */\n  moderation?: 'low' | 'auto' | null;\n\n  /**\n   * The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only\n   * `n=1` is supported.\n   */\n  n?: number | null;\n\n  /**\n   * The compression level (0-100%) for the generated images. This parameter is only\n   * supported for `gpt-image-1` with the `webp` or `jpeg` output formats, and\n   * defaults to 100.\n   */\n  output_compression?: number | null;\n\n  /**\n   * The format in which the generated images are returned. This parameter is only\n   * supported for `gpt-image-1`. Must be one of `png`, `jpeg`, or `webp`.\n   */\n  output_format?: 'png' | 'jpeg' | 'webp' | null;\n\n  /**\n   * The quality of the image that will be generated.\n   *\n   * - `auto` (default value) will automatically select the best quality for the\n   *   given model.\n   * - `high`, `medium` and `low` are supported for `gpt-image-1`.\n   * - `hd` and `standard` are supported for `dall-e-3`.\n   * - `standard` is the only option for `dall-e-2`.\n   */\n  quality?: 'standard' | 'hd' | 'low' | 'medium' | 'high' | 'auto' | null;\n\n  /**\n   * The format in which generated images with `dall-e-2` and `dall-e-3` are\n   * returned. Must be one of `url` or `b64_json`. URLs are only valid for 60 minutes\n   * after the image has been generated. This parameter isn't supported for\n   * `gpt-image-1` which will always return base64-encoded images.\n   */\n  response_format?: 'url' | 'b64_json' | null;\n\n  /**\n   * The size of the generated images. Must be one of `1024x1024`, `1536x1024`\n   * (landscape), `1024x1536` (portrait), or `auto` (default value) for\n   * `gpt-image-1`, one of `256x256`, `512x512`, or `1024x1024` for `dall-e-2`, and\n   * one of `1024x1024`, `1792x1024`, or `1024x1792` for `dall-e-3`.\n   */\n  size?:\n    | 'auto'\n    | '1024x1024'\n    | '1536x1024'\n    | '1024x1536'\n    | '256x256'\n    | '512x512'\n    | '1792x1024'\n    | '1024x1792'\n    | null;\n\n  /**\n   * The style of the generated images. This parameter is only supported for\n   * `dall-e-3`. Must be one of `vivid` or `natural`. Vivid causes the model to lean\n   * towards generating hyper-real and dramatic images. Natural causes the model to\n   * produce more natural, less hyper-real looking images.\n   */\n  style?: 'vivid' | 'natural' | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport declare namespace Images {\n  export {\n    type Image as Image,\n    type ImageModel as ImageModel,\n    type ImagesResponse as ImagesResponse,\n    type ImageCreateVariationParams as ImageCreateVariationParams,\n    type ImageEditParams as ImageEditParams,\n    type ImageGenerateParams as ImageGenerateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../core/resource';\nimport { APIPromise } from '../core/api-promise';\nimport { Page, PagePromise } from '../core/pagination';\nimport { RequestOptions } from '../internal/request-options';\nimport { path } from '../internal/utils/path';\n\nexport class Models extends APIResource {\n  /**\n   * Retrieves a model instance, providing basic information about the model such as\n   * the owner and permissioning.\n   */\n  retrieve(model: string, options?: RequestOptions): APIPromise<Model> {\n    return this._client.get(path`/models/${model}`, options);\n  }\n\n  /**\n   * Lists the currently available models, and provides basic information about each\n   * one such as the owner and availability.\n   */\n  list(options?: RequestOptions): PagePromise<ModelsPage, Model> {\n    return this._client.getAPIList('/models', Page<Model>, options);\n  }\n\n  /**\n   * Delete a fine-tuned model. You must have the Owner role in your organization to\n   * delete a model.\n   */\n  delete(model: string, options?: RequestOptions): APIPromise<ModelDeleted> {\n    return this._client.delete(path`/models/${model}`, options);\n  }\n}\n\n// Note: no pagination actually occurs yet, this is for forwards-compatibility.\nexport type ModelsPage = Page<Model>;\n\n/**\n * Describes an OpenAI model offering that can be used with the API.\n */\nexport interface Model {\n  /**\n   * The model identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) when the model was created.\n   */\n  created: number;\n\n  /**\n   * The object type, which is always \"model\".\n   */\n  object: 'model';\n\n  /**\n   * The organization that owns the model.\n   */\n  owned_by: string;\n}\n\nexport interface ModelDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: string;\n}\n\nexport declare namespace Models {\n  export { type Model as Model, type ModelDeleted as ModelDeleted, type ModelsPage as ModelsPage };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../core/resource';\nimport { APIPromise } from '../core/api-promise';\nimport { RequestOptions } from '../internal/request-options';\n\nexport class Moderations extends APIResource {\n  /**\n   * Classifies if text and/or image inputs are potentially harmful. Learn more in\n   * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n   */\n  create(body: ModerationCreateParams, options?: RequestOptions): APIPromise<ModerationCreateResponse> {\n    return this._client.post('/moderations', { body, ...options });\n  }\n}\n\nexport interface Moderation {\n  /**\n   * A list of the categories, and whether they are flagged or not.\n   */\n  categories: Moderation.Categories;\n\n  /**\n   * A list of the categories along with the input type(s) that the score applies to.\n   */\n  category_applied_input_types: Moderation.CategoryAppliedInputTypes;\n\n  /**\n   * A list of the categories along with their scores as predicted by model.\n   */\n  category_scores: Moderation.CategoryScores;\n\n  /**\n   * Whether any of the below categories are flagged.\n   */\n  flagged: boolean;\n}\n\nexport namespace Moderation {\n  /**\n   * A list of the categories, and whether they are flagged or not.\n   */\n  export interface Categories {\n    /**\n     * Content that expresses, incites, or promotes harassing language towards any\n     * target.\n     */\n    harassment: boolean;\n\n    /**\n     * Harassment content that also includes violence or serious harm towards any\n     * target.\n     */\n    'harassment/threatening': boolean;\n\n    /**\n     * Content that expresses, incites, or promotes hate based on race, gender,\n     * ethnicity, religion, nationality, sexual orientation, disability status, or\n     * caste. Hateful content aimed at non-protected groups (e.g., chess players) is\n     * harassment.\n     */\n    hate: boolean;\n\n    /**\n     * Hateful content that also includes violence or serious harm towards the targeted\n     * group based on race, gender, ethnicity, religion, nationality, sexual\n     * orientation, disability status, or caste.\n     */\n    'hate/threatening': boolean;\n\n    /**\n     * Content that includes instructions or advice that facilitate the planning or\n     * execution of wrongdoing, or that gives advice or instruction on how to commit\n     * illicit acts. For example, \"how to shoplift\" would fit this category.\n     */\n    illicit: boolean | null;\n\n    /**\n     * Content that includes instructions or advice that facilitate the planning or\n     * execution of wrongdoing that also includes violence, or that gives advice or\n     * instruction on the procurement of any weapon.\n     */\n    'illicit/violent': boolean | null;\n\n    /**\n     * Content that promotes, encourages, or depicts acts of self-harm, such as\n     * suicide, cutting, and eating disorders.\n     */\n    'self-harm': boolean;\n\n    /**\n     * Content that encourages performing acts of self-harm, such as suicide, cutting,\n     * and eating disorders, or that gives instructions or advice on how to commit such\n     * acts.\n     */\n    'self-harm/instructions': boolean;\n\n    /**\n     * Content where the speaker expresses that they are engaging or intend to engage\n     * in acts of self-harm, such as suicide, cutting, and eating disorders.\n     */\n    'self-harm/intent': boolean;\n\n    /**\n     * Content meant to arouse sexual excitement, such as the description of sexual\n     * activity, or that promotes sexual services (excluding sex education and\n     * wellness).\n     */\n    sexual: boolean;\n\n    /**\n     * Sexual content that includes an individual who is under 18 years old.\n     */\n    'sexual/minors': boolean;\n\n    /**\n     * Content that depicts death, violence, or physical injury.\n     */\n    violence: boolean;\n\n    /**\n     * Content that depicts death, violence, or physical injury in graphic detail.\n     */\n    'violence/graphic': boolean;\n  }\n\n  /**\n   * A list of the categories along with the input type(s) that the score applies to.\n   */\n  export interface CategoryAppliedInputTypes {\n    /**\n     * The applied input type(s) for the category 'harassment'.\n     */\n    harassment: Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'harassment/threatening'.\n     */\n    'harassment/threatening': Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'hate'.\n     */\n    hate: Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'hate/threatening'.\n     */\n    'hate/threatening': Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'illicit'.\n     */\n    illicit: Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'illicit/violent'.\n     */\n    'illicit/violent': Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'self-harm'.\n     */\n    'self-harm': Array<'text' | 'image'>;\n\n    /**\n     * The applied input type(s) for the category 'self-harm/instructions'.\n     */\n    'self-harm/instructions': Array<'text' | 'image'>;\n\n    /**\n     * The applied input type(s) for the category 'self-harm/intent'.\n     */\n    'self-harm/intent': Array<'text' | 'image'>;\n\n    /**\n     * The applied input type(s) for the category 'sexual'.\n     */\n    sexual: Array<'text' | 'image'>;\n\n    /**\n     * The applied input type(s) for the category 'sexual/minors'.\n     */\n    'sexual/minors': Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'violence'.\n     */\n    violence: Array<'text' | 'image'>;\n\n    /**\n     * The applied input type(s) for the category 'violence/graphic'.\n     */\n    'violence/graphic': Array<'text' | 'image'>;\n  }\n\n  /**\n   * A list of the categories along with their scores as predicted by model.\n   */\n  export interface CategoryScores {\n    /**\n     * The score for the category 'harassment'.\n     */\n    harassment: number;\n\n    /**\n     * The score for the category 'harassment/threatening'.\n     */\n    'harassment/threatening': number;\n\n    /**\n     * The score for the category 'hate'.\n     */\n    hate: number;\n\n    /**\n     * The score for the category 'hate/threatening'.\n     */\n    'hate/threatening': number;\n\n    /**\n     * The score for the category 'illicit'.\n     */\n    illicit: number;\n\n    /**\n     * The score for the category 'illicit/violent'.\n     */\n    'illicit/violent': number;\n\n    /**\n     * The score for the category 'self-harm'.\n     */\n    'self-harm': number;\n\n    /**\n     * The score for the category 'self-harm/instructions'.\n     */\n    'self-harm/instructions': number;\n\n    /**\n     * The score for the category 'self-harm/intent'.\n     */\n    'self-harm/intent': number;\n\n    /**\n     * The score for the category 'sexual'.\n     */\n    sexual: number;\n\n    /**\n     * The score for the category 'sexual/minors'.\n     */\n    'sexual/minors': number;\n\n    /**\n     * The score for the category 'violence'.\n     */\n    violence: number;\n\n    /**\n     * The score for the category 'violence/graphic'.\n     */\n    'violence/graphic': number;\n  }\n}\n\n/**\n * An object describing an image to classify.\n */\nexport interface ModerationImageURLInput {\n  /**\n   * Contains either an image URL or a data URL for a base64 encoded image.\n   */\n  image_url: ModerationImageURLInput.ImageURL;\n\n  /**\n   * Always `image_url`.\n   */\n  type: 'image_url';\n}\n\nexport namespace ModerationImageURLInput {\n  /**\n   * Contains either an image URL or a data URL for a base64 encoded image.\n   */\n  export interface ImageURL {\n    /**\n     * Either a URL of the image or the base64 encoded image data.\n     */\n    url: string;\n  }\n}\n\nexport type ModerationModel =\n  | 'omni-moderation-latest'\n  | 'omni-moderation-2024-09-26'\n  | 'text-moderation-latest'\n  | 'text-moderation-stable';\n\n/**\n * An object describing an image to classify.\n */\nexport type ModerationMultiModalInput = ModerationImageURLInput | ModerationTextInput;\n\n/**\n * An object describing text to classify.\n */\nexport interface ModerationTextInput {\n  /**\n   * A string of text to classify.\n   */\n  text: string;\n\n  /**\n   * Always `text`.\n   */\n  type: 'text';\n}\n\n/**\n * Represents if a given text input is potentially harmful.\n */\nexport interface ModerationCreateResponse {\n  /**\n   * The unique identifier for the moderation request.\n   */\n  id: string;\n\n  /**\n   * The model used to generate the moderation results.\n   */\n  model: string;\n\n  /**\n   * A list of moderation objects.\n   */\n  results: Array<Moderation>;\n}\n\nexport interface ModerationCreateParams {\n  /**\n   * Input (or inputs) to classify. Can be a single string, an array of strings, or\n   * an array of multi-modal input objects similar to other models.\n   */\n  input: string | Array<string> | Array<ModerationMultiModalInput>;\n\n  /**\n   * The content moderation model you would like to use. Learn more in\n   * [the moderation guide](https://platform.openai.com/docs/guides/moderation), and\n   * learn about available models\n   * [here](https://platform.openai.com/docs/models#moderation).\n   */\n  model?: (string & {}) | ModerationModel;\n}\n\nexport declare namespace Moderations {\n  export {\n    type Moderation as Moderation,\n    type ModerationImageURLInput as ModerationImageURLInput,\n    type ModerationModel as ModerationModel,\n    type ModerationMultiModalInput as ModerationMultiModalInput,\n    type ModerationTextInput as ModerationTextInput,\n    type ModerationCreateResponse as ModerationCreateResponse,\n    type ModerationCreateParams as ModerationCreateParams,\n  };\n}\n","import { OpenAIError } from '../error';\nimport type { ChatCompletionTool } from '../resources/chat/completions';\nimport {\n  ResponseTextConfig,\n  type FunctionTool,\n  type ParsedContent,\n  type ParsedResponse,\n  type ParsedResponseFunctionToolCall,\n  type ParsedResponseOutputItem,\n  type Response,\n  type ResponseCreateParamsBase,\n  type ResponseCreateParamsNonStreaming,\n  type ResponseFunctionToolCall,\n  type Tool,\n} from '../resources/responses/responses';\nimport { type AutoParseableTextFormat, isAutoParsableResponseFormat } from '../lib/parser';\n\nexport type ParseableToolsParams = Array<Tool> | ChatCompletionTool | null;\n\nexport type ResponseCreateParamsWithTools = ResponseCreateParamsBase & {\n  tools?: ParseableToolsParams;\n};\n\ntype TextConfigParams = { text?: ResponseTextConfig };\n\nexport type ExtractParsedContentFromParams<Params extends TextConfigParams> =\n  NonNullable<Params['text']>['format'] extends AutoParseableTextFormat<infer P> ? P : null;\n\nexport function maybeParseResponse<\n  Params extends ResponseCreateParamsBase | null,\n  ParsedT = Params extends null ? null : ExtractParsedContentFromParams<NonNullable<Params>>,\n>(response: Response, params: Params): ParsedResponse<ParsedT> {\n  if (!params || !hasAutoParseableInput(params)) {\n    return {\n      ...response,\n      output_parsed: null,\n      output: response.output.map((item) => {\n        if (item.type === 'function_call') {\n          return {\n            ...item,\n            parsed_arguments: null,\n          };\n        }\n\n        if (item.type === 'message') {\n          return {\n            ...item,\n            content: item.content.map((content) => ({\n              ...content,\n              parsed: null,\n            })),\n          };\n        } else {\n          return item;\n        }\n      }),\n    };\n  }\n\n  return parseResponse(response, params);\n}\n\nexport function parseResponse<\n  Params extends ResponseCreateParamsBase,\n  ParsedT = ExtractParsedContentFromParams<Params>,\n>(response: Response, params: Params): ParsedResponse<ParsedT> {\n  const output: Array<ParsedResponseOutputItem<ParsedT>> = response.output.map(\n    (item): ParsedResponseOutputItem<ParsedT> => {\n      if (item.type === 'function_call') {\n        return {\n          ...item,\n          parsed_arguments: parseToolCall(params, item),\n        };\n      }\n      if (item.type === 'message') {\n        const content: Array<ParsedContent<ParsedT>> = item.content.map((content) => {\n          if (content.type === 'output_text') {\n            return {\n              ...content,\n              parsed: parseTextFormat(params, content.text),\n            };\n          }\n\n          return content;\n        });\n\n        return {\n          ...item,\n          content,\n        };\n      }\n\n      return item;\n    },\n  );\n\n  const parsed: Omit<ParsedResponse<ParsedT>, 'output_parsed'> = Object.assign({}, response, { output });\n  if (!Object.getOwnPropertyDescriptor(response, 'output_text')) {\n    addOutputText(parsed);\n  }\n\n  Object.defineProperty(parsed, 'output_parsed', {\n    enumerable: true,\n    get() {\n      for (const output of parsed.output) {\n        if (output.type !== 'message') {\n          continue;\n        }\n\n        for (const content of output.content) {\n          if (content.type === 'output_text' && content.parsed !== null) {\n            return content.parsed;\n          }\n        }\n      }\n\n      return null;\n    },\n  });\n\n  return parsed as ParsedResponse<ParsedT>;\n}\n\nfunction parseTextFormat<\n  Params extends ResponseCreateParamsBase,\n  ParsedT = ExtractParsedContentFromParams<Params>,\n>(params: Params, content: string): ParsedT | null {\n  if (params.text?.format?.type !== 'json_schema') {\n    return null;\n  }\n\n  if ('$parseRaw' in params.text?.format) {\n    const text_format = params.text?.format as unknown as AutoParseableTextFormat<ParsedT>;\n    return text_format.$parseRaw(content);\n  }\n\n  return JSON.parse(content);\n}\n\nexport function hasAutoParseableInput(params: ResponseCreateParamsWithTools): boolean {\n  if (isAutoParsableResponseFormat(params.text?.format)) {\n    return true;\n  }\n\n  return false;\n}\n\ntype ToolOptions = {\n  name: string;\n  arguments: any;\n  function?: ((args: any) => any) | undefined;\n};\n\nexport type AutoParseableResponseTool<\n  OptionsT extends ToolOptions,\n  HasFunction = OptionsT['function'] extends Function ? true : false,\n> = FunctionTool & {\n  __arguments: OptionsT['arguments']; // type-level only\n  __name: OptionsT['name']; // type-level only\n\n  $brand: 'auto-parseable-tool';\n  $callback: ((args: OptionsT['arguments']) => any) | undefined;\n  $parseRaw(args: string): OptionsT['arguments'];\n};\n\nexport function makeParseableResponseTool<OptionsT extends ToolOptions>(\n  tool: FunctionTool,\n  {\n    parser,\n    callback,\n  }: {\n    parser: (content: string) => OptionsT['arguments'];\n    callback: ((args: any) => any) | undefined;\n  },\n): AutoParseableResponseTool<OptionsT['arguments']> {\n  const obj = { ...tool };\n\n  Object.defineProperties(obj, {\n    $brand: {\n      value: 'auto-parseable-tool',\n      enumerable: false,\n    },\n    $parseRaw: {\n      value: parser,\n      enumerable: false,\n    },\n    $callback: {\n      value: callback,\n      enumerable: false,\n    },\n  });\n\n  return obj as AutoParseableResponseTool<OptionsT['arguments']>;\n}\n\nexport function isAutoParsableTool(tool: any): tool is AutoParseableResponseTool<any> {\n  return tool?.['$brand'] === 'auto-parseable-tool';\n}\n\nfunction getInputToolByName(input_tools: Array<Tool>, name: string): FunctionTool | undefined {\n  return input_tools.find((tool) => tool.type === 'function' && tool.name === name) as\n    | FunctionTool\n    | undefined;\n}\n\nfunction parseToolCall<Params extends ResponseCreateParamsBase>(\n  params: Params,\n  toolCall: ResponseFunctionToolCall,\n): ParsedResponseFunctionToolCall {\n  const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n\n  return {\n    ...toolCall,\n    ...toolCall,\n    parsed_arguments:\n      isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments)\n      : inputTool?.strict ? JSON.parse(toolCall.arguments)\n      : null,\n  };\n}\n\nexport function shouldParseToolCall(\n  params: ResponseCreateParamsNonStreaming | null | undefined,\n  toolCall: ResponseFunctionToolCall,\n): boolean {\n  if (!params) {\n    return false;\n  }\n\n  const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n  return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\n\nexport function validateInputTools(tools: ChatCompletionTool[] | undefined) {\n  for (const tool of tools ?? []) {\n    if (tool.type !== 'function') {\n      throw new OpenAIError(\n        `Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``,\n      );\n    }\n\n    if (tool.function.strict !== true) {\n      throw new OpenAIError(\n        `The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`,\n      );\n    }\n  }\n}\n\nexport function addOutputText(rsp: Response): void {\n  const texts: string[] = [];\n  for (const output of rsp.output) {\n    if (output.type !== 'message') {\n      continue;\n    }\n\n    for (const content of output.content) {\n      if (content.type === 'output_text') {\n        texts.push(content.text);\n      }\n    }\n  }\n\n  rsp.output_text = texts.join('');\n}\n","import {\n  ResponseTextConfig,\n  type ParsedResponse,\n  type Response,\n  type ResponseCreateParamsBase,\n  type ResponseCreateParamsStreaming,\n  type ResponseStreamEvent,\n} from '../../resources/responses/responses';\nimport { RequestOptions } from '../../internal/request-options';\nimport { APIUserAbortError, OpenAIError } from '../../error';\nimport OpenAI from '../../index';\nimport { type BaseEvents, EventStream } from '../EventStream';\nimport { type ResponseFunctionCallArgumentsDeltaEvent, type ResponseTextDeltaEvent } from './EventTypes';\nimport { maybeParseResponse, ParseableToolsParams } from '../ResponsesParser';\nimport { Stream } from '../../streaming';\n\nexport type ResponseStreamParams = ResponseCreateAndStreamParams | ResponseStreamByIdParams;\n\nexport type ResponseCreateAndStreamParams = Omit<ResponseCreateParamsBase, 'stream'> & {\n  stream?: true;\n};\n\nexport type ResponseStreamByIdParams = {\n  /**\n   * The ID of the response to stream.\n   */\n  response_id: string;\n  /**\n   * If provided, the stream will start after the event with the given sequence number.\n   */\n  starting_after?: number;\n  /**\n   * Configuration options for a text response from the model. Can be plain text or\n   * structured JSON data. Learn more:\n   *\n   * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n   * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n   */\n  text?: ResponseTextConfig;\n\n  /**\n   * An array of tools the model may call while generating a response. When continuing a stream, provide\n   * the same tools as the original request.\n   */\n  tools?: ParseableToolsParams;\n};\n\ntype ResponseEvents = BaseEvents &\n  Omit<\n    {\n      [K in ResponseStreamEvent['type']]: (event: Extract<ResponseStreamEvent, { type: K }>) => void;\n    },\n    'response.output_text.delta' | 'response.function_call_arguments.delta'\n  > & {\n    event: (event: ResponseStreamEvent) => void;\n    'response.output_text.delta': (event: ResponseTextDeltaEvent) => void;\n    'response.function_call_arguments.delta': (event: ResponseFunctionCallArgumentsDeltaEvent) => void;\n  };\n\nexport type ResponseStreamingParams = Omit<ResponseCreateParamsBase, 'stream'> & {\n  stream?: true;\n};\n\nexport class ResponseStream<ParsedT = null>\n  extends EventStream<ResponseEvents>\n  implements AsyncIterable<ResponseStreamEvent>\n{\n  #params: ResponseStreamingParams | null;\n  #currentResponseSnapshot: Response | undefined;\n  #finalResponse: ParsedResponse<ParsedT> | undefined;\n\n  constructor(params: ResponseStreamingParams | null) {\n    super();\n    this.#params = params;\n  }\n\n  static createResponse<ParsedT>(\n    client: OpenAI,\n    params: ResponseStreamParams,\n    options?: RequestOptions,\n  ): ResponseStream<ParsedT> {\n    const runner = new ResponseStream<ParsedT>(params as ResponseCreateParamsStreaming);\n    runner._run(() =>\n      runner._createOrRetrieveResponse(client, params, {\n        ...options,\n        headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n      }),\n    );\n    return runner;\n  }\n\n  #beginRequest() {\n    if (this.ended) return;\n    this.#currentResponseSnapshot = undefined;\n  }\n\n  #addEvent(this: ResponseStream<ParsedT>, event: ResponseStreamEvent, starting_after: number | null) {\n    if (this.ended) return;\n\n    const maybeEmit = (name: string, event: ResponseStreamEvent & { snapshot?: string }) => {\n      if (starting_after == null || event.sequence_number > starting_after) {\n        this._emit(name as any, event);\n      }\n    };\n\n    const response = this.#accumulateResponse(event);\n    maybeEmit('event', event);\n\n    switch (event.type) {\n      case 'response.output_text.delta': {\n        const output = response.output[event.output_index];\n        if (!output) {\n          throw new OpenAIError(`missing output at index ${event.output_index}`);\n        }\n        if (output.type === 'message') {\n          const content = output.content[event.content_index];\n          if (!content) {\n            throw new OpenAIError(`missing content at index ${event.content_index}`);\n          }\n          if (content.type !== 'output_text') {\n            throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n          }\n\n          maybeEmit('response.output_text.delta', {\n            ...event,\n            snapshot: content.text,\n          });\n        }\n        break;\n      }\n      case 'response.function_call_arguments.delta': {\n        const output = response.output[event.output_index];\n        if (!output) {\n          throw new OpenAIError(`missing output at index ${event.output_index}`);\n        }\n        if (output.type === 'function_call') {\n          maybeEmit('response.function_call_arguments.delta', {\n            ...event,\n            snapshot: output.arguments,\n          });\n        }\n        break;\n      }\n      default:\n        maybeEmit(event.type, event);\n        break;\n    }\n  }\n\n  #endRequest(): ParsedResponse<ParsedT> {\n    if (this.ended) {\n      throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    const snapshot = this.#currentResponseSnapshot;\n    if (!snapshot) {\n      throw new OpenAIError(`request ended without sending any events`);\n    }\n    this.#currentResponseSnapshot = undefined;\n    const parsedResponse = finalizeResponse<ParsedT>(snapshot, this.#params);\n    this.#finalResponse = parsedResponse;\n\n    return parsedResponse;\n  }\n\n  protected async _createOrRetrieveResponse(\n    client: OpenAI,\n    params: ResponseStreamParams,\n    options?: RequestOptions,\n  ): Promise<ParsedResponse<ParsedT>> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    this.#beginRequest();\n\n    let stream: Stream<ResponseStreamEvent> | undefined;\n    let starting_after: number | null = null;\n    if ('response_id' in params) {\n      stream = await client.responses.retrieve(\n        params.response_id,\n        { stream: true },\n        { ...options, signal: this.controller.signal, stream: true },\n      );\n      starting_after = params.starting_after ?? null;\n    } else {\n      stream = await client.responses.create(\n        { ...params, stream: true },\n        { ...options, signal: this.controller.signal },\n      );\n    }\n\n    this._connected();\n    for await (const event of stream) {\n      this.#addEvent(event, starting_after);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this.#endRequest();\n  }\n\n  #accumulateResponse(event: ResponseStreamEvent): Response {\n    let snapshot = this.#currentResponseSnapshot;\n    if (!snapshot) {\n      if (event.type !== 'response.created') {\n        throw new OpenAIError(\n          `When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`,\n        );\n      }\n      snapshot = this.#currentResponseSnapshot = event.response;\n      return snapshot;\n    }\n\n    switch (event.type) {\n      case 'response.output_item.added': {\n        snapshot.output.push(event.item);\n        break;\n      }\n      case 'response.content_part.added': {\n        const output = snapshot.output[event.output_index];\n        if (!output) {\n          throw new OpenAIError(`missing output at index ${event.output_index}`);\n        }\n        if (output.type === 'message') {\n          output.content.push(event.part);\n        }\n        break;\n      }\n      case 'response.output_text.delta': {\n        const output = snapshot.output[event.output_index];\n        if (!output) {\n          throw new OpenAIError(`missing output at index ${event.output_index}`);\n        }\n        if (output.type === 'message') {\n          const content = output.content[event.content_index];\n          if (!content) {\n            throw new OpenAIError(`missing content at index ${event.content_index}`);\n          }\n          if (content.type !== 'output_text') {\n            throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n          }\n          content.text += event.delta;\n        }\n        break;\n      }\n      case 'response.function_call_arguments.delta': {\n        const output = snapshot.output[event.output_index];\n        if (!output) {\n          throw new OpenAIError(`missing output at index ${event.output_index}`);\n        }\n        if (output.type === 'function_call') {\n          output.arguments += event.delta;\n        }\n        break;\n      }\n      case 'response.completed': {\n        this.#currentResponseSnapshot = event.response;\n        break;\n      }\n    }\n\n    return snapshot;\n  }\n\n  [Symbol.asyncIterator](this: ResponseStream<ParsedT>): AsyncIterator<ResponseStreamEvent> {\n    const pushQueue: ResponseStreamEvent[] = [];\n    const readQueue: {\n      resolve: (event: ResponseStreamEvent | undefined) => void;\n      reject: (err: unknown) => void;\n    }[] = [];\n    let done = false;\n\n    this.on('event', (event) => {\n      const reader = readQueue.shift();\n      if (reader) {\n        reader.resolve(event);\n      } else {\n        pushQueue.push(event);\n      }\n    });\n\n    this.on('end', () => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.resolve(undefined);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('abort', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('error', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    return {\n      next: async (): Promise<IteratorResult<ResponseStreamEvent>> => {\n        if (!pushQueue.length) {\n          if (done) {\n            return { value: undefined, done: true };\n          }\n          return new Promise<ResponseStreamEvent | undefined>((resolve, reject) =>\n            readQueue.push({ resolve, reject }),\n          ).then((event) => (event ? { value: event, done: false } : { value: undefined, done: true }));\n        }\n        const event = pushQueue.shift()!;\n        return { value: event, done: false };\n      },\n      return: async () => {\n        this.abort();\n        return { value: undefined, done: true };\n      },\n    };\n  }\n\n  /**\n   * @returns a promise that resolves with the final Response, or rejects\n   * if an error occurred or the stream ended prematurely without producing a REsponse.\n   */\n  async finalResponse(): Promise<ParsedResponse<ParsedT>> {\n    await this.done();\n    const response = this.#finalResponse;\n    if (!response) throw new OpenAIError('stream ended without producing a ChatCompletion');\n    return response;\n  }\n}\n\nfunction finalizeResponse<ParsedT>(\n  snapshot: Response,\n  params: ResponseStreamingParams | null,\n): ParsedResponse<ParsedT> {\n  return maybeParseResponse(snapshot, params);\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as ResponsesAPI from './responses';\nimport { ResponseItemsPage } from './responses';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../core/pagination';\nimport { RequestOptions } from '../../internal/request-options';\nimport { path } from '../../internal/utils/path';\n\nexport class InputItems extends APIResource {\n  /**\n   * Returns a list of input items for a given response.\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const responseItem of client.responses.inputItems.list(\n   *   'response_id',\n   * )) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    responseID: string,\n    query: InputItemListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<ResponseItemsPage, ResponsesAPI.ResponseItem> {\n    return this._client.getAPIList(\n      path`/responses/${responseID}/input_items`,\n      CursorPage<ResponsesAPI.ResponseItem>,\n      { query, ...options },\n    );\n  }\n}\n\n/**\n * A list of Response items.\n */\nexport interface ResponseItemList {\n  /**\n   * A list of items used to generate this response.\n   */\n  data: Array<ResponsesAPI.ResponseItem>;\n\n  /**\n   * The ID of the first item in the list.\n   */\n  first_id: string;\n\n  /**\n   * Whether there are more items available.\n   */\n  has_more: boolean;\n\n  /**\n   * The ID of the last item in the list.\n   */\n  last_id: string;\n\n  /**\n   * The type of object returned, must be `list`.\n   */\n  object: 'list';\n}\n\nexport interface InputItemListParams extends CursorPageParams {\n  /**\n   * An item ID to list items before, used in pagination.\n   */\n  before?: string;\n\n  /**\n   * Additional fields to include in the response. See the `include` parameter for\n   * Response creation above for more information.\n   */\n  include?: Array<ResponsesAPI.ResponseIncludable>;\n\n  /**\n   * The order to return the input items in. Default is `desc`.\n   *\n   * - `asc`: Return the input items in ascending order.\n   * - `desc`: Return the input items in descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport declare namespace InputItems {\n  export { type ResponseItemList as ResponseItemList, type InputItemListParams as InputItemListParams };\n}\n\nexport { type ResponseItemsPage };\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport {\n  type ExtractParsedContentFromParams,\n  parseResponse,\n  type ResponseCreateParamsWithTools,\n  addOutputText,\n} from '../../lib/ResponsesParser';\nimport { ResponseStream, ResponseStreamParams } from '../../lib/responses/ResponseStream';\nimport { APIResource } from '../../core/resource';\nimport * as ResponsesAPI from './responses';\nimport * as Shared from '../shared';\nimport * as InputItemsAPI from './input-items';\nimport { InputItemListParams, InputItems, ResponseItemList } from './input-items';\nimport { APIPromise } from '../../core/api-promise';\nimport { CursorPage } from '../../core/pagination';\nimport { Stream } from '../../core/streaming';\nimport { buildHeaders } from '../../internal/headers';\nimport { RequestOptions } from '../../internal/request-options';\nimport { path } from '../../internal/utils/path';\n\nexport interface ParsedResponseOutputText<ParsedT> extends ResponseOutputText {\n  parsed: ParsedT | null;\n}\n\nexport type ParsedContent<ParsedT> = ParsedResponseOutputText<ParsedT> | ResponseOutputRefusal;\n\nexport interface ParsedResponseOutputMessage<ParsedT> extends ResponseOutputMessage {\n  content: ParsedContent<ParsedT>[];\n}\n\nexport interface ParsedResponseFunctionToolCall extends ResponseFunctionToolCall {\n  parsed_arguments: any;\n}\n\nexport type ParsedResponseOutputItem<ParsedT> =\n  | ParsedResponseOutputMessage<ParsedT>\n  | ParsedResponseFunctionToolCall\n  | ResponseFileSearchToolCall\n  | ResponseFunctionWebSearch\n  | ResponseComputerToolCall\n  | ResponseReasoningItem\n  | ResponseOutputItem.ImageGenerationCall\n  | ResponseCodeInterpreterToolCall\n  | ResponseOutputItem.LocalShellCall\n  | ResponseOutputItem.McpCall\n  | ResponseOutputItem.McpListTools\n  | ResponseOutputItem.McpApprovalRequest;\n\nexport interface ParsedResponse<ParsedT> extends Response {\n  output: Array<ParsedResponseOutputItem<ParsedT>>;\n\n  output_parsed: ParsedT | null;\n}\n\nexport type ResponseParseParams = ResponseCreateParamsNonStreaming;\n\nexport class Responses extends APIResource {\n  inputItems: InputItemsAPI.InputItems = new InputItemsAPI.InputItems(this._client);\n\n  /**\n   * Creates a model response. Provide\n   * [text](https://platform.openai.com/docs/guides/text) or\n   * [image](https://platform.openai.com/docs/guides/images) inputs to generate\n   * [text](https://platform.openai.com/docs/guides/text) or\n   * [JSON](https://platform.openai.com/docs/guides/structured-outputs) outputs. Have\n   * the model call your own\n   * [custom code](https://platform.openai.com/docs/guides/function-calling) or use\n   * built-in [tools](https://platform.openai.com/docs/guides/tools) like\n   * [web search](https://platform.openai.com/docs/guides/tools-web-search) or\n   * [file search](https://platform.openai.com/docs/guides/tools-file-search) to use\n   * your own data as input for the model's response.\n   *\n   * @example\n   * ```ts\n   * const response = await client.responses.create({\n   *   input: 'string',\n   *   model: 'gpt-4o',\n   * });\n   * ```\n   */\n  create(body: ResponseCreateParamsNonStreaming, options?: RequestOptions): APIPromise<Response>;\n  create(\n    body: ResponseCreateParamsStreaming,\n    options?: RequestOptions,\n  ): APIPromise<Stream<ResponseStreamEvent>>;\n  create(\n    body: ResponseCreateParamsBase,\n    options?: RequestOptions,\n  ): APIPromise<Stream<ResponseStreamEvent> | Response>;\n  create(\n    body: ResponseCreateParams,\n    options?: RequestOptions,\n  ): APIPromise<Response> | APIPromise<Stream<ResponseStreamEvent>> {\n    return (\n      this._client.post('/responses', { body, ...options, stream: body.stream ?? false }) as\n        | APIPromise<Response>\n        | APIPromise<Stream<ResponseStreamEvent>>\n    )._thenUnwrap((rsp) => {\n      if ('object' in rsp && rsp.object === 'response') {\n        addOutputText(rsp as Response);\n      }\n\n      return rsp;\n    }) as APIPromise<Response> | APIPromise<Stream<ResponseStreamEvent>>;\n  }\n\n  /**\n   * Retrieves a model response with the given ID.\n   *\n   * @example\n   * ```ts\n   * const response = await client.responses.retrieve(\n   *   'resp_677efb5139a88190b512bc3fef8e535d',\n   * );\n   * ```\n   */\n  retrieve(\n    responseID: string,\n    query?: ResponseRetrieveParamsNonStreaming,\n    options?: RequestOptions,\n  ): APIPromise<Response>;\n  retrieve(\n    responseID: string,\n    query: ResponseRetrieveParamsStreaming,\n    options?: RequestOptions,\n  ): APIPromise<Stream<ResponseStreamEvent>>;\n  retrieve(\n    responseID: string,\n    query?: ResponseRetrieveParamsBase | undefined,\n    options?: RequestOptions,\n  ): APIPromise<Stream<ResponseStreamEvent> | Response>;\n  retrieve(\n    responseID: string,\n    query: ResponseRetrieveParams | undefined = {},\n    options?: RequestOptions,\n  ): APIPromise<Response> | APIPromise<Stream<ResponseStreamEvent>> {\n    return this._client.get(path`/responses/${responseID}`, {\n      query,\n      ...options,\n      stream: query?.stream ?? false,\n    }) as APIPromise<Response> | APIPromise<Stream<ResponseStreamEvent>>;\n  }\n\n  /**\n   * Deletes a model response with the given ID.\n   *\n   * @example\n   * ```ts\n   * await client.responses.delete(\n   *   'resp_677efb5139a88190b512bc3fef8e535d',\n   * );\n   * ```\n   */\n  delete(responseID: string, options?: RequestOptions): APIPromise<void> {\n    return this._client.delete(path`/responses/${responseID}`, {\n      ...options,\n      headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n    });\n  }\n\n  parse<Params extends ResponseCreateParamsWithTools, ParsedT = ExtractParsedContentFromParams<Params>>(\n    body: Params,\n    options?: RequestOptions,\n  ): APIPromise<ParsedResponse<ParsedT>> {\n    return this._client.responses\n      .create(body, options)\n      ._thenUnwrap((response) => parseResponse(response as Response, body));\n  }\n\n  /**\n   * Creates a model response stream\n   */\n  stream<Params extends ResponseStreamParams, ParsedT = ExtractParsedContentFromParams<Params>>(\n    body: Params,\n    options?: RequestOptions,\n  ): ResponseStream<ParsedT> {\n    return ResponseStream.createResponse<ParsedT>(this._client, body, options);\n  }\n\n  /**\n   * Cancels a model response with the given ID. Only responses created with the\n   * `background` parameter set to `true` can be cancelled.\n   * [Learn more](https://platform.openai.com/docs/guides/background).\n   *\n   * @example\n   * ```ts\n   * const response = await client.responses.cancel(\n   *   'resp_677efb5139a88190b512bc3fef8e535d',\n   * );\n   * ```\n   */\n  cancel(responseID: string, options?: RequestOptions): APIPromise<Response> {\n    return this._client.post(path`/responses/${responseID}/cancel`, options);\n  }\n}\n\nexport type ResponseItemsPage = CursorPage<ResponseItem>;\n\n/**\n * A tool that controls a virtual computer. Learn more about the\n * [computer tool](https://platform.openai.com/docs/guides/tools-computer-use).\n */\nexport interface ComputerTool {\n  /**\n   * The height of the computer display.\n   */\n  display_height: number;\n\n  /**\n   * The width of the computer display.\n   */\n  display_width: number;\n\n  /**\n   * The type of computer environment to control.\n   */\n  environment: 'windows' | 'mac' | 'linux' | 'ubuntu' | 'browser';\n\n  /**\n   * The type of the computer use tool. Always `computer_use_preview`.\n   */\n  type: 'computer_use_preview';\n}\n\n/**\n * A message input to the model with a role indicating instruction following\n * hierarchy. Instructions given with the `developer` or `system` role take\n * precedence over instructions given with the `user` role. Messages with the\n * `assistant` role are presumed to have been generated by the model in previous\n * interactions.\n */\nexport interface EasyInputMessage {\n  /**\n   * Text, image, or audio input to the model, used to generate a response. Can also\n   * contain previous assistant responses.\n   */\n  content: string | ResponseInputMessageContentList;\n\n  /**\n   * The role of the message input. One of `user`, `assistant`, `system`, or\n   * `developer`.\n   */\n  role: 'user' | 'assistant' | 'system' | 'developer';\n\n  /**\n   * The type of the message input. Always `message`.\n   */\n  type?: 'message';\n}\n\n/**\n * A tool that searches for relevant content from uploaded files. Learn more about\n * the\n * [file search tool](https://platform.openai.com/docs/guides/tools-file-search).\n */\nexport interface FileSearchTool {\n  /**\n   * The type of the file search tool. Always `file_search`.\n   */\n  type: 'file_search';\n\n  /**\n   * The IDs of the vector stores to search.\n   */\n  vector_store_ids: Array<string>;\n\n  /**\n   * A filter to apply.\n   */\n  filters?: Shared.ComparisonFilter | Shared.CompoundFilter | null;\n\n  /**\n   * The maximum number of results to return. This number should be between 1 and 50\n   * inclusive.\n   */\n  max_num_results?: number;\n\n  /**\n   * Ranking options for search.\n   */\n  ranking_options?: FileSearchTool.RankingOptions;\n}\n\nexport namespace FileSearchTool {\n  /**\n   * Ranking options for search.\n   */\n  export interface RankingOptions {\n    /**\n     * The ranker to use for the file search.\n     */\n    ranker?: 'auto' | 'default-2024-11-15';\n\n    /**\n     * The score threshold for the file search, a number between 0 and 1. Numbers\n     * closer to 1 will attempt to return only the most relevant results, but may\n     * return fewer results.\n     */\n    score_threshold?: number;\n  }\n}\n\n/**\n * Defines a function in your own code the model can choose to call. Learn more\n * about\n * [function calling](https://platform.openai.com/docs/guides/function-calling).\n */\nexport interface FunctionTool {\n  /**\n   * The name of the function to call.\n   */\n  name: string;\n\n  /**\n   * A JSON schema object describing the parameters of the function.\n   */\n  parameters: Record<string, unknown> | null;\n\n  /**\n   * Whether to enforce strict parameter validation. Default `true`.\n   */\n  strict: boolean | null;\n\n  /**\n   * The type of the function tool. Always `function`.\n   */\n  type: 'function';\n\n  /**\n   * A description of the function. Used by the model to determine whether or not to\n   * call the function.\n   */\n  description?: string | null;\n}\n\nexport interface Response {\n  /**\n   * Unique identifier for this Response.\n   */\n  id: string;\n\n  /**\n   * Unix timestamp (in seconds) of when this Response was created.\n   */\n  created_at: number;\n\n  output_text: string;\n\n  /**\n   * An error object returned when the model fails to generate a Response.\n   */\n  error: ResponseError | null;\n\n  /**\n   * Details about why the response is incomplete.\n   */\n  incomplete_details: Response.IncompleteDetails | null;\n\n  /**\n   * A system (or developer) message inserted into the model's context.\n   *\n   * When using along with `previous_response_id`, the instructions from a previous\n   * response will not be carried over to the next response. This makes it simple to\n   * swap out system (or developer) messages in new responses.\n   */\n  instructions: string | Array<ResponseInputItem> | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * Model ID used to generate the response, like `gpt-4o` or `o3`. OpenAI offers a\n   * wide range of models with different capabilities, performance characteristics,\n   * and price points. Refer to the\n   * [model guide](https://platform.openai.com/docs/models) to browse and compare\n   * available models.\n   */\n  model: Shared.ResponsesModel;\n\n  /**\n   * The object type of this resource - always set to `response`.\n   */\n  object: 'response';\n\n  /**\n   * An array of content items generated by the model.\n   *\n   * - The length and order of items in the `output` array is dependent on the\n   *   model's response.\n   * - Rather than accessing the first item in the `output` array and assuming it's\n   *   an `assistant` message with the content generated by the model, you might\n   *   consider using the `output_text` property where supported in SDKs.\n   */\n  output: Array<ResponseOutputItem>;\n\n  /**\n   * Whether to allow the model to run tool calls in parallel.\n   */\n  parallel_tool_calls: boolean;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic. We generally recommend altering this or `top_p` but\n   * not both.\n   */\n  temperature: number | null;\n\n  /**\n   * How the model should select which tool (or tools) to use when generating a\n   * response. See the `tools` parameter to see how to specify which tools the model\n   * can call.\n   */\n  tool_choice: ToolChoiceOptions | ToolChoiceTypes | ToolChoiceFunction;\n\n  /**\n   * An array of tools the model may call while generating a response. You can\n   * specify which tool to use by setting the `tool_choice` parameter.\n   *\n   * The two categories of tools you can provide the model are:\n   *\n   * - **Built-in tools**: Tools that are provided by OpenAI that extend the model's\n   *   capabilities, like\n   *   [web search](https://platform.openai.com/docs/guides/tools-web-search) or\n   *   [file search](https://platform.openai.com/docs/guides/tools-file-search).\n   *   Learn more about\n   *   [built-in tools](https://platform.openai.com/docs/guides/tools).\n   * - **Function calls (custom tools)**: Functions that are defined by you, enabling\n   *   the model to call your own code. Learn more about\n   *   [function calling](https://platform.openai.com/docs/guides/function-calling).\n   */\n  tools: Array<Tool>;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or `temperature` but not both.\n   */\n  top_p: number | null;\n\n  /**\n   * Whether to run the model response in the background.\n   * [Learn more](https://platform.openai.com/docs/guides/background).\n   */\n  background?: boolean | null;\n\n  /**\n   * An upper bound for the number of tokens that can be generated for a response,\n   * including visible output tokens and\n   * [reasoning tokens](https://platform.openai.com/docs/guides/reasoning).\n   */\n  max_output_tokens?: number | null;\n\n  /**\n   * The unique ID of the previous response to the model. Use this to create\n   * multi-turn conversations. Learn more about\n   * [conversation state](https://platform.openai.com/docs/guides/conversation-state).\n   */\n  previous_response_id?: string | null;\n\n  /**\n   * Reference to a prompt template and its variables.\n   * [Learn more](https://platform.openai.com/docs/guides/text?api-mode=responses#reusable-prompts).\n   */\n  prompt?: ResponsePrompt | null;\n\n  /**\n   * **o-series models only**\n   *\n   * Configuration options for\n   * [reasoning models](https://platform.openai.com/docs/guides/reasoning).\n   */\n  reasoning?: Shared.Reasoning | null;\n\n  /**\n   * Specifies the latency tier to use for processing the request. This parameter is\n   * relevant for customers subscribed to the scale tier service:\n   *\n   * - If set to 'auto', and the Project is Scale tier enabled, the system will\n   *   utilize scale tier credits until they are exhausted.\n   * - If set to 'auto', and the Project is not Scale tier enabled, the request will\n   *   be processed using the default service tier with a lower uptime SLA and no\n   *   latency guarantee.\n   * - If set to 'default', the request will be processed using the default service\n   *   tier with a lower uptime SLA and no latency guarantee.\n   * - If set to 'flex', the request will be processed with the Flex Processing\n   *   service tier.\n   *   [Learn more](https://platform.openai.com/docs/guides/flex-processing).\n   * - When not set, the default behavior is 'auto'.\n   *\n   * When this parameter is set, the response body will include the `service_tier`\n   * utilized.\n   */\n  service_tier?: 'auto' | 'default' | 'flex' | 'scale' | null;\n\n  /**\n   * The status of the response generation. One of `completed`, `failed`,\n   * `in_progress`, `cancelled`, `queued`, or `incomplete`.\n   */\n  status?: ResponseStatus;\n\n  /**\n   * Configuration options for a text response from the model. Can be plain text or\n   * structured JSON data. Learn more:\n   *\n   * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n   * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n   */\n  text?: ResponseTextConfig;\n\n  /**\n   * The truncation strategy to use for the model response.\n   *\n   * - `auto`: If the context of this response and previous ones exceeds the model's\n   *   context window size, the model will truncate the response to fit the context\n   *   window by dropping input items in the middle of the conversation.\n   * - `disabled` (default): If a model response will exceed the context window size\n   *   for a model, the request will fail with a 400 error.\n   */\n  truncation?: 'auto' | 'disabled' | null;\n\n  /**\n   * Represents token usage details including input tokens, output tokens, a\n   * breakdown of output tokens, and the total tokens used.\n   */\n  usage?: ResponseUsage;\n\n  /**\n   * A stable identifier for your end-users. Used to boost cache hit rates by better\n   * bucketing similar requests and to help OpenAI detect and prevent abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport namespace Response {\n  /**\n   * Details about why the response is incomplete.\n   */\n  export interface IncompleteDetails {\n    /**\n     * The reason why the response is incomplete.\n     */\n    reason?: 'max_output_tokens' | 'content_filter';\n  }\n}\n\n/**\n * Emitted when there is a partial audio response.\n */\nexport interface ResponseAudioDeltaEvent {\n  /**\n   * A chunk of Base64 encoded response audio bytes.\n   */\n  delta: string;\n\n  /**\n   * A sequence number for this chunk of the stream response.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.audio.delta`.\n   */\n  type: 'response.audio.delta';\n}\n\n/**\n * Emitted when the audio response is complete.\n */\nexport interface ResponseAudioDoneEvent {\n  /**\n   * The sequence number of the delta.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.audio.done`.\n   */\n  type: 'response.audio.done';\n}\n\n/**\n * Emitted when there is a partial transcript of audio.\n */\nexport interface ResponseAudioTranscriptDeltaEvent {\n  /**\n   * The partial transcript of the audio response.\n   */\n  delta: string;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.audio.transcript.delta`.\n   */\n  type: 'response.audio.transcript.delta';\n}\n\n/**\n * Emitted when the full audio transcript is completed.\n */\nexport interface ResponseAudioTranscriptDoneEvent {\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.audio.transcript.done`.\n   */\n  type: 'response.audio.transcript.done';\n}\n\n/**\n * Emitted when a partial code snippet is added by the code interpreter.\n */\nexport interface ResponseCodeInterpreterCallCodeDeltaEvent {\n  /**\n   * The partial code snippet added by the code interpreter.\n   */\n  delta: string;\n\n  /**\n   * The index of the output item that the code interpreter call is in progress.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.code_interpreter_call_code.delta`.\n   */\n  type: 'response.code_interpreter_call_code.delta';\n}\n\n/**\n * Emitted when code snippet output is finalized by the code interpreter.\n */\nexport interface ResponseCodeInterpreterCallCodeDoneEvent {\n  /**\n   * The final code snippet output by the code interpreter.\n   */\n  code: string;\n\n  /**\n   * The index of the output item that the code interpreter call is in progress.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.code_interpreter_call_code.done`.\n   */\n  type: 'response.code_interpreter_call_code.done';\n}\n\n/**\n * Emitted when the code interpreter call is completed.\n */\nexport interface ResponseCodeInterpreterCallCompletedEvent {\n  /**\n   * A tool call to run code.\n   */\n  code_interpreter_call: ResponseCodeInterpreterToolCall;\n\n  /**\n   * The index of the output item that the code interpreter call is in progress.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.code_interpreter_call.completed`.\n   */\n  type: 'response.code_interpreter_call.completed';\n}\n\n/**\n * Emitted when a code interpreter call is in progress.\n */\nexport interface ResponseCodeInterpreterCallInProgressEvent {\n  /**\n   * A tool call to run code.\n   */\n  code_interpreter_call: ResponseCodeInterpreterToolCall;\n\n  /**\n   * The index of the output item that the code interpreter call is in progress.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.code_interpreter_call.in_progress`.\n   */\n  type: 'response.code_interpreter_call.in_progress';\n}\n\n/**\n * Emitted when the code interpreter is actively interpreting the code snippet.\n */\nexport interface ResponseCodeInterpreterCallInterpretingEvent {\n  /**\n   * A tool call to run code.\n   */\n  code_interpreter_call: ResponseCodeInterpreterToolCall;\n\n  /**\n   * The index of the output item that the code interpreter call is in progress.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.code_interpreter_call.interpreting`.\n   */\n  type: 'response.code_interpreter_call.interpreting';\n}\n\n/**\n * A tool call to run code.\n */\nexport interface ResponseCodeInterpreterToolCall {\n  /**\n   * The unique ID of the code interpreter tool call.\n   */\n  id: string;\n\n  /**\n   * The code to run.\n   */\n  code: string;\n\n  /**\n   * The results of the code interpreter tool call.\n   */\n  results: Array<ResponseCodeInterpreterToolCall.Logs | ResponseCodeInterpreterToolCall.Files>;\n\n  /**\n   * The status of the code interpreter tool call.\n   */\n  status: 'in_progress' | 'interpreting' | 'completed';\n\n  /**\n   * The type of the code interpreter tool call. Always `code_interpreter_call`.\n   */\n  type: 'code_interpreter_call';\n\n  /**\n   * The ID of the container used to run the code.\n   */\n  container_id?: string;\n}\n\nexport namespace ResponseCodeInterpreterToolCall {\n  /**\n   * The output of a code interpreter tool call that is text.\n   */\n  export interface Logs {\n    /**\n     * The logs of the code interpreter tool call.\n     */\n    logs: string;\n\n    /**\n     * The type of the code interpreter text output. Always `logs`.\n     */\n    type: 'logs';\n  }\n\n  /**\n   * The output of a code interpreter tool call that is a file.\n   */\n  export interface Files {\n    files: Array<Files.File>;\n\n    /**\n     * The type of the code interpreter file output. Always `files`.\n     */\n    type: 'files';\n  }\n\n  export namespace Files {\n    export interface File {\n      /**\n       * The ID of the file.\n       */\n      file_id: string;\n\n      /**\n       * The MIME type of the file.\n       */\n      mime_type: string;\n    }\n  }\n}\n\n/**\n * Emitted when the model response is complete.\n */\nexport interface ResponseCompletedEvent {\n  /**\n   * Properties of the completed response.\n   */\n  response: Response;\n\n  /**\n   * The sequence number for this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.completed`.\n   */\n  type: 'response.completed';\n}\n\n/**\n * A tool call to a computer use tool. See the\n * [computer use guide](https://platform.openai.com/docs/guides/tools-computer-use)\n * for more information.\n */\nexport interface ResponseComputerToolCall {\n  /**\n   * The unique ID of the computer call.\n   */\n  id: string;\n\n  /**\n   * A click action.\n   */\n  action:\n    | ResponseComputerToolCall.Click\n    | ResponseComputerToolCall.DoubleClick\n    | ResponseComputerToolCall.Drag\n    | ResponseComputerToolCall.Keypress\n    | ResponseComputerToolCall.Move\n    | ResponseComputerToolCall.Screenshot\n    | ResponseComputerToolCall.Scroll\n    | ResponseComputerToolCall.Type\n    | ResponseComputerToolCall.Wait;\n\n  /**\n   * An identifier used when responding to the tool call with output.\n   */\n  call_id: string;\n\n  /**\n   * The pending safety checks for the computer call.\n   */\n  pending_safety_checks: Array<ResponseComputerToolCall.PendingSafetyCheck>;\n\n  /**\n   * The status of the item. One of `in_progress`, `completed`, or `incomplete`.\n   * Populated when items are returned via API.\n   */\n  status: 'in_progress' | 'completed' | 'incomplete';\n\n  /**\n   * The type of the computer call. Always `computer_call`.\n   */\n  type: 'computer_call';\n}\n\nexport namespace ResponseComputerToolCall {\n  /**\n   * A click action.\n   */\n  export interface Click {\n    /**\n     * Indicates which mouse button was pressed during the click. One of `left`,\n     * `right`, `wheel`, `back`, or `forward`.\n     */\n    button: 'left' | 'right' | 'wheel' | 'back' | 'forward';\n\n    /**\n     * Specifies the event type. For a click action, this property is always set to\n     * `click`.\n     */\n    type: 'click';\n\n    /**\n     * The x-coordinate where the click occurred.\n     */\n    x: number;\n\n    /**\n     * The y-coordinate where the click occurred.\n     */\n    y: number;\n  }\n\n  /**\n   * A double click action.\n   */\n  export interface DoubleClick {\n    /**\n     * Specifies the event type. For a double click action, this property is always set\n     * to `double_click`.\n     */\n    type: 'double_click';\n\n    /**\n     * The x-coordinate where the double click occurred.\n     */\n    x: number;\n\n    /**\n     * The y-coordinate where the double click occurred.\n     */\n    y: number;\n  }\n\n  /**\n   * A drag action.\n   */\n  export interface Drag {\n    /**\n     * An array of coordinates representing the path of the drag action. Coordinates\n     * will appear as an array of objects, eg\n     *\n     * ```\n     * [\n     *   { x: 100, y: 200 },\n     *   { x: 200, y: 300 }\n     * ]\n     * ```\n     */\n    path: Array<Drag.Path>;\n\n    /**\n     * Specifies the event type. For a drag action, this property is always set to\n     * `drag`.\n     */\n    type: 'drag';\n  }\n\n  export namespace Drag {\n    /**\n     * A series of x/y coordinate pairs in the drag path.\n     */\n    export interface Path {\n      /**\n       * The x-coordinate.\n       */\n      x: number;\n\n      /**\n       * The y-coordinate.\n       */\n      y: number;\n    }\n  }\n\n  /**\n   * A collection of keypresses the model would like to perform.\n   */\n  export interface Keypress {\n    /**\n     * The combination of keys the model is requesting to be pressed. This is an array\n     * of strings, each representing a key.\n     */\n    keys: Array<string>;\n\n    /**\n     * Specifies the event type. For a keypress action, this property is always set to\n     * `keypress`.\n     */\n    type: 'keypress';\n  }\n\n  /**\n   * A mouse move action.\n   */\n  export interface Move {\n    /**\n     * Specifies the event type. For a move action, this property is always set to\n     * `move`.\n     */\n    type: 'move';\n\n    /**\n     * The x-coordinate to move to.\n     */\n    x: number;\n\n    /**\n     * The y-coordinate to move to.\n     */\n    y: number;\n  }\n\n  /**\n   * A screenshot action.\n   */\n  export interface Screenshot {\n    /**\n     * Specifies the event type. For a screenshot action, this property is always set\n     * to `screenshot`.\n     */\n    type: 'screenshot';\n  }\n\n  /**\n   * A scroll action.\n   */\n  export interface Scroll {\n    /**\n     * The horizontal scroll distance.\n     */\n    scroll_x: number;\n\n    /**\n     * The vertical scroll distance.\n     */\n    scroll_y: number;\n\n    /**\n     * Specifies the event type. For a scroll action, this property is always set to\n     * `scroll`.\n     */\n    type: 'scroll';\n\n    /**\n     * The x-coordinate where the scroll occurred.\n     */\n    x: number;\n\n    /**\n     * The y-coordinate where the scroll occurred.\n     */\n    y: number;\n  }\n\n  /**\n   * An action to type in text.\n   */\n  export interface Type {\n    /**\n     * The text to type.\n     */\n    text: string;\n\n    /**\n     * Specifies the event type. For a type action, this property is always set to\n     * `type`.\n     */\n    type: 'type';\n  }\n\n  /**\n   * A wait action.\n   */\n  export interface Wait {\n    /**\n     * Specifies the event type. For a wait action, this property is always set to\n     * `wait`.\n     */\n    type: 'wait';\n  }\n\n  /**\n   * A pending safety check for the computer call.\n   */\n  export interface PendingSafetyCheck {\n    /**\n     * The ID of the pending safety check.\n     */\n    id: string;\n\n    /**\n     * The type of the pending safety check.\n     */\n    code: string;\n\n    /**\n     * Details about the pending safety check.\n     */\n    message: string;\n  }\n}\n\nexport interface ResponseComputerToolCallOutputItem {\n  /**\n   * The unique ID of the computer call tool output.\n   */\n  id: string;\n\n  /**\n   * The ID of the computer tool call that produced the output.\n   */\n  call_id: string;\n\n  /**\n   * A computer screenshot image used with the computer use tool.\n   */\n  output: ResponseComputerToolCallOutputScreenshot;\n\n  /**\n   * The type of the computer tool call output. Always `computer_call_output`.\n   */\n  type: 'computer_call_output';\n\n  /**\n   * The safety checks reported by the API that have been acknowledged by the\n   * developer.\n   */\n  acknowledged_safety_checks?: Array<ResponseComputerToolCallOutputItem.AcknowledgedSafetyCheck>;\n\n  /**\n   * The status of the message input. One of `in_progress`, `completed`, or\n   * `incomplete`. Populated when input items are returned via API.\n   */\n  status?: 'in_progress' | 'completed' | 'incomplete';\n}\n\nexport namespace ResponseComputerToolCallOutputItem {\n  /**\n   * A pending safety check for the computer call.\n   */\n  export interface AcknowledgedSafetyCheck {\n    /**\n     * The ID of the pending safety check.\n     */\n    id: string;\n\n    /**\n     * The type of the pending safety check.\n     */\n    code: string;\n\n    /**\n     * Details about the pending safety check.\n     */\n    message: string;\n  }\n}\n\n/**\n * A computer screenshot image used with the computer use tool.\n */\nexport interface ResponseComputerToolCallOutputScreenshot {\n  /**\n   * Specifies the event type. For a computer screenshot, this property is always set\n   * to `computer_screenshot`.\n   */\n  type: 'computer_screenshot';\n\n  /**\n   * The identifier of an uploaded file that contains the screenshot.\n   */\n  file_id?: string;\n\n  /**\n   * The URL of the screenshot image.\n   */\n  image_url?: string;\n}\n\n/**\n * Multi-modal input and output contents.\n */\nexport type ResponseContent =\n  | ResponseInputText\n  | ResponseInputImage\n  | ResponseInputFile\n  | ResponseOutputText\n  | ResponseOutputRefusal;\n\n/**\n * Emitted when a new content part is added.\n */\nexport interface ResponseContentPartAddedEvent {\n  /**\n   * The index of the content part that was added.\n   */\n  content_index: number;\n\n  /**\n   * The ID of the output item that the content part was added to.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the content part was added to.\n   */\n  output_index: number;\n\n  /**\n   * The content part that was added.\n   */\n  part: ResponseOutputText | ResponseOutputRefusal;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.content_part.added`.\n   */\n  type: 'response.content_part.added';\n}\n\n/**\n * Emitted when a content part is done.\n */\nexport interface ResponseContentPartDoneEvent {\n  /**\n   * The index of the content part that is done.\n   */\n  content_index: number;\n\n  /**\n   * The ID of the output item that the content part was added to.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the content part was added to.\n   */\n  output_index: number;\n\n  /**\n   * The content part that is done.\n   */\n  part: ResponseOutputText | ResponseOutputRefusal;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.content_part.done`.\n   */\n  type: 'response.content_part.done';\n}\n\n/**\n * An event that is emitted when a response is created.\n */\nexport interface ResponseCreatedEvent {\n  /**\n   * The response that was created.\n   */\n  response: Response;\n\n  /**\n   * The sequence number for this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.created`.\n   */\n  type: 'response.created';\n}\n\n/**\n * An error object returned when the model fails to generate a Response.\n */\nexport interface ResponseError {\n  /**\n   * The error code for the response.\n   */\n  code:\n    | 'server_error'\n    | 'rate_limit_exceeded'\n    | 'invalid_prompt'\n    | 'vector_store_timeout'\n    | 'invalid_image'\n    | 'invalid_image_format'\n    | 'invalid_base64_image'\n    | 'invalid_image_url'\n    | 'image_too_large'\n    | 'image_too_small'\n    | 'image_parse_error'\n    | 'image_content_policy_violation'\n    | 'invalid_image_mode'\n    | 'image_file_too_large'\n    | 'unsupported_image_media_type'\n    | 'empty_image_file'\n    | 'failed_to_download_image'\n    | 'image_file_not_found';\n\n  /**\n   * A human-readable description of the error.\n   */\n  message: string;\n}\n\n/**\n * Emitted when an error occurs.\n */\nexport interface ResponseErrorEvent {\n  /**\n   * The error code.\n   */\n  code: string | null;\n\n  /**\n   * The error message.\n   */\n  message: string;\n\n  /**\n   * The error parameter.\n   */\n  param: string | null;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `error`.\n   */\n  type: 'error';\n}\n\n/**\n * An event that is emitted when a response fails.\n */\nexport interface ResponseFailedEvent {\n  /**\n   * The response that failed.\n   */\n  response: Response;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.failed`.\n   */\n  type: 'response.failed';\n}\n\n/**\n * Emitted when a file search call is completed (results found).\n */\nexport interface ResponseFileSearchCallCompletedEvent {\n  /**\n   * The ID of the output item that the file search call is initiated.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the file search call is initiated.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.file_search_call.completed`.\n   */\n  type: 'response.file_search_call.completed';\n}\n\n/**\n * Emitted when a file search call is initiated.\n */\nexport interface ResponseFileSearchCallInProgressEvent {\n  /**\n   * The ID of the output item that the file search call is initiated.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the file search call is initiated.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.file_search_call.in_progress`.\n   */\n  type: 'response.file_search_call.in_progress';\n}\n\n/**\n * Emitted when a file search is currently searching.\n */\nexport interface ResponseFileSearchCallSearchingEvent {\n  /**\n   * The ID of the output item that the file search call is initiated.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the file search call is searching.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.file_search_call.searching`.\n   */\n  type: 'response.file_search_call.searching';\n}\n\n/**\n * The results of a file search tool call. See the\n * [file search guide](https://platform.openai.com/docs/guides/tools-file-search)\n * for more information.\n */\nexport interface ResponseFileSearchToolCall {\n  /**\n   * The unique ID of the file search tool call.\n   */\n  id: string;\n\n  /**\n   * The queries used to search for files.\n   */\n  queries: Array<string>;\n\n  /**\n   * The status of the file search tool call. One of `in_progress`, `searching`,\n   * `incomplete` or `failed`,\n   */\n  status: 'in_progress' | 'searching' | 'completed' | 'incomplete' | 'failed';\n\n  /**\n   * The type of the file search tool call. Always `file_search_call`.\n   */\n  type: 'file_search_call';\n\n  /**\n   * The results of the file search tool call.\n   */\n  results?: Array<ResponseFileSearchToolCall.Result> | null;\n}\n\nexport namespace ResponseFileSearchToolCall {\n  export interface Result {\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard. Keys are strings with a maximum\n     * length of 64 characters. Values are strings with a maximum length of 512\n     * characters, booleans, or numbers.\n     */\n    attributes?: Record<string, string | number | boolean> | null;\n\n    /**\n     * The unique ID of the file.\n     */\n    file_id?: string;\n\n    /**\n     * The name of the file.\n     */\n    filename?: string;\n\n    /**\n     * The relevance score of the file - a value between 0 and 1.\n     */\n    score?: number;\n\n    /**\n     * The text that was retrieved from the file.\n     */\n    text?: string;\n  }\n}\n\n/**\n * An object specifying the format that the model must output.\n *\n * Configuring `{ \"type\": \"json_schema\" }` enables Structured Outputs, which\n * ensures the model will match your supplied JSON schema. Learn more in the\n * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n *\n * The default format is `{ \"type\": \"text\" }` with no additional options.\n *\n * **Not recommended for gpt-4o and newer models:**\n *\n * Setting to `{ \"type\": \"json_object\" }` enables the older JSON mode, which\n * ensures the message the model generates is valid JSON. Using `json_schema` is\n * preferred for models that support it.\n */\nexport type ResponseFormatTextConfig =\n  | Shared.ResponseFormatText\n  | ResponseFormatTextJSONSchemaConfig\n  | Shared.ResponseFormatJSONObject;\n\n/**\n * JSON Schema response format. Used to generate structured JSON responses. Learn\n * more about\n * [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs).\n */\nexport interface ResponseFormatTextJSONSchemaConfig {\n  /**\n   * The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores\n   * and dashes, with a maximum length of 64.\n   */\n  name: string;\n\n  /**\n   * The schema for the response format, described as a JSON Schema object. Learn how\n   * to build JSON schemas [here](https://json-schema.org/).\n   */\n  schema: Record<string, unknown>;\n\n  /**\n   * The type of response format being defined. Always `json_schema`.\n   */\n  type: 'json_schema';\n\n  /**\n   * A description of what the response format is for, used by the model to determine\n   * how to respond in the format.\n   */\n  description?: string;\n\n  /**\n   * Whether to enable strict schema adherence when generating the output. If set to\n   * true, the model will always follow the exact schema defined in the `schema`\n   * field. Only a subset of JSON Schema is supported when `strict` is `true`. To\n   * learn more, read the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   */\n  strict?: boolean | null;\n}\n\n/**\n * Emitted when there is a partial function-call arguments delta.\n */\nexport interface ResponseFunctionCallArgumentsDeltaEvent {\n  /**\n   * The function-call arguments delta that is added.\n   */\n  delta: string;\n\n  /**\n   * The ID of the output item that the function-call arguments delta is added to.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the function-call arguments delta is added to.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.function_call_arguments.delta`.\n   */\n  type: 'response.function_call_arguments.delta';\n}\n\n/**\n * Emitted when function-call arguments are finalized.\n */\nexport interface ResponseFunctionCallArgumentsDoneEvent {\n  /**\n   * The function-call arguments.\n   */\n  arguments: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  type: 'response.function_call_arguments.done';\n}\n\n/**\n * A tool call to run a function. See the\n * [function calling guide](https://platform.openai.com/docs/guides/function-calling)\n * for more information.\n */\nexport interface ResponseFunctionToolCall {\n  /**\n   * A JSON string of the arguments to pass to the function.\n   */\n  arguments: string;\n\n  /**\n   * The unique ID of the function tool call generated by the model.\n   */\n  call_id: string;\n\n  /**\n   * The name of the function to run.\n   */\n  name: string;\n\n  /**\n   * The type of the function tool call. Always `function_call`.\n   */\n  type: 'function_call';\n\n  /**\n   * The unique ID of the function tool call.\n   */\n  id?: string;\n\n  /**\n   * The status of the item. One of `in_progress`, `completed`, or `incomplete`.\n   * Populated when items are returned via API.\n   */\n  status?: 'in_progress' | 'completed' | 'incomplete';\n}\n\n/**\n * A tool call to run a function. See the\n * [function calling guide](https://platform.openai.com/docs/guides/function-calling)\n * for more information.\n */\nexport interface ResponseFunctionToolCallItem extends ResponseFunctionToolCall {\n  /**\n   * The unique ID of the function tool call.\n   */\n  id: string;\n}\n\nexport interface ResponseFunctionToolCallOutputItem {\n  /**\n   * The unique ID of the function call tool output.\n   */\n  id: string;\n\n  /**\n   * The unique ID of the function tool call generated by the model.\n   */\n  call_id: string;\n\n  /**\n   * A JSON string of the output of the function tool call.\n   */\n  output: string;\n\n  /**\n   * The type of the function tool call output. Always `function_call_output`.\n   */\n  type: 'function_call_output';\n\n  /**\n   * The status of the item. One of `in_progress`, `completed`, or `incomplete`.\n   * Populated when items are returned via API.\n   */\n  status?: 'in_progress' | 'completed' | 'incomplete';\n}\n\n/**\n * The results of a web search tool call. See the\n * [web search guide](https://platform.openai.com/docs/guides/tools-web-search) for\n * more information.\n */\nexport interface ResponseFunctionWebSearch {\n  /**\n   * The unique ID of the web search tool call.\n   */\n  id: string;\n\n  /**\n   * The status of the web search tool call.\n   */\n  status: 'in_progress' | 'searching' | 'completed' | 'failed';\n\n  /**\n   * The type of the web search tool call. Always `web_search_call`.\n   */\n  type: 'web_search_call';\n}\n\n/**\n * Emitted when an image generation tool call has completed and the final image is\n * available.\n */\nexport interface ResponseImageGenCallCompletedEvent {\n  /**\n   * The unique identifier of the image generation item being processed.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response's output array.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.image_generation_call.completed'.\n   */\n  type: 'response.image_generation_call.completed';\n}\n\n/**\n * Emitted when an image generation tool call is actively generating an image\n * (intermediate state).\n */\nexport interface ResponseImageGenCallGeneratingEvent {\n  /**\n   * The unique identifier of the image generation item being processed.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response's output array.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of the image generation item being processed.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.image_generation_call.generating'.\n   */\n  type: 'response.image_generation_call.generating';\n}\n\n/**\n * Emitted when an image generation tool call is in progress.\n */\nexport interface ResponseImageGenCallInProgressEvent {\n  /**\n   * The unique identifier of the image generation item being processed.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response's output array.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of the image generation item being processed.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.image_generation_call.in_progress'.\n   */\n  type: 'response.image_generation_call.in_progress';\n}\n\n/**\n * Emitted when a partial image is available during image generation streaming.\n */\nexport interface ResponseImageGenCallPartialImageEvent {\n  /**\n   * The unique identifier of the image generation item being processed.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response's output array.\n   */\n  output_index: number;\n\n  /**\n   * Base64-encoded partial image data, suitable for rendering as an image.\n   */\n  partial_image_b64: string;\n\n  /**\n   * 0-based index for the partial image (backend is 1-based, but this is 0-based for\n   * the user).\n   */\n  partial_image_index: number;\n\n  /**\n   * The sequence number of the image generation item being processed.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.image_generation_call.partial_image'.\n   */\n  type: 'response.image_generation_call.partial_image';\n}\n\n/**\n * Emitted when the response is in progress.\n */\nexport interface ResponseInProgressEvent {\n  /**\n   * The response that is in progress.\n   */\n  response: Response;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.in_progress`.\n   */\n  type: 'response.in_progress';\n}\n\n/**\n * Specify additional output data to include in the model response. Currently\n * supported values are:\n *\n * - `file_search_call.results`: Include the search results of the file search tool\n *   call.\n * - `message.input_image.image_url`: Include image urls from the input message.\n * - `computer_call_output.output.image_url`: Include image urls from the computer\n *   call output.\n * - `reasoning.encrypted_content`: Includes an encrypted version of reasoning\n *   tokens in reasoning item outputs. This enables reasoning items to be used in\n *   multi-turn conversations when using the Responses API statelessly (like when\n *   the `store` parameter is set to `false`, or when an organization is enrolled\n *   in the zero data retention program).\n * - `code_interpreter_call.outputs`: Includes the outputs of python code execution\n *   in code interpreter tool call items.\n */\nexport type ResponseIncludable =\n  | 'file_search_call.results'\n  | 'message.input_image.image_url'\n  | 'computer_call_output.output.image_url'\n  | 'reasoning.encrypted_content'\n  | 'code_interpreter_call.outputs';\n\n/**\n * An event that is emitted when a response finishes as incomplete.\n */\nexport interface ResponseIncompleteEvent {\n  /**\n   * The response that was incomplete.\n   */\n  response: Response;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.incomplete`.\n   */\n  type: 'response.incomplete';\n}\n\n/**\n * A list of one or many input items to the model, containing different content\n * types.\n */\nexport type ResponseInput = Array<ResponseInputItem>;\n\n/**\n * An audio input to the model.\n */\nexport interface ResponseInputAudio {\n  /**\n   * Base64-encoded audio data.\n   */\n  data: string;\n\n  /**\n   * The format of the audio data. Currently supported formats are `mp3` and `wav`.\n   */\n  format: 'mp3' | 'wav';\n\n  /**\n   * The type of the input item. Always `input_audio`.\n   */\n  type: 'input_audio';\n}\n\n/**\n * A text input to the model.\n */\nexport type ResponseInputContent = ResponseInputText | ResponseInputImage | ResponseInputFile;\n\n/**\n * A file input to the model.\n */\nexport interface ResponseInputFile {\n  /**\n   * The type of the input item. Always `input_file`.\n   */\n  type: 'input_file';\n\n  /**\n   * The content of the file to be sent to the model.\n   */\n  file_data?: string;\n\n  /**\n   * The ID of the file to be sent to the model.\n   */\n  file_id?: string | null;\n\n  /**\n   * The name of the file to be sent to the model.\n   */\n  filename?: string;\n}\n\n/**\n * An image input to the model. Learn about\n * [image inputs](https://platform.openai.com/docs/guides/vision).\n */\nexport interface ResponseInputImage {\n  /**\n   * The detail level of the image to be sent to the model. One of `high`, `low`, or\n   * `auto`. Defaults to `auto`.\n   */\n  detail: 'low' | 'high' | 'auto';\n\n  /**\n   * The type of the input item. Always `input_image`.\n   */\n  type: 'input_image';\n\n  /**\n   * The ID of the file to be sent to the model.\n   */\n  file_id?: string | null;\n\n  /**\n   * The URL of the image to be sent to the model. A fully qualified URL or base64\n   * encoded image in a data URL.\n   */\n  image_url?: string | null;\n}\n\n/**\n * A message input to the model with a role indicating instruction following\n * hierarchy. Instructions given with the `developer` or `system` role take\n * precedence over instructions given with the `user` role. Messages with the\n * `assistant` role are presumed to have been generated by the model in previous\n * interactions.\n */\nexport type ResponseInputItem =\n  | EasyInputMessage\n  | ResponseInputItem.Message\n  | ResponseOutputMessage\n  | ResponseFileSearchToolCall\n  | ResponseComputerToolCall\n  | ResponseInputItem.ComputerCallOutput\n  | ResponseFunctionWebSearch\n  | ResponseFunctionToolCall\n  | ResponseInputItem.FunctionCallOutput\n  | ResponseReasoningItem\n  | ResponseInputItem.ImageGenerationCall\n  | ResponseCodeInterpreterToolCall\n  | ResponseInputItem.LocalShellCall\n  | ResponseInputItem.LocalShellCallOutput\n  | ResponseInputItem.McpListTools\n  | ResponseInputItem.McpApprovalRequest\n  | ResponseInputItem.McpApprovalResponse\n  | ResponseInputItem.McpCall\n  | ResponseInputItem.ItemReference;\n\nexport namespace ResponseInputItem {\n  /**\n   * A message input to the model with a role indicating instruction following\n   * hierarchy. Instructions given with the `developer` or `system` role take\n   * precedence over instructions given with the `user` role.\n   */\n  export interface Message {\n    /**\n     * A list of one or many input items to the model, containing different content\n     * types.\n     */\n    content: ResponsesAPI.ResponseInputMessageContentList;\n\n    /**\n     * The role of the message input. One of `user`, `system`, or `developer`.\n     */\n    role: 'user' | 'system' | 'developer';\n\n    /**\n     * The status of item. One of `in_progress`, `completed`, or `incomplete`.\n     * Populated when items are returned via API.\n     */\n    status?: 'in_progress' | 'completed' | 'incomplete';\n\n    /**\n     * The type of the message input. Always set to `message`.\n     */\n    type?: 'message';\n  }\n\n  /**\n   * The output of a computer tool call.\n   */\n  export interface ComputerCallOutput {\n    /**\n     * The ID of the computer tool call that produced the output.\n     */\n    call_id: string;\n\n    /**\n     * A computer screenshot image used with the computer use tool.\n     */\n    output: ResponsesAPI.ResponseComputerToolCallOutputScreenshot;\n\n    /**\n     * The type of the computer tool call output. Always `computer_call_output`.\n     */\n    type: 'computer_call_output';\n\n    /**\n     * The ID of the computer tool call output.\n     */\n    id?: string | null;\n\n    /**\n     * The safety checks reported by the API that have been acknowledged by the\n     * developer.\n     */\n    acknowledged_safety_checks?: Array<ComputerCallOutput.AcknowledgedSafetyCheck> | null;\n\n    /**\n     * The status of the message input. One of `in_progress`, `completed`, or\n     * `incomplete`. Populated when input items are returned via API.\n     */\n    status?: 'in_progress' | 'completed' | 'incomplete' | null;\n  }\n\n  export namespace ComputerCallOutput {\n    /**\n     * A pending safety check for the computer call.\n     */\n    export interface AcknowledgedSafetyCheck {\n      /**\n       * The ID of the pending safety check.\n       */\n      id: string;\n\n      /**\n       * The type of the pending safety check.\n       */\n      code?: string | null;\n\n      /**\n       * Details about the pending safety check.\n       */\n      message?: string | null;\n    }\n  }\n\n  /**\n   * The output of a function tool call.\n   */\n  export interface FunctionCallOutput {\n    /**\n     * The unique ID of the function tool call generated by the model.\n     */\n    call_id: string;\n\n    /**\n     * A JSON string of the output of the function tool call.\n     */\n    output: string;\n\n    /**\n     * The type of the function tool call output. Always `function_call_output`.\n     */\n    type: 'function_call_output';\n\n    /**\n     * The unique ID of the function tool call output. Populated when this item is\n     * returned via API.\n     */\n    id?: string | null;\n\n    /**\n     * The status of the item. One of `in_progress`, `completed`, or `incomplete`.\n     * Populated when items are returned via API.\n     */\n    status?: 'in_progress' | 'completed' | 'incomplete' | null;\n  }\n\n  /**\n   * An image generation request made by the model.\n   */\n  export interface ImageGenerationCall {\n    /**\n     * The unique ID of the image generation call.\n     */\n    id: string;\n\n    /**\n     * The generated image encoded in base64.\n     */\n    result: string | null;\n\n    /**\n     * The status of the image generation call.\n     */\n    status: 'in_progress' | 'completed' | 'generating' | 'failed';\n\n    /**\n     * The type of the image generation call. Always `image_generation_call`.\n     */\n    type: 'image_generation_call';\n  }\n\n  /**\n   * A tool call to run a command on the local shell.\n   */\n  export interface LocalShellCall {\n    /**\n     * The unique ID of the local shell call.\n     */\n    id: string;\n\n    /**\n     * Execute a shell command on the server.\n     */\n    action: LocalShellCall.Action;\n\n    /**\n     * The unique ID of the local shell tool call generated by the model.\n     */\n    call_id: string;\n\n    /**\n     * The status of the local shell call.\n     */\n    status: 'in_progress' | 'completed' | 'incomplete';\n\n    /**\n     * The type of the local shell call. Always `local_shell_call`.\n     */\n    type: 'local_shell_call';\n  }\n\n  export namespace LocalShellCall {\n    /**\n     * Execute a shell command on the server.\n     */\n    export interface Action {\n      /**\n       * The command to run.\n       */\n      command: Array<string>;\n\n      /**\n       * Environment variables to set for the command.\n       */\n      env: Record<string, string>;\n\n      /**\n       * The type of the local shell action. Always `exec`.\n       */\n      type: 'exec';\n\n      /**\n       * Optional timeout in milliseconds for the command.\n       */\n      timeout_ms?: number | null;\n\n      /**\n       * Optional user to run the command as.\n       */\n      user?: string | null;\n\n      /**\n       * Optional working directory to run the command in.\n       */\n      working_directory?: string | null;\n    }\n  }\n\n  /**\n   * The output of a local shell tool call.\n   */\n  export interface LocalShellCallOutput {\n    /**\n     * The unique ID of the local shell tool call generated by the model.\n     */\n    id: string;\n\n    /**\n     * A JSON string of the output of the local shell tool call.\n     */\n    output: string;\n\n    /**\n     * The type of the local shell tool call output. Always `local_shell_call_output`.\n     */\n    type: 'local_shell_call_output';\n\n    /**\n     * The status of the item. One of `in_progress`, `completed`, or `incomplete`.\n     */\n    status?: 'in_progress' | 'completed' | 'incomplete' | null;\n  }\n\n  /**\n   * A list of tools available on an MCP server.\n   */\n  export interface McpListTools {\n    /**\n     * The unique ID of the list.\n     */\n    id: string;\n\n    /**\n     * The label of the MCP server.\n     */\n    server_label: string;\n\n    /**\n     * The tools available on the server.\n     */\n    tools: Array<McpListTools.Tool>;\n\n    /**\n     * The type of the item. Always `mcp_list_tools`.\n     */\n    type: 'mcp_list_tools';\n\n    /**\n     * Error message if the server could not list tools.\n     */\n    error?: string | null;\n  }\n\n  export namespace McpListTools {\n    /**\n     * A tool available on an MCP server.\n     */\n    export interface Tool {\n      /**\n       * The JSON schema describing the tool's input.\n       */\n      input_schema: unknown;\n\n      /**\n       * The name of the tool.\n       */\n      name: string;\n\n      /**\n       * Additional annotations about the tool.\n       */\n      annotations?: unknown | null;\n\n      /**\n       * The description of the tool.\n       */\n      description?: string | null;\n    }\n  }\n\n  /**\n   * A request for human approval of a tool invocation.\n   */\n  export interface McpApprovalRequest {\n    /**\n     * The unique ID of the approval request.\n     */\n    id: string;\n\n    /**\n     * A JSON string of arguments for the tool.\n     */\n    arguments: string;\n\n    /**\n     * The name of the tool to run.\n     */\n    name: string;\n\n    /**\n     * The label of the MCP server making the request.\n     */\n    server_label: string;\n\n    /**\n     * The type of the item. Always `mcp_approval_request`.\n     */\n    type: 'mcp_approval_request';\n  }\n\n  /**\n   * A response to an MCP approval request.\n   */\n  export interface McpApprovalResponse {\n    /**\n     * The ID of the approval request being answered.\n     */\n    approval_request_id: string;\n\n    /**\n     * Whether the request was approved.\n     */\n    approve: boolean;\n\n    /**\n     * The type of the item. Always `mcp_approval_response`.\n     */\n    type: 'mcp_approval_response';\n\n    /**\n     * The unique ID of the approval response\n     */\n    id?: string | null;\n\n    /**\n     * Optional reason for the decision.\n     */\n    reason?: string | null;\n  }\n\n  /**\n   * An invocation of a tool on an MCP server.\n   */\n  export interface McpCall {\n    /**\n     * The unique ID of the tool call.\n     */\n    id: string;\n\n    /**\n     * A JSON string of the arguments passed to the tool.\n     */\n    arguments: string;\n\n    /**\n     * The name of the tool that was run.\n     */\n    name: string;\n\n    /**\n     * The label of the MCP server running the tool.\n     */\n    server_label: string;\n\n    /**\n     * The type of the item. Always `mcp_call`.\n     */\n    type: 'mcp_call';\n\n    /**\n     * The error from the tool call, if any.\n     */\n    error?: string | null;\n\n    /**\n     * The output from the tool call.\n     */\n    output?: string | null;\n  }\n\n  /**\n   * An internal identifier for an item to reference.\n   */\n  export interface ItemReference {\n    /**\n     * The ID of the item to reference.\n     */\n    id: string;\n\n    /**\n     * The type of item to reference. Always `item_reference`.\n     */\n    type?: 'item_reference' | null;\n  }\n}\n\n/**\n * A list of one or many input items to the model, containing different content\n * types.\n */\nexport type ResponseInputMessageContentList = Array<ResponseInputContent>;\n\nexport interface ResponseInputMessageItem {\n  /**\n   * The unique ID of the message input.\n   */\n  id: string;\n\n  /**\n   * A list of one or many input items to the model, containing different content\n   * types.\n   */\n  content: ResponseInputMessageContentList;\n\n  /**\n   * The role of the message input. One of `user`, `system`, or `developer`.\n   */\n  role: 'user' | 'system' | 'developer';\n\n  /**\n   * The status of item. One of `in_progress`, `completed`, or `incomplete`.\n   * Populated when items are returned via API.\n   */\n  status?: 'in_progress' | 'completed' | 'incomplete';\n\n  /**\n   * The type of the message input. Always set to `message`.\n   */\n  type?: 'message';\n}\n\n/**\n * A text input to the model.\n */\nexport interface ResponseInputText {\n  /**\n   * The text input to the model.\n   */\n  text: string;\n\n  /**\n   * The type of the input item. Always `input_text`.\n   */\n  type: 'input_text';\n}\n\n/**\n * Content item used to generate a response.\n */\nexport type ResponseItem =\n  | ResponseInputMessageItem\n  | ResponseOutputMessage\n  | ResponseFileSearchToolCall\n  | ResponseComputerToolCall\n  | ResponseComputerToolCallOutputItem\n  | ResponseFunctionWebSearch\n  | ResponseFunctionToolCallItem\n  | ResponseFunctionToolCallOutputItem\n  | ResponseItem.ImageGenerationCall\n  | ResponseCodeInterpreterToolCall\n  | ResponseItem.LocalShellCall\n  | ResponseItem.LocalShellCallOutput\n  | ResponseItem.McpListTools\n  | ResponseItem.McpApprovalRequest\n  | ResponseItem.McpApprovalResponse\n  | ResponseItem.McpCall;\n\nexport namespace ResponseItem {\n  /**\n   * An image generation request made by the model.\n   */\n  export interface ImageGenerationCall {\n    /**\n     * The unique ID of the image generation call.\n     */\n    id: string;\n\n    /**\n     * The generated image encoded in base64.\n     */\n    result: string | null;\n\n    /**\n     * The status of the image generation call.\n     */\n    status: 'in_progress' | 'completed' | 'generating' | 'failed';\n\n    /**\n     * The type of the image generation call. Always `image_generation_call`.\n     */\n    type: 'image_generation_call';\n  }\n\n  /**\n   * A tool call to run a command on the local shell.\n   */\n  export interface LocalShellCall {\n    /**\n     * The unique ID of the local shell call.\n     */\n    id: string;\n\n    /**\n     * Execute a shell command on the server.\n     */\n    action: LocalShellCall.Action;\n\n    /**\n     * The unique ID of the local shell tool call generated by the model.\n     */\n    call_id: string;\n\n    /**\n     * The status of the local shell call.\n     */\n    status: 'in_progress' | 'completed' | 'incomplete';\n\n    /**\n     * The type of the local shell call. Always `local_shell_call`.\n     */\n    type: 'local_shell_call';\n  }\n\n  export namespace LocalShellCall {\n    /**\n     * Execute a shell command on the server.\n     */\n    export interface Action {\n      /**\n       * The command to run.\n       */\n      command: Array<string>;\n\n      /**\n       * Environment variables to set for the command.\n       */\n      env: Record<string, string>;\n\n      /**\n       * The type of the local shell action. Always `exec`.\n       */\n      type: 'exec';\n\n      /**\n       * Optional timeout in milliseconds for the command.\n       */\n      timeout_ms?: number | null;\n\n      /**\n       * Optional user to run the command as.\n       */\n      user?: string | null;\n\n      /**\n       * Optional working directory to run the command in.\n       */\n      working_directory?: string | null;\n    }\n  }\n\n  /**\n   * The output of a local shell tool call.\n   */\n  export interface LocalShellCallOutput {\n    /**\n     * The unique ID of the local shell tool call generated by the model.\n     */\n    id: string;\n\n    /**\n     * A JSON string of the output of the local shell tool call.\n     */\n    output: string;\n\n    /**\n     * The type of the local shell tool call output. Always `local_shell_call_output`.\n     */\n    type: 'local_shell_call_output';\n\n    /**\n     * The status of the item. One of `in_progress`, `completed`, or `incomplete`.\n     */\n    status?: 'in_progress' | 'completed' | 'incomplete' | null;\n  }\n\n  /**\n   * A list of tools available on an MCP server.\n   */\n  export interface McpListTools {\n    /**\n     * The unique ID of the list.\n     */\n    id: string;\n\n    /**\n     * The label of the MCP server.\n     */\n    server_label: string;\n\n    /**\n     * The tools available on the server.\n     */\n    tools: Array<McpListTools.Tool>;\n\n    /**\n     * The type of the item. Always `mcp_list_tools`.\n     */\n    type: 'mcp_list_tools';\n\n    /**\n     * Error message if the server could not list tools.\n     */\n    error?: string | null;\n  }\n\n  export namespace McpListTools {\n    /**\n     * A tool available on an MCP server.\n     */\n    export interface Tool {\n      /**\n       * The JSON schema describing the tool's input.\n       */\n      input_schema: unknown;\n\n      /**\n       * The name of the tool.\n       */\n      name: string;\n\n      /**\n       * Additional annotations about the tool.\n       */\n      annotations?: unknown | null;\n\n      /**\n       * The description of the tool.\n       */\n      description?: string | null;\n    }\n  }\n\n  /**\n   * A request for human approval of a tool invocation.\n   */\n  export interface McpApprovalRequest {\n    /**\n     * The unique ID of the approval request.\n     */\n    id: string;\n\n    /**\n     * A JSON string of arguments for the tool.\n     */\n    arguments: string;\n\n    /**\n     * The name of the tool to run.\n     */\n    name: string;\n\n    /**\n     * The label of the MCP server making the request.\n     */\n    server_label: string;\n\n    /**\n     * The type of the item. Always `mcp_approval_request`.\n     */\n    type: 'mcp_approval_request';\n  }\n\n  /**\n   * A response to an MCP approval request.\n   */\n  export interface McpApprovalResponse {\n    /**\n     * The unique ID of the approval response\n     */\n    id: string;\n\n    /**\n     * The ID of the approval request being answered.\n     */\n    approval_request_id: string;\n\n    /**\n     * Whether the request was approved.\n     */\n    approve: boolean;\n\n    /**\n     * The type of the item. Always `mcp_approval_response`.\n     */\n    type: 'mcp_approval_response';\n\n    /**\n     * Optional reason for the decision.\n     */\n    reason?: string | null;\n  }\n\n  /**\n   * An invocation of a tool on an MCP server.\n   */\n  export interface McpCall {\n    /**\n     * The unique ID of the tool call.\n     */\n    id: string;\n\n    /**\n     * A JSON string of the arguments passed to the tool.\n     */\n    arguments: string;\n\n    /**\n     * The name of the tool that was run.\n     */\n    name: string;\n\n    /**\n     * The label of the MCP server running the tool.\n     */\n    server_label: string;\n\n    /**\n     * The type of the item. Always `mcp_call`.\n     */\n    type: 'mcp_call';\n\n    /**\n     * The error from the tool call, if any.\n     */\n    error?: string | null;\n\n    /**\n     * The output from the tool call.\n     */\n    output?: string | null;\n  }\n}\n\n/**\n * Emitted when there is a delta (partial update) to the arguments of an MCP tool\n * call.\n */\nexport interface ResponseMcpCallArgumentsDeltaEvent {\n  /**\n   * The partial update to the arguments for the MCP tool call.\n   */\n  delta: unknown;\n\n  /**\n   * The unique identifier of the MCP tool call item being processed.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response's output array.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.mcp_call.arguments_delta'.\n   */\n  type: 'response.mcp_call.arguments_delta';\n}\n\n/**\n * Emitted when the arguments for an MCP tool call are finalized.\n */\nexport interface ResponseMcpCallArgumentsDoneEvent {\n  /**\n   * The finalized arguments for the MCP tool call.\n   */\n  arguments: unknown;\n\n  /**\n   * The unique identifier of the MCP tool call item being processed.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response's output array.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.mcp_call.arguments_done'.\n   */\n  type: 'response.mcp_call.arguments_done';\n}\n\n/**\n * Emitted when an MCP tool call has completed successfully.\n */\nexport interface ResponseMcpCallCompletedEvent {\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.mcp_call.completed'.\n   */\n  type: 'response.mcp_call.completed';\n}\n\n/**\n * Emitted when an MCP tool call has failed.\n */\nexport interface ResponseMcpCallFailedEvent {\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.mcp_call.failed'.\n   */\n  type: 'response.mcp_call.failed';\n}\n\n/**\n * Emitted when an MCP tool call is in progress.\n */\nexport interface ResponseMcpCallInProgressEvent {\n  /**\n   * The unique identifier of the MCP tool call item being processed.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response's output array.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.mcp_call.in_progress'.\n   */\n  type: 'response.mcp_call.in_progress';\n}\n\n/**\n * Emitted when the list of available MCP tools has been successfully retrieved.\n */\nexport interface ResponseMcpListToolsCompletedEvent {\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.mcp_list_tools.completed'.\n   */\n  type: 'response.mcp_list_tools.completed';\n}\n\n/**\n * Emitted when the attempt to list available MCP tools has failed.\n */\nexport interface ResponseMcpListToolsFailedEvent {\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.mcp_list_tools.failed'.\n   */\n  type: 'response.mcp_list_tools.failed';\n}\n\n/**\n * Emitted when the system is in the process of retrieving the list of available\n * MCP tools.\n */\nexport interface ResponseMcpListToolsInProgressEvent {\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.mcp_list_tools.in_progress'.\n   */\n  type: 'response.mcp_list_tools.in_progress';\n}\n\n/**\n * An audio output from the model.\n */\nexport interface ResponseOutputAudio {\n  /**\n   * Base64-encoded audio data from the model.\n   */\n  data: string;\n\n  /**\n   * The transcript of the audio data from the model.\n   */\n  transcript: string;\n\n  /**\n   * The type of the output audio. Always `output_audio`.\n   */\n  type: 'output_audio';\n}\n\n/**\n * An output message from the model.\n */\nexport type ResponseOutputItem =\n  | ResponseOutputMessage\n  | ResponseFileSearchToolCall\n  | ResponseFunctionToolCall\n  | ResponseFunctionWebSearch\n  | ResponseComputerToolCall\n  | ResponseReasoningItem\n  | ResponseOutputItem.ImageGenerationCall\n  | ResponseCodeInterpreterToolCall\n  | ResponseOutputItem.LocalShellCall\n  | ResponseOutputItem.McpCall\n  | ResponseOutputItem.McpListTools\n  | ResponseOutputItem.McpApprovalRequest;\n\nexport namespace ResponseOutputItem {\n  /**\n   * An image generation request made by the model.\n   */\n  export interface ImageGenerationCall {\n    /**\n     * The unique ID of the image generation call.\n     */\n    id: string;\n\n    /**\n     * The generated image encoded in base64.\n     */\n    result: string | null;\n\n    /**\n     * The status of the image generation call.\n     */\n    status: 'in_progress' | 'completed' | 'generating' | 'failed';\n\n    /**\n     * The type of the image generation call. Always `image_generation_call`.\n     */\n    type: 'image_generation_call';\n  }\n\n  /**\n   * A tool call to run a command on the local shell.\n   */\n  export interface LocalShellCall {\n    /**\n     * The unique ID of the local shell call.\n     */\n    id: string;\n\n    /**\n     * Execute a shell command on the server.\n     */\n    action: LocalShellCall.Action;\n\n    /**\n     * The unique ID of the local shell tool call generated by the model.\n     */\n    call_id: string;\n\n    /**\n     * The status of the local shell call.\n     */\n    status: 'in_progress' | 'completed' | 'incomplete';\n\n    /**\n     * The type of the local shell call. Always `local_shell_call`.\n     */\n    type: 'local_shell_call';\n  }\n\n  export namespace LocalShellCall {\n    /**\n     * Execute a shell command on the server.\n     */\n    export interface Action {\n      /**\n       * The command to run.\n       */\n      command: Array<string>;\n\n      /**\n       * Environment variables to set for the command.\n       */\n      env: Record<string, string>;\n\n      /**\n       * The type of the local shell action. Always `exec`.\n       */\n      type: 'exec';\n\n      /**\n       * Optional timeout in milliseconds for the command.\n       */\n      timeout_ms?: number | null;\n\n      /**\n       * Optional user to run the command as.\n       */\n      user?: string | null;\n\n      /**\n       * Optional working directory to run the command in.\n       */\n      working_directory?: string | null;\n    }\n  }\n\n  /**\n   * An invocation of a tool on an MCP server.\n   */\n  export interface McpCall {\n    /**\n     * The unique ID of the tool call.\n     */\n    id: string;\n\n    /**\n     * A JSON string of the arguments passed to the tool.\n     */\n    arguments: string;\n\n    /**\n     * The name of the tool that was run.\n     */\n    name: string;\n\n    /**\n     * The label of the MCP server running the tool.\n     */\n    server_label: string;\n\n    /**\n     * The type of the item. Always `mcp_call`.\n     */\n    type: 'mcp_call';\n\n    /**\n     * The error from the tool call, if any.\n     */\n    error?: string | null;\n\n    /**\n     * The output from the tool call.\n     */\n    output?: string | null;\n  }\n\n  /**\n   * A list of tools available on an MCP server.\n   */\n  export interface McpListTools {\n    /**\n     * The unique ID of the list.\n     */\n    id: string;\n\n    /**\n     * The label of the MCP server.\n     */\n    server_label: string;\n\n    /**\n     * The tools available on the server.\n     */\n    tools: Array<McpListTools.Tool>;\n\n    /**\n     * The type of the item. Always `mcp_list_tools`.\n     */\n    type: 'mcp_list_tools';\n\n    /**\n     * Error message if the server could not list tools.\n     */\n    error?: string | null;\n  }\n\n  export namespace McpListTools {\n    /**\n     * A tool available on an MCP server.\n     */\n    export interface Tool {\n      /**\n       * The JSON schema describing the tool's input.\n       */\n      input_schema: unknown;\n\n      /**\n       * The name of the tool.\n       */\n      name: string;\n\n      /**\n       * Additional annotations about the tool.\n       */\n      annotations?: unknown | null;\n\n      /**\n       * The description of the tool.\n       */\n      description?: string | null;\n    }\n  }\n\n  /**\n   * A request for human approval of a tool invocation.\n   */\n  export interface McpApprovalRequest {\n    /**\n     * The unique ID of the approval request.\n     */\n    id: string;\n\n    /**\n     * A JSON string of arguments for the tool.\n     */\n    arguments: string;\n\n    /**\n     * The name of the tool to run.\n     */\n    name: string;\n\n    /**\n     * The label of the MCP server making the request.\n     */\n    server_label: string;\n\n    /**\n     * The type of the item. Always `mcp_approval_request`.\n     */\n    type: 'mcp_approval_request';\n  }\n}\n\n/**\n * Emitted when a new output item is added.\n */\nexport interface ResponseOutputItemAddedEvent {\n  /**\n   * The output item that was added.\n   */\n  item: ResponseOutputItem;\n\n  /**\n   * The index of the output item that was added.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.output_item.added`.\n   */\n  type: 'response.output_item.added';\n}\n\n/**\n * Emitted when an output item is marked done.\n */\nexport interface ResponseOutputItemDoneEvent {\n  /**\n   * The output item that was marked done.\n   */\n  item: ResponseOutputItem;\n\n  /**\n   * The index of the output item that was marked done.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.output_item.done`.\n   */\n  type: 'response.output_item.done';\n}\n\n/**\n * An output message from the model.\n */\nexport interface ResponseOutputMessage {\n  /**\n   * The unique ID of the output message.\n   */\n  id: string;\n\n  /**\n   * The content of the output message.\n   */\n  content: Array<ResponseOutputText | ResponseOutputRefusal>;\n\n  /**\n   * The role of the output message. Always `assistant`.\n   */\n  role: 'assistant';\n\n  /**\n   * The status of the message input. One of `in_progress`, `completed`, or\n   * `incomplete`. Populated when input items are returned via API.\n   */\n  status: 'in_progress' | 'completed' | 'incomplete';\n\n  /**\n   * The type of the output message. Always `message`.\n   */\n  type: 'message';\n}\n\n/**\n * A refusal from the model.\n */\nexport interface ResponseOutputRefusal {\n  /**\n   * The refusal explanationfrom the model.\n   */\n  refusal: string;\n\n  /**\n   * The type of the refusal. Always `refusal`.\n   */\n  type: 'refusal';\n}\n\n/**\n * A text output from the model.\n */\nexport interface ResponseOutputText {\n  /**\n   * The annotations of the text output.\n   */\n  annotations: Array<\n    | ResponseOutputText.FileCitation\n    | ResponseOutputText.URLCitation\n    | ResponseOutputText.ContainerFileCitation\n    | ResponseOutputText.FilePath\n  >;\n\n  /**\n   * The text output from the model.\n   */\n  text: string;\n\n  /**\n   * The type of the output text. Always `output_text`.\n   */\n  type: 'output_text';\n\n  logprobs?: Array<ResponseOutputText.Logprob>;\n}\n\nexport namespace ResponseOutputText {\n  /**\n   * A citation to a file.\n   */\n  export interface FileCitation {\n    /**\n     * The ID of the file.\n     */\n    file_id: string;\n\n    /**\n     * The index of the file in the list of files.\n     */\n    index: number;\n\n    /**\n     * The type of the file citation. Always `file_citation`.\n     */\n    type: 'file_citation';\n  }\n\n  /**\n   * A citation for a web resource used to generate a model response.\n   */\n  export interface URLCitation {\n    /**\n     * The index of the last character of the URL citation in the message.\n     */\n    end_index: number;\n\n    /**\n     * The index of the first character of the URL citation in the message.\n     */\n    start_index: number;\n\n    /**\n     * The title of the web resource.\n     */\n    title: string;\n\n    /**\n     * The type of the URL citation. Always `url_citation`.\n     */\n    type: 'url_citation';\n\n    /**\n     * The URL of the web resource.\n     */\n    url: string;\n  }\n\n  /**\n   * A citation for a container file used to generate a model response.\n   */\n  export interface ContainerFileCitation {\n    /**\n     * The ID of the container file.\n     */\n    container_id: string;\n\n    /**\n     * The index of the last character of the container file citation in the message.\n     */\n    end_index: number;\n\n    /**\n     * The ID of the file.\n     */\n    file_id: string;\n\n    /**\n     * The index of the first character of the container file citation in the message.\n     */\n    start_index: number;\n\n    /**\n     * The type of the container file citation. Always `container_file_citation`.\n     */\n    type: 'container_file_citation';\n  }\n\n  /**\n   * A path to a file.\n   */\n  export interface FilePath {\n    /**\n     * The ID of the file.\n     */\n    file_id: string;\n\n    /**\n     * The index of the file in the list of files.\n     */\n    index: number;\n\n    /**\n     * The type of the file path. Always `file_path`.\n     */\n    type: 'file_path';\n  }\n\n  /**\n   * The log probability of a token.\n   */\n  export interface Logprob {\n    token: string;\n\n    bytes: Array<number>;\n\n    logprob: number;\n\n    top_logprobs: Array<Logprob.TopLogprob>;\n  }\n\n  export namespace Logprob {\n    /**\n     * The top log probability of a token.\n     */\n    export interface TopLogprob {\n      token: string;\n\n      bytes: Array<number>;\n\n      logprob: number;\n    }\n  }\n}\n\n/**\n * Emitted when an annotation is added to output text content.\n */\nexport interface ResponseOutputTextAnnotationAddedEvent {\n  /**\n   * The annotation object being added. (See annotation schema for details.)\n   */\n  annotation: unknown;\n\n  /**\n   * The index of the annotation within the content part.\n   */\n  annotation_index: number;\n\n  /**\n   * The index of the content part within the output item.\n   */\n  content_index: number;\n\n  /**\n   * The unique identifier of the item to which the annotation is being added.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response's output array.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.output_text_annotation.added'.\n   */\n  type: 'response.output_text_annotation.added';\n}\n\n/**\n * Reference to a prompt template and its variables.\n * [Learn more](https://platform.openai.com/docs/guides/text?api-mode=responses#reusable-prompts).\n */\nexport interface ResponsePrompt {\n  /**\n   * The unique identifier of the prompt template to use.\n   */\n  id: string;\n\n  /**\n   * Optional map of values to substitute in for variables in your prompt. The\n   * substitution values can either be strings, or other Response input types like\n   * images or files.\n   */\n  variables?: Record<string, string | ResponseInputText | ResponseInputImage | ResponseInputFile> | null;\n\n  /**\n   * Optional version of the prompt template.\n   */\n  version?: string | null;\n}\n\n/**\n * Emitted when a response is queued and waiting to be processed.\n */\nexport interface ResponseQueuedEvent {\n  /**\n   * The full response object that is queued.\n   */\n  response: Response;\n\n  /**\n   * The sequence number for this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.queued'.\n   */\n  type: 'response.queued';\n}\n\n/**\n * Emitted when there is a delta (partial update) to the reasoning content.\n */\nexport interface ResponseReasoningDeltaEvent {\n  /**\n   * The index of the reasoning content part within the output item.\n   */\n  content_index: number;\n\n  /**\n   * The partial update to the reasoning content.\n   */\n  delta: unknown;\n\n  /**\n   * The unique identifier of the item for which reasoning is being updated.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response's output array.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always 'response.reasoning.delta'.\n   */\n  type: 'response.reasoning.delta';\n}\n\n/**\n * Emitted when the reasoning content is finalized for an item.\n */\nexport interface ResponseReasoningDoneEvent {\n  /**\n   * The index of the reasoning content part within the output item.\n   */\n  content_index: number;\n\n  /**\n   * The unique identifier of the item for which reasoning is finalized.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response's output array.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The finalized reasoning text.\n   */\n  text: string;\n\n  /**\n   * The type of the event. Always 'response.reasoning.done'.\n   */\n  type: 'response.reasoning.done';\n}\n\n/**\n * A description of the chain of thought used by a reasoning model while generating\n * a response. Be sure to include these items in your `input` to the Responses API\n * for subsequent turns of a conversation if you are manually\n * [managing context](https://platform.openai.com/docs/guides/conversation-state).\n */\nexport interface ResponseReasoningItem {\n  /**\n   * The unique identifier of the reasoning content.\n   */\n  id: string;\n\n  /**\n   * Reasoning text contents.\n   */\n  summary: Array<ResponseReasoningItem.Summary>;\n\n  /**\n   * The type of the object. Always `reasoning`.\n   */\n  type: 'reasoning';\n\n  /**\n   * The encrypted content of the reasoning item - populated when a response is\n   * generated with `reasoning.encrypted_content` in the `include` parameter.\n   */\n  encrypted_content?: string | null;\n\n  /**\n   * The status of the item. One of `in_progress`, `completed`, or `incomplete`.\n   * Populated when items are returned via API.\n   */\n  status?: 'in_progress' | 'completed' | 'incomplete';\n}\n\nexport namespace ResponseReasoningItem {\n  export interface Summary {\n    /**\n     * A short summary of the reasoning used by the model when generating the response.\n     */\n    text: string;\n\n    /**\n     * The type of the object. Always `summary_text`.\n     */\n    type: 'summary_text';\n  }\n}\n\n/**\n * Emitted when there is a delta (partial update) to the reasoning summary content.\n */\nexport interface ResponseReasoningSummaryDeltaEvent {\n  /**\n   * The partial update to the reasoning summary content.\n   */\n  delta: unknown;\n\n  /**\n   * The unique identifier of the item for which the reasoning summary is being\n   * updated.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response's output array.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The index of the summary part within the output item.\n   */\n  summary_index: number;\n\n  /**\n   * The type of the event. Always 'response.reasoning_summary.delta'.\n   */\n  type: 'response.reasoning_summary.delta';\n}\n\n/**\n * Emitted when the reasoning summary content is finalized for an item.\n */\nexport interface ResponseReasoningSummaryDoneEvent {\n  /**\n   * The unique identifier of the item for which the reasoning summary is finalized.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response's output array.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The index of the summary part within the output item.\n   */\n  summary_index: number;\n\n  /**\n   * The finalized reasoning summary text.\n   */\n  text: string;\n\n  /**\n   * The type of the event. Always 'response.reasoning_summary.done'.\n   */\n  type: 'response.reasoning_summary.done';\n}\n\n/**\n * Emitted when a new reasoning summary part is added.\n */\nexport interface ResponseReasoningSummaryPartAddedEvent {\n  /**\n   * The ID of the item this summary part is associated with.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item this summary part is associated with.\n   */\n  output_index: number;\n\n  /**\n   * The summary part that was added.\n   */\n  part: ResponseReasoningSummaryPartAddedEvent.Part;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The index of the summary part within the reasoning summary.\n   */\n  summary_index: number;\n\n  /**\n   * The type of the event. Always `response.reasoning_summary_part.added`.\n   */\n  type: 'response.reasoning_summary_part.added';\n}\n\nexport namespace ResponseReasoningSummaryPartAddedEvent {\n  /**\n   * The summary part that was added.\n   */\n  export interface Part {\n    /**\n     * The text of the summary part.\n     */\n    text: string;\n\n    /**\n     * The type of the summary part. Always `summary_text`.\n     */\n    type: 'summary_text';\n  }\n}\n\n/**\n * Emitted when a reasoning summary part is completed.\n */\nexport interface ResponseReasoningSummaryPartDoneEvent {\n  /**\n   * The ID of the item this summary part is associated with.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item this summary part is associated with.\n   */\n  output_index: number;\n\n  /**\n   * The completed summary part.\n   */\n  part: ResponseReasoningSummaryPartDoneEvent.Part;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The index of the summary part within the reasoning summary.\n   */\n  summary_index: number;\n\n  /**\n   * The type of the event. Always `response.reasoning_summary_part.done`.\n   */\n  type: 'response.reasoning_summary_part.done';\n}\n\nexport namespace ResponseReasoningSummaryPartDoneEvent {\n  /**\n   * The completed summary part.\n   */\n  export interface Part {\n    /**\n     * The text of the summary part.\n     */\n    text: string;\n\n    /**\n     * The type of the summary part. Always `summary_text`.\n     */\n    type: 'summary_text';\n  }\n}\n\n/**\n * Emitted when a delta is added to a reasoning summary text.\n */\nexport interface ResponseReasoningSummaryTextDeltaEvent {\n  /**\n   * The text delta that was added to the summary.\n   */\n  delta: string;\n\n  /**\n   * The ID of the item this summary text delta is associated with.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item this summary text delta is associated with.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The index of the summary part within the reasoning summary.\n   */\n  summary_index: number;\n\n  /**\n   * The type of the event. Always `response.reasoning_summary_text.delta`.\n   */\n  type: 'response.reasoning_summary_text.delta';\n}\n\n/**\n * Emitted when a reasoning summary text is completed.\n */\nexport interface ResponseReasoningSummaryTextDoneEvent {\n  /**\n   * The ID of the item this summary text is associated with.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item this summary text is associated with.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The index of the summary part within the reasoning summary.\n   */\n  summary_index: number;\n\n  /**\n   * The full text of the completed reasoning summary.\n   */\n  text: string;\n\n  /**\n   * The type of the event. Always `response.reasoning_summary_text.done`.\n   */\n  type: 'response.reasoning_summary_text.done';\n}\n\n/**\n * Emitted when there is a partial refusal text.\n */\nexport interface ResponseRefusalDeltaEvent {\n  /**\n   * The index of the content part that the refusal text is added to.\n   */\n  content_index: number;\n\n  /**\n   * The refusal text that is added.\n   */\n  delta: string;\n\n  /**\n   * The ID of the output item that the refusal text is added to.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the refusal text is added to.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.refusal.delta`.\n   */\n  type: 'response.refusal.delta';\n}\n\n/**\n * Emitted when refusal text is finalized.\n */\nexport interface ResponseRefusalDoneEvent {\n  /**\n   * The index of the content part that the refusal text is finalized.\n   */\n  content_index: number;\n\n  /**\n   * The ID of the output item that the refusal text is finalized.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the refusal text is finalized.\n   */\n  output_index: number;\n\n  /**\n   * The refusal text that is finalized.\n   */\n  refusal: string;\n\n  /**\n   * The sequence number of this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.refusal.done`.\n   */\n  type: 'response.refusal.done';\n}\n\n/**\n * The status of the response generation. One of `completed`, `failed`,\n * `in_progress`, `cancelled`, `queued`, or `incomplete`.\n */\nexport type ResponseStatus = 'completed' | 'failed' | 'in_progress' | 'cancelled' | 'queued' | 'incomplete';\n\n/**\n * Emitted when there is a partial audio response.\n */\nexport type ResponseStreamEvent =\n  | ResponseAudioDeltaEvent\n  | ResponseAudioDoneEvent\n  | ResponseAudioTranscriptDeltaEvent\n  | ResponseAudioTranscriptDoneEvent\n  | ResponseCodeInterpreterCallCodeDeltaEvent\n  | ResponseCodeInterpreterCallCodeDoneEvent\n  | ResponseCodeInterpreterCallCompletedEvent\n  | ResponseCodeInterpreterCallInProgressEvent\n  | ResponseCodeInterpreterCallInterpretingEvent\n  | ResponseCompletedEvent\n  | ResponseContentPartAddedEvent\n  | ResponseContentPartDoneEvent\n  | ResponseCreatedEvent\n  | ResponseErrorEvent\n  | ResponseFileSearchCallCompletedEvent\n  | ResponseFileSearchCallInProgressEvent\n  | ResponseFileSearchCallSearchingEvent\n  | ResponseFunctionCallArgumentsDeltaEvent\n  | ResponseFunctionCallArgumentsDoneEvent\n  | ResponseInProgressEvent\n  | ResponseFailedEvent\n  | ResponseIncompleteEvent\n  | ResponseOutputItemAddedEvent\n  | ResponseOutputItemDoneEvent\n  | ResponseReasoningSummaryPartAddedEvent\n  | ResponseReasoningSummaryPartDoneEvent\n  | ResponseReasoningSummaryTextDeltaEvent\n  | ResponseReasoningSummaryTextDoneEvent\n  | ResponseRefusalDeltaEvent\n  | ResponseRefusalDoneEvent\n  | ResponseTextDeltaEvent\n  | ResponseTextDoneEvent\n  | ResponseWebSearchCallCompletedEvent\n  | ResponseWebSearchCallInProgressEvent\n  | ResponseWebSearchCallSearchingEvent\n  | ResponseImageGenCallCompletedEvent\n  | ResponseImageGenCallGeneratingEvent\n  | ResponseImageGenCallInProgressEvent\n  | ResponseImageGenCallPartialImageEvent\n  | ResponseMcpCallArgumentsDeltaEvent\n  | ResponseMcpCallArgumentsDoneEvent\n  | ResponseMcpCallCompletedEvent\n  | ResponseMcpCallFailedEvent\n  | ResponseMcpCallInProgressEvent\n  | ResponseMcpListToolsCompletedEvent\n  | ResponseMcpListToolsFailedEvent\n  | ResponseMcpListToolsInProgressEvent\n  | ResponseOutputTextAnnotationAddedEvent\n  | ResponseQueuedEvent\n  | ResponseReasoningDeltaEvent\n  | ResponseReasoningDoneEvent\n  | ResponseReasoningSummaryDeltaEvent\n  | ResponseReasoningSummaryDoneEvent;\n\n/**\n * Configuration options for a text response from the model. Can be plain text or\n * structured JSON data. Learn more:\n *\n * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n */\nexport interface ResponseTextConfig {\n  /**\n   * An object specifying the format that the model must output.\n   *\n   * Configuring `{ \"type\": \"json_schema\" }` enables Structured Outputs, which\n   * ensures the model will match your supplied JSON schema. Learn more in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * The default format is `{ \"type\": \"text\" }` with no additional options.\n   *\n   * **Not recommended for gpt-4o and newer models:**\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables the older JSON mode, which\n   * ensures the message the model generates is valid JSON. Using `json_schema` is\n   * preferred for models that support it.\n   */\n  format?: ResponseFormatTextConfig;\n}\n\n/**\n * Emitted when there is an additional text delta.\n */\nexport interface ResponseTextDeltaEvent {\n  /**\n   * The index of the content part that the text delta was added to.\n   */\n  content_index: number;\n\n  /**\n   * The text delta that was added.\n   */\n  delta: string;\n\n  /**\n   * The ID of the output item that the text delta was added to.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the text delta was added to.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number for this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.output_text.delta`.\n   */\n  type: 'response.output_text.delta';\n}\n\n/**\n * Emitted when text content is finalized.\n */\nexport interface ResponseTextDoneEvent {\n  /**\n   * The index of the content part that the text content is finalized.\n   */\n  content_index: number;\n\n  /**\n   * The ID of the output item that the text content is finalized.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the text content is finalized.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number for this event.\n   */\n  sequence_number: number;\n\n  /**\n   * The text content that is finalized.\n   */\n  text: string;\n\n  /**\n   * The type of the event. Always `response.output_text.done`.\n   */\n  type: 'response.output_text.done';\n}\n\n/**\n * Represents token usage details including input tokens, output tokens, a\n * breakdown of output tokens, and the total tokens used.\n */\nexport interface ResponseUsage {\n  /**\n   * The number of input tokens.\n   */\n  input_tokens: number;\n\n  /**\n   * A detailed breakdown of the input tokens.\n   */\n  input_tokens_details: ResponseUsage.InputTokensDetails;\n\n  /**\n   * The number of output tokens.\n   */\n  output_tokens: number;\n\n  /**\n   * A detailed breakdown of the output tokens.\n   */\n  output_tokens_details: ResponseUsage.OutputTokensDetails;\n\n  /**\n   * The total number of tokens used.\n   */\n  total_tokens: number;\n}\n\nexport namespace ResponseUsage {\n  /**\n   * A detailed breakdown of the input tokens.\n   */\n  export interface InputTokensDetails {\n    /**\n     * The number of tokens that were retrieved from the cache.\n     * [More on prompt caching](https://platform.openai.com/docs/guides/prompt-caching).\n     */\n    cached_tokens: number;\n  }\n\n  /**\n   * A detailed breakdown of the output tokens.\n   */\n  export interface OutputTokensDetails {\n    /**\n     * The number of reasoning tokens.\n     */\n    reasoning_tokens: number;\n  }\n}\n\n/**\n * Emitted when a web search call is completed.\n */\nexport interface ResponseWebSearchCallCompletedEvent {\n  /**\n   * Unique ID for the output item associated with the web search call.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the web search call is associated with.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of the web search call being processed.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.web_search_call.completed`.\n   */\n  type: 'response.web_search_call.completed';\n}\n\n/**\n * Emitted when a web search call is initiated.\n */\nexport interface ResponseWebSearchCallInProgressEvent {\n  /**\n   * Unique ID for the output item associated with the web search call.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the web search call is associated with.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of the web search call being processed.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.web_search_call.in_progress`.\n   */\n  type: 'response.web_search_call.in_progress';\n}\n\n/**\n * Emitted when a web search call is executing.\n */\nexport interface ResponseWebSearchCallSearchingEvent {\n  /**\n   * Unique ID for the output item associated with the web search call.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item that the web search call is associated with.\n   */\n  output_index: number;\n\n  /**\n   * The sequence number of the web search call being processed.\n   */\n  sequence_number: number;\n\n  /**\n   * The type of the event. Always `response.web_search_call.searching`.\n   */\n  type: 'response.web_search_call.searching';\n}\n\n/**\n * A tool that can be used to generate a response.\n */\nexport type Tool =\n  | FunctionTool\n  | FileSearchTool\n  | WebSearchTool\n  | ComputerTool\n  | Tool.Mcp\n  | Tool.CodeInterpreter\n  | Tool.ImageGeneration\n  | Tool.LocalShell;\n\nexport namespace Tool {\n  /**\n   * Give the model access to additional tools via remote Model Context Protocol\n   * (MCP) servers.\n   * [Learn more about MCP](https://platform.openai.com/docs/guides/tools-remote-mcp).\n   */\n  export interface Mcp {\n    /**\n     * A label for this MCP server, used to identify it in tool calls.\n     */\n    server_label: string;\n\n    /**\n     * The URL for the MCP server.\n     */\n    server_url: string;\n\n    /**\n     * The type of the MCP tool. Always `mcp`.\n     */\n    type: 'mcp';\n\n    /**\n     * List of allowed tool names or a filter object.\n     */\n    allowed_tools?: Array<string> | Mcp.McpAllowedToolsFilter | null;\n\n    /**\n     * Optional HTTP headers to send to the MCP server. Use for authentication or other\n     * purposes.\n     */\n    headers?: Record<string, string> | null;\n\n    /**\n     * Specify which of the MCP server's tools require approval.\n     */\n    require_approval?: Mcp.McpToolApprovalFilter | 'always' | 'never' | null;\n  }\n\n  export namespace Mcp {\n    /**\n     * A filter object to specify which tools are allowed.\n     */\n    export interface McpAllowedToolsFilter {\n      /**\n       * List of allowed tool names.\n       */\n      tool_names?: Array<string>;\n    }\n\n    export interface McpToolApprovalFilter {\n      /**\n       * A list of tools that always require approval.\n       */\n      always?: McpToolApprovalFilter.Always;\n\n      /**\n       * A list of tools that never require approval.\n       */\n      never?: McpToolApprovalFilter.Never;\n    }\n\n    export namespace McpToolApprovalFilter {\n      /**\n       * A list of tools that always require approval.\n       */\n      export interface Always {\n        /**\n         * List of tools that require approval.\n         */\n        tool_names?: Array<string>;\n      }\n\n      /**\n       * A list of tools that never require approval.\n       */\n      export interface Never {\n        /**\n         * List of tools that do not require approval.\n         */\n        tool_names?: Array<string>;\n      }\n    }\n  }\n\n  /**\n   * A tool that runs Python code to help generate a response to a prompt.\n   */\n  export interface CodeInterpreter {\n    /**\n     * The code interpreter container. Can be a container ID or an object that\n     * specifies uploaded file IDs to make available to your code.\n     */\n    container: string | CodeInterpreter.CodeInterpreterToolAuto;\n\n    /**\n     * The type of the code interpreter tool. Always `code_interpreter`.\n     */\n    type: 'code_interpreter';\n  }\n\n  export namespace CodeInterpreter {\n    /**\n     * Configuration for a code interpreter container. Optionally specify the IDs of\n     * the files to run the code on.\n     */\n    export interface CodeInterpreterToolAuto {\n      /**\n       * Always `auto`.\n       */\n      type: 'auto';\n\n      /**\n       * An optional list of uploaded files to make available to your code.\n       */\n      file_ids?: Array<string>;\n    }\n  }\n\n  /**\n   * A tool that generates images using a model like `gpt-image-1`.\n   */\n  export interface ImageGeneration {\n    /**\n     * The type of the image generation tool. Always `image_generation`.\n     */\n    type: 'image_generation';\n\n    /**\n     * Background type for the generated image. One of `transparent`, `opaque`, or\n     * `auto`. Default: `auto`.\n     */\n    background?: 'transparent' | 'opaque' | 'auto';\n\n    /**\n     * Optional mask for inpainting. Contains `image_url` (string, optional) and\n     * `file_id` (string, optional).\n     */\n    input_image_mask?: ImageGeneration.InputImageMask;\n\n    /**\n     * The image generation model to use. Default: `gpt-image-1`.\n     */\n    model?: 'gpt-image-1';\n\n    /**\n     * Moderation level for the generated image. Default: `auto`.\n     */\n    moderation?: 'auto' | 'low';\n\n    /**\n     * Compression level for the output image. Default: 100.\n     */\n    output_compression?: number;\n\n    /**\n     * The output format of the generated image. One of `png`, `webp`, or `jpeg`.\n     * Default: `png`.\n     */\n    output_format?: 'png' | 'webp' | 'jpeg';\n\n    /**\n     * Number of partial images to generate in streaming mode, from 0 (default value)\n     * to 3.\n     */\n    partial_images?: number;\n\n    /**\n     * The quality of the generated image. One of `low`, `medium`, `high`, or `auto`.\n     * Default: `auto`.\n     */\n    quality?: 'low' | 'medium' | 'high' | 'auto';\n\n    /**\n     * The size of the generated image. One of `1024x1024`, `1024x1536`, `1536x1024`,\n     * or `auto`. Default: `auto`.\n     */\n    size?: '1024x1024' | '1024x1536' | '1536x1024' | 'auto';\n  }\n\n  export namespace ImageGeneration {\n    /**\n     * Optional mask for inpainting. Contains `image_url` (string, optional) and\n     * `file_id` (string, optional).\n     */\n    export interface InputImageMask {\n      /**\n       * File ID for the mask image.\n       */\n      file_id?: string;\n\n      /**\n       * Base64-encoded mask image.\n       */\n      image_url?: string;\n    }\n  }\n\n  /**\n   * A tool that allows the model to execute shell commands in a local environment.\n   */\n  export interface LocalShell {\n    /**\n     * The type of the local shell tool. Always `local_shell`.\n     */\n    type: 'local_shell';\n  }\n}\n\n/**\n * Use this option to force the model to call a specific function.\n */\nexport interface ToolChoiceFunction {\n  /**\n   * The name of the function to call.\n   */\n  name: string;\n\n  /**\n   * For function calling, the type is always `function`.\n   */\n  type: 'function';\n}\n\n/**\n * Controls which (if any) tool is called by the model.\n *\n * `none` means the model will not call any tool and instead generates a message.\n *\n * `auto` means the model can pick between generating a message or calling one or\n * more tools.\n *\n * `required` means the model must call one or more tools.\n */\nexport type ToolChoiceOptions = 'none' | 'auto' | 'required';\n\n/**\n * Indicates that the model should use a built-in tool to generate a response.\n * [Learn more about built-in tools](https://platform.openai.com/docs/guides/tools).\n */\nexport interface ToolChoiceTypes {\n  /**\n   * The type of hosted tool the model should to use. Learn more about\n   * [built-in tools](https://platform.openai.com/docs/guides/tools).\n   *\n   * Allowed values are:\n   *\n   * - `file_search`\n   * - `web_search_preview`\n   * - `computer_use_preview`\n   * - `code_interpreter`\n   * - `mcp`\n   * - `image_generation`\n   */\n  type:\n    | 'file_search'\n    | 'web_search_preview'\n    | 'computer_use_preview'\n    | 'web_search_preview_2025_03_11'\n    | 'image_generation'\n    | 'code_interpreter'\n    | 'mcp';\n}\n\n/**\n * This tool searches the web for relevant results to use in a response. Learn more\n * about the\n * [web search tool](https://platform.openai.com/docs/guides/tools-web-search).\n */\nexport interface WebSearchTool {\n  /**\n   * The type of the web search tool. One of `web_search_preview` or\n   * `web_search_preview_2025_03_11`.\n   */\n  type: 'web_search_preview' | 'web_search_preview_2025_03_11';\n\n  /**\n   * High level guidance for the amount of context window space to use for the\n   * search. One of `low`, `medium`, or `high`. `medium` is the default.\n   */\n  search_context_size?: 'low' | 'medium' | 'high';\n\n  /**\n   * The user's location.\n   */\n  user_location?: WebSearchTool.UserLocation | null;\n}\n\nexport namespace WebSearchTool {\n  /**\n   * The user's location.\n   */\n  export interface UserLocation {\n    /**\n     * The type of location approximation. Always `approximate`.\n     */\n    type: 'approximate';\n\n    /**\n     * Free text input for the city of the user, e.g. `San Francisco`.\n     */\n    city?: string | null;\n\n    /**\n     * The two-letter [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1) of\n     * the user, e.g. `US`.\n     */\n    country?: string | null;\n\n    /**\n     * Free text input for the region of the user, e.g. `California`.\n     */\n    region?: string | null;\n\n    /**\n     * The [IANA timezone](https://timeapi.io/documentation/iana-timezones) of the\n     * user, e.g. `America/Los_Angeles`.\n     */\n    timezone?: string | null;\n  }\n}\n\nexport type ResponseCreateParams = ResponseCreateParamsNonStreaming | ResponseCreateParamsStreaming;\n\nexport interface ResponseCreateParamsBase {\n  /**\n   * Text, image, or file inputs to the model, used to generate a response.\n   *\n   * Learn more:\n   *\n   * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n   * - [Image inputs](https://platform.openai.com/docs/guides/images)\n   * - [File inputs](https://platform.openai.com/docs/guides/pdf-files)\n   * - [Conversation state](https://platform.openai.com/docs/guides/conversation-state)\n   * - [Function calling](https://platform.openai.com/docs/guides/function-calling)\n   */\n  input: string | ResponseInput;\n\n  /**\n   * Model ID used to generate the response, like `gpt-4o` or `o3`. OpenAI offers a\n   * wide range of models with different capabilities, performance characteristics,\n   * and price points. Refer to the\n   * [model guide](https://platform.openai.com/docs/models) to browse and compare\n   * available models.\n   */\n  model: Shared.ResponsesModel;\n\n  /**\n   * Whether to run the model response in the background.\n   * [Learn more](https://platform.openai.com/docs/guides/background).\n   */\n  background?: boolean | null;\n\n  /**\n   * Specify additional output data to include in the model response. Currently\n   * supported values are:\n   *\n   * - `file_search_call.results`: Include the search results of the file search tool\n   *   call.\n   * - `message.input_image.image_url`: Include image urls from the input message.\n   * - `computer_call_output.output.image_url`: Include image urls from the computer\n   *   call output.\n   * - `reasoning.encrypted_content`: Includes an encrypted version of reasoning\n   *   tokens in reasoning item outputs. This enables reasoning items to be used in\n   *   multi-turn conversations when using the Responses API statelessly (like when\n   *   the `store` parameter is set to `false`, or when an organization is enrolled\n   *   in the zero data retention program).\n   * - `code_interpreter_call.outputs`: Includes the outputs of python code execution\n   *   in code interpreter tool call items.\n   */\n  include?: Array<ResponseIncludable> | null;\n\n  /**\n   * A system (or developer) message inserted into the model's context.\n   *\n   * When using along with `previous_response_id`, the instructions from a previous\n   * response will not be carried over to the next response. This makes it simple to\n   * swap out system (or developer) messages in new responses.\n   */\n  instructions?: string | null;\n\n  /**\n   * An upper bound for the number of tokens that can be generated for a response,\n   * including visible output tokens and\n   * [reasoning tokens](https://platform.openai.com/docs/guides/reasoning).\n   */\n  max_output_tokens?: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * Whether to allow the model to run tool calls in parallel.\n   */\n  parallel_tool_calls?: boolean | null;\n\n  /**\n   * The unique ID of the previous response to the model. Use this to create\n   * multi-turn conversations. Learn more about\n   * [conversation state](https://platform.openai.com/docs/guides/conversation-state).\n   */\n  previous_response_id?: string | null;\n\n  /**\n   * Reference to a prompt template and its variables.\n   * [Learn more](https://platform.openai.com/docs/guides/text?api-mode=responses#reusable-prompts).\n   */\n  prompt?: ResponsePrompt | null;\n\n  /**\n   * **o-series models only**\n   *\n   * Configuration options for\n   * [reasoning models](https://platform.openai.com/docs/guides/reasoning).\n   */\n  reasoning?: Shared.Reasoning | null;\n\n  /**\n   * Specifies the latency tier to use for processing the request. This parameter is\n   * relevant for customers subscribed to the scale tier service:\n   *\n   * - If set to 'auto', and the Project is Scale tier enabled, the system will\n   *   utilize scale tier credits until they are exhausted.\n   * - If set to 'auto', and the Project is not Scale tier enabled, the request will\n   *   be processed using the default service tier with a lower uptime SLA and no\n   *   latency guarantee.\n   * - If set to 'default', the request will be processed using the default service\n   *   tier with a lower uptime SLA and no latency guarantee.\n   * - If set to 'flex', the request will be processed with the Flex Processing\n   *   service tier.\n   *   [Learn more](https://platform.openai.com/docs/guides/flex-processing).\n   * - When not set, the default behavior is 'auto'.\n   *\n   * When this parameter is set, the response body will include the `service_tier`\n   * utilized.\n   */\n  service_tier?: 'auto' | 'default' | 'flex' | 'scale' | null;\n\n  /**\n   * Whether to store the generated model response for later retrieval via API.\n   */\n  store?: boolean | null;\n\n  /**\n   * If set to true, the model response data will be streamed to the client as it is\n   * generated using\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\n   * See the\n   * [Streaming section below](https://platform.openai.com/docs/api-reference/responses-streaming)\n   * for more information.\n   */\n  stream?: boolean | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic. We generally recommend altering this or `top_p` but\n   * not both.\n   */\n  temperature?: number | null;\n\n  /**\n   * Configuration options for a text response from the model. Can be plain text or\n   * structured JSON data. Learn more:\n   *\n   * - [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n   * - [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n   */\n  text?: ResponseTextConfig;\n\n  /**\n   * How the model should select which tool (or tools) to use when generating a\n   * response. See the `tools` parameter to see how to specify which tools the model\n   * can call.\n   */\n  tool_choice?: ToolChoiceOptions | ToolChoiceTypes | ToolChoiceFunction;\n\n  /**\n   * An array of tools the model may call while generating a response. You can\n   * specify which tool to use by setting the `tool_choice` parameter.\n   *\n   * The two categories of tools you can provide the model are:\n   *\n   * - **Built-in tools**: Tools that are provided by OpenAI that extend the model's\n   *   capabilities, like\n   *   [web search](https://platform.openai.com/docs/guides/tools-web-search) or\n   *   [file search](https://platform.openai.com/docs/guides/tools-file-search).\n   *   Learn more about\n   *   [built-in tools](https://platform.openai.com/docs/guides/tools).\n   * - **Function calls (custom tools)**: Functions that are defined by you, enabling\n   *   the model to call your own code. Learn more about\n   *   [function calling](https://platform.openai.com/docs/guides/function-calling).\n   */\n  tools?: Array<Tool>;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or `temperature` but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * The truncation strategy to use for the model response.\n   *\n   * - `auto`: If the context of this response and previous ones exceeds the model's\n   *   context window size, the model will truncate the response to fit the context\n   *   window by dropping input items in the middle of the conversation.\n   * - `disabled` (default): If a model response will exceed the context window size\n   *   for a model, the request will fail with a 400 error.\n   */\n  truncation?: 'auto' | 'disabled' | null;\n\n  /**\n   * A stable identifier for your end-users. Used to boost cache hit rates by better\n   * bucketing similar requests and to help OpenAI detect and prevent abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport namespace ResponseCreateParams {\n  export type ResponseCreateParamsNonStreaming = ResponsesAPI.ResponseCreateParamsNonStreaming;\n  export type ResponseCreateParamsStreaming = ResponsesAPI.ResponseCreateParamsStreaming;\n}\n\nexport interface ResponseCreateParamsNonStreaming extends ResponseCreateParamsBase {\n  /**\n   * If set to true, the model response data will be streamed to the client as it is\n   * generated using\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\n   * See the\n   * [Streaming section below](https://platform.openai.com/docs/api-reference/responses-streaming)\n   * for more information.\n   */\n  stream?: false | null;\n}\n\nexport interface ResponseCreateParamsStreaming extends ResponseCreateParamsBase {\n  /**\n   * If set to true, the model response data will be streamed to the client as it is\n   * generated using\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\n   * See the\n   * [Streaming section below](https://platform.openai.com/docs/api-reference/responses-streaming)\n   * for more information.\n   */\n  stream: true;\n}\n\nexport type ResponseRetrieveParams = ResponseRetrieveParamsNonStreaming | ResponseRetrieveParamsStreaming;\n\nexport interface ResponseRetrieveParamsBase {\n  /**\n   * Additional fields to include in the response. See the `include` parameter for\n   * Response creation above for more information.\n   */\n  include?: Array<ResponseIncludable>;\n\n  /**\n   * The sequence number of the event after which to start streaming.\n   */\n  starting_after?: number;\n\n  /**\n   * If set to true, the model response data will be streamed to the client as it is\n   * generated using\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\n   * See the\n   * [Streaming section below](https://platform.openai.com/docs/api-reference/responses-streaming)\n   * for more information.\n   */\n  stream?: boolean;\n}\n\nexport namespace ResponseRetrieveParams {\n  export type ResponseRetrieveParamsNonStreaming = ResponsesAPI.ResponseRetrieveParamsNonStreaming;\n  export type ResponseRetrieveParamsStreaming = ResponsesAPI.ResponseRetrieveParamsStreaming;\n}\n\nexport interface ResponseRetrieveParamsNonStreaming extends ResponseRetrieveParamsBase {\n  /**\n   * If set to true, the model response data will be streamed to the client as it is\n   * generated using\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\n   * See the\n   * [Streaming section below](https://platform.openai.com/docs/api-reference/responses-streaming)\n   * for more information.\n   */\n  stream?: false;\n}\n\nexport interface ResponseRetrieveParamsStreaming extends ResponseRetrieveParamsBase {\n  /**\n   * If set to true, the model response data will be streamed to the client as it is\n   * generated using\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\n   * See the\n   * [Streaming section below](https://platform.openai.com/docs/api-reference/responses-streaming)\n   * for more information.\n   */\n  stream: true;\n}\n\nResponses.InputItems = InputItems;\n\nexport declare namespace Responses {\n  export {\n    type ComputerTool as ComputerTool,\n    type EasyInputMessage as EasyInputMessage,\n    type FileSearchTool as FileSearchTool,\n    type FunctionTool as FunctionTool,\n    type Response as Response,\n    type ResponseAudioDeltaEvent as ResponseAudioDeltaEvent,\n    type ResponseAudioDoneEvent as ResponseAudioDoneEvent,\n    type ResponseAudioTranscriptDeltaEvent as ResponseAudioTranscriptDeltaEvent,\n    type ResponseAudioTranscriptDoneEvent as ResponseAudioTranscriptDoneEvent,\n    type ResponseCodeInterpreterCallCodeDeltaEvent as ResponseCodeInterpreterCallCodeDeltaEvent,\n    type ResponseCodeInterpreterCallCodeDoneEvent as ResponseCodeInterpreterCallCodeDoneEvent,\n    type ResponseCodeInterpreterCallCompletedEvent as ResponseCodeInterpreterCallCompletedEvent,\n    type ResponseCodeInterpreterCallInProgressEvent as ResponseCodeInterpreterCallInProgressEvent,\n    type ResponseCodeInterpreterCallInterpretingEvent as ResponseCodeInterpreterCallInterpretingEvent,\n    type ResponseCodeInterpreterToolCall as ResponseCodeInterpreterToolCall,\n    type ResponseCompletedEvent as ResponseCompletedEvent,\n    type ResponseComputerToolCall as ResponseComputerToolCall,\n    type ResponseComputerToolCallOutputItem as ResponseComputerToolCallOutputItem,\n    type ResponseComputerToolCallOutputScreenshot as ResponseComputerToolCallOutputScreenshot,\n    type ResponseContent as ResponseContent,\n    type ResponseContentPartAddedEvent as ResponseContentPartAddedEvent,\n    type ResponseContentPartDoneEvent as ResponseContentPartDoneEvent,\n    type ResponseCreatedEvent as ResponseCreatedEvent,\n    type ResponseError as ResponseError,\n    type ResponseErrorEvent as ResponseErrorEvent,\n    type ResponseFailedEvent as ResponseFailedEvent,\n    type ResponseFileSearchCallCompletedEvent as ResponseFileSearchCallCompletedEvent,\n    type ResponseFileSearchCallInProgressEvent as ResponseFileSearchCallInProgressEvent,\n    type ResponseFileSearchCallSearchingEvent as ResponseFileSearchCallSearchingEvent,\n    type ResponseFileSearchToolCall as ResponseFileSearchToolCall,\n    type ResponseFormatTextConfig as ResponseFormatTextConfig,\n    type ResponseFormatTextJSONSchemaConfig as ResponseFormatTextJSONSchemaConfig,\n    type ResponseFunctionCallArgumentsDeltaEvent as ResponseFunctionCallArgumentsDeltaEvent,\n    type ResponseFunctionCallArgumentsDoneEvent as ResponseFunctionCallArgumentsDoneEvent,\n    type ResponseFunctionToolCall as ResponseFunctionToolCall,\n    type ResponseFunctionToolCallItem as ResponseFunctionToolCallItem,\n    type ResponseFunctionToolCallOutputItem as ResponseFunctionToolCallOutputItem,\n    type ResponseFunctionWebSearch as ResponseFunctionWebSearch,\n    type ResponseImageGenCallCompletedEvent as ResponseImageGenCallCompletedEvent,\n    type ResponseImageGenCallGeneratingEvent as ResponseImageGenCallGeneratingEvent,\n    type ResponseImageGenCallInProgressEvent as ResponseImageGenCallInProgressEvent,\n    type ResponseImageGenCallPartialImageEvent as ResponseImageGenCallPartialImageEvent,\n    type ResponseInProgressEvent as ResponseInProgressEvent,\n    type ResponseIncludable as ResponseIncludable,\n    type ResponseIncompleteEvent as ResponseIncompleteEvent,\n    type ResponseInput as ResponseInput,\n    type ResponseInputAudio as ResponseInputAudio,\n    type ResponseInputContent as ResponseInputContent,\n    type ResponseInputFile as ResponseInputFile,\n    type ResponseInputImage as ResponseInputImage,\n    type ResponseInputItem as ResponseInputItem,\n    type ResponseInputMessageContentList as ResponseInputMessageContentList,\n    type ResponseInputMessageItem as ResponseInputMessageItem,\n    type ResponseInputText as ResponseInputText,\n    type ResponseItem as ResponseItem,\n    type ResponseMcpCallArgumentsDeltaEvent as ResponseMcpCallArgumentsDeltaEvent,\n    type ResponseMcpCallArgumentsDoneEvent as ResponseMcpCallArgumentsDoneEvent,\n    type ResponseMcpCallCompletedEvent as ResponseMcpCallCompletedEvent,\n    type ResponseMcpCallFailedEvent as ResponseMcpCallFailedEvent,\n    type ResponseMcpCallInProgressEvent as ResponseMcpCallInProgressEvent,\n    type ResponseMcpListToolsCompletedEvent as ResponseMcpListToolsCompletedEvent,\n    type ResponseMcpListToolsFailedEvent as ResponseMcpListToolsFailedEvent,\n    type ResponseMcpListToolsInProgressEvent as ResponseMcpListToolsInProgressEvent,\n    type ResponseOutputAudio as ResponseOutputAudio,\n    type ResponseOutputItem as ResponseOutputItem,\n    type ResponseOutputItemAddedEvent as ResponseOutputItemAddedEvent,\n    type ResponseOutputItemDoneEvent as ResponseOutputItemDoneEvent,\n    type ResponseOutputMessage as ResponseOutputMessage,\n    type ResponseOutputRefusal as ResponseOutputRefusal,\n    type ResponseOutputText as ResponseOutputText,\n    type ResponseOutputTextAnnotationAddedEvent as ResponseOutputTextAnnotationAddedEvent,\n    type ResponsePrompt as ResponsePrompt,\n    type ResponseQueuedEvent as ResponseQueuedEvent,\n    type ResponseReasoningDeltaEvent as ResponseReasoningDeltaEvent,\n    type ResponseReasoningDoneEvent as ResponseReasoningDoneEvent,\n    type ResponseReasoningItem as ResponseReasoningItem,\n    type ResponseReasoningSummaryDeltaEvent as ResponseReasoningSummaryDeltaEvent,\n    type ResponseReasoningSummaryDoneEvent as ResponseReasoningSummaryDoneEvent,\n    type ResponseReasoningSummaryPartAddedEvent as ResponseReasoningSummaryPartAddedEvent,\n    type ResponseReasoningSummaryPartDoneEvent as ResponseReasoningSummaryPartDoneEvent,\n    type ResponseReasoningSummaryTextDeltaEvent as ResponseReasoningSummaryTextDeltaEvent,\n    type ResponseReasoningSummaryTextDoneEvent as ResponseReasoningSummaryTextDoneEvent,\n    type ResponseRefusalDeltaEvent as ResponseRefusalDeltaEvent,\n    type ResponseRefusalDoneEvent as ResponseRefusalDoneEvent,\n    type ResponseStatus as ResponseStatus,\n    type ResponseStreamEvent as ResponseStreamEvent,\n    type ResponseTextConfig as ResponseTextConfig,\n    type ResponseTextDeltaEvent as ResponseTextDeltaEvent,\n    type ResponseTextDoneEvent as ResponseTextDoneEvent,\n    type ResponseUsage as ResponseUsage,\n    type ResponseWebSearchCallCompletedEvent as ResponseWebSearchCallCompletedEvent,\n    type ResponseWebSearchCallInProgressEvent as ResponseWebSearchCallInProgressEvent,\n    type ResponseWebSearchCallSearchingEvent as ResponseWebSearchCallSearchingEvent,\n    type Tool as Tool,\n    type ToolChoiceFunction as ToolChoiceFunction,\n    type ToolChoiceOptions as ToolChoiceOptions,\n    type ToolChoiceTypes as ToolChoiceTypes,\n    type WebSearchTool as WebSearchTool,\n    type ResponseCreateParams as ResponseCreateParams,\n    type ResponseCreateParamsNonStreaming as ResponseCreateParamsNonStreaming,\n    type ResponseCreateParamsStreaming as ResponseCreateParamsStreaming,\n    type ResponseRetrieveParams as ResponseRetrieveParams,\n    type ResponseRetrieveParamsNonStreaming as ResponseRetrieveParamsNonStreaming,\n    type ResponseRetrieveParamsStreaming as ResponseRetrieveParamsStreaming,\n  };\n\n  export {\n    InputItems as InputItems,\n    type ResponseItemList as ResponseItemList,\n    type InputItemListParams as InputItemListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport { APIPromise } from '../../core/api-promise';\nimport { type Uploadable } from '../../core/uploads';\nimport { RequestOptions } from '../../internal/request-options';\nimport { multipartFormRequestOptions } from '../../internal/uploads';\nimport { path } from '../../internal/utils/path';\n\nexport class Parts extends APIResource {\n  /**\n   * Adds a\n   * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n   * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n   * A Part represents a chunk of bytes from the file you are trying to upload.\n   *\n   * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n   * maximum of 8 GB.\n   *\n   * It is possible to add multiple Parts in parallel. You can decide the intended\n   * order of the Parts when you\n   * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n   */\n  create(uploadID: string, body: PartCreateParams, options?: RequestOptions): APIPromise<UploadPart> {\n    return this._client.post(\n      path`/uploads/${uploadID}/parts`,\n      multipartFormRequestOptions({ body, ...options }, this._client),\n    );\n  }\n}\n\n/**\n * The upload Part represents a chunk of bytes we can add to an Upload object.\n */\nexport interface UploadPart {\n  /**\n   * The upload Part unique identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the Part was created.\n   */\n  created_at: number;\n\n  /**\n   * The object type, which is always `upload.part`.\n   */\n  object: 'upload.part';\n\n  /**\n   * The ID of the Upload object that this Part was added to.\n   */\n  upload_id: string;\n}\n\nexport interface PartCreateParams {\n  /**\n   * The chunk of bytes for this Part.\n   */\n  data: Uploadable;\n}\n\nexport declare namespace Parts {\n  export { type UploadPart as UploadPart, type PartCreateParams as PartCreateParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as FilesAPI from '../files';\nimport * as PartsAPI from './parts';\nimport { PartCreateParams, Parts, UploadPart } from './parts';\nimport { APIPromise } from '../../core/api-promise';\nimport { RequestOptions } from '../../internal/request-options';\nimport { path } from '../../internal/utils/path';\n\nexport class Uploads extends APIResource {\n  parts: PartsAPI.Parts = new PartsAPI.Parts(this._client);\n\n  /**\n   * Creates an intermediate\n   * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n   * that you can add\n   * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n   * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n   * after you create it.\n   *\n   * Once you complete the Upload, we will create a\n   * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n   * contains all the parts you uploaded. This File is usable in the rest of our\n   * platform as a regular File object.\n   *\n   * For certain `purpose` values, the correct `mime_type` must be specified. Please\n   * refer to documentation for the\n   * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n   *\n   * For guidance on the proper filename extensions for each purpose, please follow\n   * the documentation on\n   * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n   */\n  create(body: UploadCreateParams, options?: RequestOptions): APIPromise<Upload> {\n    return this._client.post('/uploads', { body, ...options });\n  }\n\n  /**\n   * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n   */\n  cancel(uploadID: string, options?: RequestOptions): APIPromise<Upload> {\n    return this._client.post(path`/uploads/${uploadID}/cancel`, options);\n  }\n\n  /**\n   * Completes the\n   * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n   *\n   * Within the returned Upload object, there is a nested\n   * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n   * is ready to use in the rest of the platform.\n   *\n   * You can specify the order of the Parts by passing in an ordered list of the Part\n   * IDs.\n   *\n   * The number of bytes uploaded upon completion must match the number of bytes\n   * initially specified when creating the Upload object. No Parts may be added after\n   * an Upload is completed.\n   */\n  complete(uploadID: string, body: UploadCompleteParams, options?: RequestOptions): APIPromise<Upload> {\n    return this._client.post(path`/uploads/${uploadID}/complete`, { body, ...options });\n  }\n}\n\n/**\n * The Upload object can accept byte chunks in the form of Parts.\n */\nexport interface Upload {\n  /**\n   * The Upload unique identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The intended number of bytes to be uploaded.\n   */\n  bytes: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the Upload was created.\n   */\n  created_at: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the Upload will expire.\n   */\n  expires_at: number;\n\n  /**\n   * The name of the file to be uploaded.\n   */\n  filename: string;\n\n  /**\n   * The object type, which is always \"upload\".\n   */\n  object: 'upload';\n\n  /**\n   * The intended purpose of the file.\n   * [Please refer here](https://platform.openai.com/docs/api-reference/files/object#files/object-purpose)\n   * for acceptable values.\n   */\n  purpose: string;\n\n  /**\n   * The status of the Upload.\n   */\n  status: 'pending' | 'completed' | 'cancelled' | 'expired';\n\n  /**\n   * The `File` object represents a document that has been uploaded to OpenAI.\n   */\n  file?: FilesAPI.FileObject | null;\n}\n\nexport interface UploadCreateParams {\n  /**\n   * The number of bytes in the file you are uploading.\n   */\n  bytes: number;\n\n  /**\n   * The name of the file to upload.\n   */\n  filename: string;\n\n  /**\n   * The MIME type of the file.\n   *\n   * This must fall within the supported MIME types for your file purpose. See the\n   * supported MIME types for assistants and vision.\n   */\n  mime_type: string;\n\n  /**\n   * The intended purpose of the uploaded file.\n   *\n   * See the\n   * [documentation on File purposes](https://platform.openai.com/docs/api-reference/files/create#files-create-purpose).\n   */\n  purpose: FilesAPI.FilePurpose;\n}\n\nexport interface UploadCompleteParams {\n  /**\n   * The ordered list of Part IDs.\n   */\n  part_ids: Array<string>;\n\n  /**\n   * The optional md5 checksum for the file contents to verify if the bytes uploaded\n   * matches what you expect.\n   */\n  md5?: string;\n}\n\nUploads.Parts = Parts;\n\nexport declare namespace Uploads {\n  export {\n    type Upload as Upload,\n    type UploadCreateParams as UploadCreateParams,\n    type UploadCompleteParams as UploadCompleteParams,\n  };\n\n  export { Parts as Parts, type UploadPart as UploadPart, type PartCreateParams as PartCreateParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as FilesAPI from './files';\nimport { VectorStoreFilesPage } from './files';\nimport * as VectorStoresAPI from './vector-stores';\nimport { APIPromise } from '../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../core/pagination';\nimport { buildHeaders } from '../../internal/headers';\nimport { RequestOptions } from '../../internal/request-options';\nimport { sleep } from '../../internal/utils/sleep';\nimport { type Uploadable } from '../../uploads';\nimport { allSettledWithThrow } from '../../lib/Util';\nimport { path } from '../../internal/utils/path';\n\nexport class FileBatches extends APIResource {\n  /**\n   * Create a vector store file batch.\n   */\n  create(\n    vectorStoreID: string,\n    body: FileBatchCreateParams,\n    options?: RequestOptions,\n  ): APIPromise<VectorStoreFileBatch> {\n    return this._client.post(path`/vector_stores/${vectorStoreID}/file_batches`, {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Retrieves a vector store file batch.\n   */\n  retrieve(\n    batchID: string,\n    params: FileBatchRetrieveParams,\n    options?: RequestOptions,\n  ): APIPromise<VectorStoreFileBatch> {\n    const { vector_store_id } = params;\n    return this._client.get(path`/vector_stores/${vector_store_id}/file_batches/${batchID}`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Cancel a vector store file batch. This attempts to cancel the processing of\n   * files in this batch as soon as possible.\n   */\n  cancel(\n    batchID: string,\n    params: FileBatchCancelParams,\n    options?: RequestOptions,\n  ): APIPromise<VectorStoreFileBatch> {\n    const { vector_store_id } = params;\n    return this._client.post(path`/vector_stores/${vector_store_id}/file_batches/${batchID}/cancel`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Create a vector store batch and poll until all files have been processed.\n   */\n  async createAndPoll(\n    vectorStoreId: string,\n    body: FileBatchCreateParams,\n    options?: RequestOptions & { pollIntervalMs?: number },\n  ): Promise<VectorStoreFileBatch> {\n    const batch = await this.create(vectorStoreId, body);\n    return await this.poll(vectorStoreId, batch.id, options);\n  }\n\n  /**\n   * Returns a list of vector store files in a batch.\n   */\n  listFiles(\n    batchID: string,\n    params: FileBatchListFilesParams,\n    options?: RequestOptions,\n  ): PagePromise<VectorStoreFilesPage, FilesAPI.VectorStoreFile> {\n    const { vector_store_id, ...query } = params;\n    return this._client.getAPIList(\n      path`/vector_stores/${vector_store_id}/file_batches/${batchID}/files`,\n      CursorPage<FilesAPI.VectorStoreFile>,\n      { query, ...options, headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]) },\n    );\n  }\n\n  /**\n   * Wait for the given file batch to be processed.\n   *\n   * Note: this will return even if one of the files failed to process, you need to\n   * check batch.file_counts.failed_count to handle this case.\n   */\n  async poll(\n    vectorStoreID: string,\n    batchID: string,\n    options?: RequestOptions & { pollIntervalMs?: number },\n  ): Promise<VectorStoreFileBatch> {\n    const headers = buildHeaders([\n      options?.headers,\n      {\n        'X-Stainless-Poll-Helper': 'true',\n        'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n      },\n    ]);\n\n    while (true) {\n      const { data: batch, response } = await this.retrieve(\n        batchID,\n        { vector_store_id: vectorStoreID },\n        {\n          ...options,\n          headers,\n        },\n      ).withResponse();\n\n      switch (batch.status) {\n        case 'in_progress':\n          let sleepInterval = 5000;\n\n          if (options?.pollIntervalMs) {\n            sleepInterval = options.pollIntervalMs;\n          } else {\n            const headerInterval = response.headers.get('openai-poll-after-ms');\n            if (headerInterval) {\n              const headerIntervalMs = parseInt(headerInterval);\n              if (!isNaN(headerIntervalMs)) {\n                sleepInterval = headerIntervalMs;\n              }\n            }\n          }\n          await sleep(sleepInterval);\n          break;\n        case 'failed':\n        case 'cancelled':\n        case 'completed':\n          return batch;\n      }\n    }\n  }\n\n  /**\n   * Uploads the given files concurrently and then creates a vector store file batch.\n   *\n   * The concurrency limit is configurable using the `maxConcurrency` parameter.\n   */\n  async uploadAndPoll(\n    vectorStoreId: string,\n    { files, fileIds = [] }: { files: Uploadable[]; fileIds?: string[] },\n    options?: RequestOptions & { pollIntervalMs?: number; maxConcurrency?: number },\n  ): Promise<VectorStoreFileBatch> {\n    if (files == null || files.length == 0) {\n      throw new Error(\n        `No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`,\n      );\n    }\n\n    const configuredConcurrency = options?.maxConcurrency ?? 5;\n\n    // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n    const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n\n    const client = this._client;\n    const fileIterator = files.values();\n    const allFileIds: string[] = [...fileIds];\n\n    // This code is based on this design. The libraries don't accommodate our environment limits.\n    // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n    async function processFiles(iterator: IterableIterator<Uploadable>) {\n      for (let item of iterator) {\n        const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n        allFileIds.push(fileObj.id);\n      }\n    }\n\n    // Start workers to process results\n    const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n\n    // Wait for all processing to complete.\n    await allSettledWithThrow(workers);\n\n    return await this.createAndPoll(vectorStoreId, {\n      file_ids: allFileIds,\n    });\n  }\n}\n\n/**\n * A batch of files attached to a vector store.\n */\nexport interface VectorStoreFileBatch {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the vector store files batch was\n   * created.\n   */\n  created_at: number;\n\n  file_counts: VectorStoreFileBatch.FileCounts;\n\n  /**\n   * The object type, which is always `vector_store.file_batch`.\n   */\n  object: 'vector_store.files_batch';\n\n  /**\n   * The status of the vector store files batch, which can be either `in_progress`,\n   * `completed`, `cancelled` or `failed`.\n   */\n  status: 'in_progress' | 'completed' | 'cancelled' | 'failed';\n\n  /**\n   * The ID of the\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n   * that the [File](https://platform.openai.com/docs/api-reference/files) is\n   * attached to.\n   */\n  vector_store_id: string;\n}\n\nexport namespace VectorStoreFileBatch {\n  export interface FileCounts {\n    /**\n     * The number of files that where cancelled.\n     */\n    cancelled: number;\n\n    /**\n     * The number of files that have been processed.\n     */\n    completed: number;\n\n    /**\n     * The number of files that have failed to process.\n     */\n    failed: number;\n\n    /**\n     * The number of files that are currently being processed.\n     */\n    in_progress: number;\n\n    /**\n     * The total number of files.\n     */\n    total: number;\n  }\n}\n\nexport interface FileBatchCreateParams {\n  /**\n   * A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that\n   * the vector store should use. Useful for tools like `file_search` that can access\n   * files.\n   */\n  file_ids: Array<string>;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard. Keys are strings with a maximum\n   * length of 64 characters. Values are strings with a maximum length of 512\n   * characters, booleans, or numbers.\n   */\n  attributes?: Record<string, string | number | boolean> | null;\n\n  /**\n   * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n   * strategy. Only applicable if `file_ids` is non-empty.\n   */\n  chunking_strategy?: VectorStoresAPI.FileChunkingStrategyParam;\n}\n\nexport interface FileBatchRetrieveParams {\n  /**\n   * The ID of the vector store that the file batch belongs to.\n   */\n  vector_store_id: string;\n}\n\nexport interface FileBatchCancelParams {\n  /**\n   * The ID of the vector store that the file batch belongs to.\n   */\n  vector_store_id: string;\n}\n\nexport interface FileBatchListFilesParams extends CursorPageParams {\n  /**\n   * Path param: The ID of the vector store that the files belong to.\n   */\n  vector_store_id: string;\n\n  /**\n   * Query param: A cursor for use in pagination. `before` is an object ID that\n   * defines your place in the list. For instance, if you make a list request and\n   * receive 100 objects, starting with obj_foo, your subsequent call can include\n   * before=obj_foo in order to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Query param: Filter by file status. One of `in_progress`, `completed`, `failed`,\n   * `cancelled`.\n   */\n  filter?: 'in_progress' | 'completed' | 'failed' | 'cancelled';\n\n  /**\n   * Query param: Sort order by the `created_at` timestamp of the objects. `asc` for\n   * ascending order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport declare namespace FileBatches {\n  export {\n    type VectorStoreFileBatch as VectorStoreFileBatch,\n    type FileBatchCreateParams as FileBatchCreateParams,\n    type FileBatchRetrieveParams as FileBatchRetrieveParams,\n    type FileBatchCancelParams as FileBatchCancelParams,\n    type FileBatchListFilesParams as FileBatchListFilesParams,\n  };\n}\n\nexport { type VectorStoreFilesPage };\n","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async <R>(promises: Promise<R>[]): Promise<R[]> => {\n  const results = await Promise.allSettled(promises);\n  const rejected = results.filter((result): result is PromiseRejectedResult => result.status === 'rejected');\n  if (rejected.length) {\n    for (const result of rejected) {\n      console.error(result.reason);\n    }\n\n    throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n  }\n\n  // Note: TS was complaining about using `.filter().map()` here for some reason\n  const values: R[] = [];\n  for (const result of results) {\n    if (result.status === 'fulfilled') {\n      values.push(result.value);\n    }\n  }\n  return values;\n};\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as VectorStoresAPI from './vector-stores';\nimport { APIPromise } from '../../core/api-promise';\nimport { CursorPage, type CursorPageParams, PagePromise, Page } from '../../core/pagination';\nimport { buildHeaders } from '../../internal/headers';\nimport { RequestOptions } from '../../internal/request-options';\nimport { sleep } from '../../internal/utils';\nimport { Uploadable } from '../../uploads';\nimport { path } from '../../internal/utils/path';\n\nexport class Files extends APIResource {\n  /**\n   * Create a vector store file by attaching a\n   * [File](https://platform.openai.com/docs/api-reference/files) to a\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n   */\n  create(\n    vectorStoreID: string,\n    body: FileCreateParams,\n    options?: RequestOptions,\n  ): APIPromise<VectorStoreFile> {\n    return this._client.post(path`/vector_stores/${vectorStoreID}/files`, {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Retrieves a vector store file.\n   */\n  retrieve(\n    fileID: string,\n    params: FileRetrieveParams,\n    options?: RequestOptions,\n  ): APIPromise<VectorStoreFile> {\n    const { vector_store_id } = params;\n    return this._client.get(path`/vector_stores/${vector_store_id}/files/${fileID}`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Update attributes on a vector store file.\n   */\n  update(fileID: string, params: FileUpdateParams, options?: RequestOptions): APIPromise<VectorStoreFile> {\n    const { vector_store_id, ...body } = params;\n    return this._client.post(path`/vector_stores/${vector_store_id}/files/${fileID}`, {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Returns a list of vector store files.\n   */\n  list(\n    vectorStoreID: string,\n    query: FileListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<VectorStoreFilesPage, VectorStoreFile> {\n    return this._client.getAPIList(path`/vector_stores/${vectorStoreID}/files`, CursorPage<VectorStoreFile>, {\n      query,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Delete a vector store file. This will remove the file from the vector store but\n   * the file itself will not be deleted. To delete the file, use the\n   * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n   * endpoint.\n   */\n  delete(\n    fileID: string,\n    params: FileDeleteParams,\n    options?: RequestOptions,\n  ): APIPromise<VectorStoreFileDeleted> {\n    const { vector_store_id } = params;\n    return this._client.delete(path`/vector_stores/${vector_store_id}/files/${fileID}`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Attach a file to the given vector store and wait for it to be processed.\n   */\n  async createAndPoll(\n    vectorStoreId: string,\n    body: FileCreateParams,\n    options?: RequestOptions & { pollIntervalMs?: number },\n  ): Promise<VectorStoreFile> {\n    const file = await this.create(vectorStoreId, body, options);\n    return await this.poll(vectorStoreId, file.id, options);\n  }\n  /**\n   * Wait for the vector store file to finish processing.\n   *\n   * Note: this will return even if the file failed to process, you need to check\n   * file.last_error and file.status to handle these cases\n   */\n  async poll(\n    vectorStoreID: string,\n    fileID: string,\n    options?: RequestOptions & { pollIntervalMs?: number },\n  ): Promise<VectorStoreFile> {\n    const headers = buildHeaders([\n      options?.headers,\n      {\n        'X-Stainless-Poll-Helper': 'true',\n        'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n      },\n    ]);\n\n    while (true) {\n      const fileResponse = await this.retrieve(\n        fileID,\n        {\n          vector_store_id: vectorStoreID,\n        },\n        { ...options, headers },\n      ).withResponse();\n\n      const file = fileResponse.data;\n\n      switch (file.status) {\n        case 'in_progress':\n          let sleepInterval = 5000;\n\n          if (options?.pollIntervalMs) {\n            sleepInterval = options.pollIntervalMs;\n          } else {\n            const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n            if (headerInterval) {\n              const headerIntervalMs = parseInt(headerInterval);\n              if (!isNaN(headerIntervalMs)) {\n                sleepInterval = headerIntervalMs;\n              }\n            }\n          }\n          await sleep(sleepInterval);\n          break;\n        case 'failed':\n        case 'completed':\n          return file;\n      }\n    }\n  }\n  /**\n   * Upload a file to the `files` API and then attach it to the given vector store.\n   *\n   * Note the file will be asynchronously processed (you can use the alternative\n   * polling helper method to wait for processing to complete).\n   */\n  async upload(vectorStoreId: string, file: Uploadable, options?: RequestOptions): Promise<VectorStoreFile> {\n    const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n    return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n  }\n  /**\n   * Add a file to a vector store and poll until processing is complete.\n   */\n  async uploadAndPoll(\n    vectorStoreId: string,\n    file: Uploadable,\n    options?: RequestOptions & { pollIntervalMs?: number },\n  ): Promise<VectorStoreFile> {\n    const fileInfo = await this.upload(vectorStoreId, file, options);\n    return await this.poll(vectorStoreId, fileInfo.id, options);\n  }\n\n  /**\n   * Retrieve the parsed contents of a vector store file.\n   */\n  content(\n    fileID: string,\n    params: FileContentParams,\n    options?: RequestOptions,\n  ): PagePromise<FileContentResponsesPage, FileContentResponse> {\n    const { vector_store_id } = params;\n    return this._client.getAPIList(\n      path`/vector_stores/${vector_store_id}/files/${fileID}/content`,\n      Page<FileContentResponse>,\n      { ...options, headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]) },\n    );\n  }\n}\n\nexport type VectorStoreFilesPage = CursorPage<VectorStoreFile>;\n\n// Note: no pagination actually occurs yet, this is for forwards-compatibility.\nexport type FileContentResponsesPage = Page<FileContentResponse>;\n\n/**\n * A list of files attached to a vector store.\n */\nexport interface VectorStoreFile {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the vector store file was created.\n   */\n  created_at: number;\n\n  /**\n   * The last error associated with this vector store file. Will be `null` if there\n   * are no errors.\n   */\n  last_error: VectorStoreFile.LastError | null;\n\n  /**\n   * The object type, which is always `vector_store.file`.\n   */\n  object: 'vector_store.file';\n\n  /**\n   * The status of the vector store file, which can be either `in_progress`,\n   * `completed`, `cancelled`, or `failed`. The status `completed` indicates that the\n   * vector store file is ready for use.\n   */\n  status: 'in_progress' | 'completed' | 'cancelled' | 'failed';\n\n  /**\n   * The total vector store usage in bytes. Note that this may be different from the\n   * original file size.\n   */\n  usage_bytes: number;\n\n  /**\n   * The ID of the\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n   * that the [File](https://platform.openai.com/docs/api-reference/files) is\n   * attached to.\n   */\n  vector_store_id: string;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard. Keys are strings with a maximum\n   * length of 64 characters. Values are strings with a maximum length of 512\n   * characters, booleans, or numbers.\n   */\n  attributes?: Record<string, string | number | boolean> | null;\n\n  /**\n   * The strategy used to chunk the file.\n   */\n  chunking_strategy?: VectorStoresAPI.FileChunkingStrategy;\n}\n\nexport namespace VectorStoreFile {\n  /**\n   * The last error associated with this vector store file. Will be `null` if there\n   * are no errors.\n   */\n  export interface LastError {\n    /**\n     * One of `server_error` or `rate_limit_exceeded`.\n     */\n    code: 'server_error' | 'unsupported_file' | 'invalid_file';\n\n    /**\n     * A human-readable description of the error.\n     */\n    message: string;\n  }\n}\n\nexport interface VectorStoreFileDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'vector_store.file.deleted';\n}\n\nexport interface FileContentResponse {\n  /**\n   * The text content\n   */\n  text?: string;\n\n  /**\n   * The content type (currently only `\"text\"`)\n   */\n  type?: string;\n}\n\nexport interface FileCreateParams {\n  /**\n   * A [File](https://platform.openai.com/docs/api-reference/files) ID that the\n   * vector store should use. Useful for tools like `file_search` that can access\n   * files.\n   */\n  file_id: string;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard. Keys are strings with a maximum\n   * length of 64 characters. Values are strings with a maximum length of 512\n   * characters, booleans, or numbers.\n   */\n  attributes?: Record<string, string | number | boolean> | null;\n\n  /**\n   * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n   * strategy. Only applicable if `file_ids` is non-empty.\n   */\n  chunking_strategy?: VectorStoresAPI.FileChunkingStrategyParam;\n}\n\nexport interface FileRetrieveParams {\n  /**\n   * The ID of the vector store that the file belongs to.\n   */\n  vector_store_id: string;\n}\n\nexport interface FileUpdateParams {\n  /**\n   * Path param: The ID of the vector store the file belongs to.\n   */\n  vector_store_id: string;\n\n  /**\n   * Body param: Set of 16 key-value pairs that can be attached to an object. This\n   * can be useful for storing additional information about the object in a\n   * structured format, and querying for objects via API or the dashboard. Keys are\n   * strings with a maximum length of 64 characters. Values are strings with a\n   * maximum length of 512 characters, booleans, or numbers.\n   */\n  attributes: Record<string, string | number | boolean> | null;\n}\n\nexport interface FileListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\n   * to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Filter by file status. One of `in_progress`, `completed`, `failed`, `cancelled`.\n   */\n  filter?: 'in_progress' | 'completed' | 'failed' | 'cancelled';\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport interface FileDeleteParams {\n  /**\n   * The ID of the vector store that the file belongs to.\n   */\n  vector_store_id: string;\n}\n\nexport interface FileContentParams {\n  /**\n   * The ID of the vector store.\n   */\n  vector_store_id: string;\n}\n\nexport declare namespace Files {\n  export {\n    type VectorStoreFile as VectorStoreFile,\n    type VectorStoreFileDeleted as VectorStoreFileDeleted,\n    type FileContentResponse as FileContentResponse,\n    type VectorStoreFilesPage as VectorStoreFilesPage,\n    type FileContentResponsesPage as FileContentResponsesPage,\n    type FileCreateParams as FileCreateParams,\n    type FileRetrieveParams as FileRetrieveParams,\n    type FileUpdateParams as FileUpdateParams,\n    type FileListParams as FileListParams,\n    type FileDeleteParams as FileDeleteParams,\n    type FileContentParams as FileContentParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../core/resource';\nimport * as Shared from '../shared';\nimport * as FileBatchesAPI from './file-batches';\nimport {\n  FileBatchCancelParams,\n  FileBatchCreateParams,\n  FileBatchListFilesParams,\n  FileBatchRetrieveParams,\n  FileBatches,\n  VectorStoreFileBatch,\n} from './file-batches';\nimport * as FilesAPI from './files';\nimport {\n  FileContentParams,\n  FileContentResponse,\n  FileContentResponsesPage,\n  FileCreateParams,\n  FileDeleteParams,\n  FileListParams,\n  FileRetrieveParams,\n  FileUpdateParams,\n  Files,\n  VectorStoreFile,\n  VectorStoreFileDeleted,\n  VectorStoreFilesPage,\n} from './files';\nimport { APIPromise } from '../../core/api-promise';\nimport { CursorPage, type CursorPageParams, Page, PagePromise } from '../../core/pagination';\nimport { buildHeaders } from '../../internal/headers';\nimport { RequestOptions } from '../../internal/request-options';\nimport { path } from '../../internal/utils/path';\n\nexport class VectorStores extends APIResource {\n  files: FilesAPI.Files = new FilesAPI.Files(this._client);\n  fileBatches: FileBatchesAPI.FileBatches = new FileBatchesAPI.FileBatches(this._client);\n\n  /**\n   * Create a vector store.\n   */\n  create(body: VectorStoreCreateParams, options?: RequestOptions): APIPromise<VectorStore> {\n    return this._client.post('/vector_stores', {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Retrieves a vector store.\n   */\n  retrieve(vectorStoreID: string, options?: RequestOptions): APIPromise<VectorStore> {\n    return this._client.get(path`/vector_stores/${vectorStoreID}`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Modifies a vector store.\n   */\n  update(\n    vectorStoreID: string,\n    body: VectorStoreUpdateParams,\n    options?: RequestOptions,\n  ): APIPromise<VectorStore> {\n    return this._client.post(path`/vector_stores/${vectorStoreID}`, {\n      body,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Returns a list of vector stores.\n   */\n  list(\n    query: VectorStoreListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<VectorStoresPage, VectorStore> {\n    return this._client.getAPIList('/vector_stores', CursorPage<VectorStore>, {\n      query,\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Delete a vector store.\n   */\n  delete(vectorStoreID: string, options?: RequestOptions): APIPromise<VectorStoreDeleted> {\n    return this._client.delete(path`/vector_stores/${vectorStoreID}`, {\n      ...options,\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n    });\n  }\n\n  /**\n   * Search a vector store for relevant chunks based on a query and file attributes\n   * filter.\n   */\n  search(\n    vectorStoreID: string,\n    body: VectorStoreSearchParams,\n    options?: RequestOptions,\n  ): PagePromise<VectorStoreSearchResponsesPage, VectorStoreSearchResponse> {\n    return this._client.getAPIList(\n      path`/vector_stores/${vectorStoreID}/search`,\n      Page<VectorStoreSearchResponse>,\n      {\n        body,\n        method: 'post',\n        ...options,\n        headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n      },\n    );\n  }\n}\n\nexport type VectorStoresPage = CursorPage<VectorStore>;\n\n// Note: no pagination actually occurs yet, this is for forwards-compatibility.\nexport type VectorStoreSearchResponsesPage = Page<VectorStoreSearchResponse>;\n\n/**\n * The default strategy. This strategy currently uses a `max_chunk_size_tokens` of\n * `800` and `chunk_overlap_tokens` of `400`.\n */\nexport interface AutoFileChunkingStrategyParam {\n  /**\n   * Always `auto`.\n   */\n  type: 'auto';\n}\n\n/**\n * The strategy used to chunk the file.\n */\nexport type FileChunkingStrategy = StaticFileChunkingStrategyObject | OtherFileChunkingStrategyObject;\n\n/**\n * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n * strategy. Only applicable if `file_ids` is non-empty.\n */\nexport type FileChunkingStrategyParam = AutoFileChunkingStrategyParam | StaticFileChunkingStrategyObjectParam;\n\n/**\n * This is returned when the chunking strategy is unknown. Typically, this is\n * because the file was indexed before the `chunking_strategy` concept was\n * introduced in the API.\n */\nexport interface OtherFileChunkingStrategyObject {\n  /**\n   * Always `other`.\n   */\n  type: 'other';\n}\n\nexport interface StaticFileChunkingStrategy {\n  /**\n   * The number of tokens that overlap between chunks. The default value is `400`.\n   *\n   * Note that the overlap must not exceed half of `max_chunk_size_tokens`.\n   */\n  chunk_overlap_tokens: number;\n\n  /**\n   * The maximum number of tokens in each chunk. The default value is `800`. The\n   * minimum value is `100` and the maximum value is `4096`.\n   */\n  max_chunk_size_tokens: number;\n}\n\nexport interface StaticFileChunkingStrategyObject {\n  static: StaticFileChunkingStrategy;\n\n  /**\n   * Always `static`.\n   */\n  type: 'static';\n}\n\n/**\n * Customize your own chunking strategy by setting chunk size and chunk overlap.\n */\nexport interface StaticFileChunkingStrategyObjectParam {\n  static: StaticFileChunkingStrategy;\n\n  /**\n   * Always `static`.\n   */\n  type: 'static';\n}\n\n/**\n * A vector store is a collection of processed files can be used by the\n * `file_search` tool.\n */\nexport interface VectorStore {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the vector store was created.\n   */\n  created_at: number;\n\n  file_counts: VectorStore.FileCounts;\n\n  /**\n   * The Unix timestamp (in seconds) for when the vector store was last active.\n   */\n  last_active_at: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The name of the vector store.\n   */\n  name: string;\n\n  /**\n   * The object type, which is always `vector_store`.\n   */\n  object: 'vector_store';\n\n  /**\n   * The status of the vector store, which can be either `expired`, `in_progress`, or\n   * `completed`. A status of `completed` indicates that the vector store is ready\n   * for use.\n   */\n  status: 'expired' | 'in_progress' | 'completed';\n\n  /**\n   * The total number of bytes used by the files in the vector store.\n   */\n  usage_bytes: number;\n\n  /**\n   * The expiration policy for a vector store.\n   */\n  expires_after?: VectorStore.ExpiresAfter;\n\n  /**\n   * The Unix timestamp (in seconds) for when the vector store will expire.\n   */\n  expires_at?: number | null;\n}\n\nexport namespace VectorStore {\n  export interface FileCounts {\n    /**\n     * The number of files that were cancelled.\n     */\n    cancelled: number;\n\n    /**\n     * The number of files that have been successfully processed.\n     */\n    completed: number;\n\n    /**\n     * The number of files that have failed to process.\n     */\n    failed: number;\n\n    /**\n     * The number of files that are currently being processed.\n     */\n    in_progress: number;\n\n    /**\n     * The total number of files.\n     */\n    total: number;\n  }\n\n  /**\n   * The expiration policy for a vector store.\n   */\n  export interface ExpiresAfter {\n    /**\n     * Anchor timestamp after which the expiration policy applies. Supported anchors:\n     * `last_active_at`.\n     */\n    anchor: 'last_active_at';\n\n    /**\n     * The number of days after the anchor time that the vector store will expire.\n     */\n    days: number;\n  }\n}\n\nexport interface VectorStoreDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'vector_store.deleted';\n}\n\nexport interface VectorStoreSearchResponse {\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard. Keys are strings with a maximum\n   * length of 64 characters. Values are strings with a maximum length of 512\n   * characters, booleans, or numbers.\n   */\n  attributes: Record<string, string | number | boolean> | null;\n\n  /**\n   * Content chunks from the file.\n   */\n  content: Array<VectorStoreSearchResponse.Content>;\n\n  /**\n   * The ID of the vector store file.\n   */\n  file_id: string;\n\n  /**\n   * The name of the vector store file.\n   */\n  filename: string;\n\n  /**\n   * The similarity score for the result.\n   */\n  score: number;\n}\n\nexport namespace VectorStoreSearchResponse {\n  export interface Content {\n    /**\n     * The text content returned from search.\n     */\n    text: string;\n\n    /**\n     * The type of content.\n     */\n    type: 'text';\n  }\n}\n\nexport interface VectorStoreCreateParams {\n  /**\n   * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n   * strategy. Only applicable if `file_ids` is non-empty.\n   */\n  chunking_strategy?: FileChunkingStrategyParam;\n\n  /**\n   * The expiration policy for a vector store.\n   */\n  expires_after?: VectorStoreCreateParams.ExpiresAfter;\n\n  /**\n   * A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that\n   * the vector store should use. Useful for tools like `file_search` that can access\n   * files.\n   */\n  file_ids?: Array<string>;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The name of the vector store.\n   */\n  name?: string;\n}\n\nexport namespace VectorStoreCreateParams {\n  /**\n   * The expiration policy for a vector store.\n   */\n  export interface ExpiresAfter {\n    /**\n     * Anchor timestamp after which the expiration policy applies. Supported anchors:\n     * `last_active_at`.\n     */\n    anchor: 'last_active_at';\n\n    /**\n     * The number of days after the anchor time that the vector store will expire.\n     */\n    days: number;\n  }\n}\n\nexport interface VectorStoreUpdateParams {\n  /**\n   * The expiration policy for a vector store.\n   */\n  expires_after?: VectorStoreUpdateParams.ExpiresAfter | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The name of the vector store.\n   */\n  name?: string | null;\n}\n\nexport namespace VectorStoreUpdateParams {\n  /**\n   * The expiration policy for a vector store.\n   */\n  export interface ExpiresAfter {\n    /**\n     * Anchor timestamp after which the expiration policy applies. Supported anchors:\n     * `last_active_at`.\n     */\n    anchor: 'last_active_at';\n\n    /**\n     * The number of days after the anchor time that the vector store will expire.\n     */\n    days: number;\n  }\n}\n\nexport interface VectorStoreListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\n   * to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport interface VectorStoreSearchParams {\n  /**\n   * A query string for a search\n   */\n  query: string | Array<string>;\n\n  /**\n   * A filter to apply based on file attributes.\n   */\n  filters?: Shared.ComparisonFilter | Shared.CompoundFilter;\n\n  /**\n   * The maximum number of results to return. This number should be between 1 and 50\n   * inclusive.\n   */\n  max_num_results?: number;\n\n  /**\n   * Ranking options for search.\n   */\n  ranking_options?: VectorStoreSearchParams.RankingOptions;\n\n  /**\n   * Whether to rewrite the natural language query for vector search.\n   */\n  rewrite_query?: boolean;\n}\n\nexport namespace VectorStoreSearchParams {\n  /**\n   * Ranking options for search.\n   */\n  export interface RankingOptions {\n    ranker?: 'auto' | 'default-2024-11-15';\n\n    score_threshold?: number;\n  }\n}\n\nVectorStores.Files = Files;\nVectorStores.FileBatches = FileBatches;\n\nexport declare namespace VectorStores {\n  export {\n    type AutoFileChunkingStrategyParam as AutoFileChunkingStrategyParam,\n    type FileChunkingStrategy as FileChunkingStrategy,\n    type FileChunkingStrategyParam as FileChunkingStrategyParam,\n    type OtherFileChunkingStrategyObject as OtherFileChunkingStrategyObject,\n    type StaticFileChunkingStrategy as StaticFileChunkingStrategy,\n    type StaticFileChunkingStrategyObject as StaticFileChunkingStrategyObject,\n    type StaticFileChunkingStrategyObjectParam as StaticFileChunkingStrategyObjectParam,\n    type VectorStore as VectorStore,\n    type VectorStoreDeleted as VectorStoreDeleted,\n    type VectorStoreSearchResponse as VectorStoreSearchResponse,\n    type VectorStoresPage as VectorStoresPage,\n    type VectorStoreSearchResponsesPage as VectorStoreSearchResponsesPage,\n    type VectorStoreCreateParams as VectorStoreCreateParams,\n    type VectorStoreUpdateParams as VectorStoreUpdateParams,\n    type VectorStoreListParams as VectorStoreListParams,\n    type VectorStoreSearchParams as VectorStoreSearchParams,\n  };\n\n  export {\n    Files as Files,\n    type VectorStoreFile as VectorStoreFile,\n    type VectorStoreFileDeleted as VectorStoreFileDeleted,\n    type FileContentResponse as FileContentResponse,\n    type VectorStoreFilesPage as VectorStoreFilesPage,\n    type FileContentResponsesPage as FileContentResponsesPage,\n    type FileCreateParams as FileCreateParams,\n    type FileRetrieveParams as FileRetrieveParams,\n    type FileUpdateParams as FileUpdateParams,\n    type FileListParams as FileListParams,\n    type FileDeleteParams as FileDeleteParams,\n    type FileContentParams as FileContentParams,\n  };\n\n  export {\n    FileBatches as FileBatches,\n    type VectorStoreFileBatch as VectorStoreFileBatch,\n    type FileBatchCreateParams as FileBatchCreateParams,\n    type FileBatchRetrieveParams as FileBatchRetrieveParams,\n    type FileBatchCancelParams as FileBatchCancelParams,\n    type FileBatchListFilesParams as FileBatchListFilesParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport type { RequestInit, RequestInfo, BodyInit } from './internal/builtin-types';\nimport type { HTTPMethod, PromiseOrValue, MergedRequestInit, FinalizedRequestInit } from './internal/types';\nimport { uuid4 } from './internal/utils/uuid';\nimport { validatePositiveInteger, isAbsoluteURL, safeJSON } from './internal/utils/values';\nimport { sleep } from './internal/utils/sleep';\nexport type { Logger, LogLevel } from './internal/utils/log';\nimport { castToError, isAbortError } from './internal/errors';\nimport type { APIResponseProps } from './internal/parse';\nimport { getPlatformHeaders } from './internal/detect-platform';\nimport * as Shims from './internal/shims';\nimport * as Opts from './internal/request-options';\nimport * as qs from './internal/qs';\nimport { VERSION } from './version';\nimport * as Errors from './core/error';\nimport * as Pagination from './core/pagination';\nimport { AbstractPage, type CursorPageParams, CursorPageResponse, PageResponse } from './core/pagination';\nimport * as Uploads from './core/uploads';\nimport * as API from './resources/index';\nimport { APIPromise } from './core/api-promise';\nimport {\n  Batch,\n  BatchCreateParams,\n  BatchError,\n  BatchListParams,\n  BatchRequestCounts,\n  Batches,\n  BatchesPage,\n} from './resources/batches';\nimport {\n  Completion,\n  CompletionChoice,\n  CompletionCreateParams,\n  CompletionCreateParamsNonStreaming,\n  CompletionCreateParamsStreaming,\n  CompletionUsage,\n  Completions,\n} from './resources/completions';\nimport {\n  CreateEmbeddingResponse,\n  Embedding,\n  EmbeddingCreateParams,\n  EmbeddingModel,\n  Embeddings,\n} from './resources/embeddings';\nimport {\n  FileContent,\n  FileCreateParams,\n  FileDeleted,\n  FileListParams,\n  FileObject,\n  FileObjectsPage,\n  FilePurpose,\n  Files,\n} from './resources/files';\nimport {\n  Image,\n  ImageCreateVariationParams,\n  ImageEditParams,\n  ImageGenerateParams,\n  ImageModel,\n  Images,\n  ImagesResponse,\n} from './resources/images';\nimport { Model, ModelDeleted, Models, ModelsPage } from './resources/models';\nimport {\n  Moderation,\n  ModerationCreateParams,\n  ModerationCreateResponse,\n  ModerationImageURLInput,\n  ModerationModel,\n  ModerationMultiModalInput,\n  ModerationTextInput,\n  Moderations,\n} from './resources/moderations';\nimport { Audio, AudioModel, AudioResponseFormat } from './resources/audio/audio';\nimport { Beta } from './resources/beta/beta';\nimport { Chat } from './resources/chat/chat';\nimport {\n  ContainerCreateParams,\n  ContainerCreateResponse,\n  ContainerListParams,\n  ContainerListResponse,\n  ContainerListResponsesPage,\n  ContainerRetrieveResponse,\n  Containers,\n} from './resources/containers/containers';\nimport {\n  EvalCreateParams,\n  EvalCreateResponse,\n  EvalCustomDataSourceConfig,\n  EvalDeleteResponse,\n  EvalListParams,\n  EvalListResponse,\n  EvalListResponsesPage,\n  EvalRetrieveResponse,\n  EvalStoredCompletionsDataSourceConfig,\n  EvalUpdateParams,\n  EvalUpdateResponse,\n  Evals,\n} from './resources/evals/evals';\nimport { FineTuning } from './resources/fine-tuning/fine-tuning';\nimport { Graders } from './resources/graders/graders';\nimport { Responses } from './resources/responses/responses';\nimport {\n  Upload,\n  UploadCompleteParams,\n  UploadCreateParams,\n  Uploads as UploadsAPIUploads,\n} from './resources/uploads/uploads';\nimport {\n  AutoFileChunkingStrategyParam,\n  FileChunkingStrategy,\n  FileChunkingStrategyParam,\n  OtherFileChunkingStrategyObject,\n  StaticFileChunkingStrategy,\n  StaticFileChunkingStrategyObject,\n  StaticFileChunkingStrategyObjectParam,\n  VectorStore,\n  VectorStoreCreateParams,\n  VectorStoreDeleted,\n  VectorStoreListParams,\n  VectorStoreSearchParams,\n  VectorStoreSearchResponse,\n  VectorStoreSearchResponsesPage,\n  VectorStoreUpdateParams,\n  VectorStores,\n  VectorStoresPage,\n} from './resources/vector-stores/vector-stores';\nimport {\n  ChatCompletion,\n  ChatCompletionAssistantMessageParam,\n  ChatCompletionAudio,\n  ChatCompletionAudioParam,\n  ChatCompletionChunk,\n  ChatCompletionContentPart,\n  ChatCompletionContentPartImage,\n  ChatCompletionContentPartInputAudio,\n  ChatCompletionContentPartRefusal,\n  ChatCompletionContentPartText,\n  ChatCompletionCreateParams,\n  ChatCompletionCreateParamsNonStreaming,\n  ChatCompletionCreateParamsStreaming,\n  ChatCompletionDeleted,\n  ChatCompletionDeveloperMessageParam,\n  ChatCompletionFunctionCallOption,\n  ChatCompletionFunctionMessageParam,\n  ChatCompletionListParams,\n  ChatCompletionMessage,\n  ChatCompletionMessageParam,\n  ChatCompletionMessageToolCall,\n  ChatCompletionModality,\n  ChatCompletionNamedToolChoice,\n  ChatCompletionPredictionContent,\n  ChatCompletionReasoningEffort,\n  ChatCompletionRole,\n  ChatCompletionStoreMessage,\n  ChatCompletionStreamOptions,\n  ChatCompletionSystemMessageParam,\n  ChatCompletionTokenLogprob,\n  ChatCompletionTool,\n  ChatCompletionToolChoiceOption,\n  ChatCompletionToolMessageParam,\n  ChatCompletionUpdateParams,\n  ChatCompletionUserMessageParam,\n  ChatCompletionsPage,\n} from './resources/chat/completions/completions';\nimport { type Fetch } from './internal/builtin-types';\nimport { isRunningInBrowser } from './internal/detect-platform';\nimport { HeadersLike, NullableHeaders, buildHeaders } from './internal/headers';\nimport { FinalRequestOptions, RequestOptions } from './internal/request-options';\nimport { readEnv } from './internal/utils/env';\nimport {\n  type LogLevel,\n  type Logger,\n  formatRequestDetails,\n  loggerFor,\n  parseLogLevel,\n} from './internal/utils/log';\nimport { isEmptyObj } from './internal/utils/values';\n\nexport interface ClientOptions {\n  /**\n   * Defaults to process.env['OPENAI_API_KEY'].\n   */\n  apiKey?: string | undefined;\n\n  /**\n   * Defaults to process.env['OPENAI_ORG_ID'].\n   */\n  organization?: string | null | undefined;\n\n  /**\n   * Defaults to process.env['OPENAI_PROJECT_ID'].\n   */\n  project?: string | null | undefined;\n\n  /**\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\n   *\n   * Defaults to process.env['OPENAI_BASE_URL'].\n   */\n  baseURL?: string | null | undefined;\n\n  /**\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\n   * from the server before timing out a single request.\n   *\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\n   * much longer than this timeout before the promise succeeds or fails.\n   */\n  timeout?: number | undefined;\n  /**\n   * Additional `RequestInit` options to be passed to `fetch` calls.\n   * Properties will be overridden by per-request `fetchOptions`.\n   */\n  fetchOptions?: MergedRequestInit | undefined;\n\n  /**\n   * Specify a custom `fetch` function implementation.\n   *\n   * If not provided, we expect that `fetch` is defined globally.\n   */\n  fetch?: Fetch | undefined;\n\n  /**\n   * The maximum number of times that the client will retry a request in case of a\n   * temporary failure, like a network error or a 5XX error from the server.\n   *\n   * @default 2\n   */\n  maxRetries?: number | undefined;\n\n  /**\n   * Default headers to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * header to `null` in request options.\n   */\n  defaultHeaders?: HeadersLike | undefined;\n\n  /**\n   * Default query parameters to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * param to `undefined` in request options.\n   */\n  defaultQuery?: Record<string, string | undefined> | undefined;\n\n  /**\n   * By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   * Only set this option to `true` if you understand the risks and have appropriate mitigations in place.\n   */\n  dangerouslyAllowBrowser?: boolean | undefined;\n\n  /**\n   * Set the log level.\n   *\n   * Defaults to process.env['OPENAI_LOG'] or 'warn' if it isn't set.\n   */\n  logLevel?: LogLevel | undefined;\n\n  /**\n   * Set the logger.\n   *\n   * Defaults to globalThis.console.\n   */\n  logger?: Logger | undefined;\n}\n\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI {\n  apiKey: string;\n  organization: string | null;\n  project: string | null;\n\n  baseURL: string;\n  maxRetries: number;\n  timeout: number;\n  logger: Logger | undefined;\n  logLevel: LogLevel | undefined;\n  fetchOptions: MergedRequestInit | undefined;\n\n  private fetch: Fetch;\n  #encoder: Opts.RequestEncoder;\n  protected idempotencyHeader?: string;\n  private _options: ClientOptions;\n\n  /**\n   * API Client for interfacing with the OpenAI API.\n   *\n   * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n   * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n   * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n   * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {MergedRequestInit} [opts.fetchOptions] - Additional `RequestInit` options to be passed to `fetch` calls.\n   * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {HeadersLike} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Record<string, string | undefined>} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor({\n    baseURL = readEnv('OPENAI_BASE_URL'),\n    apiKey = readEnv('OPENAI_API_KEY'),\n    organization = readEnv('OPENAI_ORG_ID') ?? null,\n    project = readEnv('OPENAI_PROJECT_ID') ?? null,\n    ...opts\n  }: ClientOptions = {}) {\n    if (apiKey === undefined) {\n      throw new Errors.OpenAIError(\n        \"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\",\n      );\n    }\n\n    const options: ClientOptions = {\n      apiKey,\n      organization,\n      project,\n      ...opts,\n      baseURL: baseURL || `https://api.openai.com/v1`,\n    };\n\n    if (!options.dangerouslyAllowBrowser && isRunningInBrowser()) {\n      throw new Errors.OpenAIError(\n        \"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\",\n      );\n    }\n\n    this.baseURL = options.baseURL!;\n    this.timeout = options.timeout ?? OpenAI.DEFAULT_TIMEOUT /* 10 minutes */;\n    this.logger = options.logger ?? console;\n    const defaultLogLevel = 'warn';\n    // Set default logLevel early so that we can log a warning in parseLogLevel.\n    this.logLevel = defaultLogLevel;\n    this.logLevel =\n      parseLogLevel(options.logLevel, 'ClientOptions.logLevel', this) ??\n      parseLogLevel(readEnv('OPENAI_LOG'), \"process.env['OPENAI_LOG']\", this) ??\n      defaultLogLevel;\n    this.fetchOptions = options.fetchOptions;\n    this.maxRetries = options.maxRetries ?? 2;\n    this.fetch = options.fetch ?? Shims.getDefaultFetch();\n    this.#encoder = Opts.FallbackEncoder;\n\n    this._options = options;\n\n    this.apiKey = apiKey;\n    this.organization = organization;\n    this.project = project;\n  }\n\n  /**\n   * Create a new client instance re-using the same options given to the current client with optional overriding.\n   */\n  withOptions(options: Partial<ClientOptions>): this {\n    return new (this.constructor as any as new (props: ClientOptions) => typeof this)({\n      ...this._options,\n      baseURL: this.baseURL,\n      maxRetries: this.maxRetries,\n      timeout: this.timeout,\n      logger: this.logger,\n      logLevel: this.logLevel,\n      fetchOptions: this.fetchOptions,\n      apiKey: this.apiKey,\n      organization: this.organization,\n      project: this.project,\n      ...options,\n    });\n  }\n\n  /**\n   * Check whether the base URL is set to its default.\n   */\n  #baseURLOverridden(): boolean {\n    return this.baseURL !== 'https://api.openai.com/v1';\n  }\n\n  protected defaultQuery(): Record<string, string | undefined> | undefined {\n    return this._options.defaultQuery;\n  }\n\n  protected validateHeaders({ values, nulls }: NullableHeaders) {\n    return;\n  }\n\n  protected authHeaders(opts: FinalRequestOptions): NullableHeaders | undefined {\n    return buildHeaders([{ Authorization: `Bearer ${this.apiKey}` }]);\n  }\n\n  protected stringifyQuery(query: Record<string, unknown>): string {\n    return qs.stringify(query, { arrayFormat: 'brackets' });\n  }\n\n  private getUserAgent(): string {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n\n  protected defaultIdempotencyKey(): string {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n\n  protected makeStatusError(\n    status: number,\n    error: Object,\n    message: string | undefined,\n    headers: Headers,\n  ): Errors.APIError {\n    return Errors.APIError.generate(status, error, message, headers);\n  }\n\n  buildURL(\n    path: string,\n    query: Record<string, unknown> | null | undefined,\n    defaultBaseURL?: string | undefined,\n  ): string {\n    const baseURL = (!this.#baseURLOverridden() && defaultBaseURL) || this.baseURL;\n    const url =\n      isAbsoluteURL(path) ?\n        new URL(path)\n      : new URL(baseURL + (baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = { ...defaultQuery, ...query };\n    }\n\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query as Record<string, unknown>);\n    }\n\n    return url.toString();\n  }\n\n  /**\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\n   */\n  protected async prepareOptions(options: FinalRequestOptions): Promise<void> {}\n\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  protected async prepareRequest(\n    request: RequestInit,\n    { url, options }: { url: string; options: FinalRequestOptions },\n  ): Promise<void> {}\n\n  get<Rsp>(path: string, opts?: PromiseOrValue<RequestOptions>): APIPromise<Rsp> {\n    return this.methodRequest('get', path, opts);\n  }\n\n  post<Rsp>(path: string, opts?: PromiseOrValue<RequestOptions>): APIPromise<Rsp> {\n    return this.methodRequest('post', path, opts);\n  }\n\n  patch<Rsp>(path: string, opts?: PromiseOrValue<RequestOptions>): APIPromise<Rsp> {\n    return this.methodRequest('patch', path, opts);\n  }\n\n  put<Rsp>(path: string, opts?: PromiseOrValue<RequestOptions>): APIPromise<Rsp> {\n    return this.methodRequest('put', path, opts);\n  }\n\n  delete<Rsp>(path: string, opts?: PromiseOrValue<RequestOptions>): APIPromise<Rsp> {\n    return this.methodRequest('delete', path, opts);\n  }\n\n  private methodRequest<Rsp>(\n    method: HTTPMethod,\n    path: string,\n    opts?: PromiseOrValue<RequestOptions>,\n  ): APIPromise<Rsp> {\n    return this.request(\n      Promise.resolve(opts).then((opts) => {\n        return { method, path, ...opts };\n      }),\n    );\n  }\n\n  request<Rsp>(\n    options: PromiseOrValue<FinalRequestOptions>,\n    remainingRetries: number | null = null,\n  ): APIPromise<Rsp> {\n    return new APIPromise(this, this.makeRequest(options, remainingRetries, undefined));\n  }\n\n  private async makeRequest(\n    optionsInput: PromiseOrValue<FinalRequestOptions>,\n    retriesRemaining: number | null,\n    retryOfRequestLogID: string | undefined,\n  ): Promise<APIResponseProps> {\n    const options = await optionsInput;\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n\n    await this.prepareOptions(options);\n\n    const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n\n    await this.prepareRequest(req, { url, options });\n\n    /** Not an API request ID, just for correlating local log entries. */\n    const requestLogID = 'log_' + ((Math.random() * (1 << 24)) | 0).toString(16).padStart(6, '0');\n    const retryLogStr = retryOfRequestLogID === undefined ? '' : `, retryOf: ${retryOfRequestLogID}`;\n    const startTime = Date.now();\n\n    loggerFor(this).debug(\n      `[${requestLogID}] sending request`,\n      formatRequestDetails({\n        retryOfRequestLogID,\n        method: options.method,\n        url,\n        options,\n        headers: req.headers,\n      }),\n    );\n\n    if (options.signal?.aborted) {\n      throw new Errors.APIUserAbortError();\n    }\n\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n    const headersTime = Date.now();\n\n    if (response instanceof Error) {\n      const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n      if (options.signal?.aborted) {\n        throw new Errors.APIUserAbortError();\n      }\n      // detect native connection timeout errors\n      // deno throws \"TypeError: error sending request for url (https://example/): client error (Connect): tcp connect error: Operation timed out (os error 60): Operation timed out (os error 60)\"\n      // undici throws \"TypeError: fetch failed\" with cause \"ConnectTimeoutError: Connect Timeout Error (attempted address: example:443, timeout: 1ms)\"\n      // others do not provide enough information to distinguish timeouts from other connection errors\n      const isTimeout =\n        isAbortError(response) ||\n        /timed? ?out/i.test(String(response) + ('cause' in response ? String(response.cause) : ''));\n      if (retriesRemaining) {\n        loggerFor(this).info(\n          `[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - ${retryMessage}`,\n        );\n        loggerFor(this).debug(\n          `[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (${retryMessage})`,\n          formatRequestDetails({\n            retryOfRequestLogID,\n            url,\n            durationMs: headersTime - startTime,\n            message: response.message,\n          }),\n        );\n        return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID);\n      }\n      loggerFor(this).info(\n        `[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - error; no more retries left`,\n      );\n      loggerFor(this).debug(\n        `[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (error; no more retries left)`,\n        formatRequestDetails({\n          retryOfRequestLogID,\n          url,\n          durationMs: headersTime - startTime,\n          message: response.message,\n        }),\n      );\n      if (isTimeout) {\n        throw new Errors.APIConnectionTimeoutError();\n      }\n      throw new Errors.APIConnectionError({ cause: response });\n    }\n\n    const specialHeaders = [...response.headers.entries()]\n      .filter(([name]) => name === 'x-request-id')\n      .map(([name, value]) => ', ' + name + ': ' + JSON.stringify(value))\n      .join('');\n    const responseInfo = `[${requestLogID}${retryLogStr}${specialHeaders}] ${req.method} ${url} ${\n      response.ok ? 'succeeded' : 'failed'\n    } with status ${response.status} in ${headersTime - startTime}ms`;\n\n    if (!response.ok) {\n      const shouldRetry = this.shouldRetry(response);\n      if (retriesRemaining && shouldRetry) {\n        const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n\n        // We don't need the body of this response.\n        await Shims.CancelReadableStream(response.body);\n        loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n        loggerFor(this).debug(\n          `[${requestLogID}] response error (${retryMessage})`,\n          formatRequestDetails({\n            retryOfRequestLogID,\n            url: response.url,\n            status: response.status,\n            headers: response.headers,\n            durationMs: headersTime - startTime,\n          }),\n        );\n        return this.retryRequest(\n          options,\n          retriesRemaining,\n          retryOfRequestLogID ?? requestLogID,\n          response.headers,\n        );\n      }\n\n      const retryMessage = shouldRetry ? `error; no more retries left` : `error; not retryable`;\n\n      loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n\n      const errText = await response.text().catch((err: any) => castToError(err).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n\n      loggerFor(this).debug(\n        `[${requestLogID}] response error (${retryMessage})`,\n        formatRequestDetails({\n          retryOfRequestLogID,\n          url: response.url,\n          status: response.status,\n          headers: response.headers,\n          message: errMessage,\n          durationMs: Date.now() - startTime,\n        }),\n      );\n\n      const err = this.makeStatusError(response.status, errJSON, errMessage, response.headers);\n      throw err;\n    }\n\n    loggerFor(this).info(responseInfo);\n    loggerFor(this).debug(\n      `[${requestLogID}] response start`,\n      formatRequestDetails({\n        retryOfRequestLogID,\n        url: response.url,\n        status: response.status,\n        headers: response.headers,\n        durationMs: headersTime - startTime,\n      }),\n    );\n\n    return { response, options, controller, requestLogID, retryOfRequestLogID, startTime };\n  }\n\n  getAPIList<Item, PageClass extends Pagination.AbstractPage<Item> = Pagination.AbstractPage<Item>>(\n    path: string,\n    Page: new (...args: any[]) => PageClass,\n    opts?: RequestOptions,\n  ): Pagination.PagePromise<PageClass, Item> {\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\n  }\n\n  requestAPIList<\n    Item = unknown,\n    PageClass extends Pagination.AbstractPage<Item> = Pagination.AbstractPage<Item>,\n  >(\n    Page: new (...args: ConstructorParameters<typeof Pagination.AbstractPage>) => PageClass,\n    options: FinalRequestOptions,\n  ): Pagination.PagePromise<PageClass, Item> {\n    const request = this.makeRequest(options, null, undefined);\n    return new Pagination.PagePromise<PageClass, Item>(this as any as OpenAI, request, Page);\n  }\n\n  async fetchWithTimeout(\n    url: RequestInfo,\n    init: RequestInit | undefined,\n    ms: number,\n    controller: AbortController,\n  ): Promise<Response> {\n    const { signal, method, ...options } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n\n    const timeout = setTimeout(() => controller.abort(), ms);\n\n    const isReadableBody =\n      ((globalThis as any).ReadableStream && options.body instanceof (globalThis as any).ReadableStream) ||\n      (typeof options.body === 'object' && options.body !== null && Symbol.asyncIterator in options.body);\n\n    const fetchOptions: RequestInit = {\n      signal: controller.signal as any,\n      ...(isReadableBody ? { duplex: 'half' } : {}),\n      method: 'GET',\n      ...options,\n    };\n    if (method) {\n      // Custom methods like 'patch' need to be uppercased\n      // See https://github.com/nodejs/undici/issues/2294\n      fetchOptions.method = method.toUpperCase();\n    }\n\n    try {\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n      return await this.fetch.call(undefined, url, fetchOptions);\n    } finally {\n      clearTimeout(timeout);\n    }\n  }\n\n  private shouldRetry(response: Response): boolean {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n\n    return false;\n  }\n\n  private async retryRequest(\n    options: FinalRequestOptions,\n    retriesRemaining: number,\n    requestLogID: string,\n    responseHeaders?: Headers | undefined,\n  ): Promise<APIResponseProps> {\n    let timeoutMillis: number | undefined;\n\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders?.get('retry-after-ms');\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders?.get('retry-after');\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      const maxRetries = options.maxRetries ?? this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n\n    return this.makeRequest(options, retriesRemaining - 1, requestLogID);\n  }\n\n  private calculateDefaultRetryTimeoutMillis(retriesRemaining: number, maxRetries: number): number {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n\n    const numRetries = maxRetries - retriesRemaining;\n\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n\n    return sleepSeconds * jitter * 1000;\n  }\n\n  buildRequest(\n    inputOptions: FinalRequestOptions,\n    { retryCount = 0 }: { retryCount?: number } = {},\n  ): { req: FinalizedRequestInit; url: string; timeout: number } {\n    const options = { ...inputOptions };\n    const { method, path, query, defaultBaseURL } = options;\n\n    const url = this.buildURL(path!, query as Record<string, unknown>, defaultBaseURL);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    options.timeout = options.timeout ?? this.timeout;\n    const { bodyHeaders, body } = this.buildBody({ options });\n    const reqHeaders = this.buildHeaders({ options: inputOptions, method, bodyHeaders, retryCount });\n\n    const req: FinalizedRequestInit = {\n      method,\n      headers: reqHeaders,\n      ...(options.signal && { signal: options.signal }),\n      ...((globalThis as any).ReadableStream &&\n        body instanceof (globalThis as any).ReadableStream && { duplex: 'half' }),\n      ...(body && { body }),\n      ...((this.fetchOptions as any) ?? {}),\n      ...((options.fetchOptions as any) ?? {}),\n    };\n\n    return { req, url, timeout: options.timeout };\n  }\n\n  private buildHeaders({\n    options,\n    method,\n    bodyHeaders,\n    retryCount,\n  }: {\n    options: FinalRequestOptions;\n    method: HTTPMethod;\n    bodyHeaders: HeadersLike;\n    retryCount: number;\n  }): Headers {\n    let idempotencyHeaders: HeadersLike = {};\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      idempotencyHeaders[this.idempotencyHeader] = options.idempotencyKey;\n    }\n\n    const headers = buildHeaders([\n      idempotencyHeaders,\n      {\n        Accept: 'application/json',\n        'User-Agent': this.getUserAgent(),\n        'X-Stainless-Retry-Count': String(retryCount),\n        ...(options.timeout ? { 'X-Stainless-Timeout': String(Math.trunc(options.timeout / 1000)) } : {}),\n        ...getPlatformHeaders(),\n        'OpenAI-Organization': this.organization,\n        'OpenAI-Project': this.project,\n      },\n      this.authHeaders(options),\n      this._options.defaultHeaders,\n      bodyHeaders,\n      options.headers,\n    ]);\n\n    this.validateHeaders(headers);\n\n    return headers.values;\n  }\n\n  private buildBody({ options: { body, headers: rawHeaders } }: { options: FinalRequestOptions }): {\n    bodyHeaders: HeadersLike;\n    body: BodyInit | undefined;\n  } {\n    if (!body) {\n      return { bodyHeaders: undefined, body: undefined };\n    }\n    const headers = buildHeaders([rawHeaders]);\n    if (\n      // Pass raw type verbatim\n      ArrayBuffer.isView(body) ||\n      body instanceof ArrayBuffer ||\n      body instanceof DataView ||\n      (typeof body === 'string' &&\n        // Preserve legacy string encoding behavior for now\n        headers.values.has('content-type')) ||\n      // `Blob` is superset of `File`\n      body instanceof Blob ||\n      // `FormData` -> `multipart/form-data`\n      body instanceof FormData ||\n      // `URLSearchParams` -> `application/x-www-form-urlencoded`\n      body instanceof URLSearchParams ||\n      // Send chunked stream (each chunk has own `length`)\n      ((globalThis as any).ReadableStream && body instanceof (globalThis as any).ReadableStream)\n    ) {\n      return { bodyHeaders: undefined, body: body as BodyInit };\n    } else if (\n      typeof body === 'object' &&\n      (Symbol.asyncIterator in body ||\n        (Symbol.iterator in body && 'next' in body && typeof body.next === 'function'))\n    ) {\n      return { bodyHeaders: undefined, body: Shims.ReadableStreamFrom(body as AsyncIterable<Uint8Array>) };\n    } else {\n      return this.#encoder({ body, headers });\n    }\n  }\n\n  static OpenAI = this;\n  static DEFAULT_TIMEOUT = 600000; // 10 minutes\n\n  static OpenAIError = Errors.OpenAIError;\n  static APIError = Errors.APIError;\n  static APIConnectionError = Errors.APIConnectionError;\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\n  static APIUserAbortError = Errors.APIUserAbortError;\n  static NotFoundError = Errors.NotFoundError;\n  static ConflictError = Errors.ConflictError;\n  static RateLimitError = Errors.RateLimitError;\n  static BadRequestError = Errors.BadRequestError;\n  static AuthenticationError = Errors.AuthenticationError;\n  static InternalServerError = Errors.InternalServerError;\n  static PermissionDeniedError = Errors.PermissionDeniedError;\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\n\n  static toFile = Uploads.toFile;\n\n  completions: API.Completions = new API.Completions(this);\n  chat: API.Chat = new API.Chat(this);\n  embeddings: API.Embeddings = new API.Embeddings(this);\n  files: API.Files = new API.Files(this);\n  images: API.Images = new API.Images(this);\n  audio: API.Audio = new API.Audio(this);\n  moderations: API.Moderations = new API.Moderations(this);\n  models: API.Models = new API.Models(this);\n  fineTuning: API.FineTuning = new API.FineTuning(this);\n  graders: API.Graders = new API.Graders(this);\n  vectorStores: API.VectorStores = new API.VectorStores(this);\n  beta: API.Beta = new API.Beta(this);\n  batches: API.Batches = new API.Batches(this);\n  uploads: API.Uploads = new API.Uploads(this);\n  responses: API.Responses = new API.Responses(this);\n  evals: API.Evals = new API.Evals(this);\n  containers: API.Containers = new API.Containers(this);\n}\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.FineTuning = FineTuning;\nOpenAI.Graders = Graders;\nOpenAI.VectorStores = VectorStores;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.Uploads = UploadsAPIUploads;\nOpenAI.Responses = Responses;\nOpenAI.Evals = Evals;\nOpenAI.Containers = Containers;\nexport declare namespace OpenAI {\n  export type RequestOptions = Opts.RequestOptions;\n\n  export import Page = Pagination.Page;\n  export { type PageResponse as PageResponse };\n\n  export import CursorPage = Pagination.CursorPage;\n  export { type CursorPageParams as CursorPageParams, type CursorPageResponse as CursorPageResponse };\n\n  export {\n    Completions as Completions,\n    type Completion as Completion,\n    type CompletionChoice as CompletionChoice,\n    type CompletionUsage as CompletionUsage,\n    type CompletionCreateParams as CompletionCreateParams,\n    type CompletionCreateParamsNonStreaming as CompletionCreateParamsNonStreaming,\n    type CompletionCreateParamsStreaming as CompletionCreateParamsStreaming,\n  };\n\n  export {\n    Chat as Chat,\n    type ChatCompletion as ChatCompletion,\n    type ChatCompletionAssistantMessageParam as ChatCompletionAssistantMessageParam,\n    type ChatCompletionAudio as ChatCompletionAudio,\n    type ChatCompletionAudioParam as ChatCompletionAudioParam,\n    type ChatCompletionChunk as ChatCompletionChunk,\n    type ChatCompletionContentPart as ChatCompletionContentPart,\n    type ChatCompletionContentPartImage as ChatCompletionContentPartImage,\n    type ChatCompletionContentPartInputAudio as ChatCompletionContentPartInputAudio,\n    type ChatCompletionContentPartRefusal as ChatCompletionContentPartRefusal,\n    type ChatCompletionContentPartText as ChatCompletionContentPartText,\n    type ChatCompletionDeleted as ChatCompletionDeleted,\n    type ChatCompletionDeveloperMessageParam as ChatCompletionDeveloperMessageParam,\n    type ChatCompletionFunctionCallOption as ChatCompletionFunctionCallOption,\n    type ChatCompletionFunctionMessageParam as ChatCompletionFunctionMessageParam,\n    type ChatCompletionMessage as ChatCompletionMessage,\n    type ChatCompletionMessageParam as ChatCompletionMessageParam,\n    type ChatCompletionMessageToolCall as ChatCompletionMessageToolCall,\n    type ChatCompletionModality as ChatCompletionModality,\n    type ChatCompletionNamedToolChoice as ChatCompletionNamedToolChoice,\n    type ChatCompletionPredictionContent as ChatCompletionPredictionContent,\n    type ChatCompletionRole as ChatCompletionRole,\n    type ChatCompletionStoreMessage as ChatCompletionStoreMessage,\n    type ChatCompletionStreamOptions as ChatCompletionStreamOptions,\n    type ChatCompletionSystemMessageParam as ChatCompletionSystemMessageParam,\n    type ChatCompletionTokenLogprob as ChatCompletionTokenLogprob,\n    type ChatCompletionTool as ChatCompletionTool,\n    type ChatCompletionToolChoiceOption as ChatCompletionToolChoiceOption,\n    type ChatCompletionToolMessageParam as ChatCompletionToolMessageParam,\n    type ChatCompletionUserMessageParam as ChatCompletionUserMessageParam,\n    type ChatCompletionReasoningEffort as ChatCompletionReasoningEffort,\n    type ChatCompletionsPage as ChatCompletionsPage,\n    type ChatCompletionCreateParams as ChatCompletionCreateParams,\n    type ChatCompletionCreateParamsNonStreaming as ChatCompletionCreateParamsNonStreaming,\n    type ChatCompletionCreateParamsStreaming as ChatCompletionCreateParamsStreaming,\n    type ChatCompletionUpdateParams as ChatCompletionUpdateParams,\n    type ChatCompletionListParams as ChatCompletionListParams,\n  };\n\n  export {\n    Embeddings as Embeddings,\n    type CreateEmbeddingResponse as CreateEmbeddingResponse,\n    type Embedding as Embedding,\n    type EmbeddingModel as EmbeddingModel,\n    type EmbeddingCreateParams as EmbeddingCreateParams,\n  };\n\n  export {\n    Files as Files,\n    type FileContent as FileContent,\n    type FileDeleted as FileDeleted,\n    type FileObject as FileObject,\n    type FilePurpose as FilePurpose,\n    type FileObjectsPage as FileObjectsPage,\n    type FileCreateParams as FileCreateParams,\n    type FileListParams as FileListParams,\n  };\n\n  export {\n    Images as Images,\n    type Image as Image,\n    type ImageModel as ImageModel,\n    type ImagesResponse as ImagesResponse,\n    type ImageCreateVariationParams as ImageCreateVariationParams,\n    type ImageEditParams as ImageEditParams,\n    type ImageGenerateParams as ImageGenerateParams,\n  };\n\n  export { Audio as Audio, type AudioModel as AudioModel, type AudioResponseFormat as AudioResponseFormat };\n\n  export {\n    Moderations as Moderations,\n    type Moderation as Moderation,\n    type ModerationImageURLInput as ModerationImageURLInput,\n    type ModerationModel as ModerationModel,\n    type ModerationMultiModalInput as ModerationMultiModalInput,\n    type ModerationTextInput as ModerationTextInput,\n    type ModerationCreateResponse as ModerationCreateResponse,\n    type ModerationCreateParams as ModerationCreateParams,\n  };\n\n  export {\n    Models as Models,\n    type Model as Model,\n    type ModelDeleted as ModelDeleted,\n    type ModelsPage as ModelsPage,\n  };\n\n  export { FineTuning as FineTuning };\n\n  export { Graders as Graders };\n\n  export {\n    VectorStores as VectorStores,\n    type AutoFileChunkingStrategyParam as AutoFileChunkingStrategyParam,\n    type FileChunkingStrategy as FileChunkingStrategy,\n    type FileChunkingStrategyParam as FileChunkingStrategyParam,\n    type OtherFileChunkingStrategyObject as OtherFileChunkingStrategyObject,\n    type StaticFileChunkingStrategy as StaticFileChunkingStrategy,\n    type StaticFileChunkingStrategyObject as StaticFileChunkingStrategyObject,\n    type StaticFileChunkingStrategyObjectParam as StaticFileChunkingStrategyObjectParam,\n    type VectorStore as VectorStore,\n    type VectorStoreDeleted as VectorStoreDeleted,\n    type VectorStoreSearchResponse as VectorStoreSearchResponse,\n    type VectorStoresPage as VectorStoresPage,\n    type VectorStoreSearchResponsesPage as VectorStoreSearchResponsesPage,\n    type VectorStoreCreateParams as VectorStoreCreateParams,\n    type VectorStoreUpdateParams as VectorStoreUpdateParams,\n    type VectorStoreListParams as VectorStoreListParams,\n    type VectorStoreSearchParams as VectorStoreSearchParams,\n  };\n\n  export { Beta as Beta };\n\n  export {\n    Batches as Batches,\n    type Batch as Batch,\n    type BatchError as BatchError,\n    type BatchRequestCounts as BatchRequestCounts,\n    type BatchesPage as BatchesPage,\n    type BatchCreateParams as BatchCreateParams,\n    type BatchListParams as BatchListParams,\n  };\n\n  export {\n    UploadsAPIUploads as Uploads,\n    type Upload as Upload,\n    type UploadCreateParams as UploadCreateParams,\n    type UploadCompleteParams as UploadCompleteParams,\n  };\n\n  export { Responses as Responses };\n\n  export {\n    Evals as Evals,\n    type EvalCustomDataSourceConfig as EvalCustomDataSourceConfig,\n    type EvalStoredCompletionsDataSourceConfig as EvalStoredCompletionsDataSourceConfig,\n    type EvalCreateResponse as EvalCreateResponse,\n    type EvalRetrieveResponse as EvalRetrieveResponse,\n    type EvalUpdateResponse as EvalUpdateResponse,\n    type EvalListResponse as EvalListResponse,\n    type EvalDeleteResponse as EvalDeleteResponse,\n    type EvalListResponsesPage as EvalListResponsesPage,\n    type EvalCreateParams as EvalCreateParams,\n    type EvalUpdateParams as EvalUpdateParams,\n    type EvalListParams as EvalListParams,\n  };\n\n  export {\n    Containers as Containers,\n    type ContainerCreateResponse as ContainerCreateResponse,\n    type ContainerRetrieveResponse as ContainerRetrieveResponse,\n    type ContainerListResponse as ContainerListResponse,\n    type ContainerListResponsesPage as ContainerListResponsesPage,\n    type ContainerCreateParams as ContainerCreateParams,\n    type ContainerListParams as ContainerListParams,\n  };\n\n  export type AllModels = API.AllModels;\n  export type ChatModel = API.ChatModel;\n  export type ComparisonFilter = API.ComparisonFilter;\n  export type CompoundFilter = API.CompoundFilter;\n  export type ErrorObject = API.ErrorObject;\n  export type FunctionDefinition = API.FunctionDefinition;\n  export type FunctionParameters = API.FunctionParameters;\n  export type Metadata = API.Metadata;\n  export type Reasoning = API.Reasoning;\n  export type ReasoningEffort = API.ReasoningEffort;\n  export type ResponseFormatJSONObject = API.ResponseFormatJSONObject;\n  export type ResponseFormatJSONSchema = API.ResponseFormatJSONSchema;\n  export type ResponseFormatText = API.ResponseFormatText;\n  export type ResponsesModel = API.ResponsesModel;\n}\n","import type { RequestInit } from './internal/builtin-types';\nimport * as Errors from './error';\nimport { FinalRequestOptions } from './internal/request-options';\nimport { isObj, readEnv } from './internal/utils';\nimport { ClientOptions, OpenAI } from './client';\nimport { buildHeaders, NullableHeaders } from './internal/headers';\n\n/** API Client for interfacing with the Azure OpenAI API. */\nexport interface AzureClientOptions extends ClientOptions {\n  /**\n   * Defaults to process.env['OPENAI_API_VERSION'].\n   */\n  apiVersion?: string | undefined;\n\n  /**\n   * Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n   */\n  endpoint?: string | undefined;\n\n  /**\n   * A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n   * Note: this means you won't be able to use non-deployment endpoints. Not supported with Assistants APIs.\n   */\n  deployment?: string | undefined;\n\n  /**\n   * Defaults to process.env['AZURE_OPENAI_API_KEY'].\n   */\n  apiKey?: string | undefined;\n\n  /**\n   * A function that returns an access token for Microsoft Entra (formerly known as Azure Active Directory),\n   * which will be invoked on every request.\n   */\n  azureADTokenProvider?: (() => Promise<string>) | undefined;\n}\n\n/** API Client for interfacing with the Azure OpenAI API. */\nexport class AzureOpenAI extends OpenAI {\n  private _azureADTokenProvider: (() => Promise<string>) | undefined;\n  deploymentName: string | undefined;\n  apiVersion: string = '';\n\n  /**\n   * API Client for interfacing with the Azure OpenAI API.\n   *\n   * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n   * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n   * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n   * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n   * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n   * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor({\n    baseURL = readEnv('OPENAI_BASE_URL'),\n    apiKey = readEnv('AZURE_OPENAI_API_KEY'),\n    apiVersion = readEnv('OPENAI_API_VERSION'),\n    endpoint,\n    deployment,\n    azureADTokenProvider,\n    dangerouslyAllowBrowser,\n    ...opts\n  }: AzureClientOptions = {}) {\n    if (!apiVersion) {\n      throw new Errors.OpenAIError(\n        \"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\",\n      );\n    }\n\n    if (typeof azureADTokenProvider === 'function') {\n      dangerouslyAllowBrowser = true;\n    }\n\n    if (!azureADTokenProvider && !apiKey) {\n      throw new Errors.OpenAIError(\n        'Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.',\n      );\n    }\n\n    if (azureADTokenProvider && apiKey) {\n      throw new Errors.OpenAIError(\n        'The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.',\n      );\n    }\n\n    // define a sentinel value to avoid any typing issues\n    apiKey ??= API_KEY_SENTINEL;\n\n    opts.defaultQuery = { ...opts.defaultQuery, 'api-version': apiVersion };\n\n    if (!baseURL) {\n      if (!endpoint) {\n        endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n      }\n\n      if (!endpoint) {\n        throw new Errors.OpenAIError(\n          'Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable',\n        );\n      }\n\n      baseURL = `${endpoint}/openai`;\n    } else {\n      if (endpoint) {\n        throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n      }\n    }\n\n    super({\n      apiKey,\n      baseURL,\n      ...opts,\n      ...(dangerouslyAllowBrowser !== undefined ? { dangerouslyAllowBrowser } : {}),\n    });\n\n    this._azureADTokenProvider = azureADTokenProvider;\n    this.apiVersion = apiVersion;\n    this.deploymentName = deployment;\n  }\n\n  override buildRequest(\n    options: FinalRequestOptions,\n    props: { retryCount?: number } = {},\n  ): { req: RequestInit & { headers: Headers }; url: string; timeout: number } {\n    if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n      if (!isObj(options.body)) {\n        throw new Error('Expected request body to be an object');\n      }\n      const model = this.deploymentName || options.body['model'] || options.__metadata?.['model'];\n      if (model !== undefined && !this.baseURL.includes('/deployments')) {\n        options.path = `/deployments/${model}${options.path}`;\n      }\n    }\n    return super.buildRequest(options, props);\n  }\n\n  async _getAzureADToken(): Promise<string | undefined> {\n    if (typeof this._azureADTokenProvider === 'function') {\n      const token = await this._azureADTokenProvider();\n      if (!token || typeof token !== 'string') {\n        throw new Errors.OpenAIError(\n          `Expected 'azureADTokenProvider' argument to return a string but it returned ${token}`,\n        );\n      }\n      return token;\n    }\n    return undefined;\n  }\n\n  protected override authHeaders(opts: FinalRequestOptions): NullableHeaders | undefined {\n    return;\n  }\n\n  protected override async prepareOptions(opts: FinalRequestOptions): Promise<void> {\n    opts.headers = buildHeaders([opts.headers]);\n\n    /**\n     * The user should provide a bearer token provider if they want\n     * to use Azure AD authentication. The user shouldn't set the\n     * Authorization header manually because the header is overwritten\n     * with the Azure AD token if a bearer token provider is provided.\n     */\n    if (opts.headers.values.get('Authorization') || opts.headers.values.get('api-key')) {\n      return super.prepareOptions(opts);\n    }\n\n    const token = await this._getAzureADToken();\n    if (token) {\n      opts.headers.values.set('Authorization', `Bearer ${token}`);\n    } else if (this.apiKey !== API_KEY_SENTINEL) {\n      opts.headers.values.set('api-key', this.apiKey);\n    } else {\n      throw new Errors.OpenAIError('Unable to handle auth');\n    }\n    return super.prepareOptions(opts);\n  }\n}\n\nconst _deployments_endpoints = new Set([\n  '/completions',\n  '/chat/completions',\n  '/embeddings',\n  '/audio/transcriptions',\n  '/audio/translations',\n  '/audio/speech',\n  '/images/generations',\n  '/batches',\n  '/images/edits',\n]);\n\nconst API_KEY_SENTINEL = '<Missing Key>';\n","import OpenAI from 'openai'\r\nimport { ConversationBlock, IMemoryProvider, ProviderConfiguration } from './MemoryProviders'\r\nimport { parseIntWithdefault as parseIntWithDefault } from '../util/parseIntUtil'\r\n\r\nexport default class DeepseekProvider implements IMemoryProvider {\r\n\tprivate api: OpenAI\r\n\tprivate lastToken: string = ''\r\n\r\n\tconstructor() {\r\n\t\tthis.api = new OpenAI({\r\n\t\t\tapiKey: '',\r\n\t\t\tdangerouslyAllowBrowser: true,\r\n\t\t\tbaseURL: 'https://api.deepseek.com',\r\n\t\t})\r\n\t}\r\n\r\n\tasync init() {\r\n\r\n\t}\r\n\r\n\tasync send(setting: Record<string, any>, history: ConversationBlock[], onUpdate: (conversation: ConversationBlock) => void, playerName: string): Promise<void> {\r\n\t\ttry {\r\n\t\t\tif (this.lastToken !== setting.Token) {\r\n\t\t\t\tthis.lastToken = setting.Token\r\n\t\t\t\tthis.api = new OpenAI({\r\n\t\t\t\t\tapiKey: setting.Token,\r\n\t\t\t\t\tdangerouslyAllowBrowser: true,\r\n\t\t\t\t\tbaseURL: 'https://api.deepseek.com',\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\thistory = [...history]\r\n\r\n\t\t\tfor (const index in history) {\r\n\t\t\t\tif (history[index].meta) {\r\n\t\t\t\t\tdelete history[index].meta\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst start = Date.now()\r\n\t\t\tconst chatCompletion = await this.api.chat.completions.create({\r\n\t\t\t\t'messages': history,\r\n\t\t\t\t'model': setting.Model,\r\n\t\t\t\t'temperature': setting.Temperature || 1,\r\n\t\t\t\t'max_completion_tokens': parseIntWithDefault(setting['Max Tokens'], 512),\r\n\t\t\t\t'top_p': 1,\r\n\t\t\t\t'stream': true,\r\n\t\t\t\t'stop': `${playerName}: `\r\n\t\t\t})\r\n\r\n\t\t\tlet target = ''\r\n\t\t\t\r\n\t\t\tfor await (const chunk of chatCompletion) {\r\n\t\t\t\ttarget += chunk.choices[0]?.delta?.content || ''\r\n\t\t\t\tconst usage = chunk.usage\r\n\t\t\t\tonUpdate({\r\n\t\t\t\t\trole: 'assistant',\r\n\t\t\t\t\tcontent: target,\r\n\t\t\t\t\tmeta: usage ? {\r\n\t\t\t\t\t\tcompletionTokens: usage.total_tokens - usage.prompt_tokens,\r\n\t\t\t\t\t\tcontextTokens: usage.prompt_tokens,\r\n\t\t\t\t\t\tdelay: (Date.now() - start) / 1000\r\n\t\t\t\t\t} : undefined\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tconsole.log('error', e)\r\n\t\t\tconsole.log(e instanceof OpenAI.APIError)\r\n\t\t\tif (e instanceof OpenAI.APIError) {\r\n\t\t\t\tthrow new Error(`${e.type}: ${e.message}`)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow e\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trenderControls(): Record<string, ProviderConfiguration> {\r\n\t\treturn {\r\n\t\t\tToken: {\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\t// description: 'This is never saved for security reasons.'\r\n\t\t\t},\r\n\t\t\tModel: {\r\n\t\t\t\ttype: 'select',\r\n\t\t\t\tdefault: 'deepseek-chat',\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t'deepseek-chat',\r\n\t\t\t\t\t'deepseek-reasoner'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t'Max Tokens': {\r\n\t\t\t\ttype: 'number',\r\n\t\t\t\tdefault: 512,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 4096\r\n\t\t\t},\r\n\t\t\tTemperature: {\r\n\t\t\t\ttype: 'range',\r\n\t\t\t\tdefault: 1,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 2,\r\n\t\t\t\tstep: 0.1\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import { ConversationBlock, IMemoryProvider, ProviderConfiguration } from './MemoryProviders'\r\nimport axios from 'axios'\r\n\r\nexport default class LocalOllamaProvider implements IMemoryProvider {\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\tasync init() {\r\n\r\n\t}\r\n\r\n\tasync send(setting: Record<string, any>, history: ConversationBlock[], onUpdate: (conversation: ConversationBlock) => void, playerName: string): Promise<void> {\r\n\t\ttry {\r\n\t\t\thistory = [...history]\r\n\t\t\tconst system = history.shift()?.content\r\n\r\n\t\t\tfor (const index in history) {\r\n\t\t\t\tif (history[index].meta) {\r\n\t\t\t\t\tdelete history[index].meta\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst start = Date.now()\r\n\t\t\tconst completion = (await axios.post(setting.Endpoint, {\r\n\t\t\t\tmodel: setting.Model,\r\n\t\t\t\tmessages: history,\r\n\t\t\t\tsystem,\r\n\t\t\t\toptions: {\r\n\t\t\t\t\ttemperature: setting.Temperature || 1\r\n\t\t\t\t},\r\n\t\t\t\tstream: false\r\n\t\t\t})).data\r\n\r\n\t\t\tlet target = ''\r\n\t\t\t\r\n\t\t\tonUpdate({\r\n\t\t\t\trole: 'assistant',\r\n\t\t\t\tcontent: target,\r\n\t\t\t\tmeta: {\r\n\t\t\t\t\tcompletionTokens: completion.eval_count - completion.prompt_eval_count,\r\n\t\t\t\t\tcontextTokens: completion.prompt_eval_count,\r\n\t\t\t\t\tdelay: (Date.now() - start) / 1000\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tconsole.log('error', e)\r\n\t\t\tthrow e\r\n\t\t}\r\n\t}\r\n\r\n\trenderControls(): Record<string, ProviderConfiguration> {\r\n\t\treturn {\r\n\t\t\tEndpoint: {\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\tdefault: 'http://localhost:11434/api/generate',\r\n\t\t\t\t// description: 'This is never saved for security reasons.'\r\n\t\t\t},\r\n\t\t\tModel: {\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tTemperature: {\r\n\t\t\t\ttype: 'range',\r\n\t\t\t\tdefault: 1,\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 2,\r\n\t\t\t\tstep: 0.1\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import DummyProvider from \"./DummyProvider\"\r\nimport GroqProvider from \"./GroqProvider\"\r\nimport GeminiProvider from \"./GeminiProvider\"\r\nimport DeepseekProvider from './DeepseekProvider'\r\nimport LocalOllamaProvider  from './LocalOllamaProvider'\r\nimport additions from './addendums.json'\r\n\r\nexport interface IMemoryProvider {\r\n\tinit(): Promise<void>\r\n\tsend(setting: Record<string, any>, history: ConversationBlock[], onUpdate: (conversation: ConversationBlock) => void, playerName: string): Promise<void>\r\n\trenderControls(): Record<string, ProviderConfiguration>\r\n}\r\n\r\nexport type ProviderConfiguration = {\r\n\ttype: 'text' | 'password' | 'number' | 'range' | 'select'\r\n\tdefault: any\r\n\tmin?: number\r\n\tmax?: number\r\n\tstep?: number\r\n\toptions?: string[]\r\n\tdescription?: string\r\n\tno_save?: boolean\r\n}\r\n\r\nexport type ConversationBlock = {\r\n\trole: 'system' | 'user' | 'assistant',\r\n\tcontent: string\r\n\tmeta?: {\r\n\t\tcontextTokens: number,\r\n\t\tcompletionTokens: number,\r\n\t\tdelay: number\r\n\t}\r\n}\r\n\r\nexport type Scenario = {\r\n\tid: string,\r\n\tplayer_name: string,\r\n\tmajor_characters: string,\r\n\tminor_characters: string,\r\n\tcontext: string,\r\n\tobjective: string,\r\n\tdirectives: string,\r\n\tlines: string\r\n}\r\n\r\nexport function CompileScenario (scenario: Scenario): string {\r\n\treturn [additions.base, scenario.context, scenario.objective, scenario.directives].join('\\n\\n')\r\n}\r\n\r\nexport function SerializeScenario (scenario: Scenario): string {\r\n\treturn Object.entries(scenario).map(([key, value]) => `[[${key}]]\\r\\n${typeof value === 'string' ?  value : (value as unknown as string[]).join('\\r\\n')}\\r\\n`).join('\\r\\n')\r\n}\r\n\r\nconst factories: Record<string, () => IMemoryProvider> = {\r\n\t'none': () => new DummyProvider(),\r\n\t'groq': () => new GroqProvider(),\r\n\t'gemini': () => new GeminiProvider(),\r\n\t'deepseek': () => new DeepseekProvider(),\r\n\t'local_ollama': () => new LocalOllamaProvider()\r\n}\r\n\r\nexport default factories","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical = false,\n  className,\n  role = 'group',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, {\n    ...rest,\n    ref: ref,\n    role: role,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nexport default ButtonGroup;","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  linkStyle,\n  linkClassName,\n  as = Anchor,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : as;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: classNames('page-link', linkClassName),\n      style: linkStyle,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","import { useCallback, useRef, useState } from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nexport function FileDialog({ show, onFileUpload, onCancel }: { show: boolean, onFileUpload: (file: any) => void, onCancel: () => void }) {\r\n\tconst [error, setError] = useState<string | null>(null)\r\n\tconst fileUploadRef = useRef<HTMLInputElement | null>(null)\r\n\tconst onSubmit = useCallback(async () => {\r\n\t\t// Ignore if < 0 files\r\n\t\tif (!fileUploadRef.current?.files?.length) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst file = await fileUploadRef.current.files[0].text()\r\n\t\tconst obj = JSON.parse(file)\r\n\t\tif (!Array.isArray(obj)) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tonFileUpload(JSON.parse(file))\r\n\t}, [onFileUpload])\r\n\r\n\treturn <Modal show={show} onHide={onCancel}>\r\n\t\t<Modal.Header closeButton>\r\n\t\t\t<Modal.Title>Import File...</Modal.Title>\r\n\t\t</Modal.Header>\r\n\r\n\t\t<Modal.Body>\r\n\t\t\t{error ? <Alert variant='danger' onClose={() => setError(null)}>{error}</Alert> : null}\r\n\t\t\t<Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n\t\t\t\t<Form.Control type=\"file\" ref={(ref: HTMLInputElement) => { fileUploadRef.current = ref }} />\r\n\t\t\t</Form.Group>\r\n\t\t</Modal.Body>\r\n\r\n\t\t<Modal.Footer>\r\n\t\t\t<Button variant=\"secondary\" onClick={onCancel}>Close</Button>\r\n\t\t\t<Button variant=\"primary\" onClick={onSubmit}>Import</Button>\r\n\t\t</Modal.Footer>\r\n\t</Modal>\r\n}\r\n\r\nexport function exportFile(content: any, fileName: string) {\r\n\tconst json = JSON.stringify(content, null, 2);\r\n\tconst blob = new Blob([json], { type: \"application/json\" });\r\n\tconst href = URL.createObjectURL(blob);\r\n\r\n\t// create \"a\" HTLM element with href to file\r\n\tconst link = document.createElement(\"a\");\r\n\tlink.href = href;\r\n\tlink.download = fileName + \".json\";\r\n\tdocument.body.appendChild(link);\r\n\tlink.click();\r\n\r\n\t// clean up \"a\" element & remove ObjectURL\r\n\tdocument.body.removeChild(link);\r\n\tURL.revokeObjectURL(href);\r\n}","import { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport './Trainer.css'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport MemoryProviders, { CompileScenario, ConversationBlock, IMemoryProvider, ProviderConfiguration, Scenario, SerializeScenario } from './memory/MemoryProviders'\r\nimport { ButtonGroup, Pagination } from 'react-bootstrap'\r\nimport promptsRaw from './memory/prompts.json'\r\nimport { exportFile, FileDialog } from './util/fileIo'\r\n\r\nconst prompts = promptsRaw as Record<string, Scenario>\r\n\r\ntype WorkingSetElement = {\r\n\tscenarioId: string,\r\n\tconversation: ConversationBlock[]\r\n}\r\n\r\nfunction ProviderConfigLine({ id, config, value, setter }: { id: string, config: ProviderConfiguration, value: any, setter: (id: string, value: any) => void }) {\r\n\tlet inner: React.ReactNode\r\n\tswitch (config.type) {\r\n\t\tcase 'text':\r\n\t\tcase 'password':\r\n\t\t\tinner = <Form.Control type={config.type} value={value ?? ''} onChange={e => setter(id, e.target.value)} />\r\n\t\t\tbreak\r\n\t\tcase 'number':\r\n\t\t\tinner = <Form.Control type='number' min={config.min} max={config.max} value={value ?? 0} onChange={e => setter(id, e.target.value)} />\r\n\t\t\tbreak\r\n\t\tcase 'range':\r\n\t\t\tinner = <Row>\r\n\t\t\t\t<Col md={2}>\r\n\t\t\t\t\t<Form.Label>{value}</Form.Label>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={10}>\r\n\t\t\t\t\t<Form.Range min={config.min} max={config.max} step={config.step} value={value ?? 0} onChange={e => setter(id, parseFloat(e.target.value))} />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\tbreak\r\n\t\tcase 'select':\r\n\t\t\tinner = <Form.Select value={value ?? ''} onChange={e => setter(id, e.target.value)}>\r\n\t\t\t\t{config.options && config.options.map(k => <option key={k}>{k}</option>)}\r\n\t\t\t</Form.Select>\r\n\t\t\tbreak\r\n\t}\r\n\r\n\treturn <Form.Group controlId={id} className=\"formBlock\">\r\n\t\t<Form.Label>{id}</Form.Label>\r\n\t\t{inner}\r\n\t\t{config.description ? <Form.Text muted>{config.description}</Form.Text> : null}\r\n\t</Form.Group>\r\n}\r\n\r\nfunction ScenarioSettingLine({ id, title, value, setter, disabled, inline, textarea }: {\r\n\tid: string,\r\n\ttitle: string,\r\n\tvalue?: Scenario,\r\n\tsetter: (reducer: (s: Scenario | undefined) => Scenario | undefined) => void,\r\n\tdisabled?: boolean,\r\n\tinline?: boolean,\r\n\ttextarea?: number\r\n}) {\r\n\t// let { responses: _, ...rest } = value ?? {};\r\n\tconst dict = value as Record<string, string> ?? {}\r\n\r\n\tconst onChange = useCallback((e: any) => {\r\n\t\tsetter(s => s ? { ...s, [id]: e.target.value } : undefined)\r\n\t}, [id, setter])\r\n\r\n\tif (inline) {\r\n\t\treturn <Form.Group controlId={title} as={Row} className=\"formBlock\">\r\n\t\t\t<Form.Label column sm={3}>{title}</Form.Label>\r\n\t\t\t<Col sm={9}>\r\n\t\t\t\t<Form.Control value={dict[id] ?? ''} onChange={onChange} disabled={disabled || !value} />\r\n\t\t\t</Col>\r\n\t\t</Form.Group>\r\n\t}\r\n\r\n\treturn <Form.Group controlId={title} className=\"formBlock\">\r\n\t\t<Form.Label>{title}</Form.Label>\r\n\t\t{\r\n\t\t\t<Form.Control\r\n\t\t\t\tas={textarea ? 'textarea' : undefined}\r\n\t\t\t\trows={textarea} value={dict[id] ?? ''}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tdisabled={disabled || !value}\r\n\t\t\t/>\r\n\t\t}\r\n\t</Form.Group>\r\n}\r\n\r\nfunction ConvoLine({ value, index, action, onContentChange, onRegenerate, onAction, readOnly }: {\r\n\tvalue: ConversationBlock,\r\n\tonContentChange: (newContent: ConversationBlock) => void,\r\n\tindex: number,\r\n\taction?: string,\r\n\tonRegenerate?: (index: number) => void,\r\n\tonAction?: (index: number) => void,\r\n\treadOnly?: boolean\r\n}) {\r\n\tconst textareaRef = useRef<HTMLTextAreaElement | null>(null)\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tif (!textareaRef.current) return\r\n\t\t// Reset height - important to shrink on delete\r\n\t\ttextareaRef.current.style.height = \"inherit\";\r\n\t\t// Set height\r\n\t\ttextareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\r\n\t}, [value.content]);\r\n\r\n\treturn <ListGroup.Item className='convoLineContainer'>\r\n\t\t<div className='convoHeader'>\r\n\t\t\t<div className='convoHeaderLeft'>\r\n\t\t\t\t<span className='convoSpeaker'>{value.role}</span>\r\n\t\t\t\t{value.meta ? <span className='convoLineMeta'>{value.meta.contextTokens} context tokens, {value.meta.completionTokens} completion tokens, {value.meta.delay.toFixed(3)}s</span> : null}\r\n\t\t\t\t{value.role === 'assistant' ? <span className='convoLineRefresh' onClick={() => { if (onRegenerate) onRegenerate(index) }}>&#10227;</span> : null}\r\n\t\t\t</div>\r\n\t\t\t{action ? <div className='convoHeaderDrop' onClick={() => { if (onAction) onAction(index) }}>{action}</div> : null}\r\n\t\t</div>\r\n\t\t<Form.Control\r\n\t\t\tref={textareaRef}\r\n\t\t\tas='textarea'\r\n\t\t\tclassName='convoLine'\r\n\t\t\tonChange={e => onContentChange({ ...value, content: e.target.value })}\r\n\t\t\tvalue={value.content}\r\n\t\t\treadOnly={readOnly}\r\n\t\t/>\r\n\t</ListGroup.Item>\r\n}\r\n\r\nfunction NewConvoDialog({ scenarioId, setScenarioId, commit }: { scenarioId?: string, setScenarioId: (s: string | undefined) => void, commit: () => void }) {\r\n\tconst [error, setError] = useState<string | undefined>()\r\n\tconst hide = useCallback(() => setScenarioId(undefined), [setScenarioId])\r\n\treturn <Modal show={Boolean(scenarioId)} onHide={hide}>\r\n\t\t<Modal.Header closeButton>\r\n\t\t\t<Modal.Title>Select a Scenario for Conversation</Modal.Title>\r\n\t\t</Modal.Header>\r\n\r\n\t\t<Modal.Body>\r\n\t\t\t{error ? <Alert variant='danger' onClose={() => setError(undefined)}>{error}</Alert> : null}\r\n\t\t\t<Form.Group controlId=\"formSelect\" className=\"mb-3\">\r\n\t\t\t\t<Form.Select value={scenarioId} onChange={e => setScenarioId(e.target.value)}>\r\n\t\t\t\t\t{Object.keys(prompts).map(s => <option key={s}>{s}</option>)}\r\n\t\t\t\t</Form.Select>\r\n\t\t\t</Form.Group>\r\n\t\t</Modal.Body>\r\n\r\n\t\t<Modal.Footer>\r\n\t\t\t<Button variant=\"secondary\" onClick={hide}>Close</Button>\r\n\t\t\t<Button variant=\"primary\" onClick={commit}>Add</Button>\r\n\t\t</Modal.Footer>\r\n\t</Modal>\r\n}\r\n\r\nfunction JumpDialog({ show, onCancel, onCommit, target, setTarget, min, max }: {\r\n\tshow: boolean,\r\n\tonCancel: () => void,\r\n\tonCommit: () => void,\r\n\ttarget: string,\r\n\tsetTarget: (page: string) => void,\r\n\tmin: number,\r\n\tmax: number\r\n}) {\r\n\treturn <Modal show={show} onHide={onCancel}>\r\n\t\t<Modal.Header closeButton>\r\n\t\t\t<Modal.Title>Jump to Page...</Modal.Title>\r\n\t\t</Modal.Header>\r\n\r\n\t\t<Modal.Body>\r\n\t\t\t<Form.Group controlId=\"formSelect\" className=\"mb-3\">\r\n\t\t\t\t<Form.Control type='number' min={min} max={max} value={target} onChange={e => setTarget(e.target.value)} />\r\n\t\t\t\t<Form.Text muted>{`Max ${max} pages`}</Form.Text>\r\n\t\t\t</Form.Group>\r\n\t\t</Modal.Body>\r\n\r\n\t\t<Modal.Footer>\r\n\t\t\t<Button variant=\"secondary\" onClick={onCancel}>Close</Button>\r\n\t\t\t<Button variant=\"primary\" onClick={onCommit}>Go</Button>\r\n\t\t</Modal.Footer>\r\n\t</Modal>\r\n}\r\n\r\nfunction CopyDialog({text, onClose}: {text?: string, onClose: () => void}) {\r\n\treturn <Modal show={Boolean(text)} onHide={onClose}>\r\n\t\t<Modal.Header closeButton>\r\n\t\t\t<Modal.Title>Copy Scenario</Modal.Title>\r\n\t\t</Modal.Header>\r\n\r\n\t\t<Modal.Body>\r\n\t\t\t<p className='copyText'>{text}</p>\r\n\t\t</Modal.Body>\r\n\r\n\t\t<Modal.Footer>\r\n\t\t\t<Button variant=\"secondary\" onClick={onClose}>Close</Button>\r\n\t\t</Modal.Footer>\r\n\t</Modal>\r\n}\r\n\r\nfunction Trainer() {\r\n\tconst [[providerKey, provider], setProviderPair] = useState<[string, IMemoryProvider]>(() => {\r\n\t\tconst defaultProvider = localStorage.getItem('defaultProvider') ?? 'none'\r\n\t\treturn [defaultProvider, MemoryProviders[defaultProvider]()]\r\n\t})\r\n\tconst [activeConfig, setActiveConfig] = useState<Record<string, any>>({})\r\n\tconst [workingSet, setWorkingSet] = useState<WorkingSetElement[]>([])\r\n\tconst [workingSetId, setWorkingSetId] = useState(-1)\r\n\tconst [scenario, setScenario] = useState<Scenario | undefined>(undefined)\r\n\tconst [convo, setConvo] = useState<ConversationBlock[]>([])\r\n\tconst [lock, setLock] = useState(false)\r\n\r\n\t// Dialog States\r\n\tconst [newDialogScenario, setNewDialogScenario] = useState<string | undefined>(undefined)\r\n\tconst [showFileDialog, setShowFileDialog] = useState<boolean>(false)\r\n\tconst [showJumpDialog, setShowJumpDialog] = useState<boolean>(false)\r\n\tconst [jumpTarget, setJumpTarget] = useState<string>('0')\r\n\tconst [copyText, setCopytext] = useState<string | undefined>(undefined)\r\n\r\n\t// Sync settings with selected provider\r\n\tuseEffect(() => {\r\n\t\tconst settingsManifest = provider.renderControls()\r\n\t\tconst inititalSettings: Record<string, any> = {}\r\n\r\n\t\tfor (const [setting, config] of Object.entries(settingsManifest)) {\r\n\t\t\tconst stored = localStorage.getItem(`${providerKey}_${setting}`)\r\n\t\t\tinititalSettings[setting] = stored ? JSON.parse(stored) : config.default\r\n\t\t}\r\n\r\n\t\tsetActiveConfig(inititalSettings)\r\n\t}, [providerKey, provider])\r\n\r\n\t// handle that stupid copy button\r\n\tconst handleCopy = useCallback(() => {\r\n\t\tif (!scenario) {\r\n\t\t\tconsole.log('no scenario')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst scenarioStr = SerializeScenario(scenario)\r\n\r\n\t\tif (navigator.clipboard) {\r\n\t\t\tnavigator.clipboard.writeText(scenarioStr)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(scenarioStr)\r\n\t\t\tsetCopytext(scenarioStr)\r\n\t\t}\r\n\t}, [scenario])\r\n\r\n\t// NavigationCallbacks\r\n\tconst handleClear = useCallback(() => {\r\n\t\tsetWorkingSet([])\r\n\t\tsetWorkingSetId(-1)\r\n\t\tsetScenario(undefined)\r\n\t\tsetConvo([])\r\n\t}, [])\r\n\r\n\tconst handleImport = useCallback((file: any) => {\r\n\t\tconst newWs = file as WorkingSetElement[]\r\n\r\n\t\tif (newWs.length === 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tsetWorkingSetId(workingSet.length)\r\n\t\tsetWorkingSet(ws => [...ws, ...newWs])\r\n\t\tsetScenario(prompts[newWs[0].scenarioId])\r\n\t\tsetConvo(newWs[0].conversation)\r\n\r\n\t\tsetShowFileDialog(false)\r\n\t}, [workingSet.length])\r\n\r\n\tconst saveConvoToWorkingSet = useCallback(() => {\r\n\t\tif (workingSetId < 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tsetWorkingSet(ws => {\r\n\t\t\tconst newWorkingSet = [...ws]\r\n\t\t\tnewWorkingSet[workingSetId].conversation = convo\r\n\t\t\treturn newWorkingSet\r\n\t\t})\r\n\t}, [convo, workingSetId])\r\n\r\n\tconst navigateTo = useCallback((index: number) => {\r\n\t\t// Save state\r\n\t\tsaveConvoToWorkingSet()\r\n\r\n\t\t// Load new convo\r\n\t\tsetWorkingSetId(index)\r\n\t\tconst { scenarioId, conversation } = workingSet[index]\r\n\t\tsetScenario(prompts[scenarioId])\r\n\t\tsetConvo(conversation)\r\n\t}, [saveConvoToWorkingSet, workingSet])\r\n\r\n\tconst insertConvoAfter = useCallback((index: number, scenarioId: string, conversation: ConversationBlock[] = []) => {\r\n\t\tsaveConvoToWorkingSet()\r\n\t\tsetWorkingSet(ws => {\r\n\t\t\tconst newWorkingSet = [...ws]\r\n\t\t\tnewWorkingSet.splice(index + 1, 0, {\r\n\t\t\t\tscenarioId: scenarioId,\r\n\t\t\t\tconversation\r\n\t\t\t})\r\n\t\t\treturn newWorkingSet\r\n\t\t})\r\n\t\tsetWorkingSetId(index + 1)\r\n\t\tsetScenario(prompts[scenarioId])\r\n\t\tsetConvo(conversation)\r\n\t}, [saveConvoToWorkingSet])\r\n\r\n\tconst handleDuplicate = useCallback(() => {\r\n\t\tif (!scenario) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tinsertConvoAfter(workingSetId, scenario.id, convo)\r\n\t}, [insertConvoAfter, scenario, workingSetId, convo])\r\n\r\n\tconst handleReset = useCallback(() => {\r\n\t\tconst current = workingSet[workingSetId]\r\n\t\tsetConvo(current.conversation)\r\n\t\tsetScenario(prompts[current.scenarioId])\r\n\t}, [workingSet, workingSetId])\r\n\r\n\tconst handleNewConvo = useCallback(() => {\r\n\t\tif (!newDialogScenario) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tinsertConvoAfter(workingSetId, newDialogScenario)\r\n\t\tsetNewDialogScenario(undefined) // close the dialog\r\n\t}, [insertConvoAfter, newDialogScenario, workingSetId])\r\n\r\n\tconst handleDelete = useCallback(() => {\r\n\t\tconst newWorkingSet = [...workingSet]\r\n\t\tnewWorkingSet.splice(workingSetId, 1)\r\n\t\tsetWorkingSet(newWorkingSet)\r\n\r\n\t\tconst isCleared = newWorkingSet.length === 0\r\n\t\tconst newIndex = isCleared ? -1 : Math.max(0, workingSetId - 1)\r\n\t\tsetWorkingSetId(newIndex)\r\n\r\n\t\tsetScenario(isCleared ? undefined : prompts[newWorkingSet[newIndex].scenarioId])\r\n\t\tsetConvo(isCleared ? [] : newWorkingSet[newIndex].conversation)\r\n\t}, [workingSet, workingSetId])\r\n\r\n\t// Setting Handlers\r\n\tconst handleConfigSet = useCallback((id: string, value: any) => {\r\n\t\tsetActiveConfig(config => ({ ...config, [id]: value }))\r\n\t}, [])\r\n\r\n\r\n\t// Conversation Module Handlers\r\n\tconst curryConvoSetter = useCallback((index: number) => {\r\n\t\treturn (conversation: ConversationBlock): void => {\r\n\t\t\tsetConvo(c => {\r\n\t\t\t\tconst newConvo = [...c]\r\n\t\t\t\tnewConvo[index] = conversation\r\n\t\t\t\treturn newConvo\r\n\t\t\t})\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst handleGenerate = useCallback(async (index: number) => {\r\n\t\tif (!scenario) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst compiled: ConversationBlock[] = [\r\n\t\t\t{ role: 'system', content: CompileScenario(scenario) },\r\n\t\t\t{ role: 'assistant', content: scenario.lines },\r\n\t\t\t...convo.slice(0, index)\r\n\t\t]\r\n\r\n\t\tconst onUpdate = curryConvoSetter(index)\r\n\r\n\t\tsetLock(true)\r\n\t\ttry {\r\n\t\t\tawait provider.send(activeConfig, compiled, onUpdate, scenario.player_name)\r\n\t\t}\r\n\t\tcatch (e: any) {\r\n\t\t\tonUpdate({ role: 'assistant', content: e.message ?? JSON.stringify(e) })\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tsetLock(false)\r\n\t\t}\r\n\t}, [activeConfig, provider, convo, curryConvoSetter, scenario])\r\n\r\n\tconst handleNewConvoBlock = useCallback(() => {\r\n\t\tconst isAsst = convo.length % 2 === 1\r\n\t\tsetConvo(c => [...c, isAsst ? { role: 'assistant', content: '' } : { role: 'user', content: `${scenario?.player_name}: ` }])\r\n\r\n\t\tif (isAsst) {\r\n\t\t\thandleGenerate(convo.length)\r\n\t\t}\r\n\t}, [handleGenerate, convo, scenario])\r\n\r\n\tconst handleTruncate = useCallback((i: number) => {\r\n\t\tsetConvo(c => c.slice(0, i))\r\n\t}, [])\r\n\r\n\tconst handleSaveSetting = useCallback(() => {\r\n\t\tlocalStorage.setItem('defaultProvider', providerKey)\r\n\t\tfor (const [configKey, configValue] of Object.entries(activeConfig)) {\r\n\t\t\tlocalStorage.setItem(`${providerKey}_${configKey}`, JSON.stringify(configValue))\r\n\t\t}\r\n\t}, [activeConfig, providerKey])\r\n\r\n\treturn (\r\n\t\t<div className='trainPage'>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col xs={12} md={12} lg={4}>\r\n\t\t\t\t\t<div className=\"block\">\r\n\t\t\t\t\t\t<div className='scenarioHeaderRow'>\r\n\t\t\t\t\t\t\t<h5 className=\"header\">Scenario</h5>\r\n\t\t\t\t\t\t\t<div className='scenarioCopyButton' onClick={handleCopy}>Copy</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Form.Text>Any changes made here is not saved.</Form.Text>\r\n\t\t\t\t\t\t\t<ScenarioSettingLine title='ID' id='id' value={scenario} setter={setScenario} disabled inline />\r\n\t\t\t\t\t\t\t{/* <ScenarioSettingLine title='Player Name' id='player_name' value={scenario} setter={setScenario} disabled={lock} inline /> */}\r\n\t\t\t\t\t\t\t<ScenarioSettingLine title='Major Characters' id='major_characters' value={scenario} setter={setScenario} disabled={lock} inline />\r\n\t\t\t\t\t\t\t<ScenarioSettingLine title='Minor Characters' id='minor_characters' value={scenario} setter={setScenario} disabled={lock} inline />\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<ScenarioSettingLine title='Context' id='context' value={scenario} setter={setScenario} disabled={lock} textarea={10} />\r\n\t\t\t\t\t\t\t<ScenarioSettingLine title='Objective' id='objective' value={scenario} setter={setScenario} disabled={lock} textarea={3} />\r\n\t\t\t\t\t\t\t<ScenarioSettingLine title='Directives' id='directives' value={scenario} setter={setScenario} disabled={lock} textarea={5} />\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={12} sm={8} md={8} lg={5} xl={6} className='mainDivContainer'>\r\n\t\t\t\t\t<div className=\"block mainDiv\">\r\n\t\t\t\t\t\t<h5 className=\"header\">Conversation</h5>\r\n\t\t\t\t\t\t<ListGroup>\r\n\t\t\t\t\t\t\t{scenario ? <ConvoLine\r\n\t\t\t\t\t\t\t\tkey='prompt'\r\n\t\t\t\t\t\t\t\tvalue={{ role: 'system', content: scenario.lines }}\r\n\t\t\t\t\t\t\t\tindex={-1}\r\n\t\t\t\t\t\t\t\tonContentChange={ct => setScenario(s => (s ? { ...s, lines: ct.content } : undefined))}\r\n\t\t\t\t\t\t\t\treadOnly={lock}\r\n\t\t\t\t\t\t\t/> : null}\r\n\t\t\t\t\t\t\t{convo.map((c, i) => <ConvoLine\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\tvalue={c}\r\n\t\t\t\t\t\t\t\taction='Truncate'\r\n\t\t\t\t\t\t\t\tonRegenerate={handleGenerate}\r\n\t\t\t\t\t\t\t\tonAction={handleTruncate}\r\n\t\t\t\t\t\t\t\tonContentChange={curryConvoSetter(i)}\r\n\t\t\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\t\t\treadOnly={lock}\r\n\t\t\t\t\t\t\t/>)}\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{scenario ? <Row><Button variant='outline-primary' onClick={handleNewConvoBlock} disabled={lock}>New Block</Button></Row> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={12} sm={4} md={4} lg={3} xl={2}>\r\n\t\t\t\t\t<div className=\"block\">\r\n\t\t\t\t\t\t<h5 className=\"header\">Dataset IO</h5>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={() => setShowFileDialog(true)}>Import</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={() => exportFile(workingSet, \"dataset\")}>Export</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"danger\" onClick={handleClear}>Clear All</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"block\">\r\n\t\t\t\t\t\t<h5 className=\"header\">Navigation</h5>\r\n\t\t\t\t\t\t<Row className=\"navBlock\">\r\n\t\t\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={() => setNewDialogScenario(Object.keys(prompts)[0])}>New</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleDuplicate} disabled={workingSetId < 0}>Dupe</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"danger\" onClick={handleReset} disabled={workingSetId < 0}>Reset</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"danger\" onClick={handleDelete} disabled={workingSetId < 0}>Delete</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Row className=\"navBlock\">\r\n\t\t\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" onClick={() => navigateTo(0)} disabled={workingSetId <= 0}>{'1'}</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" onClick={() => navigateTo(workingSetId - 1)} disabled={workingSetId <= 0}>{'<'}</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={() => { setShowJumpDialog(true); setJumpTarget((workingSetId + 1).toString()); }} disabled={workingSetId < 0}>{workingSetId + 1}</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" onClick={() => navigateTo(workingSetId + 1)} disabled={workingSetId < 0 || workingSetId >= workingSet.length - 1}>{'>'}</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" onClick={() => navigateTo(workingSet.length - 1)} disabled={workingSetId < 0 || workingSetId >= workingSet.length - 1}>{workingSet.length || 1}</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Pagination></Pagination>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"block\">\r\n\t\t\t\t\t\t<h5 className=\"header\">Inference Settings</h5>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"providerType\" className=\"formBlock\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Provider</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Select value={providerKey} onChange={e => setProviderPair([e.target.value, MemoryProviders[e.target.value]()])}>\r\n\t\t\t\t\t\t\t\t\t{Object.keys(MemoryProviders).map(k => <option key={k}>{k}</option>)}\r\n\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t{Object.entries(provider.renderControls()).map(([k, v]) => <ProviderConfigLine key={k} id={k} config={v} setter={handleConfigSet} value={activeConfig[k]} />)}\r\n\t\t\t\t\t\t\t<Row><Button variant=\"secondary\" onClick={handleSaveSetting}>Save Settings to localStorage</Button></Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<NewConvoDialog scenarioId={newDialogScenario} setScenarioId={setNewDialogScenario} commit={handleNewConvo} />\r\n\t\t\t<FileDialog show={showFileDialog} onCancel={() => setShowFileDialog(false)} onFileUpload={handleImport} />\r\n\t\t    <CopyDialog text={copyText} onClose={() => setCopytext(undefined)}/>\r\n\t\t\t<JumpDialog\r\n\t\t\t\tshow={showJumpDialog}\r\n\t\t\t\tonCancel={() => setShowJumpDialog(false)}\r\n\t\t\t\tmin={1}\r\n\t\t\t\tmax={workingSet.length}\r\n\t\t\t\ttarget={jumpTarget}\r\n\t\t\t\tsetTarget={setJumpTarget}\r\n\t\t\t\tonCommit={() => { const jt = parseInt(jumpTarget); if (!isNaN(jt) && jt > 0 && jt <= workingSet.length) { navigateTo(jt - 1); setShowJumpDialog(false); } }}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Trainer","import React, { ReactElement, useRef, useState } from 'react';\nimport MainNav from './MainNav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { ApiContext } from './util/contexts';\nimport { ApiClient } from './util/ApiClient';\nimport Chat from './Chat';\nimport QueryPage from './Query';\nimport PlayerPage from './PlayerData';\nimport Trainer from './Trainer'\n\nfunction App() {\n\tconst [updateTrigger, setUpdateTrigger] = useState(0)\n\tconst [tab, setTab] = useState('home')\n\tconst api = useRef(new ApiClient(() => setUpdateTrigger(t => t + 1)))\n\n\tlet activeModule: ReactElement;\n\tswitch(tab) {\n\t\tcase 'home': \n\t\t\tactiveModule = <p>{api.current.session ? `Hello ${api.current.session.username}` : 'Please Sign in!'}</p>\t\n\t\t\tbreak\n\t\tcase 'data':\n\t\t\tactiveModule= <PlayerPage/>\n\t\t\tbreak\n\t\tcase 'chat':\n\t\t\tactiveModule = <Chat/>\n\t\t\tbreak\n\t\tcase 'query':\n\t\t\tactiveModule = <QueryPage/>\n\t\t\tbreak\n\t\tcase 'trainer':\n\t\t\tactiveModule = <Trainer/>\n\t\t\tbreak\n\t\tdefault:\n\t\t\tactiveModule = <p>{tab}</p>\n\t\t\tbreak\n\t}\n\n\treturn (\n\t\t<div className=\"App\" >\n\t\t\t<ApiContext.Provider value={api.current}>\n\t\t\t\t<MainNav trigger={updateTrigger} session={api.current.session} tab={tab} setTab={setTab} assumeAs={api.current.assumedAs}/>\n\t\t\t\t<div className=\"appBody\">\n\t\t\t\t\t{activeModule}\n\t\t\t\t</div>\n\t\t\t</ApiContext.Provider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","key","call","value","newClass","default","f","require","k","Symbol","for","l","m","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","c","a","g","b","d","e","h","defaultProps","$$typeof","type","props","_owner","current","Fragment","jsx","jsxs","defineProperty","_len","validators","_key","_createChainableTypeChecker2","_len2","args","_key2","error","forEach","validator","result","undefined","obj","_createChainableTypeChecker","__esModule","r","t","u","v","w","x","y","z","iterator","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","assign","D","E","this","context","refs","updater","F","G","isReactComponent","setState","Error","forceUpdate","H","constructor","isPureReactComponent","I","J","K","L","M","children","O","P","Q","replace","escape","R","N","push","A","next","done","String","keys","join","S","T","_status","_result","then","U","V","transition","W","ReactCurrentDispatcher","ReactCurrentBatchConfig","X","Children","map","count","toArray","only","Component","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","startTransition","unstable_act","useCallback","useContext","useDebugValue","useDeferredValue","useEffect","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useSyncExternalStore","useTransition","version","pop","sortIndex","id","performance","now","unstable_now","Date","setTimeout","clearTimeout","setImmediate","callback","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","console","Math","floor","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","unstable_shouldYield","unstable_wrapCallback","createRoot","hydrateRoot","warning","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","validate","checkType","componentNameSafe","propFullNameSafe","concat","chainedCheckType","aa","ca","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","split","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","test","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","stack","trim","match","Na","Oa","prepareStackTrace","set","Reflect","construct","displayName","Pa","tag","Qa","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","dd","ed","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","fromCharCode","code","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","of","has","pf","qf","rf","random","sf","capture","passive","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Promise","Jf","queueMicrotask","resolve","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","zg","Ag","Bg","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","_stringRef","Mg","Ng","Og","index","Pg","Qg","Rg","implementation","Sg","Tg","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","di","lastEffect","stores","ei","fi","gi","hi","ii","create","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","readContext","useMutableSource","unstable_isNewReconciler","identifierPrefix","Ci","Di","Ei","_reactInternals","Fi","shouldComponentUpdate","Gi","contextType","state","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","message","digest","Ki","Li","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","Xi","Yi","Zi","$i","aj","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","Gj","Hj","Ij","Jj","Kj","WeakSet","Lj","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","unstable_strictMode","findDOMNode","flushSync","hydrate","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","condition","format","argIndex","framesToPop","checkDCE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","o","chunkId","all","reduce","promises","miniCssF","globalThis","Function","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","React","prefixes","breakpoints","minBreakpoint","useBootstrapPrefix","prefix","defaultPrefix","useBootstrapBreakpoints","useBootstrapMinBreakpoint","useIsRTL","dir","Container","_ref","bsPrefix","fluid","as","className","suffix","_jsx","optionsSupported","onceSupported","once","canUseDOM","eventName","handler","wrappedHandler","__once","onceHandler","scrollbarSize","recalc","scrollDiv","position","offsetWidth","clientWidth","useCallbackRef","useEventCallback","useCommittedRef","toFnRef","refA","refB","mergeRefs","useWillUnmount","onUnmount","valueRef","useUpdatedRef","getComputedStyle","psuedoElement","doc","ownerWindow","rUpper","msPattern","hyphenateStyleName","hyphenate","supportedTransforms","property","css","transforms","getPropertyValue","isTransform","removeProperty","cssText","emulateTransitionEnd","duration","padding","called","handle","createEvent","initEvent","triggerEvent","remove","listen","transitionEnd","str","mult","parseFloat","parseDuration","removeEmulate","active","useMounted","mounted","usePrevious","dataAttr","OPEN_DATA_ATTRIBUTE","handleContainerOverflow","isRTL","modals","getScrollbarWidth","abs","innerWidth","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","parseInt","reset","removeContainerStyle","modal","modalIdx","isTopModal","Context","useWindow","resolveContainerRef","getBoundingClientRect","isReactNative","global","product","in","inProp","onExited","mountOnEnter","unmountOnExit","hasEnteredRef","handleExited","combinedRef","useMergedRefs","getReactVersion","parts","major","minor","patch","_excluded","component","transitionProps","onEnter","onEntering","onEntered","onExit","onExiting","addEndListener","_objectWithoutPropertiesLoose","childRef","nodeRef","mergedRef","normalize","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","handleAddEndListener","status","innerProps","useRTGTransitionProps","ImperativeTransition","_ref2","exited","setExited","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","initial","isStale","onFinish","renderTransition","runTransition","RTGTransition","NoopTransition","manager","useModalManager","provided","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","setBackdropRef","Modal","show","role","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","rest","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","prevShow","lastFocusRef","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","handleHide","_lastFocusRef$current","handleBackdropClick","isEscKey","dialogProps","tabIndex","appear","backdropElement","_Fragment","ReactDOM","_jsxs","Manager","qsa","selector","replaceClassName","origClass","classToRemove","RegExp","Selector","BootstrapModalManager","adjustAndStore","adjust","actual","restore","super","classList","baseVal","hasClass","marginProp","sharedManager","getSharedManager","_setPrototypeOf","setPrototypeOf","__proto__","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","_this","initialStatus","isMounting","enter","appearStatus","nextCallback","prevState","_proto","updateStatus","prevProps","nextStatus","cancelNextCallback","getTimeouts","exit","mounting","forceReflow","performEnter","performExit","_this2","appearing","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onTransitionEnd","_this3","cancel","nextState","setNextCallback","_this4","doesNotHaveTimeoutOrListener","_ref3","maybeNextCallback","_this$props","childProps","TransitionGroupContext","noop","propTypes","transitionEndListener","triggerBrowserReflow","offsetHeight","attachRef","componentOrElement","fadeStyles","Fade","transitionClasses","isAppearing","TransitionWrapper","ModalBody","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","variant","CloseButton","ariaLabel","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","handleClick","ModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","BackdropTransition","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","modalContext","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","handleStaticBackdropClick","backdropProps","baseModalStyle","BaseModal","onMouseUp","onMouseDown","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","makeEventKey","eventKey","defaultKey","substr","_toPropertyKey","hint","prim","toPrimitive","res","TypeError","Number","_toPrimitive","useUncontrolled","fieldName","_extends2","Utils","propsValue","handlerName","_useUncontrolledProp","propValue","wasPropRef","_useState","stateValue","isProp","wasProp","useUncontrolledProp","_extends","nextProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","__suppressDeprecationWarning","NavbarBrand","funcs","filter","acc","MARGINS","getDefaultDimensionValue","dimension","elem","margins","collapseStyles","getDimensionValue","computedDimension","createChainedFunction","scroll","NavbarCollapse","NavbarContext","Collapse","expanded","NavbarToggle","label","onToggle","matchersByWindow","getMatcher","query","targetWindow","matchers","mql","matchMedia","refCount","media","useMediaQuery","matches","setMatches","handleChange","addListener","removeListener","breakpointValues","names","and","getMaxQuery","breakpoint","getNext","breakpointOrMap","direction","breakpointMap","entries","getMinQuery","createBreakpointHook","xs","sm","xl","xxl","OffcanvasBody","transitionStyles","OffcanvasToggling","OffcanvasHeader","DivStyledAsH5","OffcanvasTitle","Offcanvas","placement","responsive","renderStaticNode","showOffcanvas","setShowOffcanvas","hideResponsiveOffcanvas","useBreakpoint","visibility","NavbarOffcanvas","NavbarText","Navbar","initialBsPrefix","expand","fixed","sticky","onSelect","collapseOnSelect","controlledProps","handleCollapse","expandClass","navbarContext","SelectableContext","Brand","Text","Toggle","useForceUpdate","NavContext","useButtonProps","rel","isTrivialHref","onKeyDown","Button","asProp","buttonProps","useNavItem","parentOnSelect","navContext","tabContext","TabContext","isActive","contextControllerId","getControllerId","contextControlledId","getControlledId","activeKey","NavItem","EVENT_KEY_ATTR","Nav","needsRefocusRef","listNode","getNextActiveTab","currentListNode","items","activeChild","querySelector","nextIndex","handleSelect","nextActiveChild","Item","Anchor","handleKeyDown","NavLink","navItemProps","uncontrolledProps","fill","justify","navbar","navbarScroll","navbarBsPrefix","cardHeaderBsPrefix","isNavbar","cardHeaderContext","CardHeaderContext","BaseNav","Link","find","iter","tar","dequal","foo","bar","ctor","len","tmp","getTime","ArrayBuffer","Uint8Array","DataView","byteLength","getInt8","isView","getBasePlacement","getWindow","isElement","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","max","round","getUAString","uaData","userAgentData","brands","item","brand","userAgent","isLayoutViewport","includeScale","isFixedStrategy","clientRect","scaleX","scaleY","visualViewport","addVisualOffsets","offsetLeft","offsetTop","right","bottom","getLayoutRect","parent","rootNode","getRootNode","isSameNode","host","getNodeName","isTableElement","getDocumentElement","getParentNode","assignedSlot","getTrueOffsetParent","offsetParent","getOffsetParent","isFirefox","currentNode","transform","perspective","contain","willChange","getContainingBlock","getMainAxisFromPlacement","within","mathMax","mathMin","mergePaddingObject","paddingObject","expandToHashMap","hashMap","auto","basePlacements","viewport","popper","variationPlacements","placements","modifierPhases","enabled","phase","_state$modifiersData$","arrowElement","elements","arrow","popperOffsets","modifiersData","basePlacement","axis","rects","toPaddingObject","arrowRect","minProp","maxProp","endDiff","reference","startDiff","arrowOffsetParent","clientSize","centerToReference","center","axisProp","centerOffset","effect","_options$element","requires","requiresIfExists","getVariation","unsetSides","mapToStyles","_Object$assign2","popperRect","variation","offsets","gpuAcceleration","adaptive","roundOffsets","isFixed","_offsets$x","_offsets$y","hasX","hasY","sideX","sideY","win","heightProp","widthProp","_Object$assign","commonStyles","_ref4","dpr","devicePixelRatio","roundOffsetsByDPR","_ref5","_options$gpuAccelerat","_options$adaptive","_options$roundOffsets","strategy","styles","attributes","_options$scroll","_options$resize","resize","scrollParents","scrollParent","update","hash","getOppositePlacement","matched","getOppositeVariationPlacement","getWindowScroll","pageXOffset","pageYOffset","getWindowScrollBarX","isScrollParent","_getComputedStyle","overflowX","overflowY","getScrollParent","listScrollParents","list","_element$ownerDocumen","isBody","updatedList","rectToClientRect","rect","getClientRectFromMixedType","clippingParent","html","layoutViewport","getViewportRect","clientTop","clientLeft","getInnerBoundingClientRect","winScroll","scrollWidth","getDocumentRect","getClippingRect","boundary","rootBoundary","mainClippingParents","clippingParents","clipperElement","getClippingParents","firstClippingParent","clippingRect","accRect","computeOffsets","commonX","commonY","mainAxis","detectOverflow","_options","_options$placement","_options$strategy","_options$boundary","_options$rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","altContext","clippingClientRect","contextElement","referenceClientRect","popperClientRect","elementClientRect","overflowOffsets","offsetData","multiply","_skip","_options$mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","specifiedFallbackPlacements","fallbackPlacements","_options$flipVariatio","flipVariations","allowedAutoPlacements","preferredPlacement","oppositePlacement","getExpandedFallbackPlacements","_options$allowedAutoP","allPlacements","allowedPlacements","overflows","sort","computeAutoPlacement","referenceRect","checksMap","makeFallbackChecks","firstFittingPlacement","_basePlacement","isStartVariation","isVertical","mainVariationSide","altVariationSide","checks","every","check","_loop","_i","fittingPlacement","getSideOffsets","preventedOffsets","isAnySideFullyClipped","side","_options$offset","invertDistance","skidding","distance","distanceAndSkiddingToXY","_data$state$placement","_options$tether","tether","_options$tetherOffset","tetherOffset","isBasePlacement","tetherOffsetValue","normalizedTetherOffsetValue","offsetModifierState","_offsetModifierState$","mainSide","altSide","additive","minLen","maxLen","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","clientOffset","offsetModifierValue","tetherMax","preventedOffset","_offsetModifierState$2","_mainSide","_altSide","_offset","_min","_max","isOriginSide","_offsetModifierValue","_tetherMin","_tetherMax","_preventedOffset","withinMaxClamp","getCompositeRect","elementOrVirtualElement","isOffsetParentAnElement","offsetParentIsScaled","isElementScaled","getNodeScroll","modifiers","visited","modifier","dep","depModifier","debounce","DEFAULT_OPTIONS","areValidElements","popperGenerator","generatorOptions","_generatorOptions","_generatorOptions$def","defaultModifiers","_generatorOptions$def2","defaultOptions","orderedModifiers","effectCleanupFns","isDestroyed","setOptions","setOptionsAction","cleanupModifierEffects","orderModifiers","merged","existing","mergeByName","_ref$options","cleanupFn","noopFn","_state$elements","_state$orderedModifie","_state$orderedModifie2","onFirstUpdate","createPopper","preventOverflow","referenceOverflow","popperAltOverflow","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","computeStyles","eventListeners","flip","disabledApplyStylesModifier","ariaDescribedByModifier","ids","_popper$getAttribute","EMPTY_MODIFIERS","referenceElement","popperElement","prevModifiers","popperInstanceRef","_popperInstanceRef$cu","_popperInstanceRef$cu2","popperState","useSafeState","updateModifier","nextModifiers","getRefTarget","InitialTriggerEvents","click","mouseup","pointerup","onClickOutside","clickTrigger","preventMouseClickOutsideRef","waitingForTrigger","handleMouseCapture","isLeftClickEvent","handleInitialMouse","handleMouse","_ownerWindow$event","_ownerWindow$parent","currentEvent","removeInitialTriggerListener","removeMouseCaptureListener","removeMouseListener","mobileSafariHackListeners","toModifierArray","mergeOptionsWithPopperConfig","enableEvents","containerPadding","popperConfig","_modifiers$eventListe","_modifiers$preventOve","_modifiers$preventOve2","_modifiers$offset","_modifiers$arrow","toModifierMap","useDropdownMenu","DropdownContext","attachArrowRef","hasShownRef","rootCloseEvent","placementOverride","enableEventListeners","usePopper","shouldUsePopper","setMenu","menuElement","toggleElement","menuProps","metadata","hasShown","toggle","arrowProps","useClickOutside","DropdownMenu","usePopperProp","$b5e257d569688ac6$var$defaultContext","$b5e257d569688ac6$var$SSRContext","$670gB$react","$b5e257d569688ac6$var$IsSSRContext","$b5e257d569688ac6$var$canUseDOM","Boolean","$b5e257d569688ac6$var$componentIds","$b5e257d569688ac6$var$useCounter","ctx","$670gB$useContext","$670gB$useRef","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","currentOwner","prevComponentValue","$b5e257d569688ac6$export$619500959fc48b26","defaultId","didSSR","$670gB$useState","$b5e257d569688ac6$var$subscribe","$b5e257d569688ac6$var$getSnapshot","$b5e257d569688ac6$var$getServerSnapshot","warn","counter","onStoreChange","isRoleMenu","_el$getAttribute","useDropdownToggle","useSSRSafeId","setToggle","DropdownToggle","useDropdownItem","onSelectCtx","DropdownItem","dropdownItemProps","useRefWithUpdate","Dropdown","defaultShow","rawShow","rawOnToggle","itemSelector","focusFirstItemOnShow","menuRef","toggleRef","lastShow","lastSourceEvent","focusInDropdown","nextShow","originalEvent","focusToggle","maybeFocusFirst","focusType","first","getNextFocusedChild","eventTarget","useEventListener","_menuRef$current","_toggleRef$current","fromMenu","fromToggle","_menuRef$current2","DropdownDivider","DropdownHeader","DropdownItemText","useWrappedRefWithWarning","getDropdownMenuPlacement","alignEnd","dropDirection","align","showProps","renderOnMount","contextAlign","drop","isInputGroup","InputGroupContext","alignClasses","brkPoint","close","childBsPrefix","dropdownContext","toggleProps","pProps","_4","autoClose","handleToggle","_meta$originalEvent","contextValue","directionClasses","down","up","BaseDropdown","ItemText","Divider","NavDropdown","title","menuRole","renderMenuOnMount","menuVariant","navItemPrefix","tooltip","Feedback","FormCheckInput","isValid","isInvalid","controlId","FormContext","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","feedbackTooltip","feedback","feedbackType","innerFormContext","hasLabel","hasChildOfType","Input","Label","FormControl","htmlSize","plaintext","readOnly","FormFloating","FormGroup","Col","colProps","spans","span","infix","useCol","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","validated","Form","Group","Floating","Check","Range","Select","InputGroupText","InputGroup","hasValidation","Radio","Checkbox","AlertHeading","AlertLink","Alert","onClose","dismissible","handleClose","alert","Heading","thisArg","getPrototypeOf","kindOf","thing","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","val","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","allOwnKeys","getOwnPropertyNames","findKey","_global","isContextDefined","isTypedArray","TypedArray","isHTMLForm","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","ret","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","isAsyncFn","_setImmediate","setImmediateSupported","postMessageSupported","token","callbacks","asap","process","nextTick","isBuffer","isFormData","kind","FormData","append","isArrayBufferView","buffer","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","stripBOM","content","charCodeAt","inherits","superConstructor","toFlatObject","sourceObj","destObj","propFilter","endsWith","searchString","lastIndex","arr","forEachEntry","pair","matchAll","regExp","exec","hasOwnProp","freezeMethods","writable","toObjectSet","arrayOrString","delimiter","define","toCamelCase","p1","p2","toFiniteNumber","isFinite","generateString","alphabet","isSpecCompliantForm","toJSONObject","visit","reducedValue","isThenable","AxiosError","response","captureStackTrace","utils","toJSON","description","fileName","lineNumber","columnNumber","from","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","path","dots","predicates","formData","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","isFlatArray","exposedHelpers","build","encode","charMap","AxiosURLSearchParams","params","_pairs","toFormData","encoder","_encode","buildURL","serializeFn","serialize","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","clear","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","URLSearchParams","protocols","hasBrowserEnv","_navigator","hasStandardBrowserEnv","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","origin","platform","buildPath","isNumericKey","isLast","arrayToObject","parsePropPath","defaults","transitional","transitionalDefaults","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","parse","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","isValidHeaderName","rawHeaders","parsed","line","parseHeaders","tokens","tokensRE","parseTokens","matcher","deleted","deleteHeader","normalized","formatHeader","targets","asStrings","computed","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","ERR_BAD_REQUEST","samplesCount","bytes","timestamps","firstSampleTS","chunkLength","startedAt","bytesCount","passed","freq","lastArgs","timer","timestamp","threshold","invoke","flush","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","speedometer","throttle","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","progressEventDecorator","throttled","asyncDecorator","msie","urlParsingNode","originURL","resolveURL","protocol","hostname","port","pathname","requestURL","write","expires","domain","secure","cookie","toGMTString","read","decodeURIComponent","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","btoa","username","unescape","isURLSameOrigin","xsrfValue","cookies","XMLHttpRequest","_config","resolveConfig","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","abort","subscribe","aborted","parseProtocol","send","composeSignals","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","pos","readStream","async","stream","asyncIterator","reader","getReader","trackStream","onProgress","iterable","readBytes","_onFinish","ReadableStream","pull","loadedBytes","enqueue","highWaterMark","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","duplex","supportsResponseStream","resolvers","_","ERR_NOT_SUPPORT","resolveBodyLength","getContentLength","_request","getBodyLength","fetchOptions","composedSignal","toAbortSignal","requestContentLength","contentTypeHeader","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","knownAdapters","http","xhr","xhrAdapter","fetchAdapter","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","VERSION","deprecatedWarnings","formatMessage","opt","desc","opts","ERR_DEPRECATED","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","InterceptorManager","configOrUrl","dummy","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","Cancel","spread","isAxiosError","formToJSON","getAdapter","ApiClient","updateTrigger","api","session","assumedAs","axiosConfig","localSessionStr","localStorage","getItem","localSession","assumeUser","unassumeUser","registerAndLogin","post","login","sessionObject","UserName","expireAt","setItem","Token","signOut","removeItem","checkToken","getData","sceneUnlockDate","startChat","assistantId","initialMessage","PromptKey","InitialMessage","SceneId","continueChat","threadId","Thread","Message","Query","listModels","listAsst","before","after","entry","response_format_str","response_format","getAsst","asstId","delAsst","createAsst","asst","updateAsst","put","ApiContext","assumeAs","tab","setTab","loginModalOepn","setLoginModalOpen","isRegistering","setIsRegistering","setUsername","setPassword","loginErrorMsg","setLoginErrorMsg","assumeModalOpen","setAssumeModal","assumeText","setAssumeText","apiClient","openModal","isRegister","handleAssumeClick","handleSend","_error$response$data","_error$response","userDisplay","onSubmit","placeholder","onChange","Row","decoratedBsPrefix","sizePrefix","cols","ListGroupItem","ListGroup","horizontal","numbered","horizontalVariant","userInput","setUserInput","msgList","setMsgList","targetAssistant","setTargetAssistant","activeOptions","setActiveOptions","activeThreadId","setActiveThreadId","statusMessage","setStatusMessage","lockInput","setLockInput","speaker","Result","_e$response$data","_e$response","isError","Lines","PlayerOptions","msg","onKeyUp","Table","striped","bordered","borderless","hover","table","responsiveClass","Cell","onInspect","setQuery","setError","setData","modalContent","setModalContent","handleCellInspect","output","Fields","rows","row","Spinner","bsSpinnerPrefix","playerData","setPlayerData","magin","currentSceneIdx","variables","bools","strings","floats","mutate","field","essage","toLocaleString","DummyProvider","init","setting","history","onUpdate","playerName","renderControls","File","getMultipartRequestOptions","getDefaultAgent","fileFromPath","isFsReadStream","Headers","MultipartBody","shims","manuallyImported","recommendation","_fetch","_Request","_Response","_Headers","GroqError","APIError","makeMessage","generate","errorResponse","APIConnectionError","castToError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","APIUserAbortError","APIConnectionTimeoutError","Stream","fromSSEResponse","consumed","decoder","SSEDecoder","sse","lineDecoder","LineDecoder","readableStreamAsyncIterable","decode","iterMessages","startsWith","raw","status_code","fromReadableStream","readableStream","iterLines","tee","teeIterator","toReadableStream","ctrl","chunks","fieldname","partition","trailingCR","decodeText","trailingNewline","NEWLINE_CHARS","lines","NEWLINE_REGEXP","TextDecoder","textDecoder","releaseLock","cancelPromise","isResponseLike","blob","isFileLike","lastModified","isBlobLike","isUploadable","toFile","URL","bits","isAsyncIterableIterator","propsForError","getBytes","getStringFromMaybeBuffer","filename","getName","isMultipartBody","multipartFormRequestOptions","createForm","addFormValue","file","defaultParseResponse","debug","__streamClass","__binaryResponse","json","APIPromise","responsePromise","parseResponse","_thenUnwrap","asResponse","withResponse","parsedPromise","onrejected","finally","onfinally","APIClient","maxRetries","overriddenFetch","validatePositiveInteger","authHeaders","defaultHeaders","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","methodRequest","getAPIList","Page","requestAPIList","calculateContentLength","buildRequest","retryCount","__binaryRequest","contentLength","minAgentTimeout","idempotencyHeader","idempotencyKey","req","buildHeaders","agent","reqHeaders","applyHeadersMut","shimsKind","getHeader","prepareOptions","prepareRequest","fromEntries","makeStatusError","remainingRetries","makeRequest","optionsInput","retriesRemaining","fetchWithTimeout","retryRequest","createResponseHeaders","shouldRetry","errText","errJSON","safeJSON","errMessage","PagePromise","isAbsoluteURL","defaultQuery","isEmptyObj","stringifyQuery","ms","shouldRetryHeader","timeoutMillis","retryAfterMillisHeader","timeoutMs","retryAfterHeader","timeoutSeconds","calculateDefaultRetryTimeoutMillis","sleep","numRetries","pow","client","page","Proxy","getPlatformProperties","Deno","normalizePlatform","os","normalizeArch","arch","deno","EdgeRuntime","browserInfo","browserPatterns","pattern","browser","getBrowserInfo","_platformHeaders","startsWithSchemeRegexp","isInteger","readEnv","_k","targetHeaders","newHeaders","lowerKey","lowerCasedHeader","isHeadersProtocol","intercapsHeader","_m","g1","g2","APIResource","_client","Completions","Chat","completions","CompletionsAPI","Embeddings","Transcriptions","Core","Translations","Audio","transcriptions","TranscriptionsAPI","translations","TranslationsAPI","Models","retrieve","model","Batches","batchId","Files","fileId","info","Groq","apiKey","Errors","dangerouslyAllowBrowser","API","chat","embeddings","audio","models","batches","files","Authorization","_a","DEFAULT_TIMEOUT","Uploads","parseIntWithdefault","defaultNum","GroqProvider","lastToken","chatCompletion","Model","Temperature","parseIntWithDefault","_chunk$choices$","_chunk$choices$$delta","_chunk$x_groq","choices","delta","usage","x_groq","completionTokens","total_tokens","prompt_tokens","contextTokens","step","util","objectUtil","assertEqual","assertIs","_arg","assertNever","_x","arrayToEnum","getValidEnumValues","validKeys","objectKeys","filtered","objectValues","checker","joinValues","separator","jsonStringifyReplacer","mergeShapes","second","ZodParsedType","getParsedType","nan","null","unknown","ZodIssueCode","ZodError","errors","issues","addIssue","sub","addIssues","subs","actualProto","_mapper","mapper","issue","fieldErrors","_errors","processError","unionErrors","returnTypeError","argumentsError","curr","assert","isEmpty","flatten","formErrors","errorMap","_ctx","invalid_type","received","expected","invalid_literal","unrecognized_keys","invalid_union","invalid_union_discriminator","invalid_enum_value","invalid_arguments","invalid_return_type","invalid_date","invalid_string","validation","too_small","inclusive","minimum","too_big","maximum","custom","invalid_intersection_types","not_multiple_of","multipleOf","not_finite","defaultError","overrideErrorMap","defaultErrorMap","getErrorMap","makeIssue","errorMaps","issueData","fullPath","fullIssue","errorMessage","maps","addIssueToContext","overrideMap","contextualErrorMap","schemaErrorMap","ParseStatus","dirty","mergeArray","results","arrayValue","INVALID","mergeObjectAsync","pairs","syncPairs","mergeObjectSync","finalObject","alwaysSet","freeze","DIRTY","OK","isAborted","isDirty","isAsync","errorUtil","errToObj","ParseInputLazyPath","_cachedPath","_path","handleResult","success","_error","processCreateParams","invalid_type_error","required_error","customMap","iss","ZodType","_def","_getType","_getOrReturnCtx","parsedType","_processInputParams","_parseSync","_parse","_parseAsync","safeParse","parseAsync","safeParseAsync","maybeAsyncResult","refine","getIssueProperties","_refinement","refinement","refinementData","ZodEffects","typeName","ZodFirstPartyTypeKind","superRefine","def","spa","optional","nullable","nullish","or","describe","readonly","isNullable","isOptional","vendor","ZodOptional","ZodNullable","ZodArray","ZodPromise","ZodUnion","incoming","ZodIntersection","defaultValueFunc","ZodDefault","innerType","ZodBranded","catchValueFunc","ZodCatch","catchValue","This","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","nanoidRegex","jwtRegex","durationRegex","emailRegex","emojiRegex","ipv4Regex","ipv4CidrRegex","ipv6Regex","ipv6CidrRegex","base64Regex","base64urlRegex","dateRegexSource","dateRegex","timeRegexSource","secondsRegexSource","precision","datetimeRegex","regex","local","isValidJWT","jwt","alg","base64","padEnd","decoded","atob","typ","isValidCidr","ip","ZodString","coerce","tooBig","tooSmall","_regex","_addCheck","emoji","uuid","nanoid","cuid","cuid2","ulid","base64url","cidr","minLength","maxLength","nonempty","isDatetime","isTime","isDuration","isEmail","isURL","isEmoji","isUUID","isNANOID","isCUID","isCUID2","isULID","isIP","isCIDR","isBase64","isBase64url","floatSafeRemainder","valDecCount","stepDecCount","decCount","toFixed","ZodNumber","gte","lte","setLimit","gt","lt","int","positive","negative","nonpositive","nonnegative","finite","safe","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","minValue","maxValue","isInt","ZodBigInt","BigInt","_getInvalidInput","ZodBoolean","ZodDate","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","_any","ZodUnknown","_unknown","ZodNever","never","ZodVoid","void","exactLength","deepPartialify","ZodObject","newShape","fieldSchema","unwrap","ZodTuple","_cached","nonstrict","passthrough","augment","_getCached","shapeKeys","extraKeys","catchall","unknownKeys","keyValidator","strict","strip","augmentation","merging","setKey","pick","mask","omit","deepPartial","partial","required","newField","keyof","createZodEnum","strictCreate","lazycreate","childCtx","types","mergeValues","aType","bType","valid","bKeys","sharedKeys","newObj","sharedValue","newArray","handleParsed","parsedLeft","parsedRight","itemIndex","schemas","ZodRecord","keySchema","keyType","valueSchema","valueType","third","ZodMap","finalMap","ZodSet","minSize","maxSize","finalizeSet","parsedSet","values","ZodLazy","ZodLiteral","ZodEnum","expectedValues","_cache","enum","enumValues","Values","Enum","extract","newDef","exclude","ZodNativeEnum","nativeEnumValues","promisified","sourceType","checkCtx","fatal","processed","executeRefinement","inner","createWithPreprocess","preprocess","removeDefault","newCtx","removeCatch","ZodNaN","inResult","out","handleAsync","stringType","numberType","booleanType","unknownType","arrayType","objectType","unionType","recordType","lazyType","enumType","_defaultBaseGeminiUrl","_defaultBaseVertexUrl","getBaseUrl","vertexBaseUrlFromEnv","geminiBaseUrlFromEnv","httpOptions","baseUrl","defaultBaseUrls","geminiUrl","vertexUrl","vertexai","_b","_c","BaseModule","formatMap","templateString","valueMap","setValueByPath","keyName","arrayData","keyToSet","existingData","getValueByPath","Outcome","Language","Type","HarmCategory","HarmBlockMethod","HarmBlockThreshold","Mode","AuthType","FinishReason","HarmProbability","HarmSeverity","BlockedReason","TrafficType","Modality","MediaResolution","JobState","AdapterSize","FeatureSelectionPreference","Behavior","DynamicRetrievalConfigMode","FunctionCallingConfigMode","UrlRetrievalStatus","SafetyFilterLevel","PersonGeneration","ImagePromptLanguage","MaskReferenceMode","ControlReferenceType","SubjectReferenceType","EditMode","FileState","FileSource","MediaModality","StartSensitivity","EndSensitivity","ActivityHandling","TurnCoverage","FunctionResponseScheduling","Scale","LiveMusicPlaybackControl","GenerateContentResponse","_d","candidates","anyTextPartText","nonTextParts","part","_h","_g","_f","_e","fieldValue","thought","nonDataParts","inlineData","functionCalls","functionCall","executableCode","_j","codeExecutionResult","EmbedContentResponse","GenerateImagesResponse","EditImageResponse","UpscaleImageResponse","ListModelsResponse","DeleteModelResponse","CountTokensResponse","ComputeTokensResponse","ListTuningJobsResponse","DeleteCachedContentResponse","ListCachedContentsResponse","ListFilesResponse","HttpResponse","responseInternal","CreateFileResponse","DeleteFileResponse","LiveServerMessage","anyTextPartFound","serverContent","modelTurn","LiveMusicServerMessage","audioChunk","audioChunks","tModel","isVertexAI","tCachesModel","transformedModel","getProject","getLocation","tBlobs","blobs","tBlob","tPart","tParts","_isContent","_isFunctionCallPart","_isFunctionResponsePart","tContent","tContentsForEmbed","flatMap","tContents","accumulatedParts","isContentArray","isContent","supportedJsonSchemaFields","jsonSchemaTypeValidator","schemaTypeUnion","processJsonSchema","_jsonSchema","genAISchema","schemaFieldNames","listSchemaFieldNames","dictSchemaFieldNames","incomingAnyOf","typeList","resultingSchema","listWithoutNull","TYPE_UNSPECIFIED","flattenTypeArrayToAnyOf","listSchemaFieldValue","dictSchemaFieldValue","tSchema","validatedJsonSchema","strictMode","jsonSchemaValidator","baseShape","minItems","maxItems","properties","minProperties","maxProperties","propertyOrdering","anyOf","additionalProperties","createJsonSchemaValidator","tSpeechConfig","speechConfig","voiceConfig","prebuiltVoiceConfig","voiceName","tLiveSpeechConfig","tTool","tool","functionDeclarations","functionDeclaration","parameters","tTools","tools","tCachedContentName","resourceName","resourcePrefix","splitsAfterPrefix","shouldAppendPrefix","tTuningJobStatus","tBytes","fromImageBytes","tFileName","fromName","_isFile","isVideo","uri","isGeneratedVideo","video","tModelsUrl","baseModels","tExtractModels","mcpToGeminiTool","mcpTool","mcpToolSchema","filterToJsonSchema","behavior","filterListSchemaField","listFieldValue","filterDictSchemaField","valueRecord","filteredSchema","typeValue","partToMldev$3","fromObject","toObject","fromVideoMetadata","fromFps","fromEndOffset","fromStartOffset","videoMetadataToMldev$3","fromThought","fromInlineData","fromData","fromMimeType","blobToMldev$3","fromFileData","fromFileUri","fileDataToMldev$3","fromThoughtSignature","fromCodeExecutionResult","fromExecutableCode","fromFunctionCall","fromFunctionResponse","fromText","contentToMldev$3","fromParts","transformedList","fromRole","googleSearchToMldev$3","fromTimeRangeFilter","fromStartTime","fromEndTime","intervalToMldev$3","googleSearchRetrievalToMldev$3","fromDynamicRetrievalConfig","fromMode","fromDynamicThreshold","dynamicRetrievalConfigToMldev$3","toolToMldev$3","fromFunctionDeclarations","fromBehavior","fromDescription","fromParameters","fromResponse","functionDeclarationToMldev$3","fromGoogleSearch","fromGoogleSearchRetrieval","fromCodeExecution","retrievalConfigToMldev$1","fromLatLng","fromLatitude","fromLongitude","latLngToMldev$1","fromLanguageCode","toolConfigToMldev$1","fromFunctionCallingConfig","fromAllowedFunctionNames","functionCallingConfigToMldev$1","fromRetrievalConfig","createCachedContentParametersToMldev","fromModel","fromConfig","parentObject","fromTtl","fromExpireTime","fromDisplayName","fromContents","fromSystemInstruction","fromTools","fromToolConfig","createCachedContentConfigToMldev","updateCachedContentParametersToMldev","updateCachedContentConfigToMldev","listCachedContentsParametersToMldev","fromPageSize","fromPageToken","listCachedContentsConfigToMldev","partToVertex$2","videoMetadataToVertex$2","blobToVertex$2","fileDataToVertex$2","contentToVertex$2","googleSearchToVertex$2","intervalToVertex$2","googleSearchRetrievalToVertex$2","dynamicRetrievalConfigToVertex$2","authConfigToVertex$2","fromApiKeyConfig","fromApiKeyString","apiKeyConfigToVertex$2","fromAuthType","fromGoogleServiceAccountConfig","fromHttpBasicAuthConfig","fromOauthConfig","fromOidcConfig","toolToVertex$2","functionDeclarationToVertex$2","fromRetrieval","fromGoogleMaps","fromAuthConfig","googleMapsToVertex$2","retrievalConfigToVertex$1","latLngToVertex$1","toolConfigToVertex$1","functionCallingConfigToVertex$1","createCachedContentParametersToVertex","fromKmsKeyName","createCachedContentConfigToVertex","updateCachedContentParametersToVertex","updateCachedContentConfigToVertex","listCachedContentsParametersToVertex","listCachedContentsConfigToVertex","cachedContentFromMldev","fromCreateTime","fromUpdateTime","fromUsageMetadata","cachedContentFromVertex","PagedItem","Pager","pageInternal","paramsInternal","requestInternal","nameInternal","idxInternal","requestParams","pageInternalSize","initNextPage","pageSize","pageLength","hasNextPage","nextPage","Caches","PAGED_ITEM_CACHED_CONTENTS","listInternal","queryParams","httpMethod","abortSignal","httpResponse","apiResponse","getCachedContentParametersToVertex","getCachedContentParametersToMldev","deleteCachedContentParametersToVertex","resp","typedResp","deleteCachedContentParametersToMldev","fromNextPageToken","fromCachedContents","listCachedContentsResponseFromVertex","listCachedContentsResponseFromMldev","isValidResponse","isValidContent","extractCuratedHistory","comprehensiveHistory","curatedHistory","modelOutput","Chats","modelsModule","structuredClone","sendPromise","validateHistory","sendMessage","inputContent","generateContent","contents","getHistory","outputContent","fullAutomaticFunctionCallingHistory","automaticFunctionCallingHistory","recordHistory","sendMessageStream","streamResponse","generateContentStream","processStreamResponse","streamResponse_1_1","streamResponse_1","__asyncValues","__await","outputContents","listFilesParametersToMldev","listFilesConfigToMldev","fileToMldev","fromSizeBytes","fromExpirationTime","fromSha256Hash","fromUri","fromDownloadUri","fromState","fromSource","fromError","fromDetails","fromMessage","fromCode","fileStatusToMldev","fileFromMldev","fileStatusFromMldev","PAGED_ITEM_FILES","uploadFile","download","downloadFile","fromFiles","listFilesResponseFromMldev","createInternal","fromFile","createFileParametersToMldev","getFileParametersToMldev","deleteFileParametersToMldev","voiceConfigToMldev$2","fromPrebuiltVoiceConfig","fromVoiceName","prebuiltVoiceConfigToMldev$2","voiceConfigToVertex$1","prebuiltVoiceConfigToVertex$1","multiSpeakerVoiceConfigToMldev$2","fromSpeakerVoiceConfigs","fromSpeaker","fromVoiceConfig","speakerVoiceConfigToMldev$2","partToMldev$2","videoMetadataToMldev$2","blobToMldev$2","fileDataToMldev$2","partToVertex$1","videoMetadataToVertex$1","blobToVertex$1","fileDataToVertex$1","googleSearchToMldev$2","intervalToMldev$2","googleSearchToVertex$1","intervalToVertex$1","googleSearchRetrievalToMldev$2","dynamicRetrievalConfigToMldev$2","googleSearchRetrievalToVertex$1","dynamicRetrievalConfigToVertex$1","authConfigToVertex$1","apiKeyConfigToVertex$1","toolToMldev$2","functionDeclarationToMldev$2","toolToVertex$1","functionDeclarationToVertex$1","googleMapsToVertex$1","realtimeInputConfigToMldev$1","fromAutomaticActivityDetection","fromDisabled","fromStartOfSpeechSensitivity","fromEndOfSpeechSensitivity","fromPrefixPaddingMs","fromSilenceDurationMs","automaticActivityDetectionToMldev$1","fromActivityHandling","fromTurnCoverage","realtimeInputConfigToVertex","automaticActivityDetectionToVertex","contextWindowCompressionConfigToMldev$1","fromTriggerTokens","fromSlidingWindow","fromTargetTokens","slidingWindowToMldev$1","contextWindowCompressionConfigToVertex","slidingWindowToVertex","liveConnectConfigToMldev$1","fromGenerationConfig","fromResponseModalities","fromTemperature","fromTopP","fromTopK","fromMaxOutputTokens","fromMediaResolution","fromSeed","fromSpeechConfig","fromMultiSpeakerVoiceConfig","speechConfigToMldev$2","fromEnableAffectiveDialog","contentToMldev$2","fromSessionResumption","fromHandle","sessionResumptionConfigToMldev$1","fromInputAudioTranscription","fromOutputAudioTranscription","fromRealtimeInputConfig","fromContextWindowCompression","fromProactivity","fromProactiveAudio","proactivityConfigToMldev$1","liveConnectConfigToVertex","speechConfigToVertex$1","contentToVertex$1","fromTransparent","sessionResumptionConfigToVertex","proactivityConfigToVertex","liveSendRealtimeInputParametersToMldev","fromMedia","fromAudio","transformedBlob","mimeType","tAudioBlob","fromAudioStreamEnd","fromVideo","tImageBlob","liveSendRealtimeInputParametersToVertex","weightedPromptToMldev","fromWeight","liveMusicGenerationConfigToMldev","fromGuidance","fromBpm","fromDensity","fromBrightness","fromScale","fromMuteBass","fromMuteDrums","fromOnlyBassAndDrums","liveMusicClientSetupToMldev","liveMusicClientContentToMldev","fromWeightedPrompts","liveMusicClientMessageToMldev","fromSetup","fromClientContent","fromMusicGenerationConfig","fromPlaybackControl","partFromMldev$1","videoMetadataFromMldev$1","blobFromMldev$1","fileDataFromMldev$1","partFromVertex$1","videoMetadataFromVertex$1","blobFromVertex$1","fileDataFromVertex$1","transcriptionFromMldev","fromFinished","transcriptionFromVertex","urlContextMetadataFromMldev$1","fromUrlMetadata","fromRetrievedUrl","fromUrlRetrievalStatus","urlMetadataFromMldev$1","liveServerContentFromMldev","fromModelTurn","contentFromMldev$1","fromTurnComplete","fromInterrupted","fromGroundingMetadata","fromGenerationComplete","fromInputTranscription","fromOutputTranscription","fromUrlContextMetadata","liveServerContentFromVertex","contentFromVertex$1","liveServerToolCallFromMldev","fromFunctionCalls","fromId","fromArgs","functionCallFromMldev","liveServerToolCallFromVertex","functionCallFromVertex","modalityTokenCountFromMldev","fromModality","fromTokenCount","modalityTokenCountFromVertex","liveServerMessageFromMldev","fromServerContent","fromToolCall","fromToolCallCancellation","fromIds","liveServerToolCallCancellationFromMldev","fromPromptTokenCount","fromCachedContentTokenCount","fromResponseTokenCount","fromToolUsePromptTokenCount","fromThoughtsTokenCount","fromTotalTokenCount","fromPromptTokensDetails","fromCacheTokensDetails","fromResponseTokensDetails","fromToolUsePromptTokensDetails","usageMetadataFromMldev","fromGoAway","fromTimeLeft","liveServerGoAwayFromMldev","fromSessionResumptionUpdate","fromNewHandle","fromResumable","fromLastConsumedClientMessageIndex","liveServerSessionResumptionUpdateFromMldev","liveServerMessageFromVertex","liveServerToolCallCancellationFromVertex","fromTrafficType","usageMetadataFromVertex","liveServerGoAwayFromVertex","liveServerSessionResumptionUpdateFromVertex","liveMusicClientContentFromMldev","weightedPromptFromMldev","liveMusicSourceMetadataFromMldev","liveMusicGenerationConfigFromMldev","liveMusicServerContentFromMldev","fromAudioChunks","fromSourceMetadata","audioChunkFromMldev","liveMusicServerMessageFromMldev","fromFilteredPrompt","fromFilteredReason","liveMusicFilteredPromptFromMldev","partToMldev$1","videoMetadataToMldev$1","blobToMldev$1","fileDataToMldev$1","contentToMldev$1","googleSearchToMldev$1","intervalToMldev$1","googleSearchRetrievalToMldev$1","dynamicRetrievalConfigToMldev$1","toolToMldev$1","functionDeclarationToMldev$1","retrievalConfigToMldev","latLngToMldev","toolConfigToMldev","functionCallingConfigToMldev","voiceConfigToMldev$1","prebuiltVoiceConfigToMldev$1","multiSpeakerVoiceConfigToMldev$1","speakerVoiceConfigToMldev$1","generateContentConfigToMldev","fromCandidateCount","fromStopSequences","fromResponseLogprobs","fromLogprobs","fromPresencePenalty","fromFrequencyPenalty","fromResponseMimeType","fromResponseSchema","fromAnyOf","fromDefault","fromEnum","fromExample","fromFormat","fromItems","fromMaxItems","fromMaxLength","fromMaxProperties","fromMaximum","fromMinItems","fromMinLength","fromMinProperties","fromMinimum","fromNullable","fromPattern","fromProperties","fromPropertyOrdering","fromRequired","fromTitle","fromType","schemaToMldev","fromSafetySettings","fromCategory","fromThreshold","safetySettingToMldev","fromCachedContent","speechConfigToMldev$1","fromThinkingConfig","fromIncludeThoughts","fromThinkingBudget","thinkingConfigToMldev","generateContentParametersToMldev","embedContentParametersToMldev","fromTaskType","fromOutputDimensionality","embedContentConfigToMldev","fromModelForEmbedContent","generateImagesParametersToMldev","fromPrompt","fromNumberOfImages","fromAspectRatio","fromGuidanceScale","fromSafetyFilterLevel","fromPersonGeneration","fromIncludeSafetyAttributes","fromIncludeRaiReason","fromLanguage","fromOutputMimeType","fromOutputCompressionQuality","generateImagesConfigToMldev","listModelsParametersToMldev","fromFilter","fromQueryBase","listModelsConfigToMldev","updateModelParametersToMldev","fromDefaultCheckpointId","updateModelConfigToMldev","countTokensParametersToMldev","countTokensConfigToMldev","generateVideosParametersToMldev","fromImage","imageToMldev","fromNumberOfVideos","fromDurationSeconds","fromNegativePrompt","fromEnhancePrompt","generateVideosConfigToMldev","partToVertex","videoMetadataToVertex","blobToVertex","fileDataToVertex","contentToVertex","googleSearchToVertex","intervalToVertex","googleSearchRetrievalToVertex","dynamicRetrievalConfigToVertex","authConfigToVertex","apiKeyConfigToVertex","toolToVertex","functionDeclarationToVertex","googleMapsToVertex","retrievalConfigToVertex","latLngToVertex","toolConfigToVertex","functionCallingConfigToVertex","voiceConfigToVertex","prebuiltVoiceConfigToVertex","generateContentConfigToVertex","schemaToVertex","fromRoutingConfig","fromModelSelectionConfig","fromFeatureSelectionPreference","modelSelectionConfigToVertex","fromMethod","safetySettingToVertex","fromLabels","speechConfigToVertex","fromAudioTimestamp","thinkingConfigToVertex","generateContentParametersToVertex","embedContentParametersToVertex","fromAutoTruncate","embedContentConfigToVertex","generateImagesParametersToVertex","fromOutputGcsUri","fromAddWatermark","generateImagesConfigToVertex","imageToVertex","fromGcsUri","referenceImageAPIInternalToVertex","fromReferenceImage","fromReferenceId","fromReferenceType","fromMaskImageConfig","fromMaskMode","fromSegmentationClasses","fromMaskDilation","maskReferenceConfigToVertex","fromControlImageConfig","fromControlType","fromEnableControlImageComputation","controlReferenceConfigToVertex","fromStyleImageConfig","fromStyleDescription","styleReferenceConfigToVertex","fromSubjectImageConfig","fromSubjectType","fromSubjectDescription","subjectReferenceConfigToVertex","editImageParametersInternalToVertex","fromReferenceImages","fromEditMode","fromBaseSteps","editImageConfigToVertex","upscaleImageAPIParametersInternalToVertex","fromUpscaleFactor","upscaleImageAPIConfigInternalToVertex","listModelsParametersToVertex","listModelsConfigToVertex","updateModelParametersToVertex","updateModelConfigToVertex","countTokensParametersToVertex","countTokensConfigToVertex","generateVideosParametersToVertex","fromResolution","fromPubsubTopic","fromGenerateAudio","generateVideosConfigToVertex","partFromMldev","videoMetadataFromMldev","blobFromMldev","fileDataFromMldev","urlContextMetadataFromMldev","urlMetadataFromMldev","candidateFromMldev","fromContent","contentFromMldev","fromCitationMetadata","fromCitations","citationMetadataFromMldev","fromFinishReason","fromAvgLogprobs","fromIndex","fromLogprobsResult","fromSafetyRatings","generateContentResponseFromMldev","fromCandidates","fromModelVersion","fromPromptFeedback","embedContentResponseFromMldev","fromEmbeddings","fromValues","contentEmbeddingFromMldev","safetyAttributesFromMldev","fromCategories","fromScores","fromContentType","generatedImageFromMldev","imageFromMldev","fromRaiFilteredReason","fromSafetyAttributes","modelFromMldev","fromVersion","fromTunedModelInfo","fromBaseModel","tunedModelInfoFromMldev","fromInputTokenLimit","fromOutputTokenLimit","fromSupportedActions","generatedVideoFromMldev$1","fromVideoBytes","videoFromMldev$1","generateVideosOperationFromMldev$1","fromMetadata","fromDone","fromGeneratedVideos","fromRaiMediaFilteredCount","fromRaiMediaFilteredReasons","generateVideosResponseFromMldev$1","partFromVertex","videoMetadataFromVertex","blobFromVertex","fileDataFromVertex","urlContextMetadataFromVertex","urlMetadataFromVertex","candidateFromVertex","contentFromVertex","citationMetadataFromVertex","fromFinishMessage","generateContentResponseFromVertex","fromResponseId","contentEmbeddingFromVertex","fromStatistics","fromTruncated","contentEmbeddingStatisticsFromVertex","embedContentResponseFromVertex","fromBillableCharacterCount","embedContentMetadataFromVertex","safetyAttributesFromVertex","generatedImageFromVertex","imageFromVertex","fromEnhancedPrompt","modelFromVertex","fromEndpoints","fromDeployedModelId","endpointFromVertex","tunedModelInfoFromVertex","fromCheckpoints","fromCheckpointId","fromEpoch","fromStep","checkpointFromVertex","generatedVideoFromVertex$1","videoFromVertex$1","generateVideosOperationFromVertex$1","generateVideosResponseFromVertex$1","GOOGLE_API_CLIENT_HEADER","responseLineRE","ClientError","stackTrace","ServerError","clientOptions","project","initHttpOptions","apiVersion","baseUrlFromProjectLocation","normalizeAuthParameters","getDefaultHeaders","patchHttpOptions","getApiVersion","getRequestUrl","getRequestUrlInternal","getHeaders","urlElement","getBaseResourcePath","getApiKey","getWebsocketBaseUrl","urlParts","setBaseUrl","constructUrl","prependProjectLocation","shouldPrependVertexProjectPath","patchedHttpOptions","searchParams","requestInit","includeExtraHttpOptionsToRequestInit","unaryApiCall","baseHttpOptions","requestHttpOptions","requestStream","streamApiCall","abortController","getHeadersInternal","apiCall","throwErrorIfNotOK","chunkString","chunkJson","errorJson","processedChunkString","partialResponse","versionHeaderValue","LIBRARY_LABEL","userAgentExtra","addAuthHeaders","fileToUpload","uploader","fileStat","stat","sizeBytes","uploadUrl","fetchUploadUrl","downloader","errorBody","hasMcpToolUsage","isMcpCallableTool","setMcpUsageHeader","existingHeader","trimStart","McpCallableTool","listAllTools","mcpClient","maxTools","cursor","numTools","listTools","nextCursor","mcpClients","mcpTools","functionNameToMcpClient","initialize","functionMap","e_1","mcpToolName","toolNames","geminiTool","mcpToolsToGeminiTool","callTool","functionCallResponseParts","callToolResponse","functionResponse","LiveMusic","webSocketFactory","connect","websocketBaseUrl","mapToHeaders$1","onopenResolve","onopenPromise","websocketCallbacks","onopen","serverMessage","handleWebSocketMessage$1","onclose","conn","headerMap","headersToMap$1","setup","clientMessage","LiveMusicSession","setWeightedPrompts","weightedPrompts","setWeightedPromptsParameters","liveMusicSetWeightedPromptsParametersToMldev","clientContent","setMusicGenerationConfig","musicGenerationConfig","setConfigParameters","liveMusicSetConfigParametersToMldev","sendPlaybackControl","playbackControl","play","PLAY","pause","PAUSE","stop","STOP","resetContext","RESET_CONTEXT","Live","music","mapToHeaders","handleWebSocketMessage","headersToMap","responseModalities","AUDIO","generationConfig","inputTools","convertedTools","isCallableTool","callableTool","liveConnectParameters","liveConnectParametersToVertex","liveConnectParametersToMldev","Session","defaultLiveSendClientContentParamerters","turnComplete","tLiveClientContent","turns","tLiveClienttToolResponse","functionResponses","toolResponse","sendClientContent","sendRealtimeInput","sendToolResponse","shouldDisableAfc","automaticFunctionCalling","disable","callableToolsPresent","maxCalls","maximumRemoteCalls","shouldAppendAfcHistory","ignoreCallHistory","transformedParams","processParamsForMcpUsage","hasMcpClientTools","generateContentInternal","hasNonMcpTools","functionResponseContent","maxRemoteCalls","remoteCalls","responseContent","functionResponseParts","generateContentStreamInternal","processAfcStream","generateImages","generateImagesInternal","positivePromptSafetyAttributes","generatedImages","generatedImage","safetyAttributes","actualParams","queryBase","PAGED_ITEM_MODELS","editImage","prompt","referenceImages","toReferenceImageAPI","editImageInternal","upscaleImage","apiConfig","numberOfImages","apiParams","image","upscaleFactor","upscaleImageInternal","transformedTools","newParams","initAfcToolsMap","afcTools","toolDeclaration","declaration","wereFunctionsCalled","remoteCallCount","responseContents","response_1_1","response_1","responseParts","typedResponseChunk","newContents","updatedContents","apiResponse_1_1","apiResponse_1","apiResponse_2_1","apiResponse_2","embedContent","fromGeneratedImages","fromPositivePromptSafetyAttributes","generateImagesResponseFromVertex","generateImagesResponseFromMldev","editImageResponseFromVertex","upscaleImageResponseFromVertex","getModelParametersToVertex","getModelParametersToMldev","fromModels","listModelsResponseFromVertex","listModelsResponseFromMldev","deleteModelParametersToVertex","deleteModelParametersToMldev","countTokens","fromTotalTokens","countTokensResponseFromVertex","countTokensResponseFromMldev","computeTokens","computeTokensParametersToVertex","fromTokensInfo","computeTokensResponseFromVertex","generateVideos","generatedVideoFromMldev","videoFromMldev","generateVideosOperationFromMldev","generateVideosResponseFromMldev","generatedVideoFromVertex","videoFromVertex","generateVideosOperationFromVertex","generateVideosResponseFromVertex","Operations","getVideosOperation","operation","fetchPredictVideosOperationInternal","operationName","getVideosOperationInternal","fromOperationName","getOperationParametersToVertex","getOperationParametersToMldev","fromResourceName","fetchPredictOperationParametersToVertex","voiceConfigToMldev","prebuiltVoiceConfigToMldev","multiSpeakerVoiceConfigToMldev","speakerVoiceConfigToMldev","partToMldev","videoMetadataToMldev","blobToMldev","fileDataToMldev","googleSearchToMldev","intervalToMldev","googleSearchRetrievalToMldev","dynamicRetrievalConfigToMldev","toolToMldev","functionDeclarationToMldev","realtimeInputConfigToMldev","automaticActivityDetectionToMldev","contextWindowCompressionConfigToMldev","slidingWindowToMldev","liveConnectConfigToMldev","speechConfigToMldev","contentToMldev","sessionResumptionConfigToMldev","proactivityConfigToMldev","createAuthTokenConfigToMldev","fromNewSessionExpireTime","fromUses","fromLiveConnectConstraints","liveConnectConstraintsToMldev","fromLockAdditionalFields","convertBidiSetupToTokenSetup","requestDict","setupForMaskGeneration","bidiGenerateContentSetupValue","innerSetup","preExistingFieldMask","generatedMaskFromBidi","fields","getFieldMasks","lockAdditionalFields","generationConfigFields","mappedFieldsFromPreExisting","finalMaskParts","Tokens","createAuthTokenParametersToMldev","transformedBody","authTokenFromMldev","listTuningJobsParametersToMldev","listTuningJobsConfigToMldev","tuningDatasetToMldev","fromExamples","fromTextInput","fromOutput","tuningExampleToMldev","createTuningJobParametersToMldev","fromTrainingDataset","fromTunedModelDisplayName","fromEpochCount","fromLearningRateMultiplier","fromBatchSize","fromLearningRate","createTuningJobConfigToMldev","listTuningJobsParametersToVertex","listTuningJobsConfigToVertex","createTuningJobConfigToVertex","fromValidationDataset","tuningValidationDatasetToVertex","fromExportLastCheckpointOnly","fromAdapterSize","createTuningJobParametersToVertex","tuningDatasetToVertex","tuningJobFromMldev","fromTunedModel","fromEndpoint","tunedModelFromMldev","fromDistillationSpec","fromExperiment","fromPipelineJob","fromServiceAccount","tunedModelFromVertex","tunedModelCheckpointFromVertex","tuningJobFromVertex","fromSupervisedTuningSpec","fromTuningDataStats","fromEncryptionSpec","fromPartnerModelTuningSpec","Tunings","getInternal","PAGED_ITEM_TUNING_JOBS","tune","tuneInternal","tuneMldevInternal","tunedModelName","JOB_STATE_QUEUED","getTuningJobParametersToVertex","getTuningJobParametersToMldev","fromTuningJobs","listTuningJobsResponseFromVertex","listTuningJobsResponseFromMldev","operationFromMldev","BrowserDownloader","_params","_apiClient","X_GOOG_UPLOAD_STATUS_HEADER_FIELD","BrowserUploader","fileSize","uploadCommand","currentDelayMs","responseJson","uploadBlob","getBlobStat","BrowserWebSocketFactory","BrowserWebSocket","ws","WebSocket","GOOGLE_API_KEY_HEADER","WebAuth","GoogleGenAI","LANGUAGE_LABEL_PREFIX","live","chats","caches","operations","authTokens","tunings","GeminiProvider","_history$shift","system","maxOutputTokens","temperature","systemInstruction","_usage$totalTokenCoun","_usage$promptTokenCou","_usage$promptTokenCou2","usageMetadata","totalTokenCount","promptTokenCount","__classPrivateFieldSet","receiver","__classPrivateFieldGet","crypto","randomUUID","u8","randomByte","getRandomValues","isAbortError","OpenAIError","requestID","LengthFinishReasonError","ContentFilterFinishReasonError","isReadonlyArray","isObj","detectedPlatform","makeReadableStream","ReadableStreamFrom","ReadableStreamToAsyncIterable","FallbackEncoder","bodyHeaders","default_format","default_formatter","formatters","RFC1738","RFC3986","hex_table","limit","maybe_map","array_prefix_generators","brackets","comma","indices","push_to_array","value_or_array","addQueryPrefix","allowDots","allowEmptyArrays","arrayFormat","charsetSentinel","encodeDotInKeys","_defaultEncoder","_kind","$0","segment","encodeValuesOnly","formatter","serializeDate","skipNulls","strictNullHandling","sentinel","inner_stringify","generateArrayPrefix","commaRoundTrip","sideChannel","tmp_sc","find_flag","RangeError","is_buffer","key_value","obj_keys","encoded_prefix","adjusted_prefix","encoded_key","key_prefix","valueSideChannel","normalize_stringify_options","joined","encodeUTF8_","decodeUTF8_","encodeUTF8","decodeUTF8","_LineDecoder_buffer","_LineDecoder_carriageReturnIndex","binaryChunk","buffers","concatBytes","patternIndex","findNewlineIndex","carriage","subarray","endIndex","preceding","startIndex","findDoubleNewlineIndex","sseDecoder","sseChunk","newData","iterSSEChunks","_iterSSEMessages","levelNumbers","off","parseLogLevel","maybeLevel","sourceName","loggerFor","makeLogFn","fnLevel","logger","logLevel","noopLogger","cachedLoggers","cachedLogger","levelLogger","formatRequestDetails","details","retryOfRequestLogID","retryOf","requestLogID","mediaType","addRequestID","durationMs","_APIPromise_client","request_id","AbstractPage","_AbstractPage_client","getPaginatedItems","nextPageRequestOptions","getNextPage","nextOptions","iterPages","CursorPage","has_more","checkFileSupport","isOldNode","versions","makeFile","fileBits","isAsyncIterable","supportsFormDataMap","fetchObject","cached","FetchResponse","supportsFormData","isNamedBlob","encodeURIPath","createPathTagFunction","pathEncoder","statics","postPath","previousValue","currentValue","pathOnly","invalidSegments","invalidSegmentPattern","lastEnd","underline","spaces","arrows","Messages","completionID","isRunnableFunctionWithParse","isAssistantMessage","isToolMessage","EventStream","_EventStream_connectedPromise","_EventStream_resolveConnectedPromise","_EventStream_rejectConnectedPromise","_EventStream_endPromise","_EventStream_resolveEndPromise","_EventStream_rejectEndPromise","_EventStream_listeners","_EventStream_ended","_EventStream_errored","_EventStream_aborted","_EventStream_catchingPromiseCreated","_run","_emitFinal","_emit","_EventStream_instances","_EventStream_handleError","_connected","ended","errored","on","findIndex","emitted","isAutoParsableResponseFormat","isAutoParsableTool","parseChatCompletion","completion","choice","finish_reason","tool_calls","toolCall","inputTool","parsed_arguments","$parseRaw","parseToolCall","refusal","parseResponseFormat","shouldParseToolCall","hasAutoParseableInput","openAIError","DEFAULT_MAX_CHAT_COMPLETIONS","AbstractChatCompletionRunner","_chatCompletions","messages","_addChatCompletion","_addMessage","emit","tool_call","finalChatCompletion","finalContent","_AbstractChatCompletionRunner_instances","_AbstractChatCompletionRunner_getFinalContent","finalMessage","_AbstractChatCompletionRunner_getFinalMessage","finalFunctionToolCall","_AbstractChatCompletionRunner_getFinalFunctionToolCall","finalFunctionToolCallResult","_AbstractChatCompletionRunner_getFinalFunctionToolCallResult","totalUsage","_AbstractChatCompletionRunner_calculateTotalUsage","allChatCompletions","finalFunctionCall","finalFunctionCallResult","_createChatCompletion","_AbstractChatCompletionRunner_validateParams","_runChatCompletion","_runTools","tool_choice","restParams","singleFunctionToCall","maxChatCompletions","$callback","functionsByName","tool_call_id","rawContent","_AbstractChatCompletionRunner_stringifyFunctionCallResult","at","completion_tokens","ChatCompletionRunner","runTools","runner","Allow","STR","NUM","ARR","OBJ","NULL","BOOL","NAN","INFINITY","MINUS_INFINITY","INF","SPECIAL","ATOM","COLLECTION","ALL","PartialJSON","MalformedJSON","_parseJSON","jsonString","allow","markPartialJSON","throwMalformedError","parseAny","skipBlank","parseStr","parseObj","parseArr","NaN","parseNum","lastIndexOf","partialParse","allowPartial","parseJSON","ChatCompletionStream","_ChatCompletionStream_params","_ChatCompletionStream_choiceEventStates","_ChatCompletionStream_currentChatCompletionSnapshot","currentChatCompletionSnapshot","_fromReadableStream","createChatCompletion","_ChatCompletionStream_instances","_ChatCompletionStream_beginRequest","_ChatCompletionStream_addChunk","_ChatCompletionStream_endRequest","chatId","_ChatCompletionStream_getChoiceEventState","content_done","refusal_done","logprobs_content_done","logprobs_refusal_done","done_tool_calls","current_tool_call_index","_ChatCompletionStream_accumulateChatCompletion","choiceSnapshot","snapshot","logprobs","_ChatCompletionStream_emitContentDoneEvents","_ChatCompletionStream_emitToolCallDoneEvent","toolCallDelta","toolCallSnapshot","arguments_delta","toolCallIndex","responseFormat","_ChatCompletionStream_getAutoParseableResponseFormat","created","system_fingerprint","choiceRest","function_call","messageRest","toolRest","fnRest","maybeParseChatCompletion","finalizeChatCompletion","other","pushQueue","readQueue","ChatCompletionStreamingRunner","MessagesAPI","validateInputTools","brand_privateNullableHeaders","iterateHeaders","nulls","shouldClear","didClear","nullHeaders","seenHeaders","lowerName","Speech","__metadata","speech","SpeechAPI","batchID","Assistants","assistantID","Sessions","TranscriptionSessions","Realtime","sessions","SessionsAPI","transcriptionSessions","TranscriptionSessionsAPI","threadID","messageID","thread_id","Steps","stepID","run_id","runID","AssistantStream","_AssistantStream_events","_AssistantStream_runStepSnapshots","_AssistantStream_messageSnapshots","_AssistantStream_messageSnapshot","_AssistantStream_finalRun","_AssistantStream_currentContentIndex","_AssistantStream_currentContent","_AssistantStream_currentToolCallIndex","_AssistantStream_currentToolCall","_AssistantStream_currentEvent","_AssistantStream_currentRunSnapshot","_AssistantStream_currentRunStepSnapshot","_AssistantStream_instances","_AssistantStream_addEvent","_addRun","_AssistantStream_endRequest","createToolAssistantStream","runId","runs","_runToolAssistantStream","_createToolAssistantStream","run","submitToolOutputs","createThreadAssistantStream","thread","_threadAssistantStream","createAssistantStream","_runAssistantStream","currentRun","currentMessageSnapshot","currentRunStepSnapshot","finalRunSteps","finalMessages","finalRun","_createThreadAssistantStream","createAndRun","_createAssistantStream","accumulateDelta","deltaValue","accValue","deltaEntry","accEntry","_AssistantStream_handleEvent","_AssistantStream_handleRun","_AssistantStream_handleRunStep","_AssistantStream_handleMessage","accumulatedMessage","newContent","_AssistantStream_accumulateMessage","snapshotContent","textDelta","image_file","currentContent","accumulatedRunStep","_AssistantStream_accumulateRunStep","step_details","accumulated","contentElement","_AssistantStream_accumulateContent","Runs","steps","StepsAPI","include","createAndPoll","poll","createAndStream","beta","threads","pollIntervalMs","sleepInterval","headerInterval","headerIntervalMs","submitToolOutputsAndPoll","submitToolOutputsStream","Threads","RunsAPI","createAndRunPoll","createAndRunStream","Beta","realtime","RealtimeAPI","assistants","AssistantsAPI","ThreadsAPI","Content","fileID","container_id","ContentAPI","containerID","Containers","FilesAPI","hasUserProvidedEncodingFormat","encoding_format","embeddingBase64Obj","embeddingBase64Str","embedding","base64Str","buf","Float32Array","byteOffset","BYTES_PER_ELEMENT","binaryStr","toFloat32Array","OutputItems","outputItemID","eval_id","outputItems","OutputItemsAPI","evalID","Evals","waitForProcessing","pollInterval","maxWait","TERMINAL_STATES","Methods","Graders","Alpha","graders","GradersAPI","Permissions","fineTunedModelCheckpoint","permissionID","fine_tuned_model_checkpoint","Checkpoints","permissions","PermissionsAPI","fineTuningJobID","Jobs","checkpoints","CheckpointsAPI","listEvents","resume","FineTuning","methods","MethodsAPI","jobs","JobsAPI","alpha","AlphaAPI","GraderModels","graderModels","GraderModelsAPI","Images","createVariation","edit","Moderations","maybeParseResponse","output_parsed","parseTextFormat","addOutputText","text_format","getInputToolByName","input_tools","rsp","texts","output_text","ResponseStream","_ResponseStream_params","_ResponseStream_currentResponseSnapshot","_ResponseStream_finalResponse","createResponse","_createOrRetrieveResponse","_ResponseStream_instances","_ResponseStream_beginRequest","starting_after","responses","response_id","_ResponseStream_addEvent","_ResponseStream_endRequest","maybeEmit","sequence_number","_ResponseStream_accumulateResponse","output_index","content_index","parsedResponse","finalizeResponse","finalResponse","InputItems","responseID","Responses","inputItems","InputItemsAPI","Parts","uploadID","PartsAPI","complete","FileBatches","vectorStoreID","vector_store_id","vectorStoreId","batch","listFiles","uploadAndPoll","fileIds","configuredConcurrency","maxConcurrency","concurrencyLimit","fileIterator","allFileIds","workers","fileObj","purpose","allSettled","allSettledWithThrow","file_ids","fileResponse","fileInfo","file_id","VectorStores","fileBatches","FileBatchesAPI","OpenAI","organization","_OpenAI_encoder","images","moderations","fineTuning","vectorStores","uploads","evals","containers","defaultLogLevel","Shims","Opts","withOptions","qs","defaultBaseURL","_OpenAI_instances","_OpenAI_baseURLOverridden","padStart","retryLogStr","headersTime","retryMessage","isTimeout","responseInfo","Pagination","isReadableBody","inputOptions","buildBody","idempotencyHeaders","trunc","_ref6","UploadsAPIUploads","DeepseekProvider","LocalOllamaProvider","Endpoint","eval_count","prompt_eval_count","CompileScenario","scenario","additions","objective","directives","none","groq","gemini","deepseek","local_ollama","ButtonGroup","vertical","baseClass","PageItem","activeLabel","linkStyle","linkClassName","createButton","First","Prev","Ellipsis","Next","Last","FileDialog","onFileUpload","onCancel","fileUploadRef","_fileUploadRef$curren","_fileUploadRef$curren2","prompts","ProviderConfigLine","setter","ScenarioSettingLine","_dict$id2","textarea","dict","_dict$id","ConvoLine","onContentChange","onRegenerate","onAction","textareaRef","NewConvoDialog","scenarioId","setScenarioId","commit","hide","JumpDialog","onCommit","setTarget","CopyDialog","_ref7","providerKey","provider","setProviderPair","_localStorage$getItem","defaultProvider","MemoryProviders","activeConfig","setActiveConfig","workingSet","setWorkingSet","workingSetId","setWorkingSetId","setScenario","convo","setConvo","lock","setLock","newDialogScenario","setNewDialogScenario","showFileDialog","setShowFileDialog","showJumpDialog","setShowJumpDialog","jumpTarget","setJumpTarget","copyText","setCopytext","settingsManifest","inititalSettings","stored","handleCopy","scenarioStr","SerializeScenario","clipboard","writeText","handleClear","handleImport","newWs","conversation","saveConvoToWorkingSet","newWorkingSet","navigateTo","insertConvoAfter","handleDuplicate","handleReset","handleNewConvo","handleDelete","isCleared","newIndex","handleConfigSet","curryConvoSetter","newConvo","handleGenerate","compiled","player_name","_e$message","handleNewConvoBlock","isAsst","handleTruncate","handleSaveSetting","configKey","ct","createObjectURL","revokeObjectURL","exportFile","_ref8","jt","setUpdateTrigger","activeModule","PlayerPage","QueryPage","Trainer","MainNav","trigger","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","App","reportWebVitals"],"sourceRoot":""}